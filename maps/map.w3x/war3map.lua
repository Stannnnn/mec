--globals from AfkMode:
LIBRARY_AfkMode = true
timeMinAfk = 30
AfkMode___Z = -50
AfkMode___SIZE = 8
AfkMode___TRANSPARENCY = 0

isAfk = __jarray(false)
afkModeTimers = {}
afkModeTextTags = {}
killAllAfkTimer = CreateTimer()
--endglobals from AfkMode
--globals from Ascii:
LIBRARY_Ascii = true
Ascii___TABLE_ASCII = " !\"#$%&'()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\\]^_`abcdefghijklmnopqrstuvwxyz{|}~"
Ascii___DEBUT_TABLE_ASCII = 32
Ascii___TAILLE_TABLE_ASCII = StringLength(Ascii___TABLE_ASCII)
--endglobals from Ascii
--globals from AutoContinueAfterSliding:
LIBRARY_AutoContinueAfterSliding = true
lastClickedX = __jarray(0.0)
lastClickedY = __jarray(0.0)
lastClickedWidgets = {}
isLastTargetALocation = __jarray(false)
udg_autoContinueAfterSliding = __jarray(false)

AutoContinueAfterSliding__ECART_MAX_ANGLE = 45
--endglobals from AutoContinueAfterSliding
--globals from DeplacementHeroHorsDeathPath:
LIBRARY_DeplacementHeroHorsDeathPath = true
DeplacementHeroHorsDeathPath___GRADUATION_ANGLE = 5
DeplacementHeroHorsDeathPath___VALEUR_DECALAGE = 60
--endglobals from DeplacementHeroHorsDeathPath
--globals from Disco:
LIBRARY_Disco = true
--endglobals from Disco
--globals from FunctionsOnNumbers:
LIBRARY_FunctionsOnNumbers = true
--endglobals from FunctionsOnNumbers
--globals from GameTime:
LIBRARY_GameTime = true
GameTime__hours = 0
GameTime__minuts = 0
GameTime__seconds = 0
TIME_PLAYER = Player(0)
--endglobals from GameTime
--globals from Gravity:
LIBRARY_Gravity = true
Gravity__gravity = nil
--endglobals from Gravity
--globals from ImmolationSkills:
LIBRARY_ImmolationSkills = true
IMMOLATION_SKILLS = __jarray(0)
--endglobals from ImmolationSkills
--globals from LevelFunctions:
LIBRARY_LevelFunctions = true
--endglobals from LevelFunctions
--globals from MakeAction:
LIBRARY_MakeAction = true
--endglobals from MakeAction
--globals from Meteor:
LIBRARY_Meteor = true
METEOR_NORMAL = 1296974897
METEOR_CHEAT = 1296254001
--endglobals from Meteor
--globals from MonsterOrCasterStack:
LIBRARY_MonsterOrCasterStack = true
MonsterOrCasterStack__udg_enumMoc = nil
--endglobals from MonsterOrCasterStack
--globals from MonstersClickableSetLife:
LIBRARY_MonstersClickableSetLife = true
monstersClickable = nil
trigMonstersClickableSetLife = nil
MonstersClickableSetLife__PERIOD = 0.1
--endglobals from MonstersClickableSetLife
--globals from SlideTrigger:
LIBRARY_SlideTrigger = true
--endglobals from SlideTrigger
--globals from Stack:
LIBRARY_Stack = true
--endglobals from Stack
--globals from StringLib:
LIBRARY_StringLib = true
STRING_INDEX_NONE = -1
STRING_INVALID_SEGMENT = ""

StringLib___ht_hash = nil

StringLib___KEY_ASCII = 2
StringLib___KEY_UTF8 = 3
--endglobals from StringLib
--globals from TerrainModifyingTrig:
LIBRARY_TerrainModifyingTrig = true
y = nil
TerrainModifyingTrig___wasCheckTerrainTriggerOn = __jarray(false)
terrainModifyWorking = false
--constant integer TERRAIN_MODIFYING_NB_LINES_TO_DO = 5
--maintenant on fait ligne par ligne (--> 1)
--endglobals from TerrainModifyingTrig
--globals from TerrainTypeAsciiConversion:
LIBRARY_TerrainTypeAsciiConversion = true
--endglobals from TerrainTypeAsciiConversion
--globals from TerrainTypeFunctions:
LIBRARY_TerrainTypeFunctions = true
--endglobals from TerrainTypeFunctions
--globals from TerrainTypeMax:
LIBRARY_TerrainTypeMax = true
--endglobals from TerrainTypeMax
--globals from Text:
LIBRARY_Text = true
NORMAL_TEXT_COLORCODE = "|c00ffffff"
MAKE_TEXT_COLORCODE = "|c00ffff00"
ERROR_TEXT_COLORCODE = "|c00960000"

Text_enabled = true
Text_posX = 0
Text_posY = 0.4
--endglobals from Text
--globals from TimerUtils:
LIBRARY_TimerUtils = true
--How to tweak timer utils:
-- USE_HASH_TABLE = true  (new blue)
--  * SAFEST
--  * SLOWEST (though hash tables are kind of fast)
--
-- USE_HASH_TABLE = false, USE_FLEXIBLE_OFFSET = true  (orange)
--  * kinda safe (except there is a limit in the number of timers)
--  * ALMOST FAST
--
-- USE_HASH_TABLE = false, USE_FLEXIBLE_OFFSET = false (red)
--  * THE FASTEST (though is only  faster than the previous method
--                  after using the optimizer on the map)
--  * THE LEAST SAFE ( you may have to tweak OFSSET manually for it to
--                     work)
--
TimerUtils___USE_HASH_TABLE = true
TimerUtils___USE_FLEXIBLE_OFFSET = false

TimerUtils___OFFSET = 0x100000
TimerUtils___VOFFSET = TimerUtils___OFFSET

--Timers to preload at map init:
TimerUtils___QUANTITY = 256

--Changing this  to something big will allow you to keep recycling
-- timers even when there are already AN INCREDIBLE AMOUNT of timers in
-- the stack. But it will make things far slower so that's probably a bad idea...
TimerUtils___ARRAY_SIZE = 8190

-- processed:         integer array TimerUtils___data[TimerUtils___ARRAY_SIZE]
TimerUtils___ht = nil
-- processed:         timer array TimerUtils___tT[TimerUtils___ARRAY_SIZE]
TimerUtils___tN = 0
TimerUtils___HELD = 0x28829022
--use a totally random number here, the more improbable someone uses it, the better.

TimerUtils___didinit = false
--endglobals from TimerUtils
--globals from Triggers:
LIBRARY_Triggers = true
--endglobals from Triggers
--globals from ViewAllHideAll:
LIBRARY_ViewAllHideAll = true
udg_hideAll = nil
udg_viewAll = nil
--endglobals from ViewAllHideAll
--globals from VisibilityModifier:
LIBRARY_VisibilityModifier = true
--endglobals from VisibilityModifier
--globals from ZLibrary:
LIBRARY_ZLibrary = true
WATER_TYPE_NONE = 0
WATER_TYPE_SHALLOW = 1
WATER_TYPE_DEEP = 2
ZLibrary___PLATFORM = 1110454320
ZLibrary___PLATFORM_HEIGHT = 2745.46265
ZLibrary___p = Location(0.0, 0.0)
--endglobals from ZLibrary
--globals from BasicFunctions:
LIBRARY_BasicFunctions = true
udg_currentMonsterPlayerId = 0
--endglobals from BasicFunctions
--globals from CasterType:
LIBRARY_CasterType = true
DEFAULT_CASTER_PROJECTILE_SPEED = 600
MIN_CASTER_PROJECTILE_SPEED = 100
DEFAULT_CASTER_RANGE = 1000
MIN_CASTER_LOAD_TIME = 0.2
DEFAULT_CASTER_LOAD_TIME = 1.0
DEFAULT_CASTER_ANIMATION = "spell"
--endglobals from CasterType
--globals from DecodeString:
LIBRARY_DecodeString = true
--endglobals from DecodeString
--globals from EscaperFunctions:
LIBRARY_EscaperFunctions = true
--endglobals from EscaperFunctions
--globals from MakeCasterAction:
LIBRARY_MakeCasterAction = true
--endglobals from MakeCasterAction
--globals from MakeDeleteCastersAction:
LIBRARY_MakeDeleteCastersAction = true
--endglobals from MakeDeleteCastersAction
--globals from MakeDeleteMeteorsAction:
LIBRARY_MakeDeleteMeteorsAction = true
--endglobals from MakeDeleteMeteorsAction
--globals from MakeDeleteMonstersAction:
LIBRARY_MakeDeleteMonstersAction = true
--endglobals from MakeDeleteMonstersAction
--globals from MakeLastActions:
LIBRARY_MakeLastActions = true
MakeLastActions__NB_MAX_ACTIONS_SAVED = 30
--endglobals from MakeLastActions
--globals from MakeMeteorAction:
LIBRARY_MakeMeteorAction = true
--endglobals from MakeMeteorAction
--globals from MakeMonsterAction:
LIBRARY_MakeMonsterAction = true
--endglobals from MakeMonsterAction
--globals from MakeTerrainHeightAction:
LIBRARY_MakeTerrainHeightAction = true
--endglobals from MakeTerrainHeightAction
--globals from MakeVisibilityModifierAction:
LIBRARY_MakeVisibilityModifierAction = true
--endglobals from MakeVisibilityModifierAction
--globals from MessageHeroDies:
LIBRARY_MessageHeroDies = true
MessageHeroDies___MESSAGE_DURATION = 10
MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE = 5
MessageHeroDies___timerSonJoue = CreateTimer()
MessageHeroDies___isSoundPlaying = false
MessageHeroDies___DUREE_SON = 3
--endglobals from MessageHeroDies
--globals from MeteorArray:
LIBRARY_MeteorArray = true
MeteorArray__MAX_NB_METEORS = 100
--endglobals from MeteorArray
--globals from MeteorFunctions:
LIBRARY_MeteorFunctions = true
MeteorFunctions__meteor = nil
--endglobals from MeteorFunctions
--globals from MonsterType:
LIBRARY_MonsterType = true
--endglobals from MonsterType
--globals from SaveLevels:
LIBRARY_SaveLevels = true
SaveLevels___levelId = nil
SaveLevels___level = nil
SaveLevels___visibilityId = nil
SaveLevels___monsterNoMoveId = nil
SaveLevels___monsterSimplePatrolId = nil
SaveLevels___monsterMultiplePatrolsId = nil
SaveLevels___monsterTeleportId = nil
SaveLevels___meteorId = nil
SaveLevels___monsterSpawnId = nil
SaveLevels___casterId = nil
SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME = 10
SaveLevels___trg_startSaveNextLevel = nil
--endglobals from SaveLevels
--globals from SaveTerrainConfigInCache:
LIBRARY_SaveTerrainConfigInCache = true
--endglobals from SaveTerrainConfigInCache
--globals from SoundUtils:
LIBRARY_SoundUtils = true
SoundUtils___ht = InitHashtable()
SoundUtils___st = InitHashtable()
SoundUtils___rt = InitHashtable()
SoundUtils___kt = InitHashtable()
--endglobals from SoundUtils
--globals from StringArrayForCache:
LIBRARY_StringArrayForCache = true
CACHE_SEPARATEUR_ITEM = "("
CACHE_SEPARATEUR_PARAM = ","

StringArrayForCache___MAX_STRING_LENGTH = 200
stringArrayForCache = 0
--endglobals from StringArrayForCache
--globals from TerrainTypeGrass:
LIBRARY_TerrainTypeGrass = true
--endglobals from TerrainTypeGrass
--globals from VisibilityModifierArray:
LIBRARY_VisibilityModifierArray = true
--endglobals from VisibilityModifierArray
--globals from Apm:
LIBRARY_Apm = true
nbClicsOnSlide = __jarray(0)
timeOnSlide = __jarray(0.0)
--endglobals from Apm
--globals from CasterFunctions:
LIBRARY_CasterFunctions = true
CasterFunctions__escaper = nil
CasterFunctions__caster = nil
CasterFunctions__PRECISION_TIR = 40
CasterFunctions__PRECISION_DIFF_POS_HERO = 20
CasterFunctions__ECART_CHECK = 0.05

CasterFunctions__x1 = nil
CasterFunctions__y1 = nil
CasterFunctions__angleSlider = nil
CasterFunctions__sliderSpeed = nil
CasterFunctions__x2 = nil
CasterFunctions__y2 = nil
CasterFunctions__x3 = nil
CasterFunctions__y3 = nil
CasterFunctions__k1 = nil
CasterFunctions__k2 = nil
CasterFunctions__Xk1 = nil
CasterFunctions__Yk1 = nil
CasterFunctions__Xk2 = nil
CasterFunctions__Yk2 = nil
CasterFunctions__XintersectionDevantHeros = nil
CasterFunctions__YintersectionDevantHeros = nil
--endglobals from CasterFunctions
--globals from CasterTypeArray:
LIBRARY_CasterTypeArray = true
--endglobals from CasterTypeArray
--globals from CheckTerrainTrigger:
LIBRARY_CheckTerrainTrigger = true
CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF = 5
CheckTerrainTrigger__TOLERANCE_RAYON_DIFF = 20
CheckTerrainTrigger__INIT_RAYON_TOLERANCE = 20
--endglobals from CheckTerrainTrigger
--globals from CommandShortcuts:
LIBRARY_CommandShortcuts = true
A_shortcutCommand = __jarray("")
Z_shortcutCommand = __jarray("")
E_shortcutCommand = __jarray("")
R_shortcutCommand = __jarray("")
Q_shortcutCommand = __jarray("")
S_shortcutCommand = __jarray("")
D_shortcutCommand = __jarray("")
F_shortcutCommand = __jarray("")
--endglobals from CommandShortcuts
--globals from Lives:
LIBRARY_Lives = true
Lives__LIVES_PLAYER = Player(6)
--endglobals from Lives
--globals from MonsterTypeArray:
LIBRARY_MonsterTypeArray = true
--endglobals from MonsterTypeArray
--globals from SaveCasterTypes:
LIBRARY_SaveCasterTypes = true
--endglobals from SaveCasterTypes
--globals from TeleportOnceOnly:
LIBRARY_TeleportOnceOnly = true
TeleportOnceOnly__teleTriggers = {}
--endglobals from TeleportOnceOnly
--globals from TerrainFunctions:
LIBRARY_TerrainFunctions = true
--endglobals from TerrainFunctions
--globals from TerrainTypeNamesAndData:
LIBRARY_TerrainTypeNamesAndData = true
TERRAIN_TYPE_NAMES = __jarray("")
TERRAIN_TYPE_DATA = __jarray("")
NB_TERRAINS_TOTAL = 177
--endglobals from TerrainTypeNamesAndData
--globals from EscaperEffectFunctions:
LIBRARY_EscaperEffectFunctions = true
--endglobals from EscaperEffectFunctions
--globals from ModifyTerrainFunctions:
LIBRARY_ModifyTerrainFunctions = true
--endglobals from ModifyTerrainFunctions
--globals from MonsterCreationFunctions:
LIBRARY_MonsterCreationFunctions = true
MonsterCreationFunctions__monster = nil
MonsterCreationFunctions__ATTACK_SKILL = 1096905835
MonsterCreationFunctions__ABILITY_1_LIFE = 1094866481
MonsterCreationFunctions__ABILITY_10_LIFE = 1094866482
MonsterCreationFunctions__ABILITY_100_LIFE = 1094866483
MonsterCreationFunctions__ABILITY_1000_LIFE = 1094866484
MonsterCreationFunctions__ABILITY_10000_LIFE = 1094866485
MonsterCreationFunctions__ABILITY_ANNULER_VISION = 1093681494
MonsterCreationFunctions__ABILITY_FORME_CORBEAU = 1097691750
--endglobals from MonsterCreationFunctions
--globals from SaveMonsterTypes:
LIBRARY_SaveMonsterTypes = true
--endglobals from SaveMonsterTypes
--globals from TerrainType:
LIBRARY_TerrainType = true
--endglobals from TerrainType
--globals from TerrainTypeFromString:
LIBRARY_TerrainTypeFromString = true
--endglobals from TerrainTypeFromString
--globals from AllTerrainFunctions:
LIBRARY_AllTerrainFunctions = true
--endglobals from AllTerrainFunctions
--globals from CasterShot:
LIBRARY_CasterShot = true
CasterShot__shotsHashtable = nil
CasterShot__PERIOD = 0.01
--endglobals from CasterShot
--globals from EscaperEffect:
LIBRARY_EscaperEffect = true
--endglobals from EscaperEffect
--globals from MakeTerrainCopyPasteAction:
LIBRARY_MakeTerrainCopyPasteAction = true
--endglobals from MakeTerrainCopyPasteAction
--globals from MakeTerrainCreateAction:
LIBRARY_MakeTerrainCreateAction = true
--endglobals from MakeTerrainCreateAction
--globals from MakeTerrainHorizontalSymmetryAction:
LIBRARY_MakeTerrainHorizontalSymmetryAction = true
--endglobals from MakeTerrainHorizontalSymmetryAction
--globals from MakeTerrainVerticalSymmetryAction:
LIBRARY_MakeTerrainVerticalSymmetryAction = true
--endglobals from MakeTerrainVerticalSymmetryAction
--globals from MonsterSpawn:
LIBRARY_MonsterSpawn = true
MonsterSpawn__ht = nil
MonsterSpawn__DECALAGE_UNSPAWN = 200
MonsterSpawn__DELAY_BETWEEN_SPAWN_AND_MOVEMENT = 0.5
--endglobals from MonsterSpawn
--globals from SaveWater:
LIBRARY_SaveWater = true
SaveWater___y = nil
--endglobals from SaveWater
--globals from TerrainTypeDeathFunctions:
LIBRARY_TerrainTypeDeathFunctions = true
--endglobals from TerrainTypeDeathFunctions
--globals from TerrainTypeSlide:
LIBRARY_TerrainTypeSlide = true
--endglobals from TerrainTypeSlide
--globals from TerrainTypeWalk:
LIBRARY_TerrainTypeWalk = true
--endglobals from TerrainTypeWalk
--globals from ChangeAllTerrains:
LIBRARY_ChangeAllTerrains = true
ChangeAllTerrains___oldTerrainTypes = __jarray(0)
ChangeAllTerrains___newTerrainTypes = __jarray(0)
ChangeAllTerrains___lastTerrainArrayId = nil
ChangeAllTerrains___nbNewTerrains = nil
ChangeAllTerrains___nbNewTerrainsAllowed = nil
udg_changeAllTerrainsAtRevive = false
--endglobals from ChangeAllTerrains
--globals from ChangeOneTerrain:
LIBRARY_ChangeOneTerrain = true
ChangeOneTerrain___oldTerrain = nil
ChangeOneTerrain___newTerrain = nil
--endglobals from ChangeOneTerrain
--globals from EscaperEffectArray:
LIBRARY_EscaperEffectArray = true
--endglobals from EscaperEffectArray
--globals from ExchangeTerrains:
LIBRARY_ExchangeTerrains = true
ExchangeTerrains___terrainA = nil
ExchangeTerrains___terrainB = nil
--endglobals from ExchangeTerrains
--globals from MonsterSpawnArray:
LIBRARY_MonsterSpawnArray = true
--endglobals from MonsterSpawnArray
--globals from RandomizeTerrains:
LIBRARY_RandomizeTerrains = true
RandomizeTerrains___oldTerrainTypes = __jarray(0)
RandomizeTerrains___newTerrainTypes = __jarray(0)
RandomizeTerrains___lastTerrainArrayId = nil
--endglobals from RandomizeTerrains
--globals from ReinitTerrains:
LIBRARY_ReinitTerrains = true
ReinitTerrains___terrainTypes = __jarray(0)
ReinitTerrains___terrainTypeIds = __jarray(0)
ReinitTerrains___terrainTypeIdsToReplace = __jarray(0)
--endglobals from ReinitTerrains
--globals from ReinitTerrainsPositions:
LIBRARY_ReinitTerrainsPositions = true
-- processed:     TerrainType array ReinitTerrainsPositions___TERRAIN_SAVE [232000]
ReinitTerrainsPositions___terrainSave_id = nil
--endglobals from ReinitTerrainsPositions
--globals from SaveLoadTerrainWithName:
LIBRARY_SaveLoadTerrainWithName = true
SaveLoadTerrainWithName___saveNameInt = nil
SaveLoadTerrainWithName___terrainSaves = InitHashtable()
SaveLoadTerrainWithName___terrainSave_id = nil
--endglobals from SaveLoadTerrainWithName
--globals from SaveLoadTerrainWithoutName:
LIBRARY_SaveLoadTerrainWithoutName = true
-- processed:     TerrainType array SaveLoadTerrainWithoutName___terrainSave [232000]
SaveLoadTerrainWithoutName___terrainSave_id = nil
--endglobals from SaveLoadTerrainWithoutName
--globals from SaveTerrainRamps:
LIBRARY_SaveTerrainRamps = true
SaveTerrainRamps___y = nil
SaveTerrainRamps___ramps = __jarray(false)
SaveTerrainRamps___DECAL_TEST_PATH = 10
--endglobals from SaveTerrainRamps
--globals from TerrainTypeDeathKillingTimers:
LIBRARY_TerrainTypeDeathKillingTimers = true
--endglobals from TerrainTypeDeathKillingTimers
--globals from Escaper:
LIBRARY_Escaper = true
SHOW_REVIVE_EFFECTS = false
Escaper__heroToSelect = nil
--endglobals from Escaper
--globals from SaveTerrainHeights:
LIBRARY_SaveTerrainHeights = true
SaveTerrainHeights___y = nil
--endglobals from SaveTerrainHeights
--globals from TerrainTypeDeath:
LIBRARY_TerrainTypeDeath = true
DEATH_TERRAIN_MAX_TOLERANCE = 50
--endglobals from TerrainTypeDeath
--globals from TrigCheckpointReviveHeroes:
LIBRARY_TrigCheckpointReviveHeroes = true
TrigCheckpointReviveHeroes_levelForReviving = nil
TrigCheckpointReviveHeroes_revivingFinisher = nil
--endglobals from TrigCheckpointReviveHeroes
--globals from CasterDeleteActions:
LIBRARY_CasterDeleteActions = true
--endglobals from CasterDeleteActions
--globals from CasterMakingActions:
LIBRARY_CasterMakingActions = true
--endglobals from CasterMakingActions
--globals from CommandsFunctions:
LIBRARY_CommandsFunctions = true
--endglobals from CommandsFunctions
--globals from EndMakingActions:
LIBRARY_EndMakingActions = true
--endglobals from EndMakingActions
--globals from EscaperArray:
LIBRARY_EscaperArray = true
--endglobals from EscaperArray
--globals from GettingTerrainTypeInfoActions:
LIBRARY_GettingTerrainTypeInfoActions = true
--endglobals from GettingTerrainTypeInfoActions
--globals from Heroes:
LIBRARY_Heroes = true
startPositions = {}
startPositionsRandomized = {}
playerIdsRandomized = __jarray(0)

TIME_BEFORE_HERO_SPAWN = 3
TIME_BETWEEN_EACH_HERO_SPAWN = 0.3
HERO_START_ANGLE = 90
EFFECT_FOR_MISSING_HEROES = "Abilities\\Spells\\Undead\\DeathPact\\DeathPactTarget.mdl"
Heroes___NB_COLUMNS = 4
Heroes___NB_ROWS = 3
--endglobals from Heroes
--globals from MClearMobActions:
LIBRARY_MClearMobActions = true
--endglobals from MClearMobActions
--globals from MClearMobDeleteActions:
LIBRARY_MClearMobDeleteActions = true
--endglobals from MClearMobDeleteActions
--globals from MMMultiplePatrolsActions:
LIBRARY_MMMultiplePatrolsActions = true
--endglobals from MMMultiplePatrolsActions
--globals from MMNoMoveActions:
LIBRARY_MMNoMoveActions = true
--endglobals from MMNoMoveActions
--globals from MMSimplePatrolActions:
LIBRARY_MMSimplePatrolActions = true
MMSimplePatrolActions__MIN_DIST = 5
MMSimplePatrolActions__MAX_DIST = 2000
MMSimplePatrolActions__ECART_DIST = 32
MMSimplePatrolActions__ECART_ANGLE = 9
MMSimplePatrolActions__DIST_ON_TERRAIN_MAX = 300
MMSimplePatrolActions__DIST_ON_TERRAIN_DEFAULT = 50
MMSimplePatrolActions__distOnTerrain = 50
--endglobals from MMSimplePatrolActions
--globals from MMTeleportActions:
LIBRARY_MMTeleportActions = true
--endglobals from MMTeleportActions
--globals from MakeExchangeTerrainsActions:
LIBRARY_MakeExchangeTerrainsActions = true
--endglobals from MakeExchangeTerrainsActions
--globals from MakeGetUnitTeleportPeriodActions:
LIBRARY_MakeGetUnitTeleportPeriodActions = true
--endglobals from MakeGetUnitTeleportPeriodActions
--globals from MakeSetUnitMonsterTypeActions:
LIBRARY_MakeSetUnitMonsterTypeActions = true
--endglobals from MakeSetUnitMonsterTypeActions
--globals from MakeSetUnitTeleportPeriodActions:
LIBRARY_MakeSetUnitTeleportPeriodActions = true
--endglobals from MakeSetUnitTeleportPeriodActions
--globals from MeteorDeleteActions:
LIBRARY_MeteorDeleteActions = true
--endglobals from MeteorDeleteActions
--globals from MeteorMakingActions:
LIBRARY_MeteorMakingActions = true
--endglobals from MeteorMakingActions
--globals from MonsterDeleteActions:
LIBRARY_MonsterDeleteActions = true
--endglobals from MonsterDeleteActions
--globals from MonsterSpawnMakingActions:
LIBRARY_MonsterSpawnMakingActions = true
--endglobals from MonsterSpawnMakingActions
--globals from SaveTerrain:
LIBRARY_SaveTerrain = true
SaveTerrain___y = nil
SaveTerrain___terrainTypeIds = __jarray(0)
SaveTerrain___nbTerrainTypesUsed = nil
--endglobals from SaveTerrain
--globals from StartAndEnd:
LIBRARY_StartAndEnd = true
DEPART_PAR_DEFAUT = nil
--endglobals from StartAndEnd
--globals from StartMakingActions:
LIBRARY_StartMakingActions = true
--endglobals from StartMakingActions
--globals from TerrainCopyPasteActions:
LIBRARY_TerrainCopyPasteActions = true
--endglobals from TerrainCopyPasteActions
--globals from TerrainHeightMakingActions:
LIBRARY_TerrainHeightMakingActions = true
--endglobals from TerrainHeightMakingActions
--globals from TerrainHorizontalSymmetryActions:
LIBRARY_TerrainHorizontalSymmetryActions = true
--endglobals from TerrainHorizontalSymmetryActions
--globals from TerrainMakingActions:
LIBRARY_TerrainMakingActions = true
--endglobals from TerrainMakingActions
--globals from TerrainVerticalSymmetryActions:
LIBRARY_TerrainVerticalSymmetryActions = true
--endglobals from TerrainVerticalSymmetryActions
--globals from TurnOnSlide:
LIBRARY_TurnOnSlide = true
--turn variables
TurnOnSlide__escaper = nil
TurnOnSlide__slider = nil
TurnOnSlide__n = nil
TurnOnSlide__sliderX = nil
TurnOnSlide__sliderY = nil
TurnOnSlide__orderWidget = nil
TurnOnSlide__orderX = nil
TurnOnSlide__orderY = nil
TurnOnSlide__angle = nil
TurnOnSlide__canTurn = nil

--drunk variables
udg_isDrunk = __jarray(false)
udg_drunk = __jarray(0.0)
udg_drunkLevel = __jarray(0)
INITIAL_DRUNK = 10
udg_drunkEffect = {}
DRUNK_EFFECTS = __jarray("")
DRUNK_EFFECT_PETIT = "Abilities\\Weapons\\BloodElfMissile\\BloodElfMissile.mdl"
DRUNK_EFFECT_MOYEN = "Abilities\\Weapons\\ChimaeraAcidMissile\\ChimaeraAcidMissile.mdl"
DRUNK_EFFECT_GROS = "Abilities\\Weapons\\GreenDragonMissile\\GreenDragonMissile.mdl"

--trigger
trg_turnToPoint = nil
trg_turnToWidget = nil
--endglobals from TurnOnSlide
--globals from VisibilityModifierMakingActions:
LIBRARY_VisibilityModifierMakingActions = true
--endglobals from VisibilityModifierMakingActions
--globals from CommandAll:
LIBRARY_CommandAll = true
--endglobals from CommandAll
--globals from CommandCheat:
LIBRARY_CommandCheat = true
--endglobals from CommandCheat
--globals from CommandMake:
LIBRARY_CommandMake = true
--endglobals from CommandMake
--globals from CommandRed:
LIBRARY_CommandRed = true
--endglobals from CommandRed
--globals from CommandTrueMax:
LIBRARY_CommandTrueMax = true
--endglobals from CommandTrueMax
--globals from Level:
LIBRARY_Level = true
Level_earningLivesActivated = true
--endglobals from Level
--globals from Make:
LIBRARY_Make = true
MAKE_LAST_CLIC_UNIT_ID = 1697656881
MAKE_CANT_CANCEL_MORE = "Nothing else to cancel !"
MAKE_CANT_REDO_MORE = "Nothing else to redo !"
--endglobals from Make
--globals from MonsterInterface:
LIBRARY_MonsterInterface = true
MAX_NB_MONSTERS = 500
MonsterInterface__htMonsterId2MonsterHandleId = nil
MonsterInterface__MONSTER = 1
MonsterInterface__CASTER = 2
NO_ID = -1
MonsterInterface__monsterNextId = 1
DISABLE_TRANSPARENCY = 80
--endglobals from MonsterInterface
--globals from SaveMapInCache:
LIBRARY_SaveMapInCache = true
saveMap_cache = nil
trigSaveMapInCache = nil
--endglobals from SaveMapInCache
--globals from TerrainTypeArray:
LIBRARY_TerrainTypeArray = true
--endglobals from TerrainTypeArray
--globals from ClearMob:
LIBRARY_ClearMob = true
ClearMob__htClearMob = nil
CLEAR_MOB_MAX_DURATION = 300
ClearMob__TRIGGER_MOB = 0
ClearMob__TIMER_ACTIVATED = 1
ClearMob__TIMER_FRONT_MONTANT = 2
ClearMob_FRONT_MONTANT_DURATION = 0.03
ClearMob__udp_currentTimer = nil
MAX_NB_CLEAR_MOB_BY_LEVEL = 160
ClearMob__TRIGGER_MOB_PERMANENT_EFFECT = "Abilities\\Spells\\Orc\\StasisTrap\\StasisTotemTarget.mdl"
--endglobals from ClearMob
--globals from CommandMax:
LIBRARY_CommandMax = true
--endglobals from CommandMax
--globals from LevelArray:
LIBRARY_LevelArray = true
NB_MAX_LEVELS = 50
--endglobals from LevelArray
--globals from MakeCaster:
LIBRARY_MakeCaster = true
--endglobals from MakeCaster
--globals from MakeDeleteCasters:
LIBRARY_MakeDeleteCasters = true
--endglobals from MakeDeleteCasters
--globals from MakeDeleteMeteors:
LIBRARY_MakeDeleteMeteors = true
--endglobals from MakeDeleteMeteors
--globals from MakeDeleteMonsters:
LIBRARY_MakeDeleteMonsters = true
--endglobals from MakeDeleteMonsters
--globals from MakeEnd:
LIBRARY_MakeEnd = true
--endglobals from MakeEnd
--globals from MakeExchangeTerrains:
LIBRARY_MakeExchangeTerrains = true
--endglobals from MakeExchangeTerrains
--globals from MakeGetTerrainType:
LIBRARY_MakeGetTerrainType = true
--endglobals from MakeGetTerrainType
--globals from MakeGetUnitTeleportPeriod:
LIBRARY_MakeGetUnitTeleportPeriod = true
--endglobals from MakeGetUnitTeleportPeriod
--globals from MakeMeteor:
LIBRARY_MakeMeteor = true
--endglobals from MakeMeteor
--globals from MakeMonsterMultiplePatrols:
LIBRARY_MakeMonsterMultiplePatrols = true
--endglobals from MakeMonsterMultiplePatrols
--globals from MakeMonsterNoMove:
LIBRARY_MakeMonsterNoMove = true
--endglobals from MakeMonsterNoMove
--globals from MakeMonsterSimplePatrol:
LIBRARY_MakeMonsterSimplePatrol = true
--endglobals from MakeMonsterSimplePatrol
--globals from MakeMonsterSpawn:
LIBRARY_MakeMonsterSpawn = true
--endglobals from MakeMonsterSpawn
--globals from MakeMonsterTeleport:
LIBRARY_MakeMonsterTeleport = true
--endglobals from MakeMonsterTeleport
--globals from MakeSetUnitMonsterType:
LIBRARY_MakeSetUnitMonsterType = true
--endglobals from MakeSetUnitMonsterType
--globals from MakeSetUnitTeleportPeriod:
LIBRARY_MakeSetUnitTeleportPeriod = true
--endglobals from MakeSetUnitTeleportPeriod
--globals from MakeStart:
LIBRARY_MakeStart = true
--endglobals from MakeStart
--globals from MakeTerrainCopyPaste:
LIBRARY_MakeTerrainCopyPaste = true
--endglobals from MakeTerrainCopyPaste
--globals from MakeTerrainCreate:
LIBRARY_MakeTerrainCreate = true
--endglobals from MakeTerrainCreate
--globals from MakeTerrainHeight:
LIBRARY_MakeTerrainHeight = true
--endglobals from MakeTerrainHeight
--globals from MakeTerrainHorizontalSymmetry:
LIBRARY_MakeTerrainHorizontalSymmetry = true
--endglobals from MakeTerrainHorizontalSymmetry
--globals from MakeTerrainVerticalSymmetry:
LIBRARY_MakeTerrainVerticalSymmetry = true
--endglobals from MakeTerrainVerticalSymmetry
--globals from MakeVisibilityModifier:
LIBRARY_MakeVisibilityModifier = true
--endglobals from MakeVisibilityModifier
--globals from MonsterMultiplePatrols:
LIBRARY_MonsterMultiplePatrols = true
--endglobals from MonsterMultiplePatrols
--globals from MonsterNoMove:
LIBRARY_MonsterNoMove = true
--endglobals from MonsterNoMove
--globals from MonsterOrCaster:
LIBRARY_MonsterOrCaster = true
--endglobals from MonsterOrCaster
--globals from MonsterSimplePatrol:
LIBRARY_MonsterSimplePatrol = true
MonsterSimplePatrol__simplePatrolMobs = CreateGroup()
MonsterSimplePatrol__checkSimplePatrolMobsPeriod = 5
--endglobals from MonsterSimplePatrol
--globals from MonsterTeleport:
LIBRARY_MonsterTeleport = true
WAIT = 1000000
HIDE = 2000000
MONSTER_TELEPORT_PERIOD_MIN = 0.1
MONSTER_TELEPORT_PERIOD_MAX = 10
MonsterTeleport_monsterTeleportHashtable = nil
--endglobals from MonsterTeleport
--globals from Caster:
LIBRARY_Caster = true
Caster_casterHashtable = nil
--endglobals from Caster
--globals from ClearMobArray:
LIBRARY_ClearMobArray = true
--endglobals from ClearMobArray
--globals from CommandExecution:
LIBRARY_CommandExecution = true
--endglobals from CommandExecution
--globals from MakeClearMob:
LIBRARY_MakeClearMob = true
--endglobals from MakeClearMob
--globals from MakeDeleteClearMob:
LIBRARY_MakeDeleteClearMob = true
--endglobals from MakeDeleteClearMob
--globals from MonsterMultiplePatrolsArray:
LIBRARY_MonsterMultiplePatrolsArray = true
--endglobals from MonsterMultiplePatrolsArray
--globals from MonsterNoMoveArray:
LIBRARY_MonsterNoMoveArray = true
--endglobals from MonsterNoMoveArray
--globals from MonsterSimplePatrolArray:
LIBRARY_MonsterSimplePatrolArray = true
--endglobals from MonsterSimplePatrolArray
--globals from MonsterTeleportArray:
LIBRARY_MonsterTeleportArray = true
--endglobals from MonsterTeleportArray
--globals from CasterArray:
LIBRARY_CasterArray = true
--endglobals from CasterArray
--globals from EscaperSavedCommands:
LIBRARY_EscaperSavedCommands = true
udg_savedCommands = nil
--endglobals from EscaperSavedCommands
-- User-defined
udg_has_max_name = __jarray(false)
udg_tripleKillSoundOn = false
udg_cheatCache = nil
udg_used_terrain_types = __jarray(0)
udg_nb_used_terrains = 0
udg_cheatsUsed = false
udg_areRedRightsOn = false
udg_is_circleing_j = __jarray(false)
udg_loc_x = __jarray(0.0)
udg_loc_y = __jarray(0.0)
udg_hero_j = {}
udg_terrain_slide = 0
udg_handle = nil
udg_x = 0

-- Generated
gg_rct_departLvl_0 = nil
gg_snd_noob = nil
gg_snd_multisquish = nil
gg_snd_questCompleted = nil
gg_snd_questFailed = nil
gg_snd_goodJob = nil
gg_snd_warning = nil
gg_snd_start = nil
gg_snd_allyHeroDies0 = nil
gg_snd_heroDies0 = nil
gg_snd_allyHeroDies1 = nil
gg_snd_heroDies1 = nil
gg_snd_allyHeroDies2 = nil
gg_snd_heroDies2 = nil
gg_snd_allyHeroDies3 = nil
gg_snd_heroDies3 = nil
gg_trg_Version = nil
gg_trg_Constants = nil
gg_trg_Text = nil
gg_trg_Init_terrain_limit_variables = nil
gg_trg_Init_colorCodes = nil
gg_trg_Basic_functions = nil
gg_trg_Functions_on_numbers = nil
gg_trg_Ascii = nil
gg_trg_Decode_string = nil
gg_trg_ZLibrary = nil
gg_trg_StringUtils = nil
gg_trg_Stack = nil
gg_trg_TimerUtils = nil
gg_trg_SoundUtils = nil
gg_trg_View_all_hide_all = nil
gg_trg_Immolation_skills = nil
gg_trg_MonsterType = nil
gg_trg_MonsterTypeArray = nil
gg_trg_Monster_creation_functions = nil
gg_trg_MonsterInterface = nil
gg_trg____trig_Monsters_clickable_set_life = nil
gg_trg_MonsterNoMove = nil
gg_trg_MonsterNoMoveArray = nil
gg_trg_MonsterSimplePatrol = nil
gg_trg_MonsterSimplePatrolArray = nil
gg_trg_MonsterMultiplePatrols = nil
gg_trg_MonsterMultiplePatrolsArray = nil
gg_trg_MonsterTeleport = nil
gg_trg_MonsterTeleportArray = nil
gg_trg_CasterType = nil
gg_trg_CasterTypeArray = nil
gg_trg_Caster_functions = nil
gg_trg_Caster = nil
gg_trg_CasterArray = nil
gg_trg_CasterShot = nil
gg_trg_MonsterOrCaster = nil
gg_trg_MonsterOrCasterStack = nil
gg_trg_ClearMob = nil
gg_trg_ClearMobArray = nil
gg_trg_MonsterSpawn = nil
gg_trg_MonsterSpawnArray = nil
gg_trg_Terrain_type_functions = nil
gg_trg_TerrainType = nil
gg_trg_TerrainTypeWalk = nil
gg_trg_TerrainTypeDeath_functions = nil
gg_trg_TerrainTypeDeath_KillingTimers = nil
gg_trg_TerrainTypeDeath = nil
gg_trg_TerrainTypeSlide = nil
gg_trg_TerrainTypeArray = nil
gg_trg_Time_of_game_trigger = nil
gg_trg_Lives_and_game_time = nil
gg_trg_Meteor = nil
gg_trg_MeteorArray = nil
gg_trg_Meteor_functions = nil
gg_trg_Right_click_on_widget = nil
gg_trg_Meteor_being_used = nil
gg_trg_Stop_using_normal_meteor = nil
gg_trg_Effect_meteor_on_pick_up = nil
gg_trg_Effect_meteor_on_pick_down = nil
gg_trg_VisibilityModifier = nil
gg_trg_VisibilityModifierArray = nil
gg_trg_StartAndEnd = nil
gg_trg_Triggers = nil
gg_trg_Level = nil
gg_trg____Level_functions = nil
gg_trg____Trig_checkpoint_revive_heroes = nil
gg_trg_LevelArray = nil
gg_trg_EscaperEffect_functions = nil
gg_trg_EscaperEffect = nil
gg_trg_EscaperEffectArray = nil
gg_trg_Escaper_functions = nil
gg_trg_Escaper_disco = nil
gg_trg_Escaper = nil
gg_trg_EscaperArray = nil
gg_trg_EscaperSavedCommands = nil
gg_trg_Make = nil
gg_trg_Monster_making_no_move_Actions = nil
gg_trg_MakeMonsterNoMove = nil
gg_trg_Monster_making_simple_patrol_Actions = nil
gg_trg_MakeMonsterSimplePatrol = nil
gg_trg_Monster_making_multiple_patrols_Actions = nil
gg_trg_MakeMonsterMultiplePatrols = nil
gg_trg_Monster_making_teleport_Actions = nil
gg_trg_MakeMonsterTeleport = nil
gg_trg_Monster_spawn_making_Actions = nil
gg_trg_MakeMonsterSpawn = nil
gg_trg_Monster_delete_Actions = nil
gg_trg_MakeDeleteMonsters = nil
gg_trg_Make_set_unit_monster_type_Actions = nil
gg_trg_MakeSetUnitMonsterType = nil
gg_trg_Make_set_unit_teleport_period_Actions = nil
gg_trg_MakeSetUnitTeleportPeriod = nil
gg_trg_Make_get_unit_teleport_period_Actions = nil
gg_trg_MakeGetUnitTeleportPeriod = nil
gg_trg_Meteor_making_Actions = nil
gg_trg_MakeMeteor = nil
gg_trg_Meteor_delete_Actions = nil
gg_trg_MakeDeleteMeteors = nil
gg_trg_Caster_making_Actions = nil
gg_trg_MakeCaster = nil
gg_trg_Caster_delete_Actions = nil
gg_trg_MakeDeleteCasters = nil
gg_trg_ClearMob_making_Actions = nil
gg_trg_MakeClearMob = nil
gg_trg_ClearMob_delete_Actions = nil
gg_trg_MakeDeleteClearMob = nil
gg_trg_Terrain_making_Actions = nil
gg_trg_MakeTerrainCreate = nil
gg_trg_Terrain_copy_paste_Actions = nil
gg_trg_MakeTerrainCopyPaste = nil
gg_trg_Terrain_vertical_symmetry_Actions = nil
gg_trg_MakeTerrainVerticalSymmetry = nil
gg_trg_Terrain_horizontal_symmetry_Actions = nil
gg_trg_MakeTerrainHorizontalSymmetry = nil
gg_trg_Terrain_height_making_Actions = nil
gg_trg_MakeTerrainHeight = nil
gg_trg_Make_exchange_terrains_Actions = nil
gg_trg_MakeExchangeTerrains = nil
gg_trg_Start_making_Actions = nil
gg_trg_MakeStart = nil
gg_trg_End_making_Actions = nil
gg_trg_MakeEnd = nil
gg_trg_VisibilityModifier_making_Actions = nil
gg_trg_MakeVisibilityModifier = nil
gg_trg_Getting_terrain_type_info_Actions = nil
gg_trg_MakeGetTerrainType = nil
gg_trg_MakeAction = nil
gg_trg_MakeMonsterAction = nil
gg_trg_MakeDeleteMonstersAction = nil
gg_trg_MakeMeteorAction = nil
gg_trg_MakeDeleteMeteorsAction = nil
gg_trg_MakeCasterAction = nil
gg_trg_MakeDeleteCastersAction = nil
gg_trg_MakeTerrainCreateAction = nil
gg_trg_MakeTerrainCopyPasteAction = nil
gg_trg_MakeTerrainVerticalSymmetryAction = nil
gg_trg_MakeTerrainHorizontalSymmetryAction = nil
gg_trg_MakeTerrainHeightAction = nil
gg_trg_MakeVisibilityModifierAction = nil
gg_trg_MakeLastActions = nil
gg_trg_Command_functions = nil
gg_trg_Teleport_once_only = nil
gg_trg_Teleport = nil
gg_trg_Autorevive = nil
gg_trg_Command_all = nil
gg_trg_Command_red = nil
gg_trg_Command_cheat = nil
gg_trg_Command_make = nil
gg_trg_Command_max = nil
gg_trg_Command_true_max = nil
gg_trg_Command_execution = nil
gg_trg_Gravity = nil
gg_trg_Slide = nil
gg_trg_To_turn_on_slide = nil
gg_trg_Auto_continue_after_sliding = nil
gg_trg_CheckTerrain = nil
gg_trg_All_terrain_functions = nil
gg_trg_Terrain_type_ascii_conversion = nil
gg_trg_Terrain_type_max = nil
gg_trg_Terrain_type_grass = nil
gg_trg_Terrain_type_names_and_data = nil
gg_trg_Terrain_functions = nil
gg_trg_Terrain_data_search = nil
gg_trg_Terrain_type_from_string = nil
gg_trg_Modify_terrain_functions = nil
gg_trg_Terrain_modifying_trig = nil
gg_trg_Change_one_terrain = nil
gg_trg_Change_all_terrains = nil
gg_trg_Exchange_terrains = nil
gg_trg_Randomize_terrains = nil
gg_trg_Reinit_terrains = nil
gg_trg_Reinit_terrains_position_Change_variations_and_ut_at_beginning = nil
gg_trg_Save_load_terrain_without_name = nil
gg_trg_Save_load_terrain_with_name = nil
gg_trg_struct_StringArrayForCache = nil
gg_trg_Save_terrain_config = nil
gg_trg_Save_terrain = nil
gg_trg_Save_terrain_heights_and_cliffs = nil
gg_trg_Save_terrain_ramps = nil
gg_trg_Save_water = nil
gg_trg_Save_monster_types = nil
gg_trg_Save_caster_types = nil
gg_trg_Save_levels = nil
gg_trg_SAVE_MAP_in_cache = nil
gg_trg_Init_lives = nil
gg_trg_Init_escapers = nil
gg_trg_Init_struct_levels = nil
gg_trg_Forces_ally = nil
gg_trg_Camera = nil
gg_trg_No_selection_circle = nil
gg_trg_Allways_day = nil
gg_trg_Message_heroDies = nil
gg_trg_Start_sound = nil
gg_trg_Heroes = nil
gg_trg_Heroes_for_test = nil
gg_trg_Desactiver_Forme_de_corbeau = nil
gg_trg_coop_init_sounds = nil
gg_trg_creation_dialogue = nil
gg_trg_apparition_dialogue_et_fermeture_automatique = nil
gg_trg_appui_sur_bouton_dialogue = nil
gg_trg_deplacement_heros_hors_death_path = nil
gg_trg_Command_shortcuts_functions = nil
gg_trg_Using_shortcut = nil
gg_trg_Camera_reset = nil
gg_trg_Apm = nil
gg_trg_Afk_mode = nil
gg_trg_Afk_mode_ordre_recu = nil
gg_trg_A_player_leaves = nil
gg_trg_InvisUnit_is_getting_damage = nil
gg_trg_A_hero_dies_check_if_all_dead_and_sounds = nil
gg_trg_Lose_a_life_and_res = nil
gg_trg_Sound_monster_dies = nil
gg_trg_Select_hero = nil
gg_trg_Unselect_hero = nil
gg_trg_Giving_making_rights = nil
gg_trg_Welcome_message = nil
gg_trg_Commands_1 = nil
gg_trg_Commands_2 = nil
gg_trg_Colors = nil
gg_trg_Effects = nil
gg_trg_Red_commands = nil
gg_trg_Map_description = nil
gg_trg_Contact = nil
gg_trg_Command_shortcuts = nil
gg_trg_Adding_quests = nil
gg_trg_Antisave = nil
gg_trg_Antisave_warning = nil
gg_trg_Init_terrain_types = nil
gg_trg_Init_monster_and_caster_types = nil
gg_trg_Init_levels = nil
MAP_MIN_X = nil
MAP_MAX_X = nil
MAP_MIN_Y = nil
MAP_MAX_Y = nil

INVIS_UNIT_TYPE_ID = 1164537462
HERO_TYPE_ID = 1160785968

HERO_WALK_SPEED = 522

MAX_MOVE_SPEED = 522


DEFAULT_MONSTER_SPEED = 400

HERO_SLIDE_SPEED = 550
SLIDE_PERIOD = 0.015
CHECK_TERRAIN_PERIOD = 0.05
LOW_PERIOD_FOR_WORK = 0.0001


CRITICAL_LIVES_LIMIT = 2

DEFAULT_CAMERA_FIELD = 2500


LIMIT_NB_HERO_EFFECTS = 20


PATROL_DISTANCE_MIN = 100


MAX_NB_MONSTERS_BY_LEVEL = 1000


LARGEUR_CASE = 128


TERRAIN_DEATH_TIME_TO_KILL = 2


ENNEMY_PLAYER = Player(PLAYER_NEUTRAL_AGGRESSIVE)
NEUTRAL_PLAYER = Player(PLAYER_NEUTRAL_PASSIVE)


PLAYER_INVIS_UNIT = Player(12)


GM_TOUCH_DEATH_TERRAIN_EFFECT_STR = "Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl"
GM_KILLING_EFFECT = "Abilities\\Spells\\NightElf\\Blink\\BlinkCaster.mdl"
TERRAIN_KILL_EFFECT_BODY_PART = "origin"

NB_MAX_OF_TERRAINS = 16
TERRAIN_DATA_DISPLAY_TIME = 15
NB_MAX_TERRAIN_DATA_DISPLAY = 16
NB_MAX_TILES_MODIFIED = 1000

NB_LIVES_AT_BEGINNING = 5

RED = 0
BLUE = 1
TEAL = 2
PURPLE = 3
YELLOW = 4
ORANGE = 5
GREEN = 6
PINK = 7
GREY = 8
LIGHTBLUE = 9
DARKGREEN = 10
BROWN = 11

MOBS_VARIOUS_COLORS = false

--coop
POWER_CIRCLE = 1885563250
DUMMY_POWER_CIRCLE = 1684236658
COOP_REVIVE_DIST = 60

SON_LAST_HOPE_INTERVALLE_MIN = 10


CAN_TURN_IN_AIR = false
udg_colorCode = __jarray("")
udg_baseColorString = __jarray("")
COLOR_TERRAIN_SLIDE = nil
COLOR_TERRAIN_WALK = nil
COLOR_TERRAIN_DEATH = nil
MONSTER_NEAR_DIFF_MAX = 64
udg_autoreviveDelay = 4
udg_lives = 0
udg_escapers = 0
udg_levels = 0
udg_coop_index_son = nil
COOP_DUREE_SON = 280
dialChoixModeCoop = nil
btnChoixCoop = nil
btnChoixSolo = nil
dialBoutonAppuye = nil
DIAL_TIME_TO_ANSWER = 10
udg_joueurDialogue = nil
dialTimerTempLimite = nil
udg_coopModeActive = true
TAILLE_UNITE = 100
udg_nbKilled = 0
udg_gameIsLost = false

Commands1 = "-cameraField(cf) x\nchanges the camera field (height), default is 2500\n\n-resetCamera(rc)\nputs the camera back like chosen field\n\n-resetCameraInit(rci)\nchanges the camera field back to its default value (2500)\n\n-animation(an) <string>\nmakes your hero doing an animation. ex : -an attack\n\n-mapNbMonsters(mnbm) [moving(m)|all(a)|notMoving(nm)]\ndisplays the number of monsters in the map, of the chosen kind. \"Moving\" is the default kind. ex : -mnbm nm\n\n-levelNbMonsters(lnbm) [moving(m)|all(a)|notMoving(nm)]\ndisplays the number of monsters in the current level, of the chosen kind\n\n-disco(d) [off|1~30]\nchooses the number of color changes in ten seconds, or stop color changing (without parameter : once a second)\n\n-clearText(clr)\nremoves the text on the screen\n\n-getCurrentLevel(getcl)\ndisplays the number of the current level (first one is number 0)\n\n-leaderboard(ldb) on|off\ndisplays or hides the lives leaderboard"


--===========================================================================
Commands1Requirement1 = "Here is the first part of various commands you can use in game"
Commands1Requirement2 = ""
Commands1Requirement3 = "cf, rc, rci, an, mnbm, lnbm, kl, kc, d, clr, getcl"


Commands2 = "-drunk(-) <real drunkValue>  --> value between 5 and 60\nmakes your hero drink alcohol\n\n-noDrunk(-) \nstops drunk mode\n\n-apm(-) [all|a]\ndisplays apm on slide of everybody or just yourself\n\n-saveCommand(sc) <commandLabel> <command>\nsaves a command or group of commands into a name of your choice\n\n-executeCommand(ec) <commandLabel>\nexecute a command or group of commands you saved with \"saveCommand\"\n\n-autoContinueAfterSliding(acas) <boolean status>\nactivated at the beginning of the game\nex: -acas off, -acas 1\n\n-usedTerrains(ut)\ndisplays the terrains used in this game\n\n-getTerrainInfo(gti) [ <terrain> | <lowInteger> <upInteger> ]\ngets information about terrains used in the game and all terrains of warcraft 3\nterrains are numbered between 1 and 177\nwithout parameter you'll get information about terrains you right click on (use -stop to stop this mode)\n\n-stop(s) \nstops getTerrainInfoMode"


--===========================================================================
Commands2Requirement1 = "Here is the second part of various commands you can use in game"
Commands2Requirement2 = ""
Commands2Requirement3 = "drunk, noDrunk, apm, sc, ec, acas, ut, gti, s"


Colors = "The colors are :\nred or rd, blue or be\nteal or tl, purple or pe\nyellow or yw, orange or oe\ngreen or gn, pink or pk\ngrey or gray or gy, lightblue or lb\ndarkgreen or dg, brown or bn\nblack or bk\n\n-<color>\nchange the base color of your character\n\n-vertexColor [ <red> <green> <blue> [<transparency>] ]\nalias -vc, change the vertex color of you character.\nThe result color depends on the basic color of your character.\nThe parameters are integer percentage or x to take a random percentage.\nWithout parameter, it will do like -vc x x x.\n\nYou can also specify onnly the red part of the vertex color :\n-vertexColorRed [<red>], alias -vcr\nSame for green, blue and transparency (vcg, vcb, vct)\n\n-noVertex\nalias -nv, cancel the vertex color of your character\nit's like -vc 100 100 100\n\n-colorInfo [<Pcolor>]\nalias -ci, display info about the color of your character, or of an other player's character"

--==================================================================================================================    
ColorsRequirement1 = "Here are all commands to change the color of your character."
ColorsRequirement2 = ""
ColorsRequirement3 = "rd, be, tl, pe, yw, oe, gn, pk, gy, lb, dg, bn, bk, vc, vcr, vcg, vcb, vct, nv, ci"


Effects = "The effects are :\nlight or l\nfire or f\nice or i\ncorruption or c\npoison or p\nslow or s\n\n-effect <effect>\nalias -ef, puts an effect on each hand of your hero\n\n-customEffect <effect> <bodyPart>\nalias -ce, puts an effect on the specified bodyPart\nThe body parts are :\nleftHand or lh\nrightHand or rh\nleftFoot or lf\nrightFoot or rf\noverhead or oh\nhead or h\norigin or o\nchest or c\n\n-effectsEverywhere <effect>\nalias -efe, puts the same effect to each body part of your hero\n\n-deleteEffects [<numberOfEffectsToRemove n>]\nalias -de, deletes the n last effects of your hero, all effects if no parameter specified"


--==================================================================================================================   
EffectsRequirement1 = "Here are all commands to add effects on your character."
EffectsRequirement2 = ""
EffectsRequirement3 = "ef, ce, efe, de"


RedCommands = "-kill <Pcolor>\nalias -kl, kills a hero\nexamples : -kill be,  -kl teal\n\n-kick <Pcolor>\nalias -kc, kicks a player\nexamples : -kick be,  -kc teal\n\n-restart\njust restart the game like when lose"



--==================================================================================================================   
RedCommandsRequirement1 = "If a player is afk, no more need to kill him (autokill if needed)."
RedCommandsRequirement2 = "If a player is really boring, still need to kick him."
RedCommandsRequirement3 = "kl, kc, restart"


MapDescription = "Max Escape Creation is a tool made by Maximaxou to create escapes during the game with commands. The good point is that it's possible to save the map. We can make escapes in multiplayer without any map making knowledge."

--==================================================================================================================   

MapDescriptionRequirement1 = "This map was made with Max Escape Creation"
MapDescriptionRequirement2 = "http:/max.slid.free.fr/maxEscapeCreation"


Contact = "How to contact me : ---\nHow to contact Maximaxou, creator of Max Escape Creation : maxpolar@hotmail.fr"

--==================================================================================================================   
ContactRequirement1 = "Titre1"
ContactRequirement2 = "Titre2"


CommandShortcuts = "To assign a command to a key, use this command :\n-assign <key> <command>\nalias as\ndon't put the \"-\" of the command you wanna save\nex: -assign A red, -as d vc, -as e mirror on, -as R m off\n\nTo assign an other command to a already used shortcut, just type command assign again.\n\nTo disable a shortcut, use this command :\n-unassign <key>\nalias uas\n\nTo display your current shortcuts, use this command :\n-displayShortcuts\nalias -ds"



--==================================================================================================================    
CommandShortcutsRequirement1 = "You can now use 8 shortcuts to execute your favorite commands !"
CommandShortcutsRequirement2 = "Press A, Z, E, R, Q, S, D or F !"

udg_terrainTypes = 0
udg_monsterTypes = 0
udg_casterTypes = 0

l__library_init = nil

--JASSHelper struct globals:
si__MakeAction = 1
si__MakeAction_F = 0
si__MakeAction_I = 0
si__MakeAction_V = __jarray(0)
si__MakeAction_type = __jarray(0)
st__MakeAction_onDestroy = {}
s__MakeAction_isActionMadeB = __jarray(false)
s__MakeAction_owner = __jarray(0)
st__MakeAction_cancel = {}
st__MakeAction_redo = {}
si__Meteor = 2
si__Meteor_F = 0
si__Meteor_I = 0
si__Meteor_V = __jarray(0)
s__Meteor_x = __jarray(0.0)
s__Meteor_y = __jarray(0.0)
s__Meteor_meteor = {}
s__Meteor_level = __jarray(0)
s__Meteor_arrayId = __jarray(0)
si__MonsterOrCasterStack = 3
si__MonsterOrCasterStack_F = 0
si__MonsterOrCasterStack_I = 0
si__MonsterOrCasterStack_V = __jarray(0)
si__MonsterOrCasterStack_2V = __jarray(0)
si__MonsterOrCasterStack_3V = __jarray(0)
si__MonsterOrCasterStack_4V = __jarray(0)
si__MonsterOrCasterStack_5V = __jarray(0)
si__MonsterOrCasterStack_6V = __jarray(0)
si__MonsterOrCasterStack_7V = __jarray(0)
si__MonsterOrCasterStack_8V = __jarray(0)
si__MonsterOrCasterStack_9V = __jarray(0)
si__MonsterOrCasterStack_10V = __jarray(0)
si__MonsterOrCasterStack_11V = __jarray(0)
si__MonsterOrCasterStack_12V = __jarray(0)
si__MonsterOrCasterStack_13V = __jarray(0)
s__MonsterOrCasterStack_2monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_3monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_4monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_5monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_6monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_7monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_8monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_9monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_10monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_11monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_12monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_13monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_monsterOrCaster = __jarray(0)
s__MonsterOrCasterStack_2nextElement = __jarray(0)
s__MonsterOrCasterStack_3nextElement = __jarray(0)
s__MonsterOrCasterStack_4nextElement = __jarray(0)
s__MonsterOrCasterStack_5nextElement = __jarray(0)
s__MonsterOrCasterStack_6nextElement = __jarray(0)
s__MonsterOrCasterStack_7nextElement = __jarray(0)
s__MonsterOrCasterStack_8nextElement = __jarray(0)
s__MonsterOrCasterStack_9nextElement = __jarray(0)
s__MonsterOrCasterStack_10nextElement = __jarray(0)
s__MonsterOrCasterStack_11nextElement = __jarray(0)
s__MonsterOrCasterStack_12nextElement = __jarray(0)
s__MonsterOrCasterStack_13nextElement = __jarray(0)
s__MonsterOrCasterStack_nextElement = __jarray(0)
si__Stack = 4
si__Stack_F = 0
si__Stack_I = 0
si__Stack_V = __jarray(0)
s__Stack_EMPTY = 0x28829022
s__Stack_size = __jarray(0)
s__Stack_top = __jarray(0)
s__Stack_free = 1
s__Stack_next = __jarray(0)
s__Stack_value = __jarray(0)
si__StringSegments = 5
si__StringSegments_F = 0
si__StringSegments_I = 0
si__StringSegments_V = __jarray(0)
s__StringSegments_s = __jarray("")
s__StringSegments_sLen = __jarray(0)
s__StringSegments_delim = __jarray("")
s__StringSegments_dLen = __jarray(0)
s__StringSegments_pos = __jarray(0)
s__StringSegments_count = __jarray(0)
si__Trigger = 6
si__Trigger_F = 0
si__Trigger_I = 0
si__Trigger_V = __jarray(0)
s__Trigger_t = {}
si__TriggerArray = 7
si__TriggerArray_F = 0
si__TriggerArray_I = 0
si__TriggerArray_V = __jarray(0)
s___TriggerArray_triggers = __jarray(0)
s___TriggerArray_triggers_size = 200
s__TriggerArray_triggers = __jarray(0)
s__TriggerArray_lastInstance = __jarray(0)
si__VisibilityModifier = 9
si__VisibilityModifier_F = 0
si__VisibilityModifier_I = 0
si__VisibilityModifier_V = __jarray(0)
s__VisibilityModifier_x1 = __jarray(0.0)
s__VisibilityModifier_y1 = __jarray(0.0)
s__VisibilityModifier_x2 = __jarray(0.0)
s__VisibilityModifier_y2 = __jarray(0.0)
s__VisibilityModifier_fm = {}
s__VisibilityModifier_level = __jarray(0)
s__VisibilityModifier_arrayId = __jarray(0)
si__CasterType = 10
si__CasterType_F = 0
si__CasterType_I = 0
si__CasterType_V = __jarray(0)
s__CasterType_label = __jarray("")
s__CasterType_theAlias = __jarray("")
s__CasterType_casterMonsterType = __jarray(0)
s__CasterType_projectileMonsterType = __jarray(0)
s__CasterType_range = __jarray(0.0)
s__CasterType_projectileSpeed = __jarray(0.0)
s__CasterType_loadTime = __jarray(0.0)
s__CasterType_animation = __jarray("")
si__MakeCasterAction = 11
s__MakeCasterAction_caster = __jarray(0)
s__MakeCasterAction_level = __jarray(0)
si__MakeDeleteCastersAction = 12
s__MakeDeleteCastersAction_suppressions = nil
s__MakeDeleteCastersAction_suppressionLastId = nil
s__MakeDeleteCastersAction_suppressionId = __jarray(0)
s__MakeDeleteCastersAction_level = __jarray(0)
si__MakeDeleteMeteorsAction = 13
s__MakeDeleteMeteorsAction_suppressions = nil
s__MakeDeleteMeteorsAction_suppressionLastId = nil
s__MakeDeleteMeteorsAction_suppressionId = __jarray(0)
s__MakeDeleteMeteorsAction_level = __jarray(0)
si__MakeDeleteMonstersAction = 14
s__MakeDeleteMonstersAction_suppressions = nil
s__MakeDeleteMonstersAction_suppressionLastId = nil
s__MakeDeleteMonstersAction_suppressionId = __jarray(0)
s__MakeDeleteMonstersAction_level = __jarray(0)
si__MakeLastActions = 15
si__MakeLastActions_F = 0
si__MakeLastActions_I = 0
si__MakeLastActions_V = __jarray(0)
s___MakeLastActions_lastActions = __jarray(0)
s___MakeLastActions_lastActions_size = 30
s__MakeLastActions_lastActions = __jarray(0)
s__MakeLastActions_lastActionId = __jarray(0)
s__MakeLastActions_lastActionEffective = __jarray(0)
s__MakeLastActions_owner = __jarray(0)
si__MakeMeteorAction = 17
s__MakeMeteorAction_meteor = __jarray(0)
s__MakeMeteorAction_level = __jarray(0)
si__MakeMonsterAction = 18
s__MakeMonsterAction_monster = __jarray(0)
s__MakeMonsterAction_level = __jarray(0)
si__MakeTerrainHeightAction = 19
s__MakeTerrainHeightAction_radius = __jarray(0.0)
s__MakeTerrainHeightAction_height = __jarray(0.0)
s__MakeTerrainHeightAction_x = __jarray(0.0)
s__MakeTerrainHeightAction_y = __jarray(0.0)
s__MakeTerrainHeightAction_terrainDeform = {}
si__MakeVisibilityModifierAction = 20
s__MakeVisibilityModifierAction_level = __jarray(0)
s__MakeVisibilityModifierAction_visibilityModifierSave = __jarray(0)
s__MakeVisibilityModifierAction_visibilityModifierPointeur = __jarray(0)
si__MeteorArray = 21
si__MeteorArray_F = 0
si__MeteorArray_I = 0
si__MeteorArray_V = __jarray(0)
s___MeteorArray_meteors = __jarray(0)
s___MeteorArray_meteors_size = 100
s__MeteorArray_meteors = __jarray(0)
s__MeteorArray_lastInstance = __jarray(0)
si__MonsterType = 23
si__MonsterType_F = 0
si__MonsterType_I = 0
si__MonsterType_V = __jarray(0)
s__MonsterType_label = __jarray("")
s__MonsterType_theAlias = __jarray("")
s__MonsterType_unitTypeId = __jarray(0)
s__MonsterType_scale = __jarray(0.0)
s__MonsterType_immolationSkill = __jarray(0)
s__MonsterType_speed = __jarray(0.0)
s__MonsterType_isClickableB = __jarray(false)
s__MonsterType_killingEffectStr = __jarray("")
s__MonsterType_maxLife = __jarray(0)
s__MonsterType_height = __jarray(0.0)
si__SoundUtils___soundhelper = 24
si__SoundUtils___soundhelper_F = 0
si__SoundUtils___soundhelper_I = 0
si__SoundUtils___soundhelper_V = __jarray(0)
s__SoundUtils___soundhelper_sta = __jarray(0)
s__SoundUtils___soundhelper_fileName = __jarray("")
s__SoundUtils___soundhelper_duration = __jarray(0)
s__SoundUtils___soundhelper_looping = __jarray(false)
s__SoundUtils___soundhelper_is3D = __jarray(false)
s__SoundUtils___soundhelper_stopwhenoutofrange = __jarray(false)
s__SoundUtils___soundhelper_fadeInRate = __jarray(0)
s__SoundUtils___soundhelper_fadeOutRate = __jarray(0)
s__SoundUtils___soundhelper_eaxSetting = __jarray("")
si__SoundUtils___soundrecycler = 25
si__SoundUtils___soundrecycler_F = 0
si__SoundUtils___soundrecycler_I = 0
si__SoundUtils___soundrecycler_V = __jarray(0)
s__SoundUtils___soundrecycler_t = {}
s__SoundUtils___soundrecycler_s = {}
s__SoundUtils___soundrecycler_sh = __jarray(0)
s__SoundUtils___soundrecycler_stopped = __jarray(false)
si__StringArrayForCache = 26
si__StringArrayForCache_F = 0
si__StringArrayForCache_I = 0
si__StringArrayForCache_V = __jarray(0)
s___StringArrayForCache_stringArray = __jarray("")
s___StringArrayForCache_stringArray_size = 8000
s__StringArrayForCache_stringArray = __jarray(0)
s__StringArrayForCache_lastStringId = __jarray(0)
s__StringArrayForCache_category = __jarray("")
s__StringArrayForCache_variableName = __jarray("")
s__StringArrayForCache_avecSeparateur = __jarray(false)
si__VisibilityModifierArray = 28
si__VisibilityModifierArray_F = 0
si__VisibilityModifierArray_I = 0
si__VisibilityModifierArray_V = __jarray(0)
s___VisibilityModifierArray_vms = __jarray(0)
s___VisibilityModifierArray_vms_size = 100
s__VisibilityModifierArray_vms = __jarray(0)
s__VisibilityModifierArray_lastInstance = __jarray(0)
si__CasterTypeArray = 30
si__CasterTypeArray_F = 0
si__CasterTypeArray_I = 0
si__CasterTypeArray_V = __jarray(0)
s___CasterTypeArray_casterTypes = __jarray(0)
s___CasterTypeArray_casterTypes_size = 100
s__CasterTypeArray_casterTypes = __jarray(0)
s__CasterTypeArray_numberOfCasterTypes = __jarray(0)
si__Lives = 32
si__Lives_F = 0
si__Lives_I = 0
si__Lives_V = __jarray(0)
s__Lives_nb = __jarray(0)
s__Lives_lb = {}
si__MonsterTypeArray = 33
si__MonsterTypeArray_F = 0
si__MonsterTypeArray_I = 0
si__MonsterTypeArray_V = __jarray(0)
s___MonsterTypeArray_monsterTypes = __jarray(0)
s___MonsterTypeArray_monsterTypes_size = 1000
s__MonsterTypeArray_monsterTypes = __jarray(0)
s__MonsterTypeArray_numberOfMonsterTypes = __jarray(0)
si__TerrainType = 35
si__TerrainType_F = 0
si__TerrainType_I = 0
si__TerrainType_V = __jarray(0)
s__TerrainType_label = __jarray("")
s__TerrainType_theAlias = __jarray("")
s__TerrainType_kind = __jarray("")
s__TerrainType_terrainTypeId = __jarray(0)
s__TerrainType_orderId = __jarray(0)
s__TerrainType_cliffClassId = __jarray(0)
si__CasterShot = 36
si__CasterShot_F = 0
si__CasterShot_I = 0
si__CasterShot_V = __jarray(0)
s__CasterShot_x = __jarray(0.0)
s__CasterShot_y = __jarray(0.0)
s__CasterShot_diffX = __jarray(0.0)
s__CasterShot_diffY = __jarray(0.0)
s__CasterShot_nbTeleportationsRestantes = __jarray(0)
s__CasterShot_unite = {}
s__CasterShot_trig = {}
si__EscaperEffect = 37
si__EscaperEffect_F = 0
si__EscaperEffect_I = 0
si__EscaperEffect_V = __jarray(0)
s__EscaperEffect_ef = {}
s__EscaperEffect_efStr = __jarray("")
s__EscaperEffect_bodyPart = __jarray("")
si__MakeTerrainCopyPasteAction = 38
s__MakeTerrainCopyPasteAction_terrainSavesBefore = nil
s__MakeTerrainCopyPasteAction_terrainSavesAfter = nil
s__MakeTerrainCopyPasteAction_terrainSaveLastId = nil
s__MakeTerrainCopyPasteAction_terrainSaveId = __jarray(0)
s__MakeTerrainCopyPasteAction_minX = __jarray(0.0)
s__MakeTerrainCopyPasteAction_minY = __jarray(0.0)
s__MakeTerrainCopyPasteAction_maxX = __jarray(0.0)
s__MakeTerrainCopyPasteAction_maxY = __jarray(0.0)
si__MakeTerrainCreateAction = 39
s__MakeTerrainCreateAction_terrainSaves = nil
s__MakeTerrainCreateAction_terrainSaveLastId = nil
s__MakeTerrainCreateAction_terrainSaveId = __jarray(0)
s__MakeTerrainCreateAction_terrainTypeNew = __jarray(0)
s__MakeTerrainCreateAction_minX = __jarray(0.0)
s__MakeTerrainCreateAction_minY = __jarray(0.0)
s__MakeTerrainCreateAction_maxX = __jarray(0.0)
s__MakeTerrainCreateAction_maxY = __jarray(0.0)
si__MakeTerrainHorizontalSymmetryAction = 40
s__MakeTerrainHorizontalSymmetryAction_minX = __jarray(0.0)
s__MakeTerrainHorizontalSymmetryAction_minY = __jarray(0.0)
s__MakeTerrainHorizontalSymmetryAction_maxX = __jarray(0.0)
s__MakeTerrainHorizontalSymmetryAction_maxY = __jarray(0.0)
si__MakeTerrainVerticalSymmetryAction = 41
s__MakeTerrainVerticalSymmetryAction_minX = __jarray(0.0)
s__MakeTerrainVerticalSymmetryAction_minY = __jarray(0.0)
s__MakeTerrainVerticalSymmetryAction_maxX = __jarray(0.0)
s__MakeTerrainVerticalSymmetryAction_maxY = __jarray(0.0)
si__MonsterSpawn = 42
si__MonsterSpawn_F = 0
si__MonsterSpawn_I = 0
si__MonsterSpawn_V = __jarray(0)
s__MonsterSpawn_label = __jarray("")
s__MonsterSpawn_mt = __jarray(0)
s__MonsterSpawn_sens = __jarray("")
s__MonsterSpawn_frequence = __jarray(0.0)
s__MonsterSpawn_minX = __jarray(0.0)
s__MonsterSpawn_minY = __jarray(0.0)
s__MonsterSpawn_maxX = __jarray(0.0)
s__MonsterSpawn_maxY = __jarray(0.0)
s__MonsterSpawn_tSpawn = {}
s__MonsterSpawn_tUnspawn = {}
s__MonsterSpawn_unspawnReg = {}
s__MonsterSpawn_monsters = {}
s__MonsterSpawn_level = __jarray(0)
s__MonsterSpawn_arrayId = __jarray(0)
si__TerrainTypeSlide = 43
s__TerrainTypeSlide_slideSpeed = __jarray(0.0)
s__TerrainTypeSlide_canTurn = __jarray(false)
si__TerrainTypeWalk = 44
s__TerrainTypeWalk_walkSpeed = __jarray(0.0)
si__EscaperEffectArray = 45
si__EscaperEffectArray_F = 0
si__EscaperEffectArray_I = 0
si__EscaperEffectArray_V = __jarray(0)
s___EscaperEffectArray_efs = __jarray(0)
s___EscaperEffectArray_efs_size = 20
s__EscaperEffectArray_efs = __jarray(0)
s__EscaperEffectArray_lastInstance = __jarray(0)
si__MonsterSpawnArray = 47
si__MonsterSpawnArray_F = 0
si__MonsterSpawnArray_I = 0
si__MonsterSpawnArray_V = __jarray(0)
s___MonsterSpawnArray_monsterSpawns = __jarray(0)
s___MonsterSpawnArray_monsterSpawns_size = 100
s__MonsterSpawnArray_monsterSpawns = __jarray(0)
s__MonsterSpawnArray_lastInstance = __jarray(0)
si__KillingTimers = 49
si__KillingTimers_F = 0
si__KillingTimers_I = 0
si__KillingTimers_V = __jarray(0)
s___KillingTimers_timers = {}
s___KillingTimers_timers_size = 12
s__KillingTimers_timers = __jarray(0)
si__Escaper = 51
si__Escaper_F = 0
si__Escaper_I = 0
si__Escaper_V = __jarray(0)
s__Escaper_p = {}
s__Escaper_hero = {}
s__Escaper_invisUnit = {}
s__Escaper_walkSpeed = __jarray(0.0)
s__Escaper_slideSpeed = __jarray(0.0)
s__Escaper_baseColorId = __jarray(0)
s__Escaper_cameraField = __jarray(0)
s__Escaper_lastTerrainType = __jarray(0)
s__Escaper_controler = __jarray(0)
s__Escaper_slide = {}
s__Escaper_checkTerrain = {}
s__Escaper_vcRed = __jarray(0.0)
s__Escaper_vcGreen = __jarray(0.0)
s__Escaper_vcBlue = __jarray(0.0)
s__Escaper_vcTransparency = __jarray(0.0)
s__Escaper_discoTrigger = {}
s__Escaper_effects = __jarray(0)
s__Escaper_terrainKillEffect = {}
s__Escaper_meteorEffect = {}
s__Escaper_godMode = __jarray(false)
s__Escaper_godModeKills = __jarray(false)
s__Escaper_walkSpeedAbsolute = __jarray(false)
s__Escaper_slideSpeedAbsolute = __jarray(false)
s__Escaper_canTeleportB = __jarray(false)
s__Escaper_hasAutoreviveB = __jarray(false)
s__Escaper_canCheatB = __jarray(false)
s__Escaper_isMaximaxouB = __jarray(false)
s__Escaper_isTrueMaximaxouB = __jarray(false)
s__Escaper_make = __jarray(0)
s__Escaper_makeLastActions = __jarray(0)
s__Escaper_makingLevel = __jarray(0)
s__Escaper_currentLevelTouchTerrainDeath = __jarray(0)
s__Escaper_itemInInventory = {}
s__Escaper_lastZ = __jarray(0.0)
s__Escaper_oldDiffZ = __jarray(0.0)
s__Escaper_speedZ = __jarray(0.0)
s__Escaper_slideLastAngleOrder = __jarray(0.0)
s__Escaper_isHeroSelectedB = __jarray(false)
s__Escaper_powerCircle = {}
s__Escaper_dummyPowerCircle = {}
s__Escaper_coopInvul = __jarray(false)
si__TerrainTypeDeath = 52
s__TerrainTypeDeath_killingEffectStr = __jarray("")
s__TerrainTypeDeath_timeToKill = __jarray(0.0)
s__TerrainTypeDeath_killingTimers = __jarray(0)
s__TerrainTypeDeath_toleranceDist = __jarray(0.0)
si__EscaperArray = 53
si__EscaperArray_F = 0
si__EscaperArray_I = 0
si__EscaperArray_V = __jarray(0)
s___EscaperArray_escapers = __jarray(0)
s___EscaperArray_escapers_size = 12
s__EscaperArray_escapers = __jarray(0)
si__RectInterface = 55
si__RectInterface_F = 0
si__RectInterface_I = 0
si__RectInterface_V = __jarray(0)
si__RectInterface_type = __jarray(0)
st__RectInterface_onDestroy = {}
s__RectInterface_minX = __jarray(0.0)
s__RectInterface_minY = __jarray(0.0)
s__RectInterface_maxX = __jarray(0.0)
s__RectInterface_maxY = __jarray(0.0)
s__RectInterface_r = {}
st__RectInterface_toString = {}
si__Start = 56
si__End = 57
s__End_endReaching = {}
si__Level = 58
si__Level_F = 0
si__Level_I = 0
si__Level_V = __jarray(0)
s__Level_isActivatedB = __jarray(false)
s__Level_startMessage = __jarray("")
s__Level_livesEarnedAtBeginning = __jarray(0)
s__Level_start = __jarray(0)
s__Level_end = __jarray(0)
s__Level_visibilities = __jarray(0)
s__Level_monstersNoMove = __jarray(0)
s__Level_monstersSimplePatrol = __jarray(0)
s__Level_monstersMultiplePatrols = __jarray(0)
s__Level_monstersTeleport = __jarray(0)
s__Level_monsterSpawns = __jarray(0)
s__Level_meteors = __jarray(0)
s__Level_casters = __jarray(0)
s__Level_clearMobs = __jarray(0)
s__Level_triggers = __jarray(0)
si__Make = 59
si__Make_F = 0
si__Make_I = 0
si__Make_V = __jarray(0)
si__Make_type = __jarray(0)
st__Make_onDestroy = {}
s__Make_makerOwner = {}
s__Make_kind = __jarray("")
s__Make_t = {}
s__Make_maker = {}
st__Make_cancelLastAction = {}
st__Make_redoLastAction = {}
si__Monster = 60
si__Monster_F = 0
si__Monster_I = 0
si__Monster_V = __jarray(0)
si__Monster_2V = __jarray(0)
si__Monster_3V = __jarray(0)
si__Monster_4V = __jarray(0)
si__Monster_5V = __jarray(0)
si__Monster_6V = __jarray(0)
si__Monster_7V = __jarray(0)
si__Monster_8V = __jarray(0)
si__Monster_9V = __jarray(0)
si__Monster_10V = __jarray(0)
si__Monster_11V = __jarray(0)
si__Monster_12V = __jarray(0)
si__Monster_13V = __jarray(0)
si__Monster_type = __jarray(0)
si__Monster_2type = __jarray(0)
si__Monster_3type = __jarray(0)
si__Monster_4type = __jarray(0)
si__Monster_5type = __jarray(0)
si__Monster_6type = __jarray(0)
si__Monster_7type = __jarray(0)
si__Monster_8type = __jarray(0)
si__Monster_9type = __jarray(0)
si__Monster_10type = __jarray(0)
si__Monster_11type = __jarray(0)
si__Monster_12type = __jarray(0)
si__Monster_13type = __jarray(0)
st__Monster_onDestroy = {}
s__Monster_nbInstances = 0
s__Monster_2id = __jarray(0)
s__Monster_3id = __jarray(0)
s__Monster_4id = __jarray(0)
s__Monster_5id = __jarray(0)
s__Monster_6id = __jarray(0)
s__Monster_7id = __jarray(0)
s__Monster_8id = __jarray(0)
s__Monster_9id = __jarray(0)
s__Monster_10id = __jarray(0)
s__Monster_11id = __jarray(0)
s__Monster_12id = __jarray(0)
s__Monster_13id = __jarray(0)
s__Monster_id = __jarray(0)
s__Monster_2u = {}
s__Monster_3u = {}
s__Monster_4u = {}
s__Monster_5u = {}
s__Monster_6u = {}
s__Monster_7u = {}
s__Monster_8u = {}
s__Monster_9u = {}
s__Monster_10u = {}
s__Monster_11u = {}
s__Monster_12u = {}
s__Monster_13u = {}
s__Monster_u = {}
s__Monster_2mt = __jarray(0)
s__Monster_3mt = __jarray(0)
s__Monster_4mt = __jarray(0)
s__Monster_5mt = __jarray(0)
s__Monster_6mt = __jarray(0)
s__Monster_7mt = __jarray(0)
s__Monster_8mt = __jarray(0)
s__Monster_9mt = __jarray(0)
s__Monster_10mt = __jarray(0)
s__Monster_11mt = __jarray(0)
s__Monster_12mt = __jarray(0)
s__Monster_13mt = __jarray(0)
s__Monster_mt = __jarray(0)
s__Monster_2level = __jarray(0)
s__Monster_3level = __jarray(0)
s__Monster_4level = __jarray(0)
s__Monster_5level = __jarray(0)
s__Monster_6level = __jarray(0)
s__Monster_7level = __jarray(0)
s__Monster_8level = __jarray(0)
s__Monster_9level = __jarray(0)
s__Monster_10level = __jarray(0)
s__Monster_11level = __jarray(0)
s__Monster_12level = __jarray(0)
s__Monster_13level = __jarray(0)
s__Monster_level = __jarray(0)
s__Monster_2arrayId = __jarray(0)
s__Monster_3arrayId = __jarray(0)
s__Monster_4arrayId = __jarray(0)
s__Monster_5arrayId = __jarray(0)
s__Monster_6arrayId = __jarray(0)
s__Monster_7arrayId = __jarray(0)
s__Monster_8arrayId = __jarray(0)
s__Monster_9arrayId = __jarray(0)
s__Monster_10arrayId = __jarray(0)
s__Monster_11arrayId = __jarray(0)
s__Monster_12arrayId = __jarray(0)
s__Monster_13arrayId = __jarray(0)
s__Monster_arrayId = __jarray(0)
s__Monster_2life = __jarray(0)
s__Monster_3life = __jarray(0)
s__Monster_4life = __jarray(0)
s__Monster_5life = __jarray(0)
s__Monster_6life = __jarray(0)
s__Monster_7life = __jarray(0)
s__Monster_8life = __jarray(0)
s__Monster_9life = __jarray(0)
s__Monster_10life = __jarray(0)
s__Monster_11life = __jarray(0)
s__Monster_12life = __jarray(0)
s__Monster_13life = __jarray(0)
s__Monster_life = __jarray(0)
s__Monster_2disablingTimer = {}
s__Monster_3disablingTimer = {}
s__Monster_4disablingTimer = {}
s__Monster_5disablingTimer = {}
s__Monster_6disablingTimer = {}
s__Monster_7disablingTimer = {}
s__Monster_8disablingTimer = {}
s__Monster_9disablingTimer = {}
s__Monster_10disablingTimer = {}
s__Monster_11disablingTimer = {}
s__Monster_12disablingTimer = {}
s__Monster_13disablingTimer = {}
s__Monster_disablingTimer = {}
s__Monster_2baseColorId = __jarray(0)
s__Monster_3baseColorId = __jarray(0)
s__Monster_4baseColorId = __jarray(0)
s__Monster_5baseColorId = __jarray(0)
s__Monster_6baseColorId = __jarray(0)
s__Monster_7baseColorId = __jarray(0)
s__Monster_8baseColorId = __jarray(0)
s__Monster_9baseColorId = __jarray(0)
s__Monster_10baseColorId = __jarray(0)
s__Monster_11baseColorId = __jarray(0)
s__Monster_12baseColorId = __jarray(0)
s__Monster_13baseColorId = __jarray(0)
s__Monster_baseColorId = __jarray(0)
s__Monster_2vcRed = __jarray(0.0)
s__Monster_3vcRed = __jarray(0.0)
s__Monster_4vcRed = __jarray(0.0)
s__Monster_5vcRed = __jarray(0.0)
s__Monster_6vcRed = __jarray(0.0)
s__Monster_7vcRed = __jarray(0.0)
s__Monster_8vcRed = __jarray(0.0)
s__Monster_9vcRed = __jarray(0.0)
s__Monster_10vcRed = __jarray(0.0)
s__Monster_11vcRed = __jarray(0.0)
s__Monster_12vcRed = __jarray(0.0)
s__Monster_13vcRed = __jarray(0.0)
s__Monster_vcRed = __jarray(0.0)
s__Monster_2vcGreen = __jarray(0.0)
s__Monster_3vcGreen = __jarray(0.0)
s__Monster_4vcGreen = __jarray(0.0)
s__Monster_5vcGreen = __jarray(0.0)
s__Monster_6vcGreen = __jarray(0.0)
s__Monster_7vcGreen = __jarray(0.0)
s__Monster_8vcGreen = __jarray(0.0)
s__Monster_9vcGreen = __jarray(0.0)
s__Monster_10vcGreen = __jarray(0.0)
s__Monster_11vcGreen = __jarray(0.0)
s__Monster_12vcGreen = __jarray(0.0)
s__Monster_13vcGreen = __jarray(0.0)
s__Monster_vcGreen = __jarray(0.0)
s__Monster_2vcBlue = __jarray(0.0)
s__Monster_3vcBlue = __jarray(0.0)
s__Monster_4vcBlue = __jarray(0.0)
s__Monster_5vcBlue = __jarray(0.0)
s__Monster_6vcBlue = __jarray(0.0)
s__Monster_7vcBlue = __jarray(0.0)
s__Monster_8vcBlue = __jarray(0.0)
s__Monster_9vcBlue = __jarray(0.0)
s__Monster_10vcBlue = __jarray(0.0)
s__Monster_11vcBlue = __jarray(0.0)
s__Monster_12vcBlue = __jarray(0.0)
s__Monster_13vcBlue = __jarray(0.0)
s__Monster_vcBlue = __jarray(0.0)
s__Monster_2vcTransparency = __jarray(0.0)
s__Monster_3vcTransparency = __jarray(0.0)
s__Monster_4vcTransparency = __jarray(0.0)
s__Monster_5vcTransparency = __jarray(0.0)
s__Monster_6vcTransparency = __jarray(0.0)
s__Monster_7vcTransparency = __jarray(0.0)
s__Monster_8vcTransparency = __jarray(0.0)
s__Monster_9vcTransparency = __jarray(0.0)
s__Monster_10vcTransparency = __jarray(0.0)
s__Monster_11vcTransparency = __jarray(0.0)
s__Monster_12vcTransparency = __jarray(0.0)
s__Monster_13vcTransparency = __jarray(0.0)
s__Monster_vcTransparency = __jarray(0.0)
st__Monster_getId = {}
st__Monster_createUnit = {}
st__Monster_removeUnit = {}
st__Monster_killUnit = {}
st__Monster_getMonsterType = {}
st__Monster_setMonsterType = {}
st__Monster_toString = {}
st__Monster_getLife = {}
st__Monster_setLife = {}
st__Monster_temporarilyDisable = {}
st__Monster_temporarilyEnable = {}
st__Monster_setBaseColor = {}
st__Monster_setVertexColor = {}
st__Monster_reinitColor = {}
si__TerrainTypeArray = 61
si__TerrainTypeArray_F = 0
si__TerrainTypeArray_I = 0
si__TerrainTypeArray_V = __jarray(0)
s___TerrainTypeArray_ttWalk = __jarray(0)
s___TerrainTypeArray_ttWalk_size = 177
s__TerrainTypeArray_ttWalk = __jarray(0)
s___TerrainTypeArray_ttDeath = __jarray(0)
s___TerrainTypeArray_ttDeath_size = 177
s__TerrainTypeArray_ttDeath = __jarray(0)
s___TerrainTypeArray_ttSlide = __jarray(0)
s___TerrainTypeArray_ttSlide_size = 177
s__TerrainTypeArray_ttSlide = __jarray(0)
s__TerrainTypeArray_numberOfWalk = __jarray(0)
s__TerrainTypeArray_numberOfDeath = __jarray(0)
s__TerrainTypeArray_numberOfSlide = __jarray(0)
s__TerrainTypeArray_mainTileset = __jarray("")
si__ClearMob = 65
si__ClearMob_F = 0
si__ClearMob_I = 0
si__ClearMob_V = __jarray(0)
s__ClearMob_level = __jarray(0)
s__ClearMob_arrayId = __jarray(0)
s__ClearMob_triggerMob = __jarray(0)
s__ClearMob_blockMobs = __jarray(0)
s__ClearMob_disableDuration = __jarray(0.0)
s__ClearMob_timerActivated = {}
s__ClearMob_timerFrontMontant = {}
s__ClearMob_enabled = __jarray(false)
s__ClearMob_triggerMobPermanentEffect = {}
si__LevelArray = 66
si__LevelArray_F = 0
si__LevelArray_I = 0
si__LevelArray_V = __jarray(0)
s___LevelArray_levels = __jarray(0)
s___LevelArray_levels_size = 50
s__LevelArray_levels = __jarray(0)
s__LevelArray_currentLevel = __jarray(0)
s__LevelArray_lastInstance = __jarray(0)
si__MakeCaster = 68
s__MakeCaster_casterType = __jarray(0)
s__MakeCaster_angle = __jarray(0.0)
si__MakeDeleteCasters = 69
s__MakeDeleteCasters_lastX = __jarray(0.0)
s__MakeDeleteCasters_lastY = __jarray(0.0)
s__MakeDeleteCasters_lastLocIsSaved = __jarray(false)
s__MakeDeleteCasters_lastLocSavedIsUsed = __jarray(false)
s__MakeDeleteCasters_unitLastClic = {}
s__MakeDeleteCasters_mode = __jarray("")
si__MakeDeleteMeteors = 70
s__MakeDeleteMeteors_lastX = __jarray(0.0)
s__MakeDeleteMeteors_lastY = __jarray(0.0)
s__MakeDeleteMeteors_lastLocIsSaved = __jarray(false)
s__MakeDeleteMeteors_lastLocSavedIsUsed = __jarray(false)
s__MakeDeleteMeteors_unitLastClic = {}
s__MakeDeleteMeteors_mode = __jarray("")
si__MakeDeleteMonsters = 71
s__MakeDeleteMonsters_lastX = __jarray(0.0)
s__MakeDeleteMonsters_lastY = __jarray(0.0)
s__MakeDeleteMonsters_lastLocIsSaved = __jarray(false)
s__MakeDeleteMonsters_lastLocSavedIsUsed = __jarray(false)
s__MakeDeleteMonsters_unitLastClic = {}
s__MakeDeleteMonsters_mode = __jarray("")
si__MakeEnd = 72
s__MakeEnd_lastX = __jarray(0.0)
s__MakeEnd_lastY = __jarray(0.0)
s__MakeEnd_unitLastClic = {}
s__MakeEnd_lastLocIsSaved = __jarray(false)
s__MakeEnd_lastLocSavedIsUsed = __jarray(false)
si__MakeExchangeTerrains = 73
s__MakeExchangeTerrains_lastX = __jarray(0.0)
s__MakeExchangeTerrains_lastY = __jarray(0.0)
s__MakeExchangeTerrains_lastLocIsSaved = __jarray(false)
s__MakeExchangeTerrains_lastLocSavedIsUsed = __jarray(false)
s__MakeExchangeTerrains_unitLastClic = {}
si__MakeGetTerrainType = 74
si__MakeGetUnitTeleportPeriod = 75
si__MakeMeteor = 76
si__MakeMonsterMultiplePatrols = 77
s__MakeMonsterMultiplePatrols_mt = __jarray(0)
s__MakeMonsterMultiplePatrols_mode = __jarray("")
s___MakeMonsterMultiplePatrols_lastX = __jarray(0.0)
s___MakeMonsterMultiplePatrols_lastX_size = 20
s__MakeMonsterMultiplePatrols_lastX = __jarray(0)
si__MakeMonsterMultiplePatrols_arrI = 0
si__MakeMonsterMultiplePatrols_arrN = 0
si__MakeMonsterMultiplePatrols_arr = __jarray(0)
si__MakeMonsterMultiplePatrols_arrV = __jarray(0)
s___MakeMonsterMultiplePatrols_lastY = __jarray(0.0)
s___MakeMonsterMultiplePatrols_lastY_size = 20
s__MakeMonsterMultiplePatrols_lastY = __jarray(0)
s__MakeMonsterMultiplePatrols_lastLocId = __jarray(0)
s__MakeMonsterMultiplePatrols_locPointeur = __jarray(0)
s__MakeMonsterMultiplePatrols_unitLastClic = {}
s__MakeMonsterMultiplePatrols_monster = __jarray(0)
si__MakeMonsterNoMove = 80
s__MakeMonsterNoMove_mt = __jarray(0)
s__MakeMonsterNoMove_facingAngle = __jarray(0.0)
si__MakeMonsterSimplePatrol = 81
s__MakeMonsterSimplePatrol_mode = __jarray("")
s__MakeMonsterSimplePatrol_mt = __jarray(0)
s__MakeMonsterSimplePatrol_lastX = __jarray(0.0)
s__MakeMonsterSimplePatrol_lastY = __jarray(0.0)
s__MakeMonsterSimplePatrol_lastLocIsSaved = __jarray(false)
s__MakeMonsterSimplePatrol_lastLocSavedIsUsed = __jarray(false)
s__MakeMonsterSimplePatrol_unitLastClic = {}
si__MakeMonsterSpawn = 82
s__MakeMonsterSpawn_lastX = __jarray(0.0)
s__MakeMonsterSpawn_lastY = __jarray(0.0)
s__MakeMonsterSpawn_unitLastClic = {}
s__MakeMonsterSpawn_lastLocIsSaved = __jarray(false)
s__MakeMonsterSpawn_lastLocSavedIsUsed = __jarray(false)
s__MakeMonsterSpawn_label = __jarray("")
s__MakeMonsterSpawn_mt = __jarray(0)
s__MakeMonsterSpawn_sens = __jarray("")
s__MakeMonsterSpawn_frequence = __jarray(0.0)
si__MakeMonsterTeleport = 83
s__MakeMonsterTeleport_mt = __jarray(0)
s__MakeMonsterTeleport_period = __jarray(0.0)
s__MakeMonsterTeleport_angle = __jarray(0.0)
s__MakeMonsterTeleport_mode = __jarray("")
s___MakeMonsterTeleport_lastX = __jarray(0.0)
s___MakeMonsterTeleport_lastX_size = 20
s__MakeMonsterTeleport_lastX = __jarray(0)
si__MakeMonsterTeleport_arrI = 0
si__MakeMonsterTeleport_arrN = 0
si__MakeMonsterTeleport_arr = __jarray(0)
si__MakeMonsterTeleport_arrV = __jarray(0)
s___MakeMonsterTeleport_lastY = __jarray(0.0)
s___MakeMonsterTeleport_lastY_size = 20
s__MakeMonsterTeleport_lastY = __jarray(0)
s__MakeMonsterTeleport_lastLocId = __jarray(0)
s__MakeMonsterTeleport_locPointeur = __jarray(0)
s__MakeMonsterTeleport_unitLastClic = {}
s__MakeMonsterTeleport_monster = __jarray(0)
si__MakeSetUnitMonsterType = 86
s__MakeSetUnitMonsterType_lastX = __jarray(0.0)
s__MakeSetUnitMonsterType_lastY = __jarray(0.0)
s__MakeSetUnitMonsterType_lastLocIsSaved = __jarray(false)
s__MakeSetUnitMonsterType_lastLocSavedIsUsed = __jarray(false)
s__MakeSetUnitMonsterType_unitLastClic = {}
s__MakeSetUnitMonsterType_mode = __jarray("")
s__MakeSetUnitMonsterType_mt = __jarray(0)
si__MakeSetUnitTeleportPeriod = 87
s__MakeSetUnitTeleportPeriod_lastX = __jarray(0.0)
s__MakeSetUnitTeleportPeriod_lastY = __jarray(0.0)
s__MakeSetUnitTeleportPeriod_lastLocIsSaved = __jarray(false)
s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed = __jarray(false)
s__MakeSetUnitTeleportPeriod_unitLastClic = {}
s__MakeSetUnitTeleportPeriod_mode = __jarray("")
s__MakeSetUnitTeleportPeriod_period = __jarray(0.0)
si__MakeStart = 88
s__MakeStart_lastX = __jarray(0.0)
s__MakeStart_lastY = __jarray(0.0)
s__MakeStart_unitLastClic = {}
s__MakeStart_lastLocIsSaved = __jarray(false)
s__MakeStart_lastLocSavedIsUsed = __jarray(false)
s__MakeStart_forNextB = __jarray(false)
si__MakeTerrainCopyPaste = 89
s__MakeTerrainCopyPaste_x1 = __jarray(0.0)
s__MakeTerrainCopyPaste_y1 = __jarray(0.0)
s__MakeTerrainCopyPaste_x2 = __jarray(0.0)
s__MakeTerrainCopyPaste_y2 = __jarray(0.0)
s__MakeTerrainCopyPaste_x3 = __jarray(0.0)
s__MakeTerrainCopyPaste_y3 = __jarray(0.0)
s__MakeTerrainCopyPaste_unitLastClic1 = {}
s__MakeTerrainCopyPaste_unitLastClic2 = {}
s__MakeTerrainCopyPaste_unitLastClic3 = {}
s__MakeTerrainCopyPaste_isPoint1Saved = __jarray(false)
s__MakeTerrainCopyPaste_isPoint2Saved = __jarray(false)
s__MakeTerrainCopyPaste_isPoint3Saved = __jarray(false)
s__MakeTerrainCopyPaste_isPoint1Used = __jarray(false)
s__MakeTerrainCopyPaste_isPoint2Used = __jarray(false)
s__MakeTerrainCopyPaste_isPoint3Used = __jarray(false)
si__MakeTerrainCreate = 90
s__MakeTerrainCreate_lastX = __jarray(0.0)
s__MakeTerrainCreate_lastY = __jarray(0.0)
s__MakeTerrainCreate_lastLocIsSaved = __jarray(false)
s__MakeTerrainCreate_lastLocSavedIsUsed = __jarray(false)
s__MakeTerrainCreate_unitLastClic = {}
s__MakeTerrainCreate_terrainType = __jarray(0)
si__MakeTerrainHeight = 91
s__MakeTerrainHeight_radius = __jarray(0.0)
s__MakeTerrainHeight_height = __jarray(0.0)
si__MakeTerrainHorizontalSymmetry = 92
s__MakeTerrainHorizontalSymmetry_lastX = __jarray(0.0)
s__MakeTerrainHorizontalSymmetry_lastY = __jarray(0.0)
s__MakeTerrainHorizontalSymmetry_lastLocIsSaved = __jarray(false)
s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed = __jarray(false)
s__MakeTerrainHorizontalSymmetry_unitLastClic = {}
si__MakeTerrainVerticalSymmetry = 93
s__MakeTerrainVerticalSymmetry_lastX = __jarray(0.0)
s__MakeTerrainVerticalSymmetry_lastY = __jarray(0.0)
s__MakeTerrainVerticalSymmetry_lastLocIsSaved = __jarray(false)
s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed = __jarray(false)
s__MakeTerrainVerticalSymmetry_unitLastClic = {}
si__MakeVisibilityModifier = 94
s__MakeVisibilityModifier_lastX = __jarray(0.0)
s__MakeVisibilityModifier_lastY = __jarray(0.0)
s__MakeVisibilityModifier_unitLastClic = {}
s__MakeVisibilityModifier_lastLocIsSaved = __jarray(false)
s__MakeVisibilityModifier_lastLocSavedIsUsed = __jarray(false)
si__MonsterMultiplePatrols = 95
s__MonsterMultiplePatrols_NB_MAX_LOC = 20
s__MonsterMultiplePatrols_nbInstances = 0
s__MonsterMultiplePatrols_staticLastLocInd = -1
s__MonsterMultiplePatrols_2id = __jarray(0)
s__MonsterMultiplePatrols_3id = __jarray(0)
s__MonsterMultiplePatrols_4id = __jarray(0)
s__MonsterMultiplePatrols_5id = __jarray(0)
s__MonsterMultiplePatrols_6id = __jarray(0)
s__MonsterMultiplePatrols_7id = __jarray(0)
s__MonsterMultiplePatrols_8id = __jarray(0)
s__MonsterMultiplePatrols_9id = __jarray(0)
s__MonsterMultiplePatrols_10id = __jarray(0)
s__MonsterMultiplePatrols_11id = __jarray(0)
s__MonsterMultiplePatrols_12id = __jarray(0)
s__MonsterMultiplePatrols_13id = __jarray(0)
s__MonsterMultiplePatrols_id = __jarray(0)
s__MonsterMultiplePatrols_2u = {}
s__MonsterMultiplePatrols_3u = {}
s__MonsterMultiplePatrols_4u = {}
s__MonsterMultiplePatrols_5u = {}
s__MonsterMultiplePatrols_6u = {}
s__MonsterMultiplePatrols_7u = {}
s__MonsterMultiplePatrols_8u = {}
s__MonsterMultiplePatrols_9u = {}
s__MonsterMultiplePatrols_10u = {}
s__MonsterMultiplePatrols_11u = {}
s__MonsterMultiplePatrols_12u = {}
s__MonsterMultiplePatrols_13u = {}
s__MonsterMultiplePatrols_u = {}
s__MonsterMultiplePatrols_2mt = __jarray(0)
s__MonsterMultiplePatrols_3mt = __jarray(0)
s__MonsterMultiplePatrols_4mt = __jarray(0)
s__MonsterMultiplePatrols_5mt = __jarray(0)
s__MonsterMultiplePatrols_6mt = __jarray(0)
s__MonsterMultiplePatrols_7mt = __jarray(0)
s__MonsterMultiplePatrols_8mt = __jarray(0)
s__MonsterMultiplePatrols_9mt = __jarray(0)
s__MonsterMultiplePatrols_10mt = __jarray(0)
s__MonsterMultiplePatrols_11mt = __jarray(0)
s__MonsterMultiplePatrols_12mt = __jarray(0)
s__MonsterMultiplePatrols_13mt = __jarray(0)
s__MonsterMultiplePatrols_mt = __jarray(0)
s__MonsterMultiplePatrols_2disablingTimer = {}
s__MonsterMultiplePatrols_3disablingTimer = {}
s__MonsterMultiplePatrols_4disablingTimer = {}
s__MonsterMultiplePatrols_5disablingTimer = {}
s__MonsterMultiplePatrols_6disablingTimer = {}
s__MonsterMultiplePatrols_7disablingTimer = {}
s__MonsterMultiplePatrols_8disablingTimer = {}
s__MonsterMultiplePatrols_9disablingTimer = {}
s__MonsterMultiplePatrols_10disablingTimer = {}
s__MonsterMultiplePatrols_11disablingTimer = {}
s__MonsterMultiplePatrols_12disablingTimer = {}
s__MonsterMultiplePatrols_13disablingTimer = {}
s__MonsterMultiplePatrols_disablingTimer = {}
s__MonsterMultiplePatrols_2baseColorId = __jarray(0)
s__MonsterMultiplePatrols_3baseColorId = __jarray(0)
s__MonsterMultiplePatrols_4baseColorId = __jarray(0)
s__MonsterMultiplePatrols_5baseColorId = __jarray(0)
s__MonsterMultiplePatrols_6baseColorId = __jarray(0)
s__MonsterMultiplePatrols_7baseColorId = __jarray(0)
s__MonsterMultiplePatrols_8baseColorId = __jarray(0)
s__MonsterMultiplePatrols_9baseColorId = __jarray(0)
s__MonsterMultiplePatrols_10baseColorId = __jarray(0)
s__MonsterMultiplePatrols_11baseColorId = __jarray(0)
s__MonsterMultiplePatrols_12baseColorId = __jarray(0)
s__MonsterMultiplePatrols_13baseColorId = __jarray(0)
s__MonsterMultiplePatrols_baseColorId = __jarray(0)
s__MonsterMultiplePatrols_2vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_3vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_4vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_5vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_6vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_7vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_8vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_9vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_10vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_11vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_12vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_13vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_vcRed = __jarray(0.0)
s__MonsterMultiplePatrols_2vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_3vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_4vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_5vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_6vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_7vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_8vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_9vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_10vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_11vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_12vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_13vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_vcGreen = __jarray(0.0)
s__MonsterMultiplePatrols_2vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_3vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_4vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_5vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_6vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_7vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_8vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_9vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_10vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_11vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_12vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_13vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_vcBlue = __jarray(0.0)
s__MonsterMultiplePatrols_2vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_3vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_4vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_5vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_6vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_7vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_8vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_9vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_10vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_11vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_12vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_13vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_vcTransparency = __jarray(0.0)
s__MonsterMultiplePatrols_2lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_3lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_4lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_5lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_6lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_7lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_8lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_9lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_10lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_11lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_12lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_13lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_lastLocInd = __jarray(0)
s__MonsterMultiplePatrols_2currentMove = __jarray(0)
s__MonsterMultiplePatrols_3currentMove = __jarray(0)
s__MonsterMultiplePatrols_4currentMove = __jarray(0)
s__MonsterMultiplePatrols_5currentMove = __jarray(0)
s__MonsterMultiplePatrols_6currentMove = __jarray(0)
s__MonsterMultiplePatrols_7currentMove = __jarray(0)
s__MonsterMultiplePatrols_8currentMove = __jarray(0)
s__MonsterMultiplePatrols_9currentMove = __jarray(0)
s__MonsterMultiplePatrols_10currentMove = __jarray(0)
s__MonsterMultiplePatrols_11currentMove = __jarray(0)
s__MonsterMultiplePatrols_12currentMove = __jarray(0)
s__MonsterMultiplePatrols_13currentMove = __jarray(0)
s__MonsterMultiplePatrols_currentMove = __jarray(0)
s__MonsterMultiplePatrols_2sens = __jarray(0)
s__MonsterMultiplePatrols_3sens = __jarray(0)
s__MonsterMultiplePatrols_4sens = __jarray(0)
s__MonsterMultiplePatrols_5sens = __jarray(0)
s__MonsterMultiplePatrols_6sens = __jarray(0)
s__MonsterMultiplePatrols_7sens = __jarray(0)
s__MonsterMultiplePatrols_8sens = __jarray(0)
s__MonsterMultiplePatrols_9sens = __jarray(0)
s__MonsterMultiplePatrols_10sens = __jarray(0)
s__MonsterMultiplePatrols_11sens = __jarray(0)
s__MonsterMultiplePatrols_12sens = __jarray(0)
s__MonsterMultiplePatrols_13sens = __jarray(0)
s__MonsterMultiplePatrols_sens = __jarray(0)
s__MonsterMultiplePatrols_2x0 = __jarray(0.0)
s__MonsterMultiplePatrols_3x0 = __jarray(0.0)
s__MonsterMultiplePatrols_4x0 = __jarray(0.0)
s__MonsterMultiplePatrols_5x0 = __jarray(0.0)
s__MonsterMultiplePatrols_6x0 = __jarray(0.0)
s__MonsterMultiplePatrols_7x0 = __jarray(0.0)
s__MonsterMultiplePatrols_8x0 = __jarray(0.0)
s__MonsterMultiplePatrols_9x0 = __jarray(0.0)
s__MonsterMultiplePatrols_10x0 = __jarray(0.0)
s__MonsterMultiplePatrols_11x0 = __jarray(0.0)
s__MonsterMultiplePatrols_12x0 = __jarray(0.0)
s__MonsterMultiplePatrols_13x0 = __jarray(0.0)
s__MonsterMultiplePatrols_x0 = __jarray(0.0)
s__MonsterMultiplePatrols_2y0 = __jarray(0.0)
s__MonsterMultiplePatrols_3y0 = __jarray(0.0)
s__MonsterMultiplePatrols_4y0 = __jarray(0.0)
s__MonsterMultiplePatrols_5y0 = __jarray(0.0)
s__MonsterMultiplePatrols_6y0 = __jarray(0.0)
s__MonsterMultiplePatrols_7y0 = __jarray(0.0)
s__MonsterMultiplePatrols_8y0 = __jarray(0.0)
s__MonsterMultiplePatrols_9y0 = __jarray(0.0)
s__MonsterMultiplePatrols_10y0 = __jarray(0.0)
s__MonsterMultiplePatrols_11y0 = __jarray(0.0)
s__MonsterMultiplePatrols_12y0 = __jarray(0.0)
s__MonsterMultiplePatrols_13y0 = __jarray(0.0)
s__MonsterMultiplePatrols_y0 = __jarray(0.0)
s__MonsterMultiplePatrols_2r0 = {}
s__MonsterMultiplePatrols_3r0 = {}
s__MonsterMultiplePatrols_4r0 = {}
s__MonsterMultiplePatrols_5r0 = {}
s__MonsterMultiplePatrols_6r0 = {}
s__MonsterMultiplePatrols_7r0 = {}
s__MonsterMultiplePatrols_8r0 = {}
s__MonsterMultiplePatrols_9r0 = {}
s__MonsterMultiplePatrols_10r0 = {}
s__MonsterMultiplePatrols_11r0 = {}
s__MonsterMultiplePatrols_12r0 = {}
s__MonsterMultiplePatrols_13r0 = {}
s__MonsterMultiplePatrols_r0 = {}
s__MonsterMultiplePatrols_2t0 = {}
s__MonsterMultiplePatrols_3t0 = {}
s__MonsterMultiplePatrols_4t0 = {}
s__MonsterMultiplePatrols_5t0 = {}
s__MonsterMultiplePatrols_6t0 = {}
s__MonsterMultiplePatrols_7t0 = {}
s__MonsterMultiplePatrols_8t0 = {}
s__MonsterMultiplePatrols_9t0 = {}
s__MonsterMultiplePatrols_10t0 = {}
s__MonsterMultiplePatrols_11t0 = {}
s__MonsterMultiplePatrols_12t0 = {}
s__MonsterMultiplePatrols_13t0 = {}
s__MonsterMultiplePatrols_t0 = {}
s__MonsterMultiplePatrols_2x1 = __jarray(0.0)
s__MonsterMultiplePatrols_3x1 = __jarray(0.0)
s__MonsterMultiplePatrols_4x1 = __jarray(0.0)
s__MonsterMultiplePatrols_5x1 = __jarray(0.0)
s__MonsterMultiplePatrols_6x1 = __jarray(0.0)
s__MonsterMultiplePatrols_7x1 = __jarray(0.0)
s__MonsterMultiplePatrols_8x1 = __jarray(0.0)
s__MonsterMultiplePatrols_9x1 = __jarray(0.0)
s__MonsterMultiplePatrols_10x1 = __jarray(0.0)
s__MonsterMultiplePatrols_11x1 = __jarray(0.0)
s__MonsterMultiplePatrols_12x1 = __jarray(0.0)
s__MonsterMultiplePatrols_13x1 = __jarray(0.0)
s__MonsterMultiplePatrols_x1 = __jarray(0.0)
s__MonsterMultiplePatrols_2y1 = __jarray(0.0)
s__MonsterMultiplePatrols_3y1 = __jarray(0.0)
s__MonsterMultiplePatrols_4y1 = __jarray(0.0)
s__MonsterMultiplePatrols_5y1 = __jarray(0.0)
s__MonsterMultiplePatrols_6y1 = __jarray(0.0)
s__MonsterMultiplePatrols_7y1 = __jarray(0.0)
s__MonsterMultiplePatrols_8y1 = __jarray(0.0)
s__MonsterMultiplePatrols_9y1 = __jarray(0.0)
s__MonsterMultiplePatrols_10y1 = __jarray(0.0)
s__MonsterMultiplePatrols_11y1 = __jarray(0.0)
s__MonsterMultiplePatrols_12y1 = __jarray(0.0)
s__MonsterMultiplePatrols_13y1 = __jarray(0.0)
s__MonsterMultiplePatrols_y1 = __jarray(0.0)
s__MonsterMultiplePatrols_2r1 = {}
s__MonsterMultiplePatrols_3r1 = {}
s__MonsterMultiplePatrols_4r1 = {}
s__MonsterMultiplePatrols_5r1 = {}
s__MonsterMultiplePatrols_6r1 = {}
s__MonsterMultiplePatrols_7r1 = {}
s__MonsterMultiplePatrols_8r1 = {}
s__MonsterMultiplePatrols_9r1 = {}
s__MonsterMultiplePatrols_10r1 = {}
s__MonsterMultiplePatrols_11r1 = {}
s__MonsterMultiplePatrols_12r1 = {}
s__MonsterMultiplePatrols_13r1 = {}
s__MonsterMultiplePatrols_r1 = {}
s__MonsterMultiplePatrols_2t1 = {}
s__MonsterMultiplePatrols_3t1 = {}
s__MonsterMultiplePatrols_4t1 = {}
s__MonsterMultiplePatrols_5t1 = {}
s__MonsterMultiplePatrols_6t1 = {}
s__MonsterMultiplePatrols_7t1 = {}
s__MonsterMultiplePatrols_8t1 = {}
s__MonsterMultiplePatrols_9t1 = {}
s__MonsterMultiplePatrols_10t1 = {}
s__MonsterMultiplePatrols_11t1 = {}
s__MonsterMultiplePatrols_12t1 = {}
s__MonsterMultiplePatrols_13t1 = {}
s__MonsterMultiplePatrols_t1 = {}
s__MonsterMultiplePatrols_2x2 = __jarray(0.0)
s__MonsterMultiplePatrols_3x2 = __jarray(0.0)
s__MonsterMultiplePatrols_4x2 = __jarray(0.0)
s__MonsterMultiplePatrols_5x2 = __jarray(0.0)
s__MonsterMultiplePatrols_6x2 = __jarray(0.0)
s__MonsterMultiplePatrols_7x2 = __jarray(0.0)
s__MonsterMultiplePatrols_8x2 = __jarray(0.0)
s__MonsterMultiplePatrols_9x2 = __jarray(0.0)
s__MonsterMultiplePatrols_10x2 = __jarray(0.0)
s__MonsterMultiplePatrols_11x2 = __jarray(0.0)
s__MonsterMultiplePatrols_12x2 = __jarray(0.0)
s__MonsterMultiplePatrols_13x2 = __jarray(0.0)
s__MonsterMultiplePatrols_x2 = __jarray(0.0)
s__MonsterMultiplePatrols_2y2 = __jarray(0.0)
s__MonsterMultiplePatrols_3y2 = __jarray(0.0)
s__MonsterMultiplePatrols_4y2 = __jarray(0.0)
s__MonsterMultiplePatrols_5y2 = __jarray(0.0)
s__MonsterMultiplePatrols_6y2 = __jarray(0.0)
s__MonsterMultiplePatrols_7y2 = __jarray(0.0)
s__MonsterMultiplePatrols_8y2 = __jarray(0.0)
s__MonsterMultiplePatrols_9y2 = __jarray(0.0)
s__MonsterMultiplePatrols_10y2 = __jarray(0.0)
s__MonsterMultiplePatrols_11y2 = __jarray(0.0)
s__MonsterMultiplePatrols_12y2 = __jarray(0.0)
s__MonsterMultiplePatrols_13y2 = __jarray(0.0)
s__MonsterMultiplePatrols_y2 = __jarray(0.0)
s__MonsterMultiplePatrols_2r2 = {}
s__MonsterMultiplePatrols_3r2 = {}
s__MonsterMultiplePatrols_4r2 = {}
s__MonsterMultiplePatrols_5r2 = {}
s__MonsterMultiplePatrols_6r2 = {}
s__MonsterMultiplePatrols_7r2 = {}
s__MonsterMultiplePatrols_8r2 = {}
s__MonsterMultiplePatrols_9r2 = {}
s__MonsterMultiplePatrols_10r2 = {}
s__MonsterMultiplePatrols_11r2 = {}
s__MonsterMultiplePatrols_12r2 = {}
s__MonsterMultiplePatrols_13r2 = {}
s__MonsterMultiplePatrols_r2 = {}
s__MonsterMultiplePatrols_2t2 = {}
s__MonsterMultiplePatrols_3t2 = {}
s__MonsterMultiplePatrols_4t2 = {}
s__MonsterMultiplePatrols_5t2 = {}
s__MonsterMultiplePatrols_6t2 = {}
s__MonsterMultiplePatrols_7t2 = {}
s__MonsterMultiplePatrols_8t2 = {}
s__MonsterMultiplePatrols_9t2 = {}
s__MonsterMultiplePatrols_10t2 = {}
s__MonsterMultiplePatrols_11t2 = {}
s__MonsterMultiplePatrols_12t2 = {}
s__MonsterMultiplePatrols_13t2 = {}
s__MonsterMultiplePatrols_t2 = {}
s__MonsterMultiplePatrols_2x3 = __jarray(0.0)
s__MonsterMultiplePatrols_3x3 = __jarray(0.0)
s__MonsterMultiplePatrols_4x3 = __jarray(0.0)
s__MonsterMultiplePatrols_5x3 = __jarray(0.0)
s__MonsterMultiplePatrols_6x3 = __jarray(0.0)
s__MonsterMultiplePatrols_7x3 = __jarray(0.0)
s__MonsterMultiplePatrols_8x3 = __jarray(0.0)
s__MonsterMultiplePatrols_9x3 = __jarray(0.0)
s__MonsterMultiplePatrols_10x3 = __jarray(0.0)
s__MonsterMultiplePatrols_11x3 = __jarray(0.0)
s__MonsterMultiplePatrols_12x3 = __jarray(0.0)
s__MonsterMultiplePatrols_13x3 = __jarray(0.0)
s__MonsterMultiplePatrols_x3 = __jarray(0.0)
s__MonsterMultiplePatrols_2y3 = __jarray(0.0)
s__MonsterMultiplePatrols_3y3 = __jarray(0.0)
s__MonsterMultiplePatrols_4y3 = __jarray(0.0)
s__MonsterMultiplePatrols_5y3 = __jarray(0.0)
s__MonsterMultiplePatrols_6y3 = __jarray(0.0)
s__MonsterMultiplePatrols_7y3 = __jarray(0.0)
s__MonsterMultiplePatrols_8y3 = __jarray(0.0)
s__MonsterMultiplePatrols_9y3 = __jarray(0.0)
s__MonsterMultiplePatrols_10y3 = __jarray(0.0)
s__MonsterMultiplePatrols_11y3 = __jarray(0.0)
s__MonsterMultiplePatrols_12y3 = __jarray(0.0)
s__MonsterMultiplePatrols_13y3 = __jarray(0.0)
s__MonsterMultiplePatrols_y3 = __jarray(0.0)
s__MonsterMultiplePatrols_2r3 = {}
s__MonsterMultiplePatrols_3r3 = {}
s__MonsterMultiplePatrols_4r3 = {}
s__MonsterMultiplePatrols_5r3 = {}
s__MonsterMultiplePatrols_6r3 = {}
s__MonsterMultiplePatrols_7r3 = {}
s__MonsterMultiplePatrols_8r3 = {}
s__MonsterMultiplePatrols_9r3 = {}
s__MonsterMultiplePatrols_10r3 = {}
s__MonsterMultiplePatrols_11r3 = {}
s__MonsterMultiplePatrols_12r3 = {}
s__MonsterMultiplePatrols_13r3 = {}
s__MonsterMultiplePatrols_r3 = {}
s__MonsterMultiplePatrols_2t3 = {}
s__MonsterMultiplePatrols_3t3 = {}
s__MonsterMultiplePatrols_4t3 = {}
s__MonsterMultiplePatrols_5t3 = {}
s__MonsterMultiplePatrols_6t3 = {}
s__MonsterMultiplePatrols_7t3 = {}
s__MonsterMultiplePatrols_8t3 = {}
s__MonsterMultiplePatrols_9t3 = {}
s__MonsterMultiplePatrols_10t3 = {}
s__MonsterMultiplePatrols_11t3 = {}
s__MonsterMultiplePatrols_12t3 = {}
s__MonsterMultiplePatrols_13t3 = {}
s__MonsterMultiplePatrols_t3 = {}
s__MonsterMultiplePatrols_2x4 = __jarray(0.0)
s__MonsterMultiplePatrols_3x4 = __jarray(0.0)
s__MonsterMultiplePatrols_4x4 = __jarray(0.0)
s__MonsterMultiplePatrols_5x4 = __jarray(0.0)
s__MonsterMultiplePatrols_6x4 = __jarray(0.0)
s__MonsterMultiplePatrols_7x4 = __jarray(0.0)
s__MonsterMultiplePatrols_8x4 = __jarray(0.0)
s__MonsterMultiplePatrols_9x4 = __jarray(0.0)
s__MonsterMultiplePatrols_10x4 = __jarray(0.0)
s__MonsterMultiplePatrols_11x4 = __jarray(0.0)
s__MonsterMultiplePatrols_12x4 = __jarray(0.0)
s__MonsterMultiplePatrols_13x4 = __jarray(0.0)
s__MonsterMultiplePatrols_x4 = __jarray(0.0)
s__MonsterMultiplePatrols_2y4 = __jarray(0.0)
s__MonsterMultiplePatrols_3y4 = __jarray(0.0)
s__MonsterMultiplePatrols_4y4 = __jarray(0.0)
s__MonsterMultiplePatrols_5y4 = __jarray(0.0)
s__MonsterMultiplePatrols_6y4 = __jarray(0.0)
s__MonsterMultiplePatrols_7y4 = __jarray(0.0)
s__MonsterMultiplePatrols_8y4 = __jarray(0.0)
s__MonsterMultiplePatrols_9y4 = __jarray(0.0)
s__MonsterMultiplePatrols_10y4 = __jarray(0.0)
s__MonsterMultiplePatrols_11y4 = __jarray(0.0)
s__MonsterMultiplePatrols_12y4 = __jarray(0.0)
s__MonsterMultiplePatrols_13y4 = __jarray(0.0)
s__MonsterMultiplePatrols_y4 = __jarray(0.0)
s__MonsterMultiplePatrols_2r4 = {}
s__MonsterMultiplePatrols_3r4 = {}
s__MonsterMultiplePatrols_4r4 = {}
s__MonsterMultiplePatrols_5r4 = {}
s__MonsterMultiplePatrols_6r4 = {}
s__MonsterMultiplePatrols_7r4 = {}
s__MonsterMultiplePatrols_8r4 = {}
s__MonsterMultiplePatrols_9r4 = {}
s__MonsterMultiplePatrols_10r4 = {}
s__MonsterMultiplePatrols_11r4 = {}
s__MonsterMultiplePatrols_12r4 = {}
s__MonsterMultiplePatrols_13r4 = {}
s__MonsterMultiplePatrols_r4 = {}
s__MonsterMultiplePatrols_2t4 = {}
s__MonsterMultiplePatrols_3t4 = {}
s__MonsterMultiplePatrols_4t4 = {}
s__MonsterMultiplePatrols_5t4 = {}
s__MonsterMultiplePatrols_6t4 = {}
s__MonsterMultiplePatrols_7t4 = {}
s__MonsterMultiplePatrols_8t4 = {}
s__MonsterMultiplePatrols_9t4 = {}
s__MonsterMultiplePatrols_10t4 = {}
s__MonsterMultiplePatrols_11t4 = {}
s__MonsterMultiplePatrols_12t4 = {}
s__MonsterMultiplePatrols_13t4 = {}
s__MonsterMultiplePatrols_t4 = {}
s__MonsterMultiplePatrols_2x5 = __jarray(0.0)
s__MonsterMultiplePatrols_3x5 = __jarray(0.0)
s__MonsterMultiplePatrols_4x5 = __jarray(0.0)
s__MonsterMultiplePatrols_5x5 = __jarray(0.0)
s__MonsterMultiplePatrols_6x5 = __jarray(0.0)
s__MonsterMultiplePatrols_7x5 = __jarray(0.0)
s__MonsterMultiplePatrols_8x5 = __jarray(0.0)
s__MonsterMultiplePatrols_9x5 = __jarray(0.0)
s__MonsterMultiplePatrols_10x5 = __jarray(0.0)
s__MonsterMultiplePatrols_11x5 = __jarray(0.0)
s__MonsterMultiplePatrols_12x5 = __jarray(0.0)
s__MonsterMultiplePatrols_13x5 = __jarray(0.0)
s__MonsterMultiplePatrols_x5 = __jarray(0.0)
s__MonsterMultiplePatrols_2y5 = __jarray(0.0)
s__MonsterMultiplePatrols_3y5 = __jarray(0.0)
s__MonsterMultiplePatrols_4y5 = __jarray(0.0)
s__MonsterMultiplePatrols_5y5 = __jarray(0.0)
s__MonsterMultiplePatrols_6y5 = __jarray(0.0)
s__MonsterMultiplePatrols_7y5 = __jarray(0.0)
s__MonsterMultiplePatrols_8y5 = __jarray(0.0)
s__MonsterMultiplePatrols_9y5 = __jarray(0.0)
s__MonsterMultiplePatrols_10y5 = __jarray(0.0)
s__MonsterMultiplePatrols_11y5 = __jarray(0.0)
s__MonsterMultiplePatrols_12y5 = __jarray(0.0)
s__MonsterMultiplePatrols_13y5 = __jarray(0.0)
s__MonsterMultiplePatrols_y5 = __jarray(0.0)
s__MonsterMultiplePatrols_2r5 = {}
s__MonsterMultiplePatrols_3r5 = {}
s__MonsterMultiplePatrols_4r5 = {}
s__MonsterMultiplePatrols_5r5 = {}
s__MonsterMultiplePatrols_6r5 = {}
s__MonsterMultiplePatrols_7r5 = {}
s__MonsterMultiplePatrols_8r5 = {}
s__MonsterMultiplePatrols_9r5 = {}
s__MonsterMultiplePatrols_10r5 = {}
s__MonsterMultiplePatrols_11r5 = {}
s__MonsterMultiplePatrols_12r5 = {}
s__MonsterMultiplePatrols_13r5 = {}
s__MonsterMultiplePatrols_r5 = {}
s__MonsterMultiplePatrols_2t5 = {}
s__MonsterMultiplePatrols_3t5 = {}
s__MonsterMultiplePatrols_4t5 = {}
s__MonsterMultiplePatrols_5t5 = {}
s__MonsterMultiplePatrols_6t5 = {}
s__MonsterMultiplePatrols_7t5 = {}
s__MonsterMultiplePatrols_8t5 = {}
s__MonsterMultiplePatrols_9t5 = {}
s__MonsterMultiplePatrols_10t5 = {}
s__MonsterMultiplePatrols_11t5 = {}
s__MonsterMultiplePatrols_12t5 = {}
s__MonsterMultiplePatrols_13t5 = {}
s__MonsterMultiplePatrols_t5 = {}
s__MonsterMultiplePatrols_2x6 = __jarray(0.0)
s__MonsterMultiplePatrols_3x6 = __jarray(0.0)
s__MonsterMultiplePatrols_4x6 = __jarray(0.0)
s__MonsterMultiplePatrols_5x6 = __jarray(0.0)
s__MonsterMultiplePatrols_6x6 = __jarray(0.0)
s__MonsterMultiplePatrols_7x6 = __jarray(0.0)
s__MonsterMultiplePatrols_8x6 = __jarray(0.0)
s__MonsterMultiplePatrols_9x6 = __jarray(0.0)
s__MonsterMultiplePatrols_10x6 = __jarray(0.0)
s__MonsterMultiplePatrols_11x6 = __jarray(0.0)
s__MonsterMultiplePatrols_12x6 = __jarray(0.0)
s__MonsterMultiplePatrols_13x6 = __jarray(0.0)
s__MonsterMultiplePatrols_x6 = __jarray(0.0)
s__MonsterMultiplePatrols_2y6 = __jarray(0.0)
s__MonsterMultiplePatrols_3y6 = __jarray(0.0)
s__MonsterMultiplePatrols_4y6 = __jarray(0.0)
s__MonsterMultiplePatrols_5y6 = __jarray(0.0)
s__MonsterMultiplePatrols_6y6 = __jarray(0.0)
s__MonsterMultiplePatrols_7y6 = __jarray(0.0)
s__MonsterMultiplePatrols_8y6 = __jarray(0.0)
s__MonsterMultiplePatrols_9y6 = __jarray(0.0)
s__MonsterMultiplePatrols_10y6 = __jarray(0.0)
s__MonsterMultiplePatrols_11y6 = __jarray(0.0)
s__MonsterMultiplePatrols_12y6 = __jarray(0.0)
s__MonsterMultiplePatrols_13y6 = __jarray(0.0)
s__MonsterMultiplePatrols_y6 = __jarray(0.0)
s__MonsterMultiplePatrols_2r6 = {}
s__MonsterMultiplePatrols_3r6 = {}
s__MonsterMultiplePatrols_4r6 = {}
s__MonsterMultiplePatrols_5r6 = {}
s__MonsterMultiplePatrols_6r6 = {}
s__MonsterMultiplePatrols_7r6 = {}
s__MonsterMultiplePatrols_8r6 = {}
s__MonsterMultiplePatrols_9r6 = {}
s__MonsterMultiplePatrols_10r6 = {}
s__MonsterMultiplePatrols_11r6 = {}
s__MonsterMultiplePatrols_12r6 = {}
s__MonsterMultiplePatrols_13r6 = {}
s__MonsterMultiplePatrols_r6 = {}
s__MonsterMultiplePatrols_2t6 = {}
s__MonsterMultiplePatrols_3t6 = {}
s__MonsterMultiplePatrols_4t6 = {}
s__MonsterMultiplePatrols_5t6 = {}
s__MonsterMultiplePatrols_6t6 = {}
s__MonsterMultiplePatrols_7t6 = {}
s__MonsterMultiplePatrols_8t6 = {}
s__MonsterMultiplePatrols_9t6 = {}
s__MonsterMultiplePatrols_10t6 = {}
s__MonsterMultiplePatrols_11t6 = {}
s__MonsterMultiplePatrols_12t6 = {}
s__MonsterMultiplePatrols_13t6 = {}
s__MonsterMultiplePatrols_t6 = {}
s__MonsterMultiplePatrols_2x7 = __jarray(0.0)
s__MonsterMultiplePatrols_3x7 = __jarray(0.0)
s__MonsterMultiplePatrols_4x7 = __jarray(0.0)
s__MonsterMultiplePatrols_5x7 = __jarray(0.0)
s__MonsterMultiplePatrols_6x7 = __jarray(0.0)
s__MonsterMultiplePatrols_7x7 = __jarray(0.0)
s__MonsterMultiplePatrols_8x7 = __jarray(0.0)
s__MonsterMultiplePatrols_9x7 = __jarray(0.0)
s__MonsterMultiplePatrols_10x7 = __jarray(0.0)
s__MonsterMultiplePatrols_11x7 = __jarray(0.0)
s__MonsterMultiplePatrols_12x7 = __jarray(0.0)
s__MonsterMultiplePatrols_13x7 = __jarray(0.0)
s__MonsterMultiplePatrols_x7 = __jarray(0.0)
s__MonsterMultiplePatrols_2y7 = __jarray(0.0)
s__MonsterMultiplePatrols_3y7 = __jarray(0.0)
s__MonsterMultiplePatrols_4y7 = __jarray(0.0)
s__MonsterMultiplePatrols_5y7 = __jarray(0.0)
s__MonsterMultiplePatrols_6y7 = __jarray(0.0)
s__MonsterMultiplePatrols_7y7 = __jarray(0.0)
s__MonsterMultiplePatrols_8y7 = __jarray(0.0)
s__MonsterMultiplePatrols_9y7 = __jarray(0.0)
s__MonsterMultiplePatrols_10y7 = __jarray(0.0)
s__MonsterMultiplePatrols_11y7 = __jarray(0.0)
s__MonsterMultiplePatrols_12y7 = __jarray(0.0)
s__MonsterMultiplePatrols_13y7 = __jarray(0.0)
s__MonsterMultiplePatrols_y7 = __jarray(0.0)
s__MonsterMultiplePatrols_2r7 = {}
s__MonsterMultiplePatrols_3r7 = {}
s__MonsterMultiplePatrols_4r7 = {}
s__MonsterMultiplePatrols_5r7 = {}
s__MonsterMultiplePatrols_6r7 = {}
s__MonsterMultiplePatrols_7r7 = {}
s__MonsterMultiplePatrols_8r7 = {}
s__MonsterMultiplePatrols_9r7 = {}
s__MonsterMultiplePatrols_10r7 = {}
s__MonsterMultiplePatrols_11r7 = {}
s__MonsterMultiplePatrols_12r7 = {}
s__MonsterMultiplePatrols_13r7 = {}
s__MonsterMultiplePatrols_r7 = {}
s__MonsterMultiplePatrols_2t7 = {}
s__MonsterMultiplePatrols_3t7 = {}
s__MonsterMultiplePatrols_4t7 = {}
s__MonsterMultiplePatrols_5t7 = {}
s__MonsterMultiplePatrols_6t7 = {}
s__MonsterMultiplePatrols_7t7 = {}
s__MonsterMultiplePatrols_8t7 = {}
s__MonsterMultiplePatrols_9t7 = {}
s__MonsterMultiplePatrols_10t7 = {}
s__MonsterMultiplePatrols_11t7 = {}
s__MonsterMultiplePatrols_12t7 = {}
s__MonsterMultiplePatrols_13t7 = {}
s__MonsterMultiplePatrols_t7 = {}
s__MonsterMultiplePatrols_2x8 = __jarray(0.0)
s__MonsterMultiplePatrols_3x8 = __jarray(0.0)
s__MonsterMultiplePatrols_4x8 = __jarray(0.0)
s__MonsterMultiplePatrols_5x8 = __jarray(0.0)
s__MonsterMultiplePatrols_6x8 = __jarray(0.0)
s__MonsterMultiplePatrols_7x8 = __jarray(0.0)
s__MonsterMultiplePatrols_8x8 = __jarray(0.0)
s__MonsterMultiplePatrols_9x8 = __jarray(0.0)
s__MonsterMultiplePatrols_10x8 = __jarray(0.0)
s__MonsterMultiplePatrols_11x8 = __jarray(0.0)
s__MonsterMultiplePatrols_12x8 = __jarray(0.0)
s__MonsterMultiplePatrols_13x8 = __jarray(0.0)
s__MonsterMultiplePatrols_x8 = __jarray(0.0)
s__MonsterMultiplePatrols_2y8 = __jarray(0.0)
s__MonsterMultiplePatrols_3y8 = __jarray(0.0)
s__MonsterMultiplePatrols_4y8 = __jarray(0.0)
s__MonsterMultiplePatrols_5y8 = __jarray(0.0)
s__MonsterMultiplePatrols_6y8 = __jarray(0.0)
s__MonsterMultiplePatrols_7y8 = __jarray(0.0)
s__MonsterMultiplePatrols_8y8 = __jarray(0.0)
s__MonsterMultiplePatrols_9y8 = __jarray(0.0)
s__MonsterMultiplePatrols_10y8 = __jarray(0.0)
s__MonsterMultiplePatrols_11y8 = __jarray(0.0)
s__MonsterMultiplePatrols_12y8 = __jarray(0.0)
s__MonsterMultiplePatrols_13y8 = __jarray(0.0)
s__MonsterMultiplePatrols_y8 = __jarray(0.0)
s__MonsterMultiplePatrols_2r8 = {}
s__MonsterMultiplePatrols_3r8 = {}
s__MonsterMultiplePatrols_4r8 = {}
s__MonsterMultiplePatrols_5r8 = {}
s__MonsterMultiplePatrols_6r8 = {}
s__MonsterMultiplePatrols_7r8 = {}
s__MonsterMultiplePatrols_8r8 = {}
s__MonsterMultiplePatrols_9r8 = {}
s__MonsterMultiplePatrols_10r8 = {}
s__MonsterMultiplePatrols_11r8 = {}
s__MonsterMultiplePatrols_12r8 = {}
s__MonsterMultiplePatrols_13r8 = {}
s__MonsterMultiplePatrols_r8 = {}
s__MonsterMultiplePatrols_2t8 = {}
s__MonsterMultiplePatrols_3t8 = {}
s__MonsterMultiplePatrols_4t8 = {}
s__MonsterMultiplePatrols_5t8 = {}
s__MonsterMultiplePatrols_6t8 = {}
s__MonsterMultiplePatrols_7t8 = {}
s__MonsterMultiplePatrols_8t8 = {}
s__MonsterMultiplePatrols_9t8 = {}
s__MonsterMultiplePatrols_10t8 = {}
s__MonsterMultiplePatrols_11t8 = {}
s__MonsterMultiplePatrols_12t8 = {}
s__MonsterMultiplePatrols_13t8 = {}
s__MonsterMultiplePatrols_t8 = {}
s__MonsterMultiplePatrols_2x9 = __jarray(0.0)
s__MonsterMultiplePatrols_3x9 = __jarray(0.0)
s__MonsterMultiplePatrols_4x9 = __jarray(0.0)
s__MonsterMultiplePatrols_5x9 = __jarray(0.0)
s__MonsterMultiplePatrols_6x9 = __jarray(0.0)
s__MonsterMultiplePatrols_7x9 = __jarray(0.0)
s__MonsterMultiplePatrols_8x9 = __jarray(0.0)
s__MonsterMultiplePatrols_9x9 = __jarray(0.0)
s__MonsterMultiplePatrols_10x9 = __jarray(0.0)
s__MonsterMultiplePatrols_11x9 = __jarray(0.0)
s__MonsterMultiplePatrols_12x9 = __jarray(0.0)
s__MonsterMultiplePatrols_13x9 = __jarray(0.0)
s__MonsterMultiplePatrols_x9 = __jarray(0.0)
s__MonsterMultiplePatrols_2y9 = __jarray(0.0)
s__MonsterMultiplePatrols_3y9 = __jarray(0.0)
s__MonsterMultiplePatrols_4y9 = __jarray(0.0)
s__MonsterMultiplePatrols_5y9 = __jarray(0.0)
s__MonsterMultiplePatrols_6y9 = __jarray(0.0)
s__MonsterMultiplePatrols_7y9 = __jarray(0.0)
s__MonsterMultiplePatrols_8y9 = __jarray(0.0)
s__MonsterMultiplePatrols_9y9 = __jarray(0.0)
s__MonsterMultiplePatrols_10y9 = __jarray(0.0)
s__MonsterMultiplePatrols_11y9 = __jarray(0.0)
s__MonsterMultiplePatrols_12y9 = __jarray(0.0)
s__MonsterMultiplePatrols_13y9 = __jarray(0.0)
s__MonsterMultiplePatrols_y9 = __jarray(0.0)
s__MonsterMultiplePatrols_2r9 = {}
s__MonsterMultiplePatrols_3r9 = {}
s__MonsterMultiplePatrols_4r9 = {}
s__MonsterMultiplePatrols_5r9 = {}
s__MonsterMultiplePatrols_6r9 = {}
s__MonsterMultiplePatrols_7r9 = {}
s__MonsterMultiplePatrols_8r9 = {}
s__MonsterMultiplePatrols_9r9 = {}
s__MonsterMultiplePatrols_10r9 = {}
s__MonsterMultiplePatrols_11r9 = {}
s__MonsterMultiplePatrols_12r9 = {}
s__MonsterMultiplePatrols_13r9 = {}
s__MonsterMultiplePatrols_r9 = {}
s__MonsterMultiplePatrols_2t9 = {}
s__MonsterMultiplePatrols_3t9 = {}
s__MonsterMultiplePatrols_4t9 = {}
s__MonsterMultiplePatrols_5t9 = {}
s__MonsterMultiplePatrols_6t9 = {}
s__MonsterMultiplePatrols_7t9 = {}
s__MonsterMultiplePatrols_8t9 = {}
s__MonsterMultiplePatrols_9t9 = {}
s__MonsterMultiplePatrols_10t9 = {}
s__MonsterMultiplePatrols_11t9 = {}
s__MonsterMultiplePatrols_12t9 = {}
s__MonsterMultiplePatrols_13t9 = {}
s__MonsterMultiplePatrols_t9 = {}
s__MonsterMultiplePatrols_2x10 = __jarray(0.0)
s__MonsterMultiplePatrols_3x10 = __jarray(0.0)
s__MonsterMultiplePatrols_4x10 = __jarray(0.0)
s__MonsterMultiplePatrols_5x10 = __jarray(0.0)
s__MonsterMultiplePatrols_6x10 = __jarray(0.0)
s__MonsterMultiplePatrols_7x10 = __jarray(0.0)
s__MonsterMultiplePatrols_8x10 = __jarray(0.0)
s__MonsterMultiplePatrols_9x10 = __jarray(0.0)
s__MonsterMultiplePatrols_10x10 = __jarray(0.0)
s__MonsterMultiplePatrols_11x10 = __jarray(0.0)
s__MonsterMultiplePatrols_12x10 = __jarray(0.0)
s__MonsterMultiplePatrols_13x10 = __jarray(0.0)
s__MonsterMultiplePatrols_x10 = __jarray(0.0)
s__MonsterMultiplePatrols_2y10 = __jarray(0.0)
s__MonsterMultiplePatrols_3y10 = __jarray(0.0)
s__MonsterMultiplePatrols_4y10 = __jarray(0.0)
s__MonsterMultiplePatrols_5y10 = __jarray(0.0)
s__MonsterMultiplePatrols_6y10 = __jarray(0.0)
s__MonsterMultiplePatrols_7y10 = __jarray(0.0)
s__MonsterMultiplePatrols_8y10 = __jarray(0.0)
s__MonsterMultiplePatrols_9y10 = __jarray(0.0)
s__MonsterMultiplePatrols_10y10 = __jarray(0.0)
s__MonsterMultiplePatrols_11y10 = __jarray(0.0)
s__MonsterMultiplePatrols_12y10 = __jarray(0.0)
s__MonsterMultiplePatrols_13y10 = __jarray(0.0)
s__MonsterMultiplePatrols_y10 = __jarray(0.0)
s__MonsterMultiplePatrols_2r10 = {}
s__MonsterMultiplePatrols_3r10 = {}
s__MonsterMultiplePatrols_4r10 = {}
s__MonsterMultiplePatrols_5r10 = {}
s__MonsterMultiplePatrols_6r10 = {}
s__MonsterMultiplePatrols_7r10 = {}
s__MonsterMultiplePatrols_8r10 = {}
s__MonsterMultiplePatrols_9r10 = {}
s__MonsterMultiplePatrols_10r10 = {}
s__MonsterMultiplePatrols_11r10 = {}
s__MonsterMultiplePatrols_12r10 = {}
s__MonsterMultiplePatrols_13r10 = {}
s__MonsterMultiplePatrols_r10 = {}
s__MonsterMultiplePatrols_2t10 = {}
s__MonsterMultiplePatrols_3t10 = {}
s__MonsterMultiplePatrols_4t10 = {}
s__MonsterMultiplePatrols_5t10 = {}
s__MonsterMultiplePatrols_6t10 = {}
s__MonsterMultiplePatrols_7t10 = {}
s__MonsterMultiplePatrols_8t10 = {}
s__MonsterMultiplePatrols_9t10 = {}
s__MonsterMultiplePatrols_10t10 = {}
s__MonsterMultiplePatrols_11t10 = {}
s__MonsterMultiplePatrols_12t10 = {}
s__MonsterMultiplePatrols_13t10 = {}
s__MonsterMultiplePatrols_t10 = {}
s__MonsterMultiplePatrols_2x11 = __jarray(0.0)
s__MonsterMultiplePatrols_3x11 = __jarray(0.0)
s__MonsterMultiplePatrols_4x11 = __jarray(0.0)
s__MonsterMultiplePatrols_5x11 = __jarray(0.0)
s__MonsterMultiplePatrols_6x11 = __jarray(0.0)
s__MonsterMultiplePatrols_7x11 = __jarray(0.0)
s__MonsterMultiplePatrols_8x11 = __jarray(0.0)
s__MonsterMultiplePatrols_9x11 = __jarray(0.0)
s__MonsterMultiplePatrols_10x11 = __jarray(0.0)
s__MonsterMultiplePatrols_11x11 = __jarray(0.0)
s__MonsterMultiplePatrols_12x11 = __jarray(0.0)
s__MonsterMultiplePatrols_13x11 = __jarray(0.0)
s__MonsterMultiplePatrols_x11 = __jarray(0.0)
s__MonsterMultiplePatrols_2y11 = __jarray(0.0)
s__MonsterMultiplePatrols_3y11 = __jarray(0.0)
s__MonsterMultiplePatrols_4y11 = __jarray(0.0)
s__MonsterMultiplePatrols_5y11 = __jarray(0.0)
s__MonsterMultiplePatrols_6y11 = __jarray(0.0)
s__MonsterMultiplePatrols_7y11 = __jarray(0.0)
s__MonsterMultiplePatrols_8y11 = __jarray(0.0)
s__MonsterMultiplePatrols_9y11 = __jarray(0.0)
s__MonsterMultiplePatrols_10y11 = __jarray(0.0)
s__MonsterMultiplePatrols_11y11 = __jarray(0.0)
s__MonsterMultiplePatrols_12y11 = __jarray(0.0)
s__MonsterMultiplePatrols_13y11 = __jarray(0.0)
s__MonsterMultiplePatrols_y11 = __jarray(0.0)
s__MonsterMultiplePatrols_2r11 = {}
s__MonsterMultiplePatrols_3r11 = {}
s__MonsterMultiplePatrols_4r11 = {}
s__MonsterMultiplePatrols_5r11 = {}
s__MonsterMultiplePatrols_6r11 = {}
s__MonsterMultiplePatrols_7r11 = {}
s__MonsterMultiplePatrols_8r11 = {}
s__MonsterMultiplePatrols_9r11 = {}
s__MonsterMultiplePatrols_10r11 = {}
s__MonsterMultiplePatrols_11r11 = {}
s__MonsterMultiplePatrols_12r11 = {}
s__MonsterMultiplePatrols_13r11 = {}
s__MonsterMultiplePatrols_r11 = {}
s__MonsterMultiplePatrols_2t11 = {}
s__MonsterMultiplePatrols_3t11 = {}
s__MonsterMultiplePatrols_4t11 = {}
s__MonsterMultiplePatrols_5t11 = {}
s__MonsterMultiplePatrols_6t11 = {}
s__MonsterMultiplePatrols_7t11 = {}
s__MonsterMultiplePatrols_8t11 = {}
s__MonsterMultiplePatrols_9t11 = {}
s__MonsterMultiplePatrols_10t11 = {}
s__MonsterMultiplePatrols_11t11 = {}
s__MonsterMultiplePatrols_12t11 = {}
s__MonsterMultiplePatrols_13t11 = {}
s__MonsterMultiplePatrols_t11 = {}
s__MonsterMultiplePatrols_2x12 = __jarray(0.0)
s__MonsterMultiplePatrols_3x12 = __jarray(0.0)
s__MonsterMultiplePatrols_4x12 = __jarray(0.0)
s__MonsterMultiplePatrols_5x12 = __jarray(0.0)
s__MonsterMultiplePatrols_6x12 = __jarray(0.0)
s__MonsterMultiplePatrols_7x12 = __jarray(0.0)
s__MonsterMultiplePatrols_8x12 = __jarray(0.0)
s__MonsterMultiplePatrols_9x12 = __jarray(0.0)
s__MonsterMultiplePatrols_10x12 = __jarray(0.0)
s__MonsterMultiplePatrols_11x12 = __jarray(0.0)
s__MonsterMultiplePatrols_12x12 = __jarray(0.0)
s__MonsterMultiplePatrols_13x12 = __jarray(0.0)
s__MonsterMultiplePatrols_x12 = __jarray(0.0)
s__MonsterMultiplePatrols_2y12 = __jarray(0.0)
s__MonsterMultiplePatrols_3y12 = __jarray(0.0)
s__MonsterMultiplePatrols_4y12 = __jarray(0.0)
s__MonsterMultiplePatrols_5y12 = __jarray(0.0)
s__MonsterMultiplePatrols_6y12 = __jarray(0.0)
s__MonsterMultiplePatrols_7y12 = __jarray(0.0)
s__MonsterMultiplePatrols_8y12 = __jarray(0.0)
s__MonsterMultiplePatrols_9y12 = __jarray(0.0)
s__MonsterMultiplePatrols_10y12 = __jarray(0.0)
s__MonsterMultiplePatrols_11y12 = __jarray(0.0)
s__MonsterMultiplePatrols_12y12 = __jarray(0.0)
s__MonsterMultiplePatrols_13y12 = __jarray(0.0)
s__MonsterMultiplePatrols_y12 = __jarray(0.0)
s__MonsterMultiplePatrols_2r12 = {}
s__MonsterMultiplePatrols_3r12 = {}
s__MonsterMultiplePatrols_4r12 = {}
s__MonsterMultiplePatrols_5r12 = {}
s__MonsterMultiplePatrols_6r12 = {}
s__MonsterMultiplePatrols_7r12 = {}
s__MonsterMultiplePatrols_8r12 = {}
s__MonsterMultiplePatrols_9r12 = {}
s__MonsterMultiplePatrols_10r12 = {}
s__MonsterMultiplePatrols_11r12 = {}
s__MonsterMultiplePatrols_12r12 = {}
s__MonsterMultiplePatrols_13r12 = {}
s__MonsterMultiplePatrols_r12 = {}
s__MonsterMultiplePatrols_2t12 = {}
s__MonsterMultiplePatrols_3t12 = {}
s__MonsterMultiplePatrols_4t12 = {}
s__MonsterMultiplePatrols_5t12 = {}
s__MonsterMultiplePatrols_6t12 = {}
s__MonsterMultiplePatrols_7t12 = {}
s__MonsterMultiplePatrols_8t12 = {}
s__MonsterMultiplePatrols_9t12 = {}
s__MonsterMultiplePatrols_10t12 = {}
s__MonsterMultiplePatrols_11t12 = {}
s__MonsterMultiplePatrols_12t12 = {}
s__MonsterMultiplePatrols_13t12 = {}
s__MonsterMultiplePatrols_t12 = {}
s__MonsterMultiplePatrols_2x13 = __jarray(0.0)
s__MonsterMultiplePatrols_3x13 = __jarray(0.0)
s__MonsterMultiplePatrols_4x13 = __jarray(0.0)
s__MonsterMultiplePatrols_5x13 = __jarray(0.0)
s__MonsterMultiplePatrols_6x13 = __jarray(0.0)
s__MonsterMultiplePatrols_7x13 = __jarray(0.0)
s__MonsterMultiplePatrols_8x13 = __jarray(0.0)
s__MonsterMultiplePatrols_9x13 = __jarray(0.0)
s__MonsterMultiplePatrols_10x13 = __jarray(0.0)
s__MonsterMultiplePatrols_11x13 = __jarray(0.0)
s__MonsterMultiplePatrols_12x13 = __jarray(0.0)
s__MonsterMultiplePatrols_13x13 = __jarray(0.0)
s__MonsterMultiplePatrols_x13 = __jarray(0.0)
s__MonsterMultiplePatrols_2y13 = __jarray(0.0)
s__MonsterMultiplePatrols_3y13 = __jarray(0.0)
s__MonsterMultiplePatrols_4y13 = __jarray(0.0)
s__MonsterMultiplePatrols_5y13 = __jarray(0.0)
s__MonsterMultiplePatrols_6y13 = __jarray(0.0)
s__MonsterMultiplePatrols_7y13 = __jarray(0.0)
s__MonsterMultiplePatrols_8y13 = __jarray(0.0)
s__MonsterMultiplePatrols_9y13 = __jarray(0.0)
s__MonsterMultiplePatrols_10y13 = __jarray(0.0)
s__MonsterMultiplePatrols_11y13 = __jarray(0.0)
s__MonsterMultiplePatrols_12y13 = __jarray(0.0)
s__MonsterMultiplePatrols_13y13 = __jarray(0.0)
s__MonsterMultiplePatrols_y13 = __jarray(0.0)
s__MonsterMultiplePatrols_2r13 = {}
s__MonsterMultiplePatrols_3r13 = {}
s__MonsterMultiplePatrols_4r13 = {}
s__MonsterMultiplePatrols_5r13 = {}
s__MonsterMultiplePatrols_6r13 = {}
s__MonsterMultiplePatrols_7r13 = {}
s__MonsterMultiplePatrols_8r13 = {}
s__MonsterMultiplePatrols_9r13 = {}
s__MonsterMultiplePatrols_10r13 = {}
s__MonsterMultiplePatrols_11r13 = {}
s__MonsterMultiplePatrols_12r13 = {}
s__MonsterMultiplePatrols_13r13 = {}
s__MonsterMultiplePatrols_r13 = {}
s__MonsterMultiplePatrols_2t13 = {}
s__MonsterMultiplePatrols_3t13 = {}
s__MonsterMultiplePatrols_4t13 = {}
s__MonsterMultiplePatrols_5t13 = {}
s__MonsterMultiplePatrols_6t13 = {}
s__MonsterMultiplePatrols_7t13 = {}
s__MonsterMultiplePatrols_8t13 = {}
s__MonsterMultiplePatrols_9t13 = {}
s__MonsterMultiplePatrols_10t13 = {}
s__MonsterMultiplePatrols_11t13 = {}
s__MonsterMultiplePatrols_12t13 = {}
s__MonsterMultiplePatrols_13t13 = {}
s__MonsterMultiplePatrols_t13 = {}
s__MonsterMultiplePatrols_2x14 = __jarray(0.0)
s__MonsterMultiplePatrols_3x14 = __jarray(0.0)
s__MonsterMultiplePatrols_4x14 = __jarray(0.0)
s__MonsterMultiplePatrols_5x14 = __jarray(0.0)
s__MonsterMultiplePatrols_6x14 = __jarray(0.0)
s__MonsterMultiplePatrols_7x14 = __jarray(0.0)
s__MonsterMultiplePatrols_8x14 = __jarray(0.0)
s__MonsterMultiplePatrols_9x14 = __jarray(0.0)
s__MonsterMultiplePatrols_10x14 = __jarray(0.0)
s__MonsterMultiplePatrols_11x14 = __jarray(0.0)
s__MonsterMultiplePatrols_12x14 = __jarray(0.0)
s__MonsterMultiplePatrols_13x14 = __jarray(0.0)
s__MonsterMultiplePatrols_x14 = __jarray(0.0)
s__MonsterMultiplePatrols_2y14 = __jarray(0.0)
s__MonsterMultiplePatrols_3y14 = __jarray(0.0)
s__MonsterMultiplePatrols_4y14 = __jarray(0.0)
s__MonsterMultiplePatrols_5y14 = __jarray(0.0)
s__MonsterMultiplePatrols_6y14 = __jarray(0.0)
s__MonsterMultiplePatrols_7y14 = __jarray(0.0)
s__MonsterMultiplePatrols_8y14 = __jarray(0.0)
s__MonsterMultiplePatrols_9y14 = __jarray(0.0)
s__MonsterMultiplePatrols_10y14 = __jarray(0.0)
s__MonsterMultiplePatrols_11y14 = __jarray(0.0)
s__MonsterMultiplePatrols_12y14 = __jarray(0.0)
s__MonsterMultiplePatrols_13y14 = __jarray(0.0)
s__MonsterMultiplePatrols_y14 = __jarray(0.0)
s__MonsterMultiplePatrols_2r14 = {}
s__MonsterMultiplePatrols_3r14 = {}
s__MonsterMultiplePatrols_4r14 = {}
s__MonsterMultiplePatrols_5r14 = {}
s__MonsterMultiplePatrols_6r14 = {}
s__MonsterMultiplePatrols_7r14 = {}
s__MonsterMultiplePatrols_8r14 = {}
s__MonsterMultiplePatrols_9r14 = {}
s__MonsterMultiplePatrols_10r14 = {}
s__MonsterMultiplePatrols_11r14 = {}
s__MonsterMultiplePatrols_12r14 = {}
s__MonsterMultiplePatrols_13r14 = {}
s__MonsterMultiplePatrols_r14 = {}
s__MonsterMultiplePatrols_2t14 = {}
s__MonsterMultiplePatrols_3t14 = {}
s__MonsterMultiplePatrols_4t14 = {}
s__MonsterMultiplePatrols_5t14 = {}
s__MonsterMultiplePatrols_6t14 = {}
s__MonsterMultiplePatrols_7t14 = {}
s__MonsterMultiplePatrols_8t14 = {}
s__MonsterMultiplePatrols_9t14 = {}
s__MonsterMultiplePatrols_10t14 = {}
s__MonsterMultiplePatrols_11t14 = {}
s__MonsterMultiplePatrols_12t14 = {}
s__MonsterMultiplePatrols_13t14 = {}
s__MonsterMultiplePatrols_t14 = {}
s__MonsterMultiplePatrols_2x15 = __jarray(0.0)
s__MonsterMultiplePatrols_3x15 = __jarray(0.0)
s__MonsterMultiplePatrols_4x15 = __jarray(0.0)
s__MonsterMultiplePatrols_5x15 = __jarray(0.0)
s__MonsterMultiplePatrols_6x15 = __jarray(0.0)
s__MonsterMultiplePatrols_7x15 = __jarray(0.0)
s__MonsterMultiplePatrols_8x15 = __jarray(0.0)
s__MonsterMultiplePatrols_9x15 = __jarray(0.0)
s__MonsterMultiplePatrols_10x15 = __jarray(0.0)
s__MonsterMultiplePatrols_11x15 = __jarray(0.0)
s__MonsterMultiplePatrols_12x15 = __jarray(0.0)
s__MonsterMultiplePatrols_13x15 = __jarray(0.0)
s__MonsterMultiplePatrols_x15 = __jarray(0.0)
s__MonsterMultiplePatrols_2y15 = __jarray(0.0)
s__MonsterMultiplePatrols_3y15 = __jarray(0.0)
s__MonsterMultiplePatrols_4y15 = __jarray(0.0)
s__MonsterMultiplePatrols_5y15 = __jarray(0.0)
s__MonsterMultiplePatrols_6y15 = __jarray(0.0)
s__MonsterMultiplePatrols_7y15 = __jarray(0.0)
s__MonsterMultiplePatrols_8y15 = __jarray(0.0)
s__MonsterMultiplePatrols_9y15 = __jarray(0.0)
s__MonsterMultiplePatrols_10y15 = __jarray(0.0)
s__MonsterMultiplePatrols_11y15 = __jarray(0.0)
s__MonsterMultiplePatrols_12y15 = __jarray(0.0)
s__MonsterMultiplePatrols_13y15 = __jarray(0.0)
s__MonsterMultiplePatrols_y15 = __jarray(0.0)
s__MonsterMultiplePatrols_2r15 = {}
s__MonsterMultiplePatrols_3r15 = {}
s__MonsterMultiplePatrols_4r15 = {}
s__MonsterMultiplePatrols_5r15 = {}
s__MonsterMultiplePatrols_6r15 = {}
s__MonsterMultiplePatrols_7r15 = {}
s__MonsterMultiplePatrols_8r15 = {}
s__MonsterMultiplePatrols_9r15 = {}
s__MonsterMultiplePatrols_10r15 = {}
s__MonsterMultiplePatrols_11r15 = {}
s__MonsterMultiplePatrols_12r15 = {}
s__MonsterMultiplePatrols_13r15 = {}
s__MonsterMultiplePatrols_r15 = {}
s__MonsterMultiplePatrols_2t15 = {}
s__MonsterMultiplePatrols_3t15 = {}
s__MonsterMultiplePatrols_4t15 = {}
s__MonsterMultiplePatrols_5t15 = {}
s__MonsterMultiplePatrols_6t15 = {}
s__MonsterMultiplePatrols_7t15 = {}
s__MonsterMultiplePatrols_8t15 = {}
s__MonsterMultiplePatrols_9t15 = {}
s__MonsterMultiplePatrols_10t15 = {}
s__MonsterMultiplePatrols_11t15 = {}
s__MonsterMultiplePatrols_12t15 = {}
s__MonsterMultiplePatrols_13t15 = {}
s__MonsterMultiplePatrols_t15 = {}
s__MonsterMultiplePatrols_2x16 = __jarray(0.0)
s__MonsterMultiplePatrols_3x16 = __jarray(0.0)
s__MonsterMultiplePatrols_4x16 = __jarray(0.0)
s__MonsterMultiplePatrols_5x16 = __jarray(0.0)
s__MonsterMultiplePatrols_6x16 = __jarray(0.0)
s__MonsterMultiplePatrols_7x16 = __jarray(0.0)
s__MonsterMultiplePatrols_8x16 = __jarray(0.0)
s__MonsterMultiplePatrols_9x16 = __jarray(0.0)
s__MonsterMultiplePatrols_10x16 = __jarray(0.0)
s__MonsterMultiplePatrols_11x16 = __jarray(0.0)
s__MonsterMultiplePatrols_12x16 = __jarray(0.0)
s__MonsterMultiplePatrols_13x16 = __jarray(0.0)
s__MonsterMultiplePatrols_x16 = __jarray(0.0)
s__MonsterMultiplePatrols_2y16 = __jarray(0.0)
s__MonsterMultiplePatrols_3y16 = __jarray(0.0)
s__MonsterMultiplePatrols_4y16 = __jarray(0.0)
s__MonsterMultiplePatrols_5y16 = __jarray(0.0)
s__MonsterMultiplePatrols_6y16 = __jarray(0.0)
s__MonsterMultiplePatrols_7y16 = __jarray(0.0)
s__MonsterMultiplePatrols_8y16 = __jarray(0.0)
s__MonsterMultiplePatrols_9y16 = __jarray(0.0)
s__MonsterMultiplePatrols_10y16 = __jarray(0.0)
s__MonsterMultiplePatrols_11y16 = __jarray(0.0)
s__MonsterMultiplePatrols_12y16 = __jarray(0.0)
s__MonsterMultiplePatrols_13y16 = __jarray(0.0)
s__MonsterMultiplePatrols_y16 = __jarray(0.0)
s__MonsterMultiplePatrols_2r16 = {}
s__MonsterMultiplePatrols_3r16 = {}
s__MonsterMultiplePatrols_4r16 = {}
s__MonsterMultiplePatrols_5r16 = {}
s__MonsterMultiplePatrols_6r16 = {}
s__MonsterMultiplePatrols_7r16 = {}
s__MonsterMultiplePatrols_8r16 = {}
s__MonsterMultiplePatrols_9r16 = {}
s__MonsterMultiplePatrols_10r16 = {}
s__MonsterMultiplePatrols_11r16 = {}
s__MonsterMultiplePatrols_12r16 = {}
s__MonsterMultiplePatrols_13r16 = {}
s__MonsterMultiplePatrols_r16 = {}
s__MonsterMultiplePatrols_2t16 = {}
s__MonsterMultiplePatrols_3t16 = {}
s__MonsterMultiplePatrols_4t16 = {}
s__MonsterMultiplePatrols_5t16 = {}
s__MonsterMultiplePatrols_6t16 = {}
s__MonsterMultiplePatrols_7t16 = {}
s__MonsterMultiplePatrols_8t16 = {}
s__MonsterMultiplePatrols_9t16 = {}
s__MonsterMultiplePatrols_10t16 = {}
s__MonsterMultiplePatrols_11t16 = {}
s__MonsterMultiplePatrols_12t16 = {}
s__MonsterMultiplePatrols_13t16 = {}
s__MonsterMultiplePatrols_t16 = {}
s__MonsterMultiplePatrols_2x17 = __jarray(0.0)
s__MonsterMultiplePatrols_3x17 = __jarray(0.0)
s__MonsterMultiplePatrols_4x17 = __jarray(0.0)
s__MonsterMultiplePatrols_5x17 = __jarray(0.0)
s__MonsterMultiplePatrols_6x17 = __jarray(0.0)
s__MonsterMultiplePatrols_7x17 = __jarray(0.0)
s__MonsterMultiplePatrols_8x17 = __jarray(0.0)
s__MonsterMultiplePatrols_9x17 = __jarray(0.0)
s__MonsterMultiplePatrols_10x17 = __jarray(0.0)
s__MonsterMultiplePatrols_11x17 = __jarray(0.0)
s__MonsterMultiplePatrols_12x17 = __jarray(0.0)
s__MonsterMultiplePatrols_13x17 = __jarray(0.0)
s__MonsterMultiplePatrols_x17 = __jarray(0.0)
s__MonsterMultiplePatrols_2y17 = __jarray(0.0)
s__MonsterMultiplePatrols_3y17 = __jarray(0.0)
s__MonsterMultiplePatrols_4y17 = __jarray(0.0)
s__MonsterMultiplePatrols_5y17 = __jarray(0.0)
s__MonsterMultiplePatrols_6y17 = __jarray(0.0)
s__MonsterMultiplePatrols_7y17 = __jarray(0.0)
s__MonsterMultiplePatrols_8y17 = __jarray(0.0)
s__MonsterMultiplePatrols_9y17 = __jarray(0.0)
s__MonsterMultiplePatrols_10y17 = __jarray(0.0)
s__MonsterMultiplePatrols_11y17 = __jarray(0.0)
s__MonsterMultiplePatrols_12y17 = __jarray(0.0)
s__MonsterMultiplePatrols_13y17 = __jarray(0.0)
s__MonsterMultiplePatrols_y17 = __jarray(0.0)
s__MonsterMultiplePatrols_2r17 = {}
s__MonsterMultiplePatrols_3r17 = {}
s__MonsterMultiplePatrols_4r17 = {}
s__MonsterMultiplePatrols_5r17 = {}
s__MonsterMultiplePatrols_6r17 = {}
s__MonsterMultiplePatrols_7r17 = {}
s__MonsterMultiplePatrols_8r17 = {}
s__MonsterMultiplePatrols_9r17 = {}
s__MonsterMultiplePatrols_10r17 = {}
s__MonsterMultiplePatrols_11r17 = {}
s__MonsterMultiplePatrols_12r17 = {}
s__MonsterMultiplePatrols_13r17 = {}
s__MonsterMultiplePatrols_r17 = {}
s__MonsterMultiplePatrols_2t17 = {}
s__MonsterMultiplePatrols_3t17 = {}
s__MonsterMultiplePatrols_4t17 = {}
s__MonsterMultiplePatrols_5t17 = {}
s__MonsterMultiplePatrols_6t17 = {}
s__MonsterMultiplePatrols_7t17 = {}
s__MonsterMultiplePatrols_8t17 = {}
s__MonsterMultiplePatrols_9t17 = {}
s__MonsterMultiplePatrols_10t17 = {}
s__MonsterMultiplePatrols_11t17 = {}
s__MonsterMultiplePatrols_12t17 = {}
s__MonsterMultiplePatrols_13t17 = {}
s__MonsterMultiplePatrols_t17 = {}
s__MonsterMultiplePatrols_2x18 = __jarray(0.0)
s__MonsterMultiplePatrols_3x18 = __jarray(0.0)
s__MonsterMultiplePatrols_4x18 = __jarray(0.0)
s__MonsterMultiplePatrols_5x18 = __jarray(0.0)
s__MonsterMultiplePatrols_6x18 = __jarray(0.0)
s__MonsterMultiplePatrols_7x18 = __jarray(0.0)
s__MonsterMultiplePatrols_8x18 = __jarray(0.0)
s__MonsterMultiplePatrols_9x18 = __jarray(0.0)
s__MonsterMultiplePatrols_10x18 = __jarray(0.0)
s__MonsterMultiplePatrols_11x18 = __jarray(0.0)
s__MonsterMultiplePatrols_12x18 = __jarray(0.0)
s__MonsterMultiplePatrols_13x18 = __jarray(0.0)
s__MonsterMultiplePatrols_x18 = __jarray(0.0)
s__MonsterMultiplePatrols_2y18 = __jarray(0.0)
s__MonsterMultiplePatrols_3y18 = __jarray(0.0)
s__MonsterMultiplePatrols_4y18 = __jarray(0.0)
s__MonsterMultiplePatrols_5y18 = __jarray(0.0)
s__MonsterMultiplePatrols_6y18 = __jarray(0.0)
s__MonsterMultiplePatrols_7y18 = __jarray(0.0)
s__MonsterMultiplePatrols_8y18 = __jarray(0.0)
s__MonsterMultiplePatrols_9y18 = __jarray(0.0)
s__MonsterMultiplePatrols_10y18 = __jarray(0.0)
s__MonsterMultiplePatrols_11y18 = __jarray(0.0)
s__MonsterMultiplePatrols_12y18 = __jarray(0.0)
s__MonsterMultiplePatrols_13y18 = __jarray(0.0)
s__MonsterMultiplePatrols_y18 = __jarray(0.0)
s__MonsterMultiplePatrols_2r18 = {}
s__MonsterMultiplePatrols_3r18 = {}
s__MonsterMultiplePatrols_4r18 = {}
s__MonsterMultiplePatrols_5r18 = {}
s__MonsterMultiplePatrols_6r18 = {}
s__MonsterMultiplePatrols_7r18 = {}
s__MonsterMultiplePatrols_8r18 = {}
s__MonsterMultiplePatrols_9r18 = {}
s__MonsterMultiplePatrols_10r18 = {}
s__MonsterMultiplePatrols_11r18 = {}
s__MonsterMultiplePatrols_12r18 = {}
s__MonsterMultiplePatrols_13r18 = {}
s__MonsterMultiplePatrols_r18 = {}
s__MonsterMultiplePatrols_2t18 = {}
s__MonsterMultiplePatrols_3t18 = {}
s__MonsterMultiplePatrols_4t18 = {}
s__MonsterMultiplePatrols_5t18 = {}
s__MonsterMultiplePatrols_6t18 = {}
s__MonsterMultiplePatrols_7t18 = {}
s__MonsterMultiplePatrols_8t18 = {}
s__MonsterMultiplePatrols_9t18 = {}
s__MonsterMultiplePatrols_10t18 = {}
s__MonsterMultiplePatrols_11t18 = {}
s__MonsterMultiplePatrols_12t18 = {}
s__MonsterMultiplePatrols_13t18 = {}
s__MonsterMultiplePatrols_t18 = {}
s__MonsterMultiplePatrols_2x19 = __jarray(0.0)
s__MonsterMultiplePatrols_3x19 = __jarray(0.0)
s__MonsterMultiplePatrols_4x19 = __jarray(0.0)
s__MonsterMultiplePatrols_5x19 = __jarray(0.0)
s__MonsterMultiplePatrols_6x19 = __jarray(0.0)
s__MonsterMultiplePatrols_7x19 = __jarray(0.0)
s__MonsterMultiplePatrols_8x19 = __jarray(0.0)
s__MonsterMultiplePatrols_9x19 = __jarray(0.0)
s__MonsterMultiplePatrols_10x19 = __jarray(0.0)
s__MonsterMultiplePatrols_11x19 = __jarray(0.0)
s__MonsterMultiplePatrols_12x19 = __jarray(0.0)
s__MonsterMultiplePatrols_13x19 = __jarray(0.0)
s__MonsterMultiplePatrols_x19 = __jarray(0.0)
s__MonsterMultiplePatrols_2y19 = __jarray(0.0)
s__MonsterMultiplePatrols_3y19 = __jarray(0.0)
s__MonsterMultiplePatrols_4y19 = __jarray(0.0)
s__MonsterMultiplePatrols_5y19 = __jarray(0.0)
s__MonsterMultiplePatrols_6y19 = __jarray(0.0)
s__MonsterMultiplePatrols_7y19 = __jarray(0.0)
s__MonsterMultiplePatrols_8y19 = __jarray(0.0)
s__MonsterMultiplePatrols_9y19 = __jarray(0.0)
s__MonsterMultiplePatrols_10y19 = __jarray(0.0)
s__MonsterMultiplePatrols_11y19 = __jarray(0.0)
s__MonsterMultiplePatrols_12y19 = __jarray(0.0)
s__MonsterMultiplePatrols_13y19 = __jarray(0.0)
s__MonsterMultiplePatrols_y19 = __jarray(0.0)
s__MonsterMultiplePatrols_2r19 = {}
s__MonsterMultiplePatrols_3r19 = {}
s__MonsterMultiplePatrols_4r19 = {}
s__MonsterMultiplePatrols_5r19 = {}
s__MonsterMultiplePatrols_6r19 = {}
s__MonsterMultiplePatrols_7r19 = {}
s__MonsterMultiplePatrols_8r19 = {}
s__MonsterMultiplePatrols_9r19 = {}
s__MonsterMultiplePatrols_10r19 = {}
s__MonsterMultiplePatrols_11r19 = {}
s__MonsterMultiplePatrols_12r19 = {}
s__MonsterMultiplePatrols_13r19 = {}
s__MonsterMultiplePatrols_r19 = {}
s__MonsterMultiplePatrols_2t19 = {}
s__MonsterMultiplePatrols_3t19 = {}
s__MonsterMultiplePatrols_4t19 = {}
s__MonsterMultiplePatrols_5t19 = {}
s__MonsterMultiplePatrols_6t19 = {}
s__MonsterMultiplePatrols_7t19 = {}
s__MonsterMultiplePatrols_8t19 = {}
s__MonsterMultiplePatrols_9t19 = {}
s__MonsterMultiplePatrols_10t19 = {}
s__MonsterMultiplePatrols_11t19 = {}
s__MonsterMultiplePatrols_12t19 = {}
s__MonsterMultiplePatrols_13t19 = {}
s__MonsterMultiplePatrols_t19 = {}
s__MonsterMultiplePatrols_2currentTrigger = {}
s__MonsterMultiplePatrols_3currentTrigger = {}
s__MonsterMultiplePatrols_4currentTrigger = {}
s__MonsterMultiplePatrols_5currentTrigger = {}
s__MonsterMultiplePatrols_6currentTrigger = {}
s__MonsterMultiplePatrols_7currentTrigger = {}
s__MonsterMultiplePatrols_8currentTrigger = {}
s__MonsterMultiplePatrols_9currentTrigger = {}
s__MonsterMultiplePatrols_10currentTrigger = {}
s__MonsterMultiplePatrols_11currentTrigger = {}
s__MonsterMultiplePatrols_12currentTrigger = {}
s__MonsterMultiplePatrols_13currentTrigger = {}
s__MonsterMultiplePatrols_currentTrigger = {}
si__MonsterNoMove = 96
s__MonsterNoMove_nbInstances = 0
s__MonsterNoMove_2id = __jarray(0)
s__MonsterNoMove_3id = __jarray(0)
s__MonsterNoMove_4id = __jarray(0)
s__MonsterNoMove_5id = __jarray(0)
s__MonsterNoMove_6id = __jarray(0)
s__MonsterNoMove_7id = __jarray(0)
s__MonsterNoMove_8id = __jarray(0)
s__MonsterNoMove_9id = __jarray(0)
s__MonsterNoMove_10id = __jarray(0)
s__MonsterNoMove_11id = __jarray(0)
s__MonsterNoMove_12id = __jarray(0)
s__MonsterNoMove_13id = __jarray(0)
s__MonsterNoMove_id = __jarray(0)
s__MonsterNoMove_2u = {}
s__MonsterNoMove_3u = {}
s__MonsterNoMove_4u = {}
s__MonsterNoMove_5u = {}
s__MonsterNoMove_6u = {}
s__MonsterNoMove_7u = {}
s__MonsterNoMove_8u = {}
s__MonsterNoMove_9u = {}
s__MonsterNoMove_10u = {}
s__MonsterNoMove_11u = {}
s__MonsterNoMove_12u = {}
s__MonsterNoMove_13u = {}
s__MonsterNoMove_u = {}
s__MonsterNoMove_2mt = __jarray(0)
s__MonsterNoMove_3mt = __jarray(0)
s__MonsterNoMove_4mt = __jarray(0)
s__MonsterNoMove_5mt = __jarray(0)
s__MonsterNoMove_6mt = __jarray(0)
s__MonsterNoMove_7mt = __jarray(0)
s__MonsterNoMove_8mt = __jarray(0)
s__MonsterNoMove_9mt = __jarray(0)
s__MonsterNoMove_10mt = __jarray(0)
s__MonsterNoMove_11mt = __jarray(0)
s__MonsterNoMove_12mt = __jarray(0)
s__MonsterNoMove_13mt = __jarray(0)
s__MonsterNoMove_mt = __jarray(0)
s__MonsterNoMove_2disablingTimer = {}
s__MonsterNoMove_3disablingTimer = {}
s__MonsterNoMove_4disablingTimer = {}
s__MonsterNoMove_5disablingTimer = {}
s__MonsterNoMove_6disablingTimer = {}
s__MonsterNoMove_7disablingTimer = {}
s__MonsterNoMove_8disablingTimer = {}
s__MonsterNoMove_9disablingTimer = {}
s__MonsterNoMove_10disablingTimer = {}
s__MonsterNoMove_11disablingTimer = {}
s__MonsterNoMove_12disablingTimer = {}
s__MonsterNoMove_13disablingTimer = {}
s__MonsterNoMove_disablingTimer = {}
s__MonsterNoMove_2baseColorId = __jarray(0)
s__MonsterNoMove_3baseColorId = __jarray(0)
s__MonsterNoMove_4baseColorId = __jarray(0)
s__MonsterNoMove_5baseColorId = __jarray(0)
s__MonsterNoMove_6baseColorId = __jarray(0)
s__MonsterNoMove_7baseColorId = __jarray(0)
s__MonsterNoMove_8baseColorId = __jarray(0)
s__MonsterNoMove_9baseColorId = __jarray(0)
s__MonsterNoMove_10baseColorId = __jarray(0)
s__MonsterNoMove_11baseColorId = __jarray(0)
s__MonsterNoMove_12baseColorId = __jarray(0)
s__MonsterNoMove_13baseColorId = __jarray(0)
s__MonsterNoMove_baseColorId = __jarray(0)
s__MonsterNoMove_2vcRed = __jarray(0.0)
s__MonsterNoMove_3vcRed = __jarray(0.0)
s__MonsterNoMove_4vcRed = __jarray(0.0)
s__MonsterNoMove_5vcRed = __jarray(0.0)
s__MonsterNoMove_6vcRed = __jarray(0.0)
s__MonsterNoMove_7vcRed = __jarray(0.0)
s__MonsterNoMove_8vcRed = __jarray(0.0)
s__MonsterNoMove_9vcRed = __jarray(0.0)
s__MonsterNoMove_10vcRed = __jarray(0.0)
s__MonsterNoMove_11vcRed = __jarray(0.0)
s__MonsterNoMove_12vcRed = __jarray(0.0)
s__MonsterNoMove_13vcRed = __jarray(0.0)
s__MonsterNoMove_vcRed = __jarray(0.0)
s__MonsterNoMove_2vcGreen = __jarray(0.0)
s__MonsterNoMove_3vcGreen = __jarray(0.0)
s__MonsterNoMove_4vcGreen = __jarray(0.0)
s__MonsterNoMove_5vcGreen = __jarray(0.0)
s__MonsterNoMove_6vcGreen = __jarray(0.0)
s__MonsterNoMove_7vcGreen = __jarray(0.0)
s__MonsterNoMove_8vcGreen = __jarray(0.0)
s__MonsterNoMove_9vcGreen = __jarray(0.0)
s__MonsterNoMove_10vcGreen = __jarray(0.0)
s__MonsterNoMove_11vcGreen = __jarray(0.0)
s__MonsterNoMove_12vcGreen = __jarray(0.0)
s__MonsterNoMove_13vcGreen = __jarray(0.0)
s__MonsterNoMove_vcGreen = __jarray(0.0)
s__MonsterNoMove_2vcBlue = __jarray(0.0)
s__MonsterNoMove_3vcBlue = __jarray(0.0)
s__MonsterNoMove_4vcBlue = __jarray(0.0)
s__MonsterNoMove_5vcBlue = __jarray(0.0)
s__MonsterNoMove_6vcBlue = __jarray(0.0)
s__MonsterNoMove_7vcBlue = __jarray(0.0)
s__MonsterNoMove_8vcBlue = __jarray(0.0)
s__MonsterNoMove_9vcBlue = __jarray(0.0)
s__MonsterNoMove_10vcBlue = __jarray(0.0)
s__MonsterNoMove_11vcBlue = __jarray(0.0)
s__MonsterNoMove_12vcBlue = __jarray(0.0)
s__MonsterNoMove_13vcBlue = __jarray(0.0)
s__MonsterNoMove_vcBlue = __jarray(0.0)
s__MonsterNoMove_2vcTransparency = __jarray(0.0)
s__MonsterNoMove_3vcTransparency = __jarray(0.0)
s__MonsterNoMove_4vcTransparency = __jarray(0.0)
s__MonsterNoMove_5vcTransparency = __jarray(0.0)
s__MonsterNoMove_6vcTransparency = __jarray(0.0)
s__MonsterNoMove_7vcTransparency = __jarray(0.0)
s__MonsterNoMove_8vcTransparency = __jarray(0.0)
s__MonsterNoMove_9vcTransparency = __jarray(0.0)
s__MonsterNoMove_10vcTransparency = __jarray(0.0)
s__MonsterNoMove_11vcTransparency = __jarray(0.0)
s__MonsterNoMove_12vcTransparency = __jarray(0.0)
s__MonsterNoMove_13vcTransparency = __jarray(0.0)
s__MonsterNoMove_vcTransparency = __jarray(0.0)
s__MonsterNoMove_2x = __jarray(0.0)
s__MonsterNoMove_3x = __jarray(0.0)
s__MonsterNoMove_4x = __jarray(0.0)
s__MonsterNoMove_5x = __jarray(0.0)
s__MonsterNoMove_6x = __jarray(0.0)
s__MonsterNoMove_7x = __jarray(0.0)
s__MonsterNoMove_8x = __jarray(0.0)
s__MonsterNoMove_9x = __jarray(0.0)
s__MonsterNoMove_10x = __jarray(0.0)
s__MonsterNoMove_11x = __jarray(0.0)
s__MonsterNoMove_12x = __jarray(0.0)
s__MonsterNoMove_13x = __jarray(0.0)
s__MonsterNoMove_x = __jarray(0.0)
s__MonsterNoMove_2y = __jarray(0.0)
s__MonsterNoMove_3y = __jarray(0.0)
s__MonsterNoMove_4y = __jarray(0.0)
s__MonsterNoMove_5y = __jarray(0.0)
s__MonsterNoMove_6y = __jarray(0.0)
s__MonsterNoMove_7y = __jarray(0.0)
s__MonsterNoMove_8y = __jarray(0.0)
s__MonsterNoMove_9y = __jarray(0.0)
s__MonsterNoMove_10y = __jarray(0.0)
s__MonsterNoMove_11y = __jarray(0.0)
s__MonsterNoMove_12y = __jarray(0.0)
s__MonsterNoMove_13y = __jarray(0.0)
s__MonsterNoMove_y = __jarray(0.0)
s__MonsterNoMove_2angle = __jarray(0.0)
s__MonsterNoMove_3angle = __jarray(0.0)
s__MonsterNoMove_4angle = __jarray(0.0)
s__MonsterNoMove_5angle = __jarray(0.0)
s__MonsterNoMove_6angle = __jarray(0.0)
s__MonsterNoMove_7angle = __jarray(0.0)
s__MonsterNoMove_8angle = __jarray(0.0)
s__MonsterNoMove_9angle = __jarray(0.0)
s__MonsterNoMove_10angle = __jarray(0.0)
s__MonsterNoMove_11angle = __jarray(0.0)
s__MonsterNoMove_12angle = __jarray(0.0)
s__MonsterNoMove_13angle = __jarray(0.0)
s__MonsterNoMove_angle = __jarray(0.0)
si__MonsterOrCaster = 97
si__MonsterOrCaster_F = 0
si__MonsterOrCaster_I = 0
si__MonsterOrCaster_V = __jarray(0)
si__MonsterOrCaster_2V = __jarray(0)
si__MonsterOrCaster_3V = __jarray(0)
si__MonsterOrCaster_4V = __jarray(0)
si__MonsterOrCaster_5V = __jarray(0)
si__MonsterOrCaster_6V = __jarray(0)
si__MonsterOrCaster_7V = __jarray(0)
si__MonsterOrCaster_8V = __jarray(0)
si__MonsterOrCaster_9V = __jarray(0)
si__MonsterOrCaster_10V = __jarray(0)
si__MonsterOrCaster_11V = __jarray(0)
si__MonsterOrCaster_12V = __jarray(0)
si__MonsterOrCaster_13V = __jarray(0)
s__MonsterOrCaster_2monster = __jarray(0)
s__MonsterOrCaster_3monster = __jarray(0)
s__MonsterOrCaster_4monster = __jarray(0)
s__MonsterOrCaster_5monster = __jarray(0)
s__MonsterOrCaster_6monster = __jarray(0)
s__MonsterOrCaster_7monster = __jarray(0)
s__MonsterOrCaster_8monster = __jarray(0)
s__MonsterOrCaster_9monster = __jarray(0)
s__MonsterOrCaster_10monster = __jarray(0)
s__MonsterOrCaster_11monster = __jarray(0)
s__MonsterOrCaster_12monster = __jarray(0)
s__MonsterOrCaster_13monster = __jarray(0)
s__MonsterOrCaster_monster = __jarray(0)
s__MonsterOrCaster_2caster = __jarray(0)
s__MonsterOrCaster_3caster = __jarray(0)
s__MonsterOrCaster_4caster = __jarray(0)
s__MonsterOrCaster_5caster = __jarray(0)
s__MonsterOrCaster_6caster = __jarray(0)
s__MonsterOrCaster_7caster = __jarray(0)
s__MonsterOrCaster_8caster = __jarray(0)
s__MonsterOrCaster_9caster = __jarray(0)
s__MonsterOrCaster_10caster = __jarray(0)
s__MonsterOrCaster_11caster = __jarray(0)
s__MonsterOrCaster_12caster = __jarray(0)
s__MonsterOrCaster_13caster = __jarray(0)
s__MonsterOrCaster_caster = __jarray(0)
si__MonsterSimplePatrol = 98
s__MonsterSimplePatrol_nbInstances = 0
s__MonsterSimplePatrol_2id = __jarray(0)
s__MonsterSimplePatrol_3id = __jarray(0)
s__MonsterSimplePatrol_4id = __jarray(0)
s__MonsterSimplePatrol_5id = __jarray(0)
s__MonsterSimplePatrol_6id = __jarray(0)
s__MonsterSimplePatrol_7id = __jarray(0)
s__MonsterSimplePatrol_8id = __jarray(0)
s__MonsterSimplePatrol_9id = __jarray(0)
s__MonsterSimplePatrol_10id = __jarray(0)
s__MonsterSimplePatrol_11id = __jarray(0)
s__MonsterSimplePatrol_12id = __jarray(0)
s__MonsterSimplePatrol_13id = __jarray(0)
s__MonsterSimplePatrol_id = __jarray(0)
s__MonsterSimplePatrol_2u = {}
s__MonsterSimplePatrol_3u = {}
s__MonsterSimplePatrol_4u = {}
s__MonsterSimplePatrol_5u = {}
s__MonsterSimplePatrol_6u = {}
s__MonsterSimplePatrol_7u = {}
s__MonsterSimplePatrol_8u = {}
s__MonsterSimplePatrol_9u = {}
s__MonsterSimplePatrol_10u = {}
s__MonsterSimplePatrol_11u = {}
s__MonsterSimplePatrol_12u = {}
s__MonsterSimplePatrol_13u = {}
s__MonsterSimplePatrol_u = {}
s__MonsterSimplePatrol_2mt = __jarray(0)
s__MonsterSimplePatrol_3mt = __jarray(0)
s__MonsterSimplePatrol_4mt = __jarray(0)
s__MonsterSimplePatrol_5mt = __jarray(0)
s__MonsterSimplePatrol_6mt = __jarray(0)
s__MonsterSimplePatrol_7mt = __jarray(0)
s__MonsterSimplePatrol_8mt = __jarray(0)
s__MonsterSimplePatrol_9mt = __jarray(0)
s__MonsterSimplePatrol_10mt = __jarray(0)
s__MonsterSimplePatrol_11mt = __jarray(0)
s__MonsterSimplePatrol_12mt = __jarray(0)
s__MonsterSimplePatrol_13mt = __jarray(0)
s__MonsterSimplePatrol_mt = __jarray(0)
s__MonsterSimplePatrol_2disablingTimer = {}
s__MonsterSimplePatrol_3disablingTimer = {}
s__MonsterSimplePatrol_4disablingTimer = {}
s__MonsterSimplePatrol_5disablingTimer = {}
s__MonsterSimplePatrol_6disablingTimer = {}
s__MonsterSimplePatrol_7disablingTimer = {}
s__MonsterSimplePatrol_8disablingTimer = {}
s__MonsterSimplePatrol_9disablingTimer = {}
s__MonsterSimplePatrol_10disablingTimer = {}
s__MonsterSimplePatrol_11disablingTimer = {}
s__MonsterSimplePatrol_12disablingTimer = {}
s__MonsterSimplePatrol_13disablingTimer = {}
s__MonsterSimplePatrol_disablingTimer = {}
s__MonsterSimplePatrol_2baseColorId = __jarray(0)
s__MonsterSimplePatrol_3baseColorId = __jarray(0)
s__MonsterSimplePatrol_4baseColorId = __jarray(0)
s__MonsterSimplePatrol_5baseColorId = __jarray(0)
s__MonsterSimplePatrol_6baseColorId = __jarray(0)
s__MonsterSimplePatrol_7baseColorId = __jarray(0)
s__MonsterSimplePatrol_8baseColorId = __jarray(0)
s__MonsterSimplePatrol_9baseColorId = __jarray(0)
s__MonsterSimplePatrol_10baseColorId = __jarray(0)
s__MonsterSimplePatrol_11baseColorId = __jarray(0)
s__MonsterSimplePatrol_12baseColorId = __jarray(0)
s__MonsterSimplePatrol_13baseColorId = __jarray(0)
s__MonsterSimplePatrol_baseColorId = __jarray(0)
s__MonsterSimplePatrol_2vcRed = __jarray(0.0)
s__MonsterSimplePatrol_3vcRed = __jarray(0.0)
s__MonsterSimplePatrol_4vcRed = __jarray(0.0)
s__MonsterSimplePatrol_5vcRed = __jarray(0.0)
s__MonsterSimplePatrol_6vcRed = __jarray(0.0)
s__MonsterSimplePatrol_7vcRed = __jarray(0.0)
s__MonsterSimplePatrol_8vcRed = __jarray(0.0)
s__MonsterSimplePatrol_9vcRed = __jarray(0.0)
s__MonsterSimplePatrol_10vcRed = __jarray(0.0)
s__MonsterSimplePatrol_11vcRed = __jarray(0.0)
s__MonsterSimplePatrol_12vcRed = __jarray(0.0)
s__MonsterSimplePatrol_13vcRed = __jarray(0.0)
s__MonsterSimplePatrol_vcRed = __jarray(0.0)
s__MonsterSimplePatrol_2vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_3vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_4vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_5vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_6vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_7vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_8vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_9vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_10vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_11vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_12vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_13vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_vcGreen = __jarray(0.0)
s__MonsterSimplePatrol_2vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_3vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_4vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_5vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_6vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_7vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_8vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_9vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_10vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_11vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_12vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_13vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_vcBlue = __jarray(0.0)
s__MonsterSimplePatrol_2vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_3vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_4vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_5vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_6vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_7vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_8vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_9vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_10vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_11vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_12vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_13vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_vcTransparency = __jarray(0.0)
s__MonsterSimplePatrol_2x1 = __jarray(0.0)
s__MonsterSimplePatrol_3x1 = __jarray(0.0)
s__MonsterSimplePatrol_4x1 = __jarray(0.0)
s__MonsterSimplePatrol_5x1 = __jarray(0.0)
s__MonsterSimplePatrol_6x1 = __jarray(0.0)
s__MonsterSimplePatrol_7x1 = __jarray(0.0)
s__MonsterSimplePatrol_8x1 = __jarray(0.0)
s__MonsterSimplePatrol_9x1 = __jarray(0.0)
s__MonsterSimplePatrol_10x1 = __jarray(0.0)
s__MonsterSimplePatrol_11x1 = __jarray(0.0)
s__MonsterSimplePatrol_12x1 = __jarray(0.0)
s__MonsterSimplePatrol_13x1 = __jarray(0.0)
s__MonsterSimplePatrol_x1 = __jarray(0.0)
s__MonsterSimplePatrol_2y1 = __jarray(0.0)
s__MonsterSimplePatrol_3y1 = __jarray(0.0)
s__MonsterSimplePatrol_4y1 = __jarray(0.0)
s__MonsterSimplePatrol_5y1 = __jarray(0.0)
s__MonsterSimplePatrol_6y1 = __jarray(0.0)
s__MonsterSimplePatrol_7y1 = __jarray(0.0)
s__MonsterSimplePatrol_8y1 = __jarray(0.0)
s__MonsterSimplePatrol_9y1 = __jarray(0.0)
s__MonsterSimplePatrol_10y1 = __jarray(0.0)
s__MonsterSimplePatrol_11y1 = __jarray(0.0)
s__MonsterSimplePatrol_12y1 = __jarray(0.0)
s__MonsterSimplePatrol_13y1 = __jarray(0.0)
s__MonsterSimplePatrol_y1 = __jarray(0.0)
s__MonsterSimplePatrol_2x2 = __jarray(0.0)
s__MonsterSimplePatrol_3x2 = __jarray(0.0)
s__MonsterSimplePatrol_4x2 = __jarray(0.0)
s__MonsterSimplePatrol_5x2 = __jarray(0.0)
s__MonsterSimplePatrol_6x2 = __jarray(0.0)
s__MonsterSimplePatrol_7x2 = __jarray(0.0)
s__MonsterSimplePatrol_8x2 = __jarray(0.0)
s__MonsterSimplePatrol_9x2 = __jarray(0.0)
s__MonsterSimplePatrol_10x2 = __jarray(0.0)
s__MonsterSimplePatrol_11x2 = __jarray(0.0)
s__MonsterSimplePatrol_12x2 = __jarray(0.0)
s__MonsterSimplePatrol_13x2 = __jarray(0.0)
s__MonsterSimplePatrol_x2 = __jarray(0.0)
s__MonsterSimplePatrol_2y2 = __jarray(0.0)
s__MonsterSimplePatrol_3y2 = __jarray(0.0)
s__MonsterSimplePatrol_4y2 = __jarray(0.0)
s__MonsterSimplePatrol_5y2 = __jarray(0.0)
s__MonsterSimplePatrol_6y2 = __jarray(0.0)
s__MonsterSimplePatrol_7y2 = __jarray(0.0)
s__MonsterSimplePatrol_8y2 = __jarray(0.0)
s__MonsterSimplePatrol_9y2 = __jarray(0.0)
s__MonsterSimplePatrol_10y2 = __jarray(0.0)
s__MonsterSimplePatrol_11y2 = __jarray(0.0)
s__MonsterSimplePatrol_12y2 = __jarray(0.0)
s__MonsterSimplePatrol_13y2 = __jarray(0.0)
s__MonsterSimplePatrol_y2 = __jarray(0.0)
si__MonsterTeleport = 99
s__MonsterTeleport_NB_MAX_LOC = 20
s__MonsterTeleport_nbInstances = 0
s__MonsterTeleport_staticLastLocInd = -1
s__MonsterTeleport_2id = __jarray(0)
s__MonsterTeleport_3id = __jarray(0)
s__MonsterTeleport_4id = __jarray(0)
s__MonsterTeleport_5id = __jarray(0)
s__MonsterTeleport_6id = __jarray(0)
s__MonsterTeleport_7id = __jarray(0)
s__MonsterTeleport_8id = __jarray(0)
s__MonsterTeleport_9id = __jarray(0)
s__MonsterTeleport_10id = __jarray(0)
s__MonsterTeleport_11id = __jarray(0)
s__MonsterTeleport_12id = __jarray(0)
s__MonsterTeleport_13id = __jarray(0)
s__MonsterTeleport_id = __jarray(0)
s__MonsterTeleport_2u = {}
s__MonsterTeleport_3u = {}
s__MonsterTeleport_4u = {}
s__MonsterTeleport_5u = {}
s__MonsterTeleport_6u = {}
s__MonsterTeleport_7u = {}
s__MonsterTeleport_8u = {}
s__MonsterTeleport_9u = {}
s__MonsterTeleport_10u = {}
s__MonsterTeleport_11u = {}
s__MonsterTeleport_12u = {}
s__MonsterTeleport_13u = {}
s__MonsterTeleport_u = {}
s__MonsterTeleport_2mt = __jarray(0)
s__MonsterTeleport_3mt = __jarray(0)
s__MonsterTeleport_4mt = __jarray(0)
s__MonsterTeleport_5mt = __jarray(0)
s__MonsterTeleport_6mt = __jarray(0)
s__MonsterTeleport_7mt = __jarray(0)
s__MonsterTeleport_8mt = __jarray(0)
s__MonsterTeleport_9mt = __jarray(0)
s__MonsterTeleport_10mt = __jarray(0)
s__MonsterTeleport_11mt = __jarray(0)
s__MonsterTeleport_12mt = __jarray(0)
s__MonsterTeleport_13mt = __jarray(0)
s__MonsterTeleport_mt = __jarray(0)
s__MonsterTeleport_2disablingTimer = {}
s__MonsterTeleport_3disablingTimer = {}
s__MonsterTeleport_4disablingTimer = {}
s__MonsterTeleport_5disablingTimer = {}
s__MonsterTeleport_6disablingTimer = {}
s__MonsterTeleport_7disablingTimer = {}
s__MonsterTeleport_8disablingTimer = {}
s__MonsterTeleport_9disablingTimer = {}
s__MonsterTeleport_10disablingTimer = {}
s__MonsterTeleport_11disablingTimer = {}
s__MonsterTeleport_12disablingTimer = {}
s__MonsterTeleport_13disablingTimer = {}
s__MonsterTeleport_disablingTimer = {}
s__MonsterTeleport_2baseColorId = __jarray(0)
s__MonsterTeleport_3baseColorId = __jarray(0)
s__MonsterTeleport_4baseColorId = __jarray(0)
s__MonsterTeleport_5baseColorId = __jarray(0)
s__MonsterTeleport_6baseColorId = __jarray(0)
s__MonsterTeleport_7baseColorId = __jarray(0)
s__MonsterTeleport_8baseColorId = __jarray(0)
s__MonsterTeleport_9baseColorId = __jarray(0)
s__MonsterTeleport_10baseColorId = __jarray(0)
s__MonsterTeleport_11baseColorId = __jarray(0)
s__MonsterTeleport_12baseColorId = __jarray(0)
s__MonsterTeleport_13baseColorId = __jarray(0)
s__MonsterTeleport_baseColorId = __jarray(0)
s__MonsterTeleport_2vcRed = __jarray(0.0)
s__MonsterTeleport_3vcRed = __jarray(0.0)
s__MonsterTeleport_4vcRed = __jarray(0.0)
s__MonsterTeleport_5vcRed = __jarray(0.0)
s__MonsterTeleport_6vcRed = __jarray(0.0)
s__MonsterTeleport_7vcRed = __jarray(0.0)
s__MonsterTeleport_8vcRed = __jarray(0.0)
s__MonsterTeleport_9vcRed = __jarray(0.0)
s__MonsterTeleport_10vcRed = __jarray(0.0)
s__MonsterTeleport_11vcRed = __jarray(0.0)
s__MonsterTeleport_12vcRed = __jarray(0.0)
s__MonsterTeleport_13vcRed = __jarray(0.0)
s__MonsterTeleport_vcRed = __jarray(0.0)
s__MonsterTeleport_2vcGreen = __jarray(0.0)
s__MonsterTeleport_3vcGreen = __jarray(0.0)
s__MonsterTeleport_4vcGreen = __jarray(0.0)
s__MonsterTeleport_5vcGreen = __jarray(0.0)
s__MonsterTeleport_6vcGreen = __jarray(0.0)
s__MonsterTeleport_7vcGreen = __jarray(0.0)
s__MonsterTeleport_8vcGreen = __jarray(0.0)
s__MonsterTeleport_9vcGreen = __jarray(0.0)
s__MonsterTeleport_10vcGreen = __jarray(0.0)
s__MonsterTeleport_11vcGreen = __jarray(0.0)
s__MonsterTeleport_12vcGreen = __jarray(0.0)
s__MonsterTeleport_13vcGreen = __jarray(0.0)
s__MonsterTeleport_vcGreen = __jarray(0.0)
s__MonsterTeleport_2vcBlue = __jarray(0.0)
s__MonsterTeleport_3vcBlue = __jarray(0.0)
s__MonsterTeleport_4vcBlue = __jarray(0.0)
s__MonsterTeleport_5vcBlue = __jarray(0.0)
s__MonsterTeleport_6vcBlue = __jarray(0.0)
s__MonsterTeleport_7vcBlue = __jarray(0.0)
s__MonsterTeleport_8vcBlue = __jarray(0.0)
s__MonsterTeleport_9vcBlue = __jarray(0.0)
s__MonsterTeleport_10vcBlue = __jarray(0.0)
s__MonsterTeleport_11vcBlue = __jarray(0.0)
s__MonsterTeleport_12vcBlue = __jarray(0.0)
s__MonsterTeleport_13vcBlue = __jarray(0.0)
s__MonsterTeleport_vcBlue = __jarray(0.0)
s__MonsterTeleport_2vcTransparency = __jarray(0.0)
s__MonsterTeleport_3vcTransparency = __jarray(0.0)
s__MonsterTeleport_4vcTransparency = __jarray(0.0)
s__MonsterTeleport_5vcTransparency = __jarray(0.0)
s__MonsterTeleport_6vcTransparency = __jarray(0.0)
s__MonsterTeleport_7vcTransparency = __jarray(0.0)
s__MonsterTeleport_8vcTransparency = __jarray(0.0)
s__MonsterTeleport_9vcTransparency = __jarray(0.0)
s__MonsterTeleport_10vcTransparency = __jarray(0.0)
s__MonsterTeleport_11vcTransparency = __jarray(0.0)
s__MonsterTeleport_12vcTransparency = __jarray(0.0)
s__MonsterTeleport_13vcTransparency = __jarray(0.0)
s__MonsterTeleport_vcTransparency = __jarray(0.0)
s__MonsterTeleport_2period = __jarray(0.0)
s__MonsterTeleport_3period = __jarray(0.0)
s__MonsterTeleport_4period = __jarray(0.0)
s__MonsterTeleport_5period = __jarray(0.0)
s__MonsterTeleport_6period = __jarray(0.0)
s__MonsterTeleport_7period = __jarray(0.0)
s__MonsterTeleport_8period = __jarray(0.0)
s__MonsterTeleport_9period = __jarray(0.0)
s__MonsterTeleport_10period = __jarray(0.0)
s__MonsterTeleport_11period = __jarray(0.0)
s__MonsterTeleport_12period = __jarray(0.0)
s__MonsterTeleport_13period = __jarray(0.0)
s__MonsterTeleport_period = __jarray(0.0)
s__MonsterTeleport_2angle = __jarray(0.0)
s__MonsterTeleport_3angle = __jarray(0.0)
s__MonsterTeleport_4angle = __jarray(0.0)
s__MonsterTeleport_5angle = __jarray(0.0)
s__MonsterTeleport_6angle = __jarray(0.0)
s__MonsterTeleport_7angle = __jarray(0.0)
s__MonsterTeleport_8angle = __jarray(0.0)
s__MonsterTeleport_9angle = __jarray(0.0)
s__MonsterTeleport_10angle = __jarray(0.0)
s__MonsterTeleport_11angle = __jarray(0.0)
s__MonsterTeleport_12angle = __jarray(0.0)
s__MonsterTeleport_13angle = __jarray(0.0)
s__MonsterTeleport_angle = __jarray(0.0)
s__MonsterTeleport_2lastLocInd = __jarray(0)
s__MonsterTeleport_3lastLocInd = __jarray(0)
s__MonsterTeleport_4lastLocInd = __jarray(0)
s__MonsterTeleport_5lastLocInd = __jarray(0)
s__MonsterTeleport_6lastLocInd = __jarray(0)
s__MonsterTeleport_7lastLocInd = __jarray(0)
s__MonsterTeleport_8lastLocInd = __jarray(0)
s__MonsterTeleport_9lastLocInd = __jarray(0)
s__MonsterTeleport_10lastLocInd = __jarray(0)
s__MonsterTeleport_11lastLocInd = __jarray(0)
s__MonsterTeleport_12lastLocInd = __jarray(0)
s__MonsterTeleport_13lastLocInd = __jarray(0)
s__MonsterTeleport_lastLocInd = __jarray(0)
s__MonsterTeleport_2currentLoc = __jarray(0)
s__MonsterTeleport_3currentLoc = __jarray(0)
s__MonsterTeleport_4currentLoc = __jarray(0)
s__MonsterTeleport_5currentLoc = __jarray(0)
s__MonsterTeleport_6currentLoc = __jarray(0)
s__MonsterTeleport_7currentLoc = __jarray(0)
s__MonsterTeleport_8currentLoc = __jarray(0)
s__MonsterTeleport_9currentLoc = __jarray(0)
s__MonsterTeleport_10currentLoc = __jarray(0)
s__MonsterTeleport_11currentLoc = __jarray(0)
s__MonsterTeleport_12currentLoc = __jarray(0)
s__MonsterTeleport_13currentLoc = __jarray(0)
s__MonsterTeleport_currentLoc = __jarray(0)
s__MonsterTeleport_2sens = __jarray(0)
s__MonsterTeleport_3sens = __jarray(0)
s__MonsterTeleport_4sens = __jarray(0)
s__MonsterTeleport_5sens = __jarray(0)
s__MonsterTeleport_6sens = __jarray(0)
s__MonsterTeleport_7sens = __jarray(0)
s__MonsterTeleport_8sens = __jarray(0)
s__MonsterTeleport_9sens = __jarray(0)
s__MonsterTeleport_10sens = __jarray(0)
s__MonsterTeleport_11sens = __jarray(0)
s__MonsterTeleport_12sens = __jarray(0)
s__MonsterTeleport_13sens = __jarray(0)
s__MonsterTeleport_sens = __jarray(0)
s__MonsterTeleport_2x0 = __jarray(0.0)
s__MonsterTeleport_3x0 = __jarray(0.0)
s__MonsterTeleport_4x0 = __jarray(0.0)
s__MonsterTeleport_5x0 = __jarray(0.0)
s__MonsterTeleport_6x0 = __jarray(0.0)
s__MonsterTeleport_7x0 = __jarray(0.0)
s__MonsterTeleport_8x0 = __jarray(0.0)
s__MonsterTeleport_9x0 = __jarray(0.0)
s__MonsterTeleport_10x0 = __jarray(0.0)
s__MonsterTeleport_11x0 = __jarray(0.0)
s__MonsterTeleport_12x0 = __jarray(0.0)
s__MonsterTeleport_13x0 = __jarray(0.0)
s__MonsterTeleport_x0 = __jarray(0.0)
s__MonsterTeleport_2y0 = __jarray(0.0)
s__MonsterTeleport_3y0 = __jarray(0.0)
s__MonsterTeleport_4y0 = __jarray(0.0)
s__MonsterTeleport_5y0 = __jarray(0.0)
s__MonsterTeleport_6y0 = __jarray(0.0)
s__MonsterTeleport_7y0 = __jarray(0.0)
s__MonsterTeleport_8y0 = __jarray(0.0)
s__MonsterTeleport_9y0 = __jarray(0.0)
s__MonsterTeleport_10y0 = __jarray(0.0)
s__MonsterTeleport_11y0 = __jarray(0.0)
s__MonsterTeleport_12y0 = __jarray(0.0)
s__MonsterTeleport_13y0 = __jarray(0.0)
s__MonsterTeleport_y0 = __jarray(0.0)
s__MonsterTeleport_2x1 = __jarray(0.0)
s__MonsterTeleport_3x1 = __jarray(0.0)
s__MonsterTeleport_4x1 = __jarray(0.0)
s__MonsterTeleport_5x1 = __jarray(0.0)
s__MonsterTeleport_6x1 = __jarray(0.0)
s__MonsterTeleport_7x1 = __jarray(0.0)
s__MonsterTeleport_8x1 = __jarray(0.0)
s__MonsterTeleport_9x1 = __jarray(0.0)
s__MonsterTeleport_10x1 = __jarray(0.0)
s__MonsterTeleport_11x1 = __jarray(0.0)
s__MonsterTeleport_12x1 = __jarray(0.0)
s__MonsterTeleport_13x1 = __jarray(0.0)
s__MonsterTeleport_x1 = __jarray(0.0)
s__MonsterTeleport_2y1 = __jarray(0.0)
s__MonsterTeleport_3y1 = __jarray(0.0)
s__MonsterTeleport_4y1 = __jarray(0.0)
s__MonsterTeleport_5y1 = __jarray(0.0)
s__MonsterTeleport_6y1 = __jarray(0.0)
s__MonsterTeleport_7y1 = __jarray(0.0)
s__MonsterTeleport_8y1 = __jarray(0.0)
s__MonsterTeleport_9y1 = __jarray(0.0)
s__MonsterTeleport_10y1 = __jarray(0.0)
s__MonsterTeleport_11y1 = __jarray(0.0)
s__MonsterTeleport_12y1 = __jarray(0.0)
s__MonsterTeleport_13y1 = __jarray(0.0)
s__MonsterTeleport_y1 = __jarray(0.0)
s__MonsterTeleport_2x2 = __jarray(0.0)
s__MonsterTeleport_3x2 = __jarray(0.0)
s__MonsterTeleport_4x2 = __jarray(0.0)
s__MonsterTeleport_5x2 = __jarray(0.0)
s__MonsterTeleport_6x2 = __jarray(0.0)
s__MonsterTeleport_7x2 = __jarray(0.0)
s__MonsterTeleport_8x2 = __jarray(0.0)
s__MonsterTeleport_9x2 = __jarray(0.0)
s__MonsterTeleport_10x2 = __jarray(0.0)
s__MonsterTeleport_11x2 = __jarray(0.0)
s__MonsterTeleport_12x2 = __jarray(0.0)
s__MonsterTeleport_13x2 = __jarray(0.0)
s__MonsterTeleport_x2 = __jarray(0.0)
s__MonsterTeleport_2y2 = __jarray(0.0)
s__MonsterTeleport_3y2 = __jarray(0.0)
s__MonsterTeleport_4y2 = __jarray(0.0)
s__MonsterTeleport_5y2 = __jarray(0.0)
s__MonsterTeleport_6y2 = __jarray(0.0)
s__MonsterTeleport_7y2 = __jarray(0.0)
s__MonsterTeleport_8y2 = __jarray(0.0)
s__MonsterTeleport_9y2 = __jarray(0.0)
s__MonsterTeleport_10y2 = __jarray(0.0)
s__MonsterTeleport_11y2 = __jarray(0.0)
s__MonsterTeleport_12y2 = __jarray(0.0)
s__MonsterTeleport_13y2 = __jarray(0.0)
s__MonsterTeleport_y2 = __jarray(0.0)
s__MonsterTeleport_2x3 = __jarray(0.0)
s__MonsterTeleport_3x3 = __jarray(0.0)
s__MonsterTeleport_4x3 = __jarray(0.0)
s__MonsterTeleport_5x3 = __jarray(0.0)
s__MonsterTeleport_6x3 = __jarray(0.0)
s__MonsterTeleport_7x3 = __jarray(0.0)
s__MonsterTeleport_8x3 = __jarray(0.0)
s__MonsterTeleport_9x3 = __jarray(0.0)
s__MonsterTeleport_10x3 = __jarray(0.0)
s__MonsterTeleport_11x3 = __jarray(0.0)
s__MonsterTeleport_12x3 = __jarray(0.0)
s__MonsterTeleport_13x3 = __jarray(0.0)
s__MonsterTeleport_x3 = __jarray(0.0)
s__MonsterTeleport_2y3 = __jarray(0.0)
s__MonsterTeleport_3y3 = __jarray(0.0)
s__MonsterTeleport_4y3 = __jarray(0.0)
s__MonsterTeleport_5y3 = __jarray(0.0)
s__MonsterTeleport_6y3 = __jarray(0.0)
s__MonsterTeleport_7y3 = __jarray(0.0)
s__MonsterTeleport_8y3 = __jarray(0.0)
s__MonsterTeleport_9y3 = __jarray(0.0)
s__MonsterTeleport_10y3 = __jarray(0.0)
s__MonsterTeleport_11y3 = __jarray(0.0)
s__MonsterTeleport_12y3 = __jarray(0.0)
s__MonsterTeleport_13y3 = __jarray(0.0)
s__MonsterTeleport_y3 = __jarray(0.0)
s__MonsterTeleport_2x4 = __jarray(0.0)
s__MonsterTeleport_3x4 = __jarray(0.0)
s__MonsterTeleport_4x4 = __jarray(0.0)
s__MonsterTeleport_5x4 = __jarray(0.0)
s__MonsterTeleport_6x4 = __jarray(0.0)
s__MonsterTeleport_7x4 = __jarray(0.0)
s__MonsterTeleport_8x4 = __jarray(0.0)
s__MonsterTeleport_9x4 = __jarray(0.0)
s__MonsterTeleport_10x4 = __jarray(0.0)
s__MonsterTeleport_11x4 = __jarray(0.0)
s__MonsterTeleport_12x4 = __jarray(0.0)
s__MonsterTeleport_13x4 = __jarray(0.0)
s__MonsterTeleport_x4 = __jarray(0.0)
s__MonsterTeleport_2y4 = __jarray(0.0)
s__MonsterTeleport_3y4 = __jarray(0.0)
s__MonsterTeleport_4y4 = __jarray(0.0)
s__MonsterTeleport_5y4 = __jarray(0.0)
s__MonsterTeleport_6y4 = __jarray(0.0)
s__MonsterTeleport_7y4 = __jarray(0.0)
s__MonsterTeleport_8y4 = __jarray(0.0)
s__MonsterTeleport_9y4 = __jarray(0.0)
s__MonsterTeleport_10y4 = __jarray(0.0)
s__MonsterTeleport_11y4 = __jarray(0.0)
s__MonsterTeleport_12y4 = __jarray(0.0)
s__MonsterTeleport_13y4 = __jarray(0.0)
s__MonsterTeleport_y4 = __jarray(0.0)
s__MonsterTeleport_2x5 = __jarray(0.0)
s__MonsterTeleport_3x5 = __jarray(0.0)
s__MonsterTeleport_4x5 = __jarray(0.0)
s__MonsterTeleport_5x5 = __jarray(0.0)
s__MonsterTeleport_6x5 = __jarray(0.0)
s__MonsterTeleport_7x5 = __jarray(0.0)
s__MonsterTeleport_8x5 = __jarray(0.0)
s__MonsterTeleport_9x5 = __jarray(0.0)
s__MonsterTeleport_10x5 = __jarray(0.0)
s__MonsterTeleport_11x5 = __jarray(0.0)
s__MonsterTeleport_12x5 = __jarray(0.0)
s__MonsterTeleport_13x5 = __jarray(0.0)
s__MonsterTeleport_x5 = __jarray(0.0)
s__MonsterTeleport_2y5 = __jarray(0.0)
s__MonsterTeleport_3y5 = __jarray(0.0)
s__MonsterTeleport_4y5 = __jarray(0.0)
s__MonsterTeleport_5y5 = __jarray(0.0)
s__MonsterTeleport_6y5 = __jarray(0.0)
s__MonsterTeleport_7y5 = __jarray(0.0)
s__MonsterTeleport_8y5 = __jarray(0.0)
s__MonsterTeleport_9y5 = __jarray(0.0)
s__MonsterTeleport_10y5 = __jarray(0.0)
s__MonsterTeleport_11y5 = __jarray(0.0)
s__MonsterTeleport_12y5 = __jarray(0.0)
s__MonsterTeleport_13y5 = __jarray(0.0)
s__MonsterTeleport_y5 = __jarray(0.0)
s__MonsterTeleport_2x6 = __jarray(0.0)
s__MonsterTeleport_3x6 = __jarray(0.0)
s__MonsterTeleport_4x6 = __jarray(0.0)
s__MonsterTeleport_5x6 = __jarray(0.0)
s__MonsterTeleport_6x6 = __jarray(0.0)
s__MonsterTeleport_7x6 = __jarray(0.0)
s__MonsterTeleport_8x6 = __jarray(0.0)
s__MonsterTeleport_9x6 = __jarray(0.0)
s__MonsterTeleport_10x6 = __jarray(0.0)
s__MonsterTeleport_11x6 = __jarray(0.0)
s__MonsterTeleport_12x6 = __jarray(0.0)
s__MonsterTeleport_13x6 = __jarray(0.0)
s__MonsterTeleport_x6 = __jarray(0.0)
s__MonsterTeleport_2y6 = __jarray(0.0)
s__MonsterTeleport_3y6 = __jarray(0.0)
s__MonsterTeleport_4y6 = __jarray(0.0)
s__MonsterTeleport_5y6 = __jarray(0.0)
s__MonsterTeleport_6y6 = __jarray(0.0)
s__MonsterTeleport_7y6 = __jarray(0.0)
s__MonsterTeleport_8y6 = __jarray(0.0)
s__MonsterTeleport_9y6 = __jarray(0.0)
s__MonsterTeleport_10y6 = __jarray(0.0)
s__MonsterTeleport_11y6 = __jarray(0.0)
s__MonsterTeleport_12y6 = __jarray(0.0)
s__MonsterTeleport_13y6 = __jarray(0.0)
s__MonsterTeleport_y6 = __jarray(0.0)
s__MonsterTeleport_2x7 = __jarray(0.0)
s__MonsterTeleport_3x7 = __jarray(0.0)
s__MonsterTeleport_4x7 = __jarray(0.0)
s__MonsterTeleport_5x7 = __jarray(0.0)
s__MonsterTeleport_6x7 = __jarray(0.0)
s__MonsterTeleport_7x7 = __jarray(0.0)
s__MonsterTeleport_8x7 = __jarray(0.0)
s__MonsterTeleport_9x7 = __jarray(0.0)
s__MonsterTeleport_10x7 = __jarray(0.0)
s__MonsterTeleport_11x7 = __jarray(0.0)
s__MonsterTeleport_12x7 = __jarray(0.0)
s__MonsterTeleport_13x7 = __jarray(0.0)
s__MonsterTeleport_x7 = __jarray(0.0)
s__MonsterTeleport_2y7 = __jarray(0.0)
s__MonsterTeleport_3y7 = __jarray(0.0)
s__MonsterTeleport_4y7 = __jarray(0.0)
s__MonsterTeleport_5y7 = __jarray(0.0)
s__MonsterTeleport_6y7 = __jarray(0.0)
s__MonsterTeleport_7y7 = __jarray(0.0)
s__MonsterTeleport_8y7 = __jarray(0.0)
s__MonsterTeleport_9y7 = __jarray(0.0)
s__MonsterTeleport_10y7 = __jarray(0.0)
s__MonsterTeleport_11y7 = __jarray(0.0)
s__MonsterTeleport_12y7 = __jarray(0.0)
s__MonsterTeleport_13y7 = __jarray(0.0)
s__MonsterTeleport_y7 = __jarray(0.0)
s__MonsterTeleport_2x8 = __jarray(0.0)
s__MonsterTeleport_3x8 = __jarray(0.0)
s__MonsterTeleport_4x8 = __jarray(0.0)
s__MonsterTeleport_5x8 = __jarray(0.0)
s__MonsterTeleport_6x8 = __jarray(0.0)
s__MonsterTeleport_7x8 = __jarray(0.0)
s__MonsterTeleport_8x8 = __jarray(0.0)
s__MonsterTeleport_9x8 = __jarray(0.0)
s__MonsterTeleport_10x8 = __jarray(0.0)
s__MonsterTeleport_11x8 = __jarray(0.0)
s__MonsterTeleport_12x8 = __jarray(0.0)
s__MonsterTeleport_13x8 = __jarray(0.0)
s__MonsterTeleport_x8 = __jarray(0.0)
s__MonsterTeleport_2y8 = __jarray(0.0)
s__MonsterTeleport_3y8 = __jarray(0.0)
s__MonsterTeleport_4y8 = __jarray(0.0)
s__MonsterTeleport_5y8 = __jarray(0.0)
s__MonsterTeleport_6y8 = __jarray(0.0)
s__MonsterTeleport_7y8 = __jarray(0.0)
s__MonsterTeleport_8y8 = __jarray(0.0)
s__MonsterTeleport_9y8 = __jarray(0.0)
s__MonsterTeleport_10y8 = __jarray(0.0)
s__MonsterTeleport_11y8 = __jarray(0.0)
s__MonsterTeleport_12y8 = __jarray(0.0)
s__MonsterTeleport_13y8 = __jarray(0.0)
s__MonsterTeleport_y8 = __jarray(0.0)
s__MonsterTeleport_2x9 = __jarray(0.0)
s__MonsterTeleport_3x9 = __jarray(0.0)
s__MonsterTeleport_4x9 = __jarray(0.0)
s__MonsterTeleport_5x9 = __jarray(0.0)
s__MonsterTeleport_6x9 = __jarray(0.0)
s__MonsterTeleport_7x9 = __jarray(0.0)
s__MonsterTeleport_8x9 = __jarray(0.0)
s__MonsterTeleport_9x9 = __jarray(0.0)
s__MonsterTeleport_10x9 = __jarray(0.0)
s__MonsterTeleport_11x9 = __jarray(0.0)
s__MonsterTeleport_12x9 = __jarray(0.0)
s__MonsterTeleport_13x9 = __jarray(0.0)
s__MonsterTeleport_x9 = __jarray(0.0)
s__MonsterTeleport_2y9 = __jarray(0.0)
s__MonsterTeleport_3y9 = __jarray(0.0)
s__MonsterTeleport_4y9 = __jarray(0.0)
s__MonsterTeleport_5y9 = __jarray(0.0)
s__MonsterTeleport_6y9 = __jarray(0.0)
s__MonsterTeleport_7y9 = __jarray(0.0)
s__MonsterTeleport_8y9 = __jarray(0.0)
s__MonsterTeleport_9y9 = __jarray(0.0)
s__MonsterTeleport_10y9 = __jarray(0.0)
s__MonsterTeleport_11y9 = __jarray(0.0)
s__MonsterTeleport_12y9 = __jarray(0.0)
s__MonsterTeleport_13y9 = __jarray(0.0)
s__MonsterTeleport_y9 = __jarray(0.0)
s__MonsterTeleport_2x10 = __jarray(0.0)
s__MonsterTeleport_3x10 = __jarray(0.0)
s__MonsterTeleport_4x10 = __jarray(0.0)
s__MonsterTeleport_5x10 = __jarray(0.0)
s__MonsterTeleport_6x10 = __jarray(0.0)
s__MonsterTeleport_7x10 = __jarray(0.0)
s__MonsterTeleport_8x10 = __jarray(0.0)
s__MonsterTeleport_9x10 = __jarray(0.0)
s__MonsterTeleport_10x10 = __jarray(0.0)
s__MonsterTeleport_11x10 = __jarray(0.0)
s__MonsterTeleport_12x10 = __jarray(0.0)
s__MonsterTeleport_13x10 = __jarray(0.0)
s__MonsterTeleport_x10 = __jarray(0.0)
s__MonsterTeleport_2y10 = __jarray(0.0)
s__MonsterTeleport_3y10 = __jarray(0.0)
s__MonsterTeleport_4y10 = __jarray(0.0)
s__MonsterTeleport_5y10 = __jarray(0.0)
s__MonsterTeleport_6y10 = __jarray(0.0)
s__MonsterTeleport_7y10 = __jarray(0.0)
s__MonsterTeleport_8y10 = __jarray(0.0)
s__MonsterTeleport_9y10 = __jarray(0.0)
s__MonsterTeleport_10y10 = __jarray(0.0)
s__MonsterTeleport_11y10 = __jarray(0.0)
s__MonsterTeleport_12y10 = __jarray(0.0)
s__MonsterTeleport_13y10 = __jarray(0.0)
s__MonsterTeleport_y10 = __jarray(0.0)
s__MonsterTeleport_2x11 = __jarray(0.0)
s__MonsterTeleport_3x11 = __jarray(0.0)
s__MonsterTeleport_4x11 = __jarray(0.0)
s__MonsterTeleport_5x11 = __jarray(0.0)
s__MonsterTeleport_6x11 = __jarray(0.0)
s__MonsterTeleport_7x11 = __jarray(0.0)
s__MonsterTeleport_8x11 = __jarray(0.0)
s__MonsterTeleport_9x11 = __jarray(0.0)
s__MonsterTeleport_10x11 = __jarray(0.0)
s__MonsterTeleport_11x11 = __jarray(0.0)
s__MonsterTeleport_12x11 = __jarray(0.0)
s__MonsterTeleport_13x11 = __jarray(0.0)
s__MonsterTeleport_x11 = __jarray(0.0)
s__MonsterTeleport_2y11 = __jarray(0.0)
s__MonsterTeleport_3y11 = __jarray(0.0)
s__MonsterTeleport_4y11 = __jarray(0.0)
s__MonsterTeleport_5y11 = __jarray(0.0)
s__MonsterTeleport_6y11 = __jarray(0.0)
s__MonsterTeleport_7y11 = __jarray(0.0)
s__MonsterTeleport_8y11 = __jarray(0.0)
s__MonsterTeleport_9y11 = __jarray(0.0)
s__MonsterTeleport_10y11 = __jarray(0.0)
s__MonsterTeleport_11y11 = __jarray(0.0)
s__MonsterTeleport_12y11 = __jarray(0.0)
s__MonsterTeleport_13y11 = __jarray(0.0)
s__MonsterTeleport_y11 = __jarray(0.0)
s__MonsterTeleport_2x12 = __jarray(0.0)
s__MonsterTeleport_3x12 = __jarray(0.0)
s__MonsterTeleport_4x12 = __jarray(0.0)
s__MonsterTeleport_5x12 = __jarray(0.0)
s__MonsterTeleport_6x12 = __jarray(0.0)
s__MonsterTeleport_7x12 = __jarray(0.0)
s__MonsterTeleport_8x12 = __jarray(0.0)
s__MonsterTeleport_9x12 = __jarray(0.0)
s__MonsterTeleport_10x12 = __jarray(0.0)
s__MonsterTeleport_11x12 = __jarray(0.0)
s__MonsterTeleport_12x12 = __jarray(0.0)
s__MonsterTeleport_13x12 = __jarray(0.0)
s__MonsterTeleport_x12 = __jarray(0.0)
s__MonsterTeleport_2y12 = __jarray(0.0)
s__MonsterTeleport_3y12 = __jarray(0.0)
s__MonsterTeleport_4y12 = __jarray(0.0)
s__MonsterTeleport_5y12 = __jarray(0.0)
s__MonsterTeleport_6y12 = __jarray(0.0)
s__MonsterTeleport_7y12 = __jarray(0.0)
s__MonsterTeleport_8y12 = __jarray(0.0)
s__MonsterTeleport_9y12 = __jarray(0.0)
s__MonsterTeleport_10y12 = __jarray(0.0)
s__MonsterTeleport_11y12 = __jarray(0.0)
s__MonsterTeleport_12y12 = __jarray(0.0)
s__MonsterTeleport_13y12 = __jarray(0.0)
s__MonsterTeleport_y12 = __jarray(0.0)
s__MonsterTeleport_2x13 = __jarray(0.0)
s__MonsterTeleport_3x13 = __jarray(0.0)
s__MonsterTeleport_4x13 = __jarray(0.0)
s__MonsterTeleport_5x13 = __jarray(0.0)
s__MonsterTeleport_6x13 = __jarray(0.0)
s__MonsterTeleport_7x13 = __jarray(0.0)
s__MonsterTeleport_8x13 = __jarray(0.0)
s__MonsterTeleport_9x13 = __jarray(0.0)
s__MonsterTeleport_10x13 = __jarray(0.0)
s__MonsterTeleport_11x13 = __jarray(0.0)
s__MonsterTeleport_12x13 = __jarray(0.0)
s__MonsterTeleport_13x13 = __jarray(0.0)
s__MonsterTeleport_x13 = __jarray(0.0)
s__MonsterTeleport_2y13 = __jarray(0.0)
s__MonsterTeleport_3y13 = __jarray(0.0)
s__MonsterTeleport_4y13 = __jarray(0.0)
s__MonsterTeleport_5y13 = __jarray(0.0)
s__MonsterTeleport_6y13 = __jarray(0.0)
s__MonsterTeleport_7y13 = __jarray(0.0)
s__MonsterTeleport_8y13 = __jarray(0.0)
s__MonsterTeleport_9y13 = __jarray(0.0)
s__MonsterTeleport_10y13 = __jarray(0.0)
s__MonsterTeleport_11y13 = __jarray(0.0)
s__MonsterTeleport_12y13 = __jarray(0.0)
s__MonsterTeleport_13y13 = __jarray(0.0)
s__MonsterTeleport_y13 = __jarray(0.0)
s__MonsterTeleport_2x14 = __jarray(0.0)
s__MonsterTeleport_3x14 = __jarray(0.0)
s__MonsterTeleport_4x14 = __jarray(0.0)
s__MonsterTeleport_5x14 = __jarray(0.0)
s__MonsterTeleport_6x14 = __jarray(0.0)
s__MonsterTeleport_7x14 = __jarray(0.0)
s__MonsterTeleport_8x14 = __jarray(0.0)
s__MonsterTeleport_9x14 = __jarray(0.0)
s__MonsterTeleport_10x14 = __jarray(0.0)
s__MonsterTeleport_11x14 = __jarray(0.0)
s__MonsterTeleport_12x14 = __jarray(0.0)
s__MonsterTeleport_13x14 = __jarray(0.0)
s__MonsterTeleport_x14 = __jarray(0.0)
s__MonsterTeleport_2y14 = __jarray(0.0)
s__MonsterTeleport_3y14 = __jarray(0.0)
s__MonsterTeleport_4y14 = __jarray(0.0)
s__MonsterTeleport_5y14 = __jarray(0.0)
s__MonsterTeleport_6y14 = __jarray(0.0)
s__MonsterTeleport_7y14 = __jarray(0.0)
s__MonsterTeleport_8y14 = __jarray(0.0)
s__MonsterTeleport_9y14 = __jarray(0.0)
s__MonsterTeleport_10y14 = __jarray(0.0)
s__MonsterTeleport_11y14 = __jarray(0.0)
s__MonsterTeleport_12y14 = __jarray(0.0)
s__MonsterTeleport_13y14 = __jarray(0.0)
s__MonsterTeleport_y14 = __jarray(0.0)
s__MonsterTeleport_2x15 = __jarray(0.0)
s__MonsterTeleport_3x15 = __jarray(0.0)
s__MonsterTeleport_4x15 = __jarray(0.0)
s__MonsterTeleport_5x15 = __jarray(0.0)
s__MonsterTeleport_6x15 = __jarray(0.0)
s__MonsterTeleport_7x15 = __jarray(0.0)
s__MonsterTeleport_8x15 = __jarray(0.0)
s__MonsterTeleport_9x15 = __jarray(0.0)
s__MonsterTeleport_10x15 = __jarray(0.0)
s__MonsterTeleport_11x15 = __jarray(0.0)
s__MonsterTeleport_12x15 = __jarray(0.0)
s__MonsterTeleport_13x15 = __jarray(0.0)
s__MonsterTeleport_x15 = __jarray(0.0)
s__MonsterTeleport_2y15 = __jarray(0.0)
s__MonsterTeleport_3y15 = __jarray(0.0)
s__MonsterTeleport_4y15 = __jarray(0.0)
s__MonsterTeleport_5y15 = __jarray(0.0)
s__MonsterTeleport_6y15 = __jarray(0.0)
s__MonsterTeleport_7y15 = __jarray(0.0)
s__MonsterTeleport_8y15 = __jarray(0.0)
s__MonsterTeleport_9y15 = __jarray(0.0)
s__MonsterTeleport_10y15 = __jarray(0.0)
s__MonsterTeleport_11y15 = __jarray(0.0)
s__MonsterTeleport_12y15 = __jarray(0.0)
s__MonsterTeleport_13y15 = __jarray(0.0)
s__MonsterTeleport_y15 = __jarray(0.0)
s__MonsterTeleport_2x16 = __jarray(0.0)
s__MonsterTeleport_3x16 = __jarray(0.0)
s__MonsterTeleport_4x16 = __jarray(0.0)
s__MonsterTeleport_5x16 = __jarray(0.0)
s__MonsterTeleport_6x16 = __jarray(0.0)
s__MonsterTeleport_7x16 = __jarray(0.0)
s__MonsterTeleport_8x16 = __jarray(0.0)
s__MonsterTeleport_9x16 = __jarray(0.0)
s__MonsterTeleport_10x16 = __jarray(0.0)
s__MonsterTeleport_11x16 = __jarray(0.0)
s__MonsterTeleport_12x16 = __jarray(0.0)
s__MonsterTeleport_13x16 = __jarray(0.0)
s__MonsterTeleport_x16 = __jarray(0.0)
s__MonsterTeleport_2y16 = __jarray(0.0)
s__MonsterTeleport_3y16 = __jarray(0.0)
s__MonsterTeleport_4y16 = __jarray(0.0)
s__MonsterTeleport_5y16 = __jarray(0.0)
s__MonsterTeleport_6y16 = __jarray(0.0)
s__MonsterTeleport_7y16 = __jarray(0.0)
s__MonsterTeleport_8y16 = __jarray(0.0)
s__MonsterTeleport_9y16 = __jarray(0.0)
s__MonsterTeleport_10y16 = __jarray(0.0)
s__MonsterTeleport_11y16 = __jarray(0.0)
s__MonsterTeleport_12y16 = __jarray(0.0)
s__MonsterTeleport_13y16 = __jarray(0.0)
s__MonsterTeleport_y16 = __jarray(0.0)
s__MonsterTeleport_2x17 = __jarray(0.0)
s__MonsterTeleport_3x17 = __jarray(0.0)
s__MonsterTeleport_4x17 = __jarray(0.0)
s__MonsterTeleport_5x17 = __jarray(0.0)
s__MonsterTeleport_6x17 = __jarray(0.0)
s__MonsterTeleport_7x17 = __jarray(0.0)
s__MonsterTeleport_8x17 = __jarray(0.0)
s__MonsterTeleport_9x17 = __jarray(0.0)
s__MonsterTeleport_10x17 = __jarray(0.0)
s__MonsterTeleport_11x17 = __jarray(0.0)
s__MonsterTeleport_12x17 = __jarray(0.0)
s__MonsterTeleport_13x17 = __jarray(0.0)
s__MonsterTeleport_x17 = __jarray(0.0)
s__MonsterTeleport_2y17 = __jarray(0.0)
s__MonsterTeleport_3y17 = __jarray(0.0)
s__MonsterTeleport_4y17 = __jarray(0.0)
s__MonsterTeleport_5y17 = __jarray(0.0)
s__MonsterTeleport_6y17 = __jarray(0.0)
s__MonsterTeleport_7y17 = __jarray(0.0)
s__MonsterTeleport_8y17 = __jarray(0.0)
s__MonsterTeleport_9y17 = __jarray(0.0)
s__MonsterTeleport_10y17 = __jarray(0.0)
s__MonsterTeleport_11y17 = __jarray(0.0)
s__MonsterTeleport_12y17 = __jarray(0.0)
s__MonsterTeleport_13y17 = __jarray(0.0)
s__MonsterTeleport_y17 = __jarray(0.0)
s__MonsterTeleport_2x18 = __jarray(0.0)
s__MonsterTeleport_3x18 = __jarray(0.0)
s__MonsterTeleport_4x18 = __jarray(0.0)
s__MonsterTeleport_5x18 = __jarray(0.0)
s__MonsterTeleport_6x18 = __jarray(0.0)
s__MonsterTeleport_7x18 = __jarray(0.0)
s__MonsterTeleport_8x18 = __jarray(0.0)
s__MonsterTeleport_9x18 = __jarray(0.0)
s__MonsterTeleport_10x18 = __jarray(0.0)
s__MonsterTeleport_11x18 = __jarray(0.0)
s__MonsterTeleport_12x18 = __jarray(0.0)
s__MonsterTeleport_13x18 = __jarray(0.0)
s__MonsterTeleport_x18 = __jarray(0.0)
s__MonsterTeleport_2y18 = __jarray(0.0)
s__MonsterTeleport_3y18 = __jarray(0.0)
s__MonsterTeleport_4y18 = __jarray(0.0)
s__MonsterTeleport_5y18 = __jarray(0.0)
s__MonsterTeleport_6y18 = __jarray(0.0)
s__MonsterTeleport_7y18 = __jarray(0.0)
s__MonsterTeleport_8y18 = __jarray(0.0)
s__MonsterTeleport_9y18 = __jarray(0.0)
s__MonsterTeleport_10y18 = __jarray(0.0)
s__MonsterTeleport_11y18 = __jarray(0.0)
s__MonsterTeleport_12y18 = __jarray(0.0)
s__MonsterTeleport_13y18 = __jarray(0.0)
s__MonsterTeleport_y18 = __jarray(0.0)
s__MonsterTeleport_2x19 = __jarray(0.0)
s__MonsterTeleport_3x19 = __jarray(0.0)
s__MonsterTeleport_4x19 = __jarray(0.0)
s__MonsterTeleport_5x19 = __jarray(0.0)
s__MonsterTeleport_6x19 = __jarray(0.0)
s__MonsterTeleport_7x19 = __jarray(0.0)
s__MonsterTeleport_8x19 = __jarray(0.0)
s__MonsterTeleport_9x19 = __jarray(0.0)
s__MonsterTeleport_10x19 = __jarray(0.0)
s__MonsterTeleport_11x19 = __jarray(0.0)
s__MonsterTeleport_12x19 = __jarray(0.0)
s__MonsterTeleport_13x19 = __jarray(0.0)
s__MonsterTeleport_x19 = __jarray(0.0)
s__MonsterTeleport_2y19 = __jarray(0.0)
s__MonsterTeleport_3y19 = __jarray(0.0)
s__MonsterTeleport_4y19 = __jarray(0.0)
s__MonsterTeleport_5y19 = __jarray(0.0)
s__MonsterTeleport_6y19 = __jarray(0.0)
s__MonsterTeleport_7y19 = __jarray(0.0)
s__MonsterTeleport_8y19 = __jarray(0.0)
s__MonsterTeleport_9y19 = __jarray(0.0)
s__MonsterTeleport_10y19 = __jarray(0.0)
s__MonsterTeleport_11y19 = __jarray(0.0)
s__MonsterTeleport_12y19 = __jarray(0.0)
s__MonsterTeleport_13y19 = __jarray(0.0)
s__MonsterTeleport_y19 = __jarray(0.0)
s__MonsterTeleport_2t = {}
s__MonsterTeleport_3t = {}
s__MonsterTeleport_4t = {}
s__MonsterTeleport_5t = {}
s__MonsterTeleport_6t = {}
s__MonsterTeleport_7t = {}
s__MonsterTeleport_8t = {}
s__MonsterTeleport_9t = {}
s__MonsterTeleport_10t = {}
s__MonsterTeleport_11t = {}
s__MonsterTeleport_12t = {}
s__MonsterTeleport_13t = {}
s__MonsterTeleport_t = {}
si__Caster = 100
si__Caster_F = 0
si__Caster_I = 0
si__Caster_V = __jarray(0)
si__Caster_2V = __jarray(0)
si__Caster_3V = __jarray(0)
si__Caster_4V = __jarray(0)
si__Caster_5V = __jarray(0)
si__Caster_6V = __jarray(0)
si__Caster_7V = __jarray(0)
si__Caster_8V = __jarray(0)
si__Caster_9V = __jarray(0)
si__Caster_10V = __jarray(0)
si__Caster_11V = __jarray(0)
si__Caster_12V = __jarray(0)
si__Caster_13V = __jarray(0)
si__Caster_14V = __jarray(0)
si__Caster_15V = __jarray(0)
si__Caster_16V = __jarray(0)
si__Caster_17V = __jarray(0)
si__Caster_18V = __jarray(0)
si__Caster_19V = __jarray(0)
si__Caster_20V = __jarray(0)
si__Caster_21V = __jarray(0)
si__Caster_22V = __jarray(0)
si__Caster_23V = __jarray(0)
si__Caster_24V = __jarray(0)
si__Caster_25V = __jarray(0)
si__Caster_26V = __jarray(0)
si__Caster_27V = __jarray(0)
si__Caster_28V = __jarray(0)
si__Caster_29V = __jarray(0)
si__Caster_30V = __jarray(0)
si__Caster_31V = __jarray(0)
si__Caster_32V = __jarray(0)
si__Caster_33V = __jarray(0)
si__Caster_34V = __jarray(0)
si__Caster_35V = __jarray(0)
si__Caster_36V = __jarray(0)
si__Caster_37V = __jarray(0)
s__Caster_2id = __jarray(0)
s__Caster_3id = __jarray(0)
s__Caster_4id = __jarray(0)
s__Caster_5id = __jarray(0)
s__Caster_6id = __jarray(0)
s__Caster_7id = __jarray(0)
s__Caster_8id = __jarray(0)
s__Caster_9id = __jarray(0)
s__Caster_10id = __jarray(0)
s__Caster_11id = __jarray(0)
s__Caster_12id = __jarray(0)
s__Caster_13id = __jarray(0)
s__Caster_14id = __jarray(0)
s__Caster_15id = __jarray(0)
s__Caster_16id = __jarray(0)
s__Caster_17id = __jarray(0)
s__Caster_18id = __jarray(0)
s__Caster_19id = __jarray(0)
s__Caster_20id = __jarray(0)
s__Caster_21id = __jarray(0)
s__Caster_22id = __jarray(0)
s__Caster_23id = __jarray(0)
s__Caster_24id = __jarray(0)
s__Caster_25id = __jarray(0)
s__Caster_26id = __jarray(0)
s__Caster_27id = __jarray(0)
s__Caster_28id = __jarray(0)
s__Caster_29id = __jarray(0)
s__Caster_30id = __jarray(0)
s__Caster_31id = __jarray(0)
s__Caster_32id = __jarray(0)
s__Caster_33id = __jarray(0)
s__Caster_34id = __jarray(0)
s__Caster_35id = __jarray(0)
s__Caster_36id = __jarray(0)
s__Caster_37id = __jarray(0)
s__Caster_id = __jarray(0)
s__Caster_2level = __jarray(0)
s__Caster_3level = __jarray(0)
s__Caster_4level = __jarray(0)
s__Caster_5level = __jarray(0)
s__Caster_6level = __jarray(0)
s__Caster_7level = __jarray(0)
s__Caster_8level = __jarray(0)
s__Caster_9level = __jarray(0)
s__Caster_10level = __jarray(0)
s__Caster_11level = __jarray(0)
s__Caster_12level = __jarray(0)
s__Caster_13level = __jarray(0)
s__Caster_14level = __jarray(0)
s__Caster_15level = __jarray(0)
s__Caster_16level = __jarray(0)
s__Caster_17level = __jarray(0)
s__Caster_18level = __jarray(0)
s__Caster_19level = __jarray(0)
s__Caster_20level = __jarray(0)
s__Caster_21level = __jarray(0)
s__Caster_22level = __jarray(0)
s__Caster_23level = __jarray(0)
s__Caster_24level = __jarray(0)
s__Caster_25level = __jarray(0)
s__Caster_26level = __jarray(0)
s__Caster_27level = __jarray(0)
s__Caster_28level = __jarray(0)
s__Caster_29level = __jarray(0)
s__Caster_30level = __jarray(0)
s__Caster_31level = __jarray(0)
s__Caster_32level = __jarray(0)
s__Caster_33level = __jarray(0)
s__Caster_34level = __jarray(0)
s__Caster_35level = __jarray(0)
s__Caster_36level = __jarray(0)
s__Caster_37level = __jarray(0)
s__Caster_level = __jarray(0)
s__Caster_2arrayId = __jarray(0)
s__Caster_3arrayId = __jarray(0)
s__Caster_4arrayId = __jarray(0)
s__Caster_5arrayId = __jarray(0)
s__Caster_6arrayId = __jarray(0)
s__Caster_7arrayId = __jarray(0)
s__Caster_8arrayId = __jarray(0)
s__Caster_9arrayId = __jarray(0)
s__Caster_10arrayId = __jarray(0)
s__Caster_11arrayId = __jarray(0)
s__Caster_12arrayId = __jarray(0)
s__Caster_13arrayId = __jarray(0)
s__Caster_14arrayId = __jarray(0)
s__Caster_15arrayId = __jarray(0)
s__Caster_16arrayId = __jarray(0)
s__Caster_17arrayId = __jarray(0)
s__Caster_18arrayId = __jarray(0)
s__Caster_19arrayId = __jarray(0)
s__Caster_20arrayId = __jarray(0)
s__Caster_21arrayId = __jarray(0)
s__Caster_22arrayId = __jarray(0)
s__Caster_23arrayId = __jarray(0)
s__Caster_24arrayId = __jarray(0)
s__Caster_25arrayId = __jarray(0)
s__Caster_26arrayId = __jarray(0)
s__Caster_27arrayId = __jarray(0)
s__Caster_28arrayId = __jarray(0)
s__Caster_29arrayId = __jarray(0)
s__Caster_30arrayId = __jarray(0)
s__Caster_31arrayId = __jarray(0)
s__Caster_32arrayId = __jarray(0)
s__Caster_33arrayId = __jarray(0)
s__Caster_34arrayId = __jarray(0)
s__Caster_35arrayId = __jarray(0)
s__Caster_36arrayId = __jarray(0)
s__Caster_37arrayId = __jarray(0)
s__Caster_arrayId = __jarray(0)
s__Caster_2casterType = __jarray(0)
s__Caster_3casterType = __jarray(0)
s__Caster_4casterType = __jarray(0)
s__Caster_5casterType = __jarray(0)
s__Caster_6casterType = __jarray(0)
s__Caster_7casterType = __jarray(0)
s__Caster_8casterType = __jarray(0)
s__Caster_9casterType = __jarray(0)
s__Caster_10casterType = __jarray(0)
s__Caster_11casterType = __jarray(0)
s__Caster_12casterType = __jarray(0)
s__Caster_13casterType = __jarray(0)
s__Caster_14casterType = __jarray(0)
s__Caster_15casterType = __jarray(0)
s__Caster_16casterType = __jarray(0)
s__Caster_17casterType = __jarray(0)
s__Caster_18casterType = __jarray(0)
s__Caster_19casterType = __jarray(0)
s__Caster_20casterType = __jarray(0)
s__Caster_21casterType = __jarray(0)
s__Caster_22casterType = __jarray(0)
s__Caster_23casterType = __jarray(0)
s__Caster_24casterType = __jarray(0)
s__Caster_25casterType = __jarray(0)
s__Caster_26casterType = __jarray(0)
s__Caster_27casterType = __jarray(0)
s__Caster_28casterType = __jarray(0)
s__Caster_29casterType = __jarray(0)
s__Caster_30casterType = __jarray(0)
s__Caster_31casterType = __jarray(0)
s__Caster_32casterType = __jarray(0)
s__Caster_33casterType = __jarray(0)
s__Caster_34casterType = __jarray(0)
s__Caster_35casterType = __jarray(0)
s__Caster_36casterType = __jarray(0)
s__Caster_37casterType = __jarray(0)
s__Caster_casterType = __jarray(0)
s__Caster_2x = __jarray(0.0)
s__Caster_3x = __jarray(0.0)
s__Caster_4x = __jarray(0.0)
s__Caster_5x = __jarray(0.0)
s__Caster_6x = __jarray(0.0)
s__Caster_7x = __jarray(0.0)
s__Caster_8x = __jarray(0.0)
s__Caster_9x = __jarray(0.0)
s__Caster_10x = __jarray(0.0)
s__Caster_11x = __jarray(0.0)
s__Caster_12x = __jarray(0.0)
s__Caster_13x = __jarray(0.0)
s__Caster_14x = __jarray(0.0)
s__Caster_15x = __jarray(0.0)
s__Caster_16x = __jarray(0.0)
s__Caster_17x = __jarray(0.0)
s__Caster_18x = __jarray(0.0)
s__Caster_19x = __jarray(0.0)
s__Caster_20x = __jarray(0.0)
s__Caster_21x = __jarray(0.0)
s__Caster_22x = __jarray(0.0)
s__Caster_23x = __jarray(0.0)
s__Caster_24x = __jarray(0.0)
s__Caster_25x = __jarray(0.0)
s__Caster_26x = __jarray(0.0)
s__Caster_27x = __jarray(0.0)
s__Caster_28x = __jarray(0.0)
s__Caster_29x = __jarray(0.0)
s__Caster_30x = __jarray(0.0)
s__Caster_31x = __jarray(0.0)
s__Caster_32x = __jarray(0.0)
s__Caster_33x = __jarray(0.0)
s__Caster_34x = __jarray(0.0)
s__Caster_35x = __jarray(0.0)
s__Caster_36x = __jarray(0.0)
s__Caster_37x = __jarray(0.0)
s__Caster_x = __jarray(0.0)
s__Caster_2y = __jarray(0.0)
s__Caster_3y = __jarray(0.0)
s__Caster_4y = __jarray(0.0)
s__Caster_5y = __jarray(0.0)
s__Caster_6y = __jarray(0.0)
s__Caster_7y = __jarray(0.0)
s__Caster_8y = __jarray(0.0)
s__Caster_9y = __jarray(0.0)
s__Caster_10y = __jarray(0.0)
s__Caster_11y = __jarray(0.0)
s__Caster_12y = __jarray(0.0)
s__Caster_13y = __jarray(0.0)
s__Caster_14y = __jarray(0.0)
s__Caster_15y = __jarray(0.0)
s__Caster_16y = __jarray(0.0)
s__Caster_17y = __jarray(0.0)
s__Caster_18y = __jarray(0.0)
s__Caster_19y = __jarray(0.0)
s__Caster_20y = __jarray(0.0)
s__Caster_21y = __jarray(0.0)
s__Caster_22y = __jarray(0.0)
s__Caster_23y = __jarray(0.0)
s__Caster_24y = __jarray(0.0)
s__Caster_25y = __jarray(0.0)
s__Caster_26y = __jarray(0.0)
s__Caster_27y = __jarray(0.0)
s__Caster_28y = __jarray(0.0)
s__Caster_29y = __jarray(0.0)
s__Caster_30y = __jarray(0.0)
s__Caster_31y = __jarray(0.0)
s__Caster_32y = __jarray(0.0)
s__Caster_33y = __jarray(0.0)
s__Caster_34y = __jarray(0.0)
s__Caster_35y = __jarray(0.0)
s__Caster_36y = __jarray(0.0)
s__Caster_37y = __jarray(0.0)
s__Caster_y = __jarray(0.0)
s__Caster_2angle = __jarray(0.0)
s__Caster_3angle = __jarray(0.0)
s__Caster_4angle = __jarray(0.0)
s__Caster_5angle = __jarray(0.0)
s__Caster_6angle = __jarray(0.0)
s__Caster_7angle = __jarray(0.0)
s__Caster_8angle = __jarray(0.0)
s__Caster_9angle = __jarray(0.0)
s__Caster_10angle = __jarray(0.0)
s__Caster_11angle = __jarray(0.0)
s__Caster_12angle = __jarray(0.0)
s__Caster_13angle = __jarray(0.0)
s__Caster_14angle = __jarray(0.0)
s__Caster_15angle = __jarray(0.0)
s__Caster_16angle = __jarray(0.0)
s__Caster_17angle = __jarray(0.0)
s__Caster_18angle = __jarray(0.0)
s__Caster_19angle = __jarray(0.0)
s__Caster_20angle = __jarray(0.0)
s__Caster_21angle = __jarray(0.0)
s__Caster_22angle = __jarray(0.0)
s__Caster_23angle = __jarray(0.0)
s__Caster_24angle = __jarray(0.0)
s__Caster_25angle = __jarray(0.0)
s__Caster_26angle = __jarray(0.0)
s__Caster_27angle = __jarray(0.0)
s__Caster_28angle = __jarray(0.0)
s__Caster_29angle = __jarray(0.0)
s__Caster_30angle = __jarray(0.0)
s__Caster_31angle = __jarray(0.0)
s__Caster_32angle = __jarray(0.0)
s__Caster_33angle = __jarray(0.0)
s__Caster_34angle = __jarray(0.0)
s__Caster_35angle = __jarray(0.0)
s__Caster_36angle = __jarray(0.0)
s__Caster_37angle = __jarray(0.0)
s__Caster_angle = __jarray(0.0)
s__Caster_2disablingTimer = {}
s__Caster_3disablingTimer = {}
s__Caster_4disablingTimer = {}
s__Caster_5disablingTimer = {}
s__Caster_6disablingTimer = {}
s__Caster_7disablingTimer = {}
s__Caster_8disablingTimer = {}
s__Caster_9disablingTimer = {}
s__Caster_10disablingTimer = {}
s__Caster_11disablingTimer = {}
s__Caster_12disablingTimer = {}
s__Caster_13disablingTimer = {}
s__Caster_14disablingTimer = {}
s__Caster_15disablingTimer = {}
s__Caster_16disablingTimer = {}
s__Caster_17disablingTimer = {}
s__Caster_18disablingTimer = {}
s__Caster_19disablingTimer = {}
s__Caster_20disablingTimer = {}
s__Caster_21disablingTimer = {}
s__Caster_22disablingTimer = {}
s__Caster_23disablingTimer = {}
s__Caster_24disablingTimer = {}
s__Caster_25disablingTimer = {}
s__Caster_26disablingTimer = {}
s__Caster_27disablingTimer = {}
s__Caster_28disablingTimer = {}
s__Caster_29disablingTimer = {}
s__Caster_30disablingTimer = {}
s__Caster_31disablingTimer = {}
s__Caster_32disablingTimer = {}
s__Caster_33disablingTimer = {}
s__Caster_34disablingTimer = {}
s__Caster_35disablingTimer = {}
s__Caster_36disablingTimer = {}
s__Caster_37disablingTimer = {}
s__Caster_disablingTimer = {}
s__Caster_2baseColorId = __jarray(0)
s__Caster_3baseColorId = __jarray(0)
s__Caster_4baseColorId = __jarray(0)
s__Caster_5baseColorId = __jarray(0)
s__Caster_6baseColorId = __jarray(0)
s__Caster_7baseColorId = __jarray(0)
s__Caster_8baseColorId = __jarray(0)
s__Caster_9baseColorId = __jarray(0)
s__Caster_10baseColorId = __jarray(0)
s__Caster_11baseColorId = __jarray(0)
s__Caster_12baseColorId = __jarray(0)
s__Caster_13baseColorId = __jarray(0)
s__Caster_14baseColorId = __jarray(0)
s__Caster_15baseColorId = __jarray(0)
s__Caster_16baseColorId = __jarray(0)
s__Caster_17baseColorId = __jarray(0)
s__Caster_18baseColorId = __jarray(0)
s__Caster_19baseColorId = __jarray(0)
s__Caster_20baseColorId = __jarray(0)
s__Caster_21baseColorId = __jarray(0)
s__Caster_22baseColorId = __jarray(0)
s__Caster_23baseColorId = __jarray(0)
s__Caster_24baseColorId = __jarray(0)
s__Caster_25baseColorId = __jarray(0)
s__Caster_26baseColorId = __jarray(0)
s__Caster_27baseColorId = __jarray(0)
s__Caster_28baseColorId = __jarray(0)
s__Caster_29baseColorId = __jarray(0)
s__Caster_30baseColorId = __jarray(0)
s__Caster_31baseColorId = __jarray(0)
s__Caster_32baseColorId = __jarray(0)
s__Caster_33baseColorId = __jarray(0)
s__Caster_34baseColorId = __jarray(0)
s__Caster_35baseColorId = __jarray(0)
s__Caster_36baseColorId = __jarray(0)
s__Caster_37baseColorId = __jarray(0)
s__Caster_baseColorId = __jarray(0)
s__Caster_2vcRed = __jarray(0.0)
s__Caster_3vcRed = __jarray(0.0)
s__Caster_4vcRed = __jarray(0.0)
s__Caster_5vcRed = __jarray(0.0)
s__Caster_6vcRed = __jarray(0.0)
s__Caster_7vcRed = __jarray(0.0)
s__Caster_8vcRed = __jarray(0.0)
s__Caster_9vcRed = __jarray(0.0)
s__Caster_10vcRed = __jarray(0.0)
s__Caster_11vcRed = __jarray(0.0)
s__Caster_12vcRed = __jarray(0.0)
s__Caster_13vcRed = __jarray(0.0)
s__Caster_14vcRed = __jarray(0.0)
s__Caster_15vcRed = __jarray(0.0)
s__Caster_16vcRed = __jarray(0.0)
s__Caster_17vcRed = __jarray(0.0)
s__Caster_18vcRed = __jarray(0.0)
s__Caster_19vcRed = __jarray(0.0)
s__Caster_20vcRed = __jarray(0.0)
s__Caster_21vcRed = __jarray(0.0)
s__Caster_22vcRed = __jarray(0.0)
s__Caster_23vcRed = __jarray(0.0)
s__Caster_24vcRed = __jarray(0.0)
s__Caster_25vcRed = __jarray(0.0)
s__Caster_26vcRed = __jarray(0.0)
s__Caster_27vcRed = __jarray(0.0)
s__Caster_28vcRed = __jarray(0.0)
s__Caster_29vcRed = __jarray(0.0)
s__Caster_30vcRed = __jarray(0.0)
s__Caster_31vcRed = __jarray(0.0)
s__Caster_32vcRed = __jarray(0.0)
s__Caster_33vcRed = __jarray(0.0)
s__Caster_34vcRed = __jarray(0.0)
s__Caster_35vcRed = __jarray(0.0)
s__Caster_36vcRed = __jarray(0.0)
s__Caster_37vcRed = __jarray(0.0)
s__Caster_vcRed = __jarray(0.0)
s__Caster_2vcGreen = __jarray(0.0)
s__Caster_3vcGreen = __jarray(0.0)
s__Caster_4vcGreen = __jarray(0.0)
s__Caster_5vcGreen = __jarray(0.0)
s__Caster_6vcGreen = __jarray(0.0)
s__Caster_7vcGreen = __jarray(0.0)
s__Caster_8vcGreen = __jarray(0.0)
s__Caster_9vcGreen = __jarray(0.0)
s__Caster_10vcGreen = __jarray(0.0)
s__Caster_11vcGreen = __jarray(0.0)
s__Caster_12vcGreen = __jarray(0.0)
s__Caster_13vcGreen = __jarray(0.0)
s__Caster_14vcGreen = __jarray(0.0)
s__Caster_15vcGreen = __jarray(0.0)
s__Caster_16vcGreen = __jarray(0.0)
s__Caster_17vcGreen = __jarray(0.0)
s__Caster_18vcGreen = __jarray(0.0)
s__Caster_19vcGreen = __jarray(0.0)
s__Caster_20vcGreen = __jarray(0.0)
s__Caster_21vcGreen = __jarray(0.0)
s__Caster_22vcGreen = __jarray(0.0)
s__Caster_23vcGreen = __jarray(0.0)
s__Caster_24vcGreen = __jarray(0.0)
s__Caster_25vcGreen = __jarray(0.0)
s__Caster_26vcGreen = __jarray(0.0)
s__Caster_27vcGreen = __jarray(0.0)
s__Caster_28vcGreen = __jarray(0.0)
s__Caster_29vcGreen = __jarray(0.0)
s__Caster_30vcGreen = __jarray(0.0)
s__Caster_31vcGreen = __jarray(0.0)
s__Caster_32vcGreen = __jarray(0.0)
s__Caster_33vcGreen = __jarray(0.0)
s__Caster_34vcGreen = __jarray(0.0)
s__Caster_35vcGreen = __jarray(0.0)
s__Caster_36vcGreen = __jarray(0.0)
s__Caster_37vcGreen = __jarray(0.0)
s__Caster_vcGreen = __jarray(0.0)
s__Caster_2vcBlue = __jarray(0.0)
s__Caster_3vcBlue = __jarray(0.0)
s__Caster_4vcBlue = __jarray(0.0)
s__Caster_5vcBlue = __jarray(0.0)
s__Caster_6vcBlue = __jarray(0.0)
s__Caster_7vcBlue = __jarray(0.0)
s__Caster_8vcBlue = __jarray(0.0)
s__Caster_9vcBlue = __jarray(0.0)
s__Caster_10vcBlue = __jarray(0.0)
s__Caster_11vcBlue = __jarray(0.0)
s__Caster_12vcBlue = __jarray(0.0)
s__Caster_13vcBlue = __jarray(0.0)
s__Caster_14vcBlue = __jarray(0.0)
s__Caster_15vcBlue = __jarray(0.0)
s__Caster_16vcBlue = __jarray(0.0)
s__Caster_17vcBlue = __jarray(0.0)
s__Caster_18vcBlue = __jarray(0.0)
s__Caster_19vcBlue = __jarray(0.0)
s__Caster_20vcBlue = __jarray(0.0)
s__Caster_21vcBlue = __jarray(0.0)
s__Caster_22vcBlue = __jarray(0.0)
s__Caster_23vcBlue = __jarray(0.0)
s__Caster_24vcBlue = __jarray(0.0)
s__Caster_25vcBlue = __jarray(0.0)
s__Caster_26vcBlue = __jarray(0.0)
s__Caster_27vcBlue = __jarray(0.0)
s__Caster_28vcBlue = __jarray(0.0)
s__Caster_29vcBlue = __jarray(0.0)
s__Caster_30vcBlue = __jarray(0.0)
s__Caster_31vcBlue = __jarray(0.0)
s__Caster_32vcBlue = __jarray(0.0)
s__Caster_33vcBlue = __jarray(0.0)
s__Caster_34vcBlue = __jarray(0.0)
s__Caster_35vcBlue = __jarray(0.0)
s__Caster_36vcBlue = __jarray(0.0)
s__Caster_37vcBlue = __jarray(0.0)
s__Caster_vcBlue = __jarray(0.0)
s__Caster_2vcTransparency = __jarray(0.0)
s__Caster_3vcTransparency = __jarray(0.0)
s__Caster_4vcTransparency = __jarray(0.0)
s__Caster_5vcTransparency = __jarray(0.0)
s__Caster_6vcTransparency = __jarray(0.0)
s__Caster_7vcTransparency = __jarray(0.0)
s__Caster_8vcTransparency = __jarray(0.0)
s__Caster_9vcTransparency = __jarray(0.0)
s__Caster_10vcTransparency = __jarray(0.0)
s__Caster_11vcTransparency = __jarray(0.0)
s__Caster_12vcTransparency = __jarray(0.0)
s__Caster_13vcTransparency = __jarray(0.0)
s__Caster_14vcTransparency = __jarray(0.0)
s__Caster_15vcTransparency = __jarray(0.0)
s__Caster_16vcTransparency = __jarray(0.0)
s__Caster_17vcTransparency = __jarray(0.0)
s__Caster_18vcTransparency = __jarray(0.0)
s__Caster_19vcTransparency = __jarray(0.0)
s__Caster_20vcTransparency = __jarray(0.0)
s__Caster_21vcTransparency = __jarray(0.0)
s__Caster_22vcTransparency = __jarray(0.0)
s__Caster_23vcTransparency = __jarray(0.0)
s__Caster_24vcTransparency = __jarray(0.0)
s__Caster_25vcTransparency = __jarray(0.0)
s__Caster_26vcTransparency = __jarray(0.0)
s__Caster_27vcTransparency = __jarray(0.0)
s__Caster_28vcTransparency = __jarray(0.0)
s__Caster_29vcTransparency = __jarray(0.0)
s__Caster_30vcTransparency = __jarray(0.0)
s__Caster_31vcTransparency = __jarray(0.0)
s__Caster_32vcTransparency = __jarray(0.0)
s__Caster_33vcTransparency = __jarray(0.0)
s__Caster_34vcTransparency = __jarray(0.0)
s__Caster_35vcTransparency = __jarray(0.0)
s__Caster_36vcTransparency = __jarray(0.0)
s__Caster_37vcTransparency = __jarray(0.0)
s__Caster_vcTransparency = __jarray(0.0)
s__Caster_2casterUnit = {}
s__Caster_3casterUnit = {}
s__Caster_4casterUnit = {}
s__Caster_5casterUnit = {}
s__Caster_6casterUnit = {}
s__Caster_7casterUnit = {}
s__Caster_8casterUnit = {}
s__Caster_9casterUnit = {}
s__Caster_10casterUnit = {}
s__Caster_11casterUnit = {}
s__Caster_12casterUnit = {}
s__Caster_13casterUnit = {}
s__Caster_14casterUnit = {}
s__Caster_15casterUnit = {}
s__Caster_16casterUnit = {}
s__Caster_17casterUnit = {}
s__Caster_18casterUnit = {}
s__Caster_19casterUnit = {}
s__Caster_20casterUnit = {}
s__Caster_21casterUnit = {}
s__Caster_22casterUnit = {}
s__Caster_23casterUnit = {}
s__Caster_24casterUnit = {}
s__Caster_25casterUnit = {}
s__Caster_26casterUnit = {}
s__Caster_27casterUnit = {}
s__Caster_28casterUnit = {}
s__Caster_29casterUnit = {}
s__Caster_30casterUnit = {}
s__Caster_31casterUnit = {}
s__Caster_32casterUnit = {}
s__Caster_33casterUnit = {}
s__Caster_34casterUnit = {}
s__Caster_35casterUnit = {}
s__Caster_36casterUnit = {}
s__Caster_37casterUnit = {}
s__Caster_casterUnit = {}
s__Caster_2trg_unitWithinRange = {}
s__Caster_3trg_unitWithinRange = {}
s__Caster_4trg_unitWithinRange = {}
s__Caster_5trg_unitWithinRange = {}
s__Caster_6trg_unitWithinRange = {}
s__Caster_7trg_unitWithinRange = {}
s__Caster_8trg_unitWithinRange = {}
s__Caster_9trg_unitWithinRange = {}
s__Caster_10trg_unitWithinRange = {}
s__Caster_11trg_unitWithinRange = {}
s__Caster_12trg_unitWithinRange = {}
s__Caster_13trg_unitWithinRange = {}
s__Caster_14trg_unitWithinRange = {}
s__Caster_15trg_unitWithinRange = {}
s__Caster_16trg_unitWithinRange = {}
s__Caster_17trg_unitWithinRange = {}
s__Caster_18trg_unitWithinRange = {}
s__Caster_19trg_unitWithinRange = {}
s__Caster_20trg_unitWithinRange = {}
s__Caster_21trg_unitWithinRange = {}
s__Caster_22trg_unitWithinRange = {}
s__Caster_23trg_unitWithinRange = {}
s__Caster_24trg_unitWithinRange = {}
s__Caster_25trg_unitWithinRange = {}
s__Caster_26trg_unitWithinRange = {}
s__Caster_27trg_unitWithinRange = {}
s__Caster_28trg_unitWithinRange = {}
s__Caster_29trg_unitWithinRange = {}
s__Caster_30trg_unitWithinRange = {}
s__Caster_31trg_unitWithinRange = {}
s__Caster_32trg_unitWithinRange = {}
s__Caster_33trg_unitWithinRange = {}
s__Caster_34trg_unitWithinRange = {}
s__Caster_35trg_unitWithinRange = {}
s__Caster_36trg_unitWithinRange = {}
s__Caster_37trg_unitWithinRange = {}
s__Caster_trg_unitWithinRange = {}
s___Caster_escapersInRange = __jarray(0)
s__2_Caster_escapersInRange = __jarray(0)
s__3_Caster_escapersInRange = __jarray(0)
s__4_Caster_escapersInRange = __jarray(0)
s__5_Caster_escapersInRange = __jarray(0)
s__6_Caster_escapersInRange = __jarray(0)
s__7_Caster_escapersInRange = __jarray(0)
s__8_Caster_escapersInRange = __jarray(0)
s__9_Caster_escapersInRange = __jarray(0)
s__10_Caster_escapersInRange = __jarray(0)
s__11_Caster_escapersInRange = __jarray(0)
s__12_Caster_escapersInRange = __jarray(0)
s__13_Caster_escapersInRange = __jarray(0)
s__14_Caster_escapersInRange = __jarray(0)
s__15_Caster_escapersInRange = __jarray(0)
s__16_Caster_escapersInRange = __jarray(0)
s__17_Caster_escapersInRange = __jarray(0)
s__18_Caster_escapersInRange = __jarray(0)
s__19_Caster_escapersInRange = __jarray(0)
s__20_Caster_escapersInRange = __jarray(0)
s__21_Caster_escapersInRange = __jarray(0)
s__22_Caster_escapersInRange = __jarray(0)
s__23_Caster_escapersInRange = __jarray(0)
s__24_Caster_escapersInRange = __jarray(0)
s__25_Caster_escapersInRange = __jarray(0)
s__26_Caster_escapersInRange = __jarray(0)
s__27_Caster_escapersInRange = __jarray(0)
s__28_Caster_escapersInRange = __jarray(0)
s__29_Caster_escapersInRange = __jarray(0)
s__30_Caster_escapersInRange = __jarray(0)
s__31_Caster_escapersInRange = __jarray(0)
s__32_Caster_escapersInRange = __jarray(0)
s__33_Caster_escapersInRange = __jarray(0)
s__34_Caster_escapersInRange = __jarray(0)
s__35_Caster_escapersInRange = __jarray(0)
s__36_Caster_escapersInRange = __jarray(0)
s__37_Caster_escapersInRange = __jarray(0)
s___Caster_escapersInRange_size = 12
s__Caster_2escapersInRange = __jarray(0)
s__Caster_3escapersInRange = __jarray(0)
s__Caster_4escapersInRange = __jarray(0)
s__Caster_5escapersInRange = __jarray(0)
s__Caster_6escapersInRange = __jarray(0)
s__Caster_7escapersInRange = __jarray(0)
s__Caster_8escapersInRange = __jarray(0)
s__Caster_9escapersInRange = __jarray(0)
s__Caster_10escapersInRange = __jarray(0)
s__Caster_11escapersInRange = __jarray(0)
s__Caster_12escapersInRange = __jarray(0)
s__Caster_13escapersInRange = __jarray(0)
s__Caster_14escapersInRange = __jarray(0)
s__Caster_15escapersInRange = __jarray(0)
s__Caster_16escapersInRange = __jarray(0)
s__Caster_17escapersInRange = __jarray(0)
s__Caster_18escapersInRange = __jarray(0)
s__Caster_19escapersInRange = __jarray(0)
s__Caster_20escapersInRange = __jarray(0)
s__Caster_21escapersInRange = __jarray(0)
s__Caster_22escapersInRange = __jarray(0)
s__Caster_23escapersInRange = __jarray(0)
s__Caster_24escapersInRange = __jarray(0)
s__Caster_25escapersInRange = __jarray(0)
s__Caster_26escapersInRange = __jarray(0)
s__Caster_27escapersInRange = __jarray(0)
s__Caster_28escapersInRange = __jarray(0)
s__Caster_29escapersInRange = __jarray(0)
s__Caster_30escapersInRange = __jarray(0)
s__Caster_31escapersInRange = __jarray(0)
s__Caster_32escapersInRange = __jarray(0)
s__Caster_33escapersInRange = __jarray(0)
s__Caster_34escapersInRange = __jarray(0)
s__Caster_35escapersInRange = __jarray(0)
s__Caster_36escapersInRange = __jarray(0)
s__Caster_37escapersInRange = __jarray(0)
s__Caster_escapersInRange = __jarray(0)
s__Caster_2nbEscapersInRange = __jarray(0)
s__Caster_3nbEscapersInRange = __jarray(0)
s__Caster_4nbEscapersInRange = __jarray(0)
s__Caster_5nbEscapersInRange = __jarray(0)
s__Caster_6nbEscapersInRange = __jarray(0)
s__Caster_7nbEscapersInRange = __jarray(0)
s__Caster_8nbEscapersInRange = __jarray(0)
s__Caster_9nbEscapersInRange = __jarray(0)
s__Caster_10nbEscapersInRange = __jarray(0)
s__Caster_11nbEscapersInRange = __jarray(0)
s__Caster_12nbEscapersInRange = __jarray(0)
s__Caster_13nbEscapersInRange = __jarray(0)
s__Caster_14nbEscapersInRange = __jarray(0)
s__Caster_15nbEscapersInRange = __jarray(0)
s__Caster_16nbEscapersInRange = __jarray(0)
s__Caster_17nbEscapersInRange = __jarray(0)
s__Caster_18nbEscapersInRange = __jarray(0)
s__Caster_19nbEscapersInRange = __jarray(0)
s__Caster_20nbEscapersInRange = __jarray(0)
s__Caster_21nbEscapersInRange = __jarray(0)
s__Caster_22nbEscapersInRange = __jarray(0)
s__Caster_23nbEscapersInRange = __jarray(0)
s__Caster_24nbEscapersInRange = __jarray(0)
s__Caster_25nbEscapersInRange = __jarray(0)
s__Caster_26nbEscapersInRange = __jarray(0)
s__Caster_27nbEscapersInRange = __jarray(0)
s__Caster_28nbEscapersInRange = __jarray(0)
s__Caster_29nbEscapersInRange = __jarray(0)
s__Caster_30nbEscapersInRange = __jarray(0)
s__Caster_31nbEscapersInRange = __jarray(0)
s__Caster_32nbEscapersInRange = __jarray(0)
s__Caster_33nbEscapersInRange = __jarray(0)
s__Caster_34nbEscapersInRange = __jarray(0)
s__Caster_35nbEscapersInRange = __jarray(0)
s__Caster_36nbEscapersInRange = __jarray(0)
s__Caster_37nbEscapersInRange = __jarray(0)
s__Caster_nbEscapersInRange = __jarray(0)
s__Caster_2canShoot = __jarray(false)
s__Caster_3canShoot = __jarray(false)
s__Caster_4canShoot = __jarray(false)
s__Caster_5canShoot = __jarray(false)
s__Caster_6canShoot = __jarray(false)
s__Caster_7canShoot = __jarray(false)
s__Caster_8canShoot = __jarray(false)
s__Caster_9canShoot = __jarray(false)
s__Caster_10canShoot = __jarray(false)
s__Caster_11canShoot = __jarray(false)
s__Caster_12canShoot = __jarray(false)
s__Caster_13canShoot = __jarray(false)
s__Caster_14canShoot = __jarray(false)
s__Caster_15canShoot = __jarray(false)
s__Caster_16canShoot = __jarray(false)
s__Caster_17canShoot = __jarray(false)
s__Caster_18canShoot = __jarray(false)
s__Caster_19canShoot = __jarray(false)
s__Caster_20canShoot = __jarray(false)
s__Caster_21canShoot = __jarray(false)
s__Caster_22canShoot = __jarray(false)
s__Caster_23canShoot = __jarray(false)
s__Caster_24canShoot = __jarray(false)
s__Caster_25canShoot = __jarray(false)
s__Caster_26canShoot = __jarray(false)
s__Caster_27canShoot = __jarray(false)
s__Caster_28canShoot = __jarray(false)
s__Caster_29canShoot = __jarray(false)
s__Caster_30canShoot = __jarray(false)
s__Caster_31canShoot = __jarray(false)
s__Caster_32canShoot = __jarray(false)
s__Caster_33canShoot = __jarray(false)
s__Caster_34canShoot = __jarray(false)
s__Caster_35canShoot = __jarray(false)
s__Caster_36canShoot = __jarray(false)
s__Caster_37canShoot = __jarray(false)
s__Caster_canShoot = __jarray(false)
s__Caster_2t = {}
s__Caster_3t = {}
s__Caster_4t = {}
s__Caster_5t = {}
s__Caster_6t = {}
s__Caster_7t = {}
s__Caster_8t = {}
s__Caster_9t = {}
s__Caster_10t = {}
s__Caster_11t = {}
s__Caster_12t = {}
s__Caster_13t = {}
s__Caster_14t = {}
s__Caster_15t = {}
s__Caster_16t = {}
s__Caster_17t = {}
s__Caster_18t = {}
s__Caster_19t = {}
s__Caster_20t = {}
s__Caster_21t = {}
s__Caster_22t = {}
s__Caster_23t = {}
s__Caster_24t = {}
s__Caster_25t = {}
s__Caster_26t = {}
s__Caster_27t = {}
s__Caster_28t = {}
s__Caster_29t = {}
s__Caster_30t = {}
s__Caster_31t = {}
s__Caster_32t = {}
s__Caster_33t = {}
s__Caster_34t = {}
s__Caster_35t = {}
s__Caster_36t = {}
s__Caster_37t = {}
s__Caster_t = {}
s__Caster_2enabled = __jarray(false)
s__Caster_3enabled = __jarray(false)
s__Caster_4enabled = __jarray(false)
s__Caster_5enabled = __jarray(false)
s__Caster_6enabled = __jarray(false)
s__Caster_7enabled = __jarray(false)
s__Caster_8enabled = __jarray(false)
s__Caster_9enabled = __jarray(false)
s__Caster_10enabled = __jarray(false)
s__Caster_11enabled = __jarray(false)
s__Caster_12enabled = __jarray(false)
s__Caster_13enabled = __jarray(false)
s__Caster_14enabled = __jarray(false)
s__Caster_15enabled = __jarray(false)
s__Caster_16enabled = __jarray(false)
s__Caster_17enabled = __jarray(false)
s__Caster_18enabled = __jarray(false)
s__Caster_19enabled = __jarray(false)
s__Caster_20enabled = __jarray(false)
s__Caster_21enabled = __jarray(false)
s__Caster_22enabled = __jarray(false)
s__Caster_23enabled = __jarray(false)
s__Caster_24enabled = __jarray(false)
s__Caster_25enabled = __jarray(false)
s__Caster_26enabled = __jarray(false)
s__Caster_27enabled = __jarray(false)
s__Caster_28enabled = __jarray(false)
s__Caster_29enabled = __jarray(false)
s__Caster_30enabled = __jarray(false)
s__Caster_31enabled = __jarray(false)
s__Caster_32enabled = __jarray(false)
s__Caster_33enabled = __jarray(false)
s__Caster_34enabled = __jarray(false)
s__Caster_35enabled = __jarray(false)
s__Caster_36enabled = __jarray(false)
s__Caster_37enabled = __jarray(false)
s__Caster_enabled = __jarray(false)
si__ClearMobArray = 102
si__ClearMobArray_F = 0
si__ClearMobArray_I = 0
si__ClearMobArray_V = __jarray(0)
s___ClearMobArray_clearMobs = __jarray(0)
s___ClearMobArray_clearMobs_size = 160
s__ClearMobArray_clearMobs = __jarray(0)
s__ClearMobArray_lastInstance = __jarray(0)
si__MakeClearMob = 104
s__MakeClearMob_disableDuration = __jarray(0.0)
s__MakeClearMob_clearMob = __jarray(0)
s___MakeClearMob_clickedMobs = __jarray(0)
s___MakeClearMob_clickedMobs_size = 500
s__MakeClearMob_clickedMobs = __jarray(0)
si__MakeClearMob_arrI = 0
si__MakeClearMob_arrN = 0
si__MakeClearMob_arr = __jarray(0)
si__MakeClearMob_arrV = __jarray(0)
s__MakeClearMob_lastClickedMobInd = __jarray(0)
s__MakeClearMob_pointeurClickedMob = __jarray(0)
si__MakeDeleteClearMob = 106
si__MonsterMultiplePatrolsArray = 107
si__MonsterMultiplePatrolsArray_F = 0
si__MonsterMultiplePatrolsArray_I = 0
si__MonsterMultiplePatrolsArray_V = __jarray(0)
si__MonsterMultiplePatrolsArray_2V = __jarray(0)
si__MonsterMultiplePatrolsArray_3V = __jarray(0)
si__MonsterMultiplePatrolsArray_4V = __jarray(0)
s___MonsterMultiplePatrolsArray_monsters = __jarray(0)
s__2_MonsterMultiplePatrolsArray_monsters = __jarray(0)
s__3_MonsterMultiplePatrolsArray_monsters = __jarray(0)
s__4_MonsterMultiplePatrolsArray_monsters = __jarray(0)
s___MonsterMultiplePatrolsArray_monsters_size = 500
s__MonsterMultiplePatrolsArray_2monsters = __jarray(0)
s__MonsterMultiplePatrolsArray_3monsters = __jarray(0)
s__MonsterMultiplePatrolsArray_4monsters = __jarray(0)
s__MonsterMultiplePatrolsArray_monsters = __jarray(0)
s__MonsterMultiplePatrolsArray_2lastInstance = __jarray(0)
s__MonsterMultiplePatrolsArray_3lastInstance = __jarray(0)
s__MonsterMultiplePatrolsArray_4lastInstance = __jarray(0)
s__MonsterMultiplePatrolsArray_lastInstance = __jarray(0)
si__MonsterNoMoveArray = 109
si__MonsterNoMoveArray_F = 0
si__MonsterNoMoveArray_I = 0
si__MonsterNoMoveArray_V = __jarray(0)
si__MonsterNoMoveArray_2V = __jarray(0)
si__MonsterNoMoveArray_3V = __jarray(0)
si__MonsterNoMoveArray_4V = __jarray(0)
s___MonsterNoMoveArray_monsters = __jarray(0)
s__2_MonsterNoMoveArray_monsters = __jarray(0)
s__3_MonsterNoMoveArray_monsters = __jarray(0)
s__4_MonsterNoMoveArray_monsters = __jarray(0)
s___MonsterNoMoveArray_monsters_size = 500
s__MonsterNoMoveArray_2monsters = __jarray(0)
s__MonsterNoMoveArray_3monsters = __jarray(0)
s__MonsterNoMoveArray_4monsters = __jarray(0)
s__MonsterNoMoveArray_monsters = __jarray(0)
s__MonsterNoMoveArray_2lastInstance = __jarray(0)
s__MonsterNoMoveArray_3lastInstance = __jarray(0)
s__MonsterNoMoveArray_4lastInstance = __jarray(0)
s__MonsterNoMoveArray_lastInstance = __jarray(0)
si__MonsterSimplePatrolArray = 111
si__MonsterSimplePatrolArray_F = 0
si__MonsterSimplePatrolArray_I = 0
si__MonsterSimplePatrolArray_V = __jarray(0)
si__MonsterSimplePatrolArray_2V = __jarray(0)
si__MonsterSimplePatrolArray_3V = __jarray(0)
si__MonsterSimplePatrolArray_4V = __jarray(0)
s___MonsterSimplePatrolArray_monsters = __jarray(0)
s__2_MonsterSimplePatrolArray_monsters = __jarray(0)
s__3_MonsterSimplePatrolArray_monsters = __jarray(0)
s__4_MonsterSimplePatrolArray_monsters = __jarray(0)
s___MonsterSimplePatrolArray_monsters_size = 500
s__MonsterSimplePatrolArray_2monsters = __jarray(0)
s__MonsterSimplePatrolArray_3monsters = __jarray(0)
s__MonsterSimplePatrolArray_4monsters = __jarray(0)
s__MonsterSimplePatrolArray_monsters = __jarray(0)
s__MonsterSimplePatrolArray_2lastInstance = __jarray(0)
s__MonsterSimplePatrolArray_3lastInstance = __jarray(0)
s__MonsterSimplePatrolArray_4lastInstance = __jarray(0)
s__MonsterSimplePatrolArray_lastInstance = __jarray(0)
si__MonsterTeleportArray = 113
si__MonsterTeleportArray_F = 0
si__MonsterTeleportArray_I = 0
si__MonsterTeleportArray_V = __jarray(0)
si__MonsterTeleportArray_2V = __jarray(0)
si__MonsterTeleportArray_3V = __jarray(0)
si__MonsterTeleportArray_4V = __jarray(0)
s___MonsterTeleportArray_monsters = __jarray(0)
s__2_MonsterTeleportArray_monsters = __jarray(0)
s__3_MonsterTeleportArray_monsters = __jarray(0)
s__4_MonsterTeleportArray_monsters = __jarray(0)
s___MonsterTeleportArray_monsters_size = 500
s__MonsterTeleportArray_2monsters = __jarray(0)
s__MonsterTeleportArray_3monsters = __jarray(0)
s__MonsterTeleportArray_4monsters = __jarray(0)
s__MonsterTeleportArray_monsters = __jarray(0)
s__MonsterTeleportArray_2lastInstance = __jarray(0)
s__MonsterTeleportArray_3lastInstance = __jarray(0)
s__MonsterTeleportArray_4lastInstance = __jarray(0)
s__MonsterTeleportArray_lastInstance = __jarray(0)
si__CasterArray = 115
si__CasterArray_F = 0
si__CasterArray_I = 0
si__CasterArray_V = __jarray(0)
si__CasterArray_2V = __jarray(0)
si__CasterArray_3V = __jarray(0)
si__CasterArray_4V = __jarray(0)
s___CasterArray_casters = __jarray(0)
s__2_CasterArray_casters = __jarray(0)
s__3_CasterArray_casters = __jarray(0)
s__4_CasterArray_casters = __jarray(0)
s___CasterArray_casters_size = 500
s__CasterArray_2casters = __jarray(0)
s__CasterArray_3casters = __jarray(0)
s__CasterArray_4casters = __jarray(0)
s__CasterArray_casters = __jarray(0)
s__CasterArray_2lastInstance = __jarray(0)
s__CasterArray_3lastInstance = __jarray(0)
s__CasterArray_4lastInstance = __jarray(0)
s__CasterArray_lastInstance = __jarray(0)
si__EscaperSavedCommands = 117
si__EscaperSavedCommands_F = 0
si__EscaperSavedCommands_I = 0
si__EscaperSavedCommands_V = __jarray(0)
s__EscaperSavedCommands_savedCommands = {}
s__TimerUtils___data = __jarray(0)
s__TimerUtils___tT = {}
s__ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__2ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__3ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__4ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__5ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__6ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__7ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__8ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__9ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__10ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__11ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__12ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__13ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__14ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__15ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__16ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__17ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__18ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__19ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__20ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__21ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__22ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__23ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__24ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__25ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__26ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__27ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__28ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__29ReinitTerrainsPositions___TERRAIN_SAVE = __jarray(0)
s__SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__2SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__3SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__4SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__5SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__6SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__7SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__8SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__9SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__10SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__11SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__12SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__13SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__14SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__15SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__16SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__17SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__18SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__19SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__20SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__21SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__22SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__23SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__24SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__25SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__26SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__27SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__28SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__29SaveLoadTerrainWithoutName___terrainSave = __jarray(0)
s__s__MonsterMultiplePatrols_X = __jarray(0.0)
s__s__MonsterMultiplePatrols_Y = __jarray(0.0)
s__s__MonsterTeleport_X = __jarray(0.0)
s__s__MonsterTeleport_Y = __jarray(0.0)
si__TerrainType_type = __jarray(0)
st__TerrainType_onDestroy = {}
st__Meteor_onDestroy = nil
st__MonsterOrCasterStack_onDestroy = nil
st__MonsterOrCasterStack_destroy = nil
st__Stack_onDestroy = nil
st__Trigger_onDestroy = nil
st__TriggerArray_onDestroy = nil
st__VisibilityModifier_onDestroy = nil
st__CasterType_onDestroy = nil
st__MakeLastActions_onDestroy = nil
st__MakeMeteorAction_getLevel = nil
st__MakeMonsterAction_getLevel = nil
st__MakeTerrainHeightAction_apply = nil
st__MakeVisibilityModifierAction_getLevel = nil
st__MeteorArray_setMeteorNull = nil
st__MeteorArray_onDestroy = nil
st__MonsterType_onDestroy = nil
st__SoundUtils___soundrecycler_onDestroy = nil
st__StringArrayForCache_create = nil
st__StringArrayForCache_push = nil
st__StringArrayForCache_writeInCache = nil
st__VisibilityModifierArray_onDestroy = nil
st__VisibilityModifierArray_count = nil
st__VisibilityModifierArray_get = nil
st__VisibilityModifierArray_getLastInstanceId = nil
st__VisibilityModifierArray_setNull = nil
st__Lives_getLeaderboard = nil
st__Lives_onDestroy = nil
st__TerrainType_getTerrainTypeId = nil
st__TerrainType_getKind = nil
st__CasterShot_create = nil
st__CasterShot_onDestroy = nil
st__CasterShot_destroy = nil
st__EscaperEffect_onDestroy = nil
st__MakeTerrainHorizontalSymmetryAction_applySymmetry = nil
st__MakeTerrainVerticalSymmetryAction_applySymmetry = nil
st__MonsterSpawn_onDestroy = nil
st__MonsterSpawn_startMobMovement = nil
st__MonsterSpawn_createMob = nil
st__MonsterSpawn_toString = nil
st__TerrainTypeSlide_getSlideSpeed = nil
st__TerrainTypeSlide_getCanTurn = nil
st__TerrainTypeWalk_getWalkSpeed = nil
st__EscaperEffectArray_onDestroy = nil
st__MonsterSpawnArray_get = nil
st__MonsterSpawnArray_getLastInstanceId = nil
st__MonsterSpawnArray_count = nil
st__MonsterSpawnArray_onDestroy = nil
st__MonsterSpawnArray_setMonsterSpawnNull = nil
st__KillingTimers_onDestroy = nil
st__Escaper_onDestroy = nil
st__Escaper_enableSlide = nil
st__Escaper_enableCheckTerrain = nil
st__Escaper_isSliding = nil
st__Escaper_doesCheckTerrain = nil
st__Escaper_moveHero = nil
st__Escaper_moveInvisUnit = nil
st__Escaper_getHero = nil
st__Escaper_isAlive = nil
st__Escaper_kill = nil
st__Escaper_pause = nil
st__Escaper_reverse = nil
st__Escaper_setIsHeroSelectedForPlayer = nil
st__Escaper_destroyTerrainKillEffect = nil
st__Escaper_getLastTerrainType = nil
st__Escaper_setLastTerrainType = nil
st__Escaper_setSlideSpeed = nil
st__Escaper_setWalkSpeed = nil
st__Escaper_getSlideSpeed = nil
st__Escaper_getRealSlideSpeed = nil
st__Escaper_getWalkSpeed = nil
st__Escaper_isAbsoluteSlideSpeed = nil
st__Escaper_isAbsoluteWalkSpeed = nil
st__Escaper_isGodModeOn = nil
st__Escaper_setBaseColorDisco = nil
st__Escaper_getBaseColor = nil
st__Escaper_setVcRed = nil
st__Escaper_setVcGreen = nil
st__Escaper_setVcBlue = nil
st__Escaper_setVcTransparency = nil
st__Escaper_getVcRed = nil
st__Escaper_getVcGreen = nil
st__Escaper_getVcBlue = nil
st__Escaper_getVcTransparency = nil
st__Escaper_getPlayer = nil
st__Escaper_getMakingLevel = nil
st__Escaper_destroyMake = nil
st__Escaper_destroyAllSavedActions = nil
st__Escaper_getLastZ = nil
st__Escaper_setLastZ = nil
st__Escaper_getOldDiffZ = nil
st__Escaper_setOldDiffZ = nil
st__Escaper_getSpeedZ = nil
st__Escaper_setSpeedZ = nil
st__Escaper_setCoopInvul = nil
st__Escaper_refreshCerclePosition = nil
st__TerrainTypeDeath_getKillingEffectStr = nil
st__TerrainTypeDeath_getTimeToKill = nil
st__TerrainTypeDeath_killEscaper = nil
st__TerrainTypeDeath_getTimer = nil
st__TerrainTypeDeath_getToleranceDist = nil
st__EscaperArray_get = nil
st__EscaperArray_nullify = nil
st__Start_getRandomX = nil
st__Start_getRandomY = nil
st__Level_activate = nil
st__Level_getStart = nil
st__Level_getStartRandomX = nil
st__Level_getStartRandomY = nil
st__Level_newStart = nil
st__Level_newEnd = nil
st__Level_getEnd = nil
st__Level_getNbMonsters = nil
st__Level_onDestroy = nil
st__Level_recreateMonstersOfType = nil
st__Level_refreshCastersOfType = nil
st__Level_getId = nil
st__Level_setNbLivesEarned = nil
st__Level_getNbLives = nil
st__Level_newVisibilityModifier = nil
st__Level_newVisibilityModifierFromExisting = nil
st__Level_removeVisibilities = nil
st__Level_activateVisibilities = nil
st__Level_setStartMessage = nil
st__Level_getStartMessage = nil
st__TerrainTypeArray_get = nil
st__TerrainTypeArray_getTerrainType = nil
st__TerrainTypeArray_isTerrainTypeIdAlreadyUsed = nil
st__TerrainTypeArray_isLabelAlreadyUsed = nil
st__TerrainTypeArray_newWalk = nil
st__TerrainTypeArray_newDeath = nil
st__TerrainTypeArray_newSlide = nil
st__TerrainTypeArray_getWalk = nil
st__TerrainTypeArray_getDeath = nil
st__TerrainTypeArray_getSlide = nil
st__TerrainTypeArray_displayForPlayer = nil
st__TerrainTypeArray_saveInCache = nil
st__TerrainTypeArray_count = nil
st__TerrainTypeArray_getMainTileset = nil
st__ClearMob_getTriggerMob = nil
st__ClearMob_getBlockMobs = nil
st__ClearMob_initialize = nil
st__ClearMob_onDestroy = nil
st__ClearMob_isBeingActivated = nil
st__LevelArray_goToLevel = nil
st__LevelArray_goToNextLevel = nil
st__LevelArray_restartTheGame = nil
st__LevelArray_new = nil
st__LevelArray_destroyLastLevel = nil
st__LevelArray_count = nil
st__LevelArray_getCurrentLevel = nil
st__LevelArray_get = nil
st__LevelArray_getLevelFromMonsterSpawnArray = nil
st__LevelArray_getLevelFromMeteorArray = nil
st__LevelArray_getLevelFromVisibilityModifierArray = nil
st__LevelArray_removeMonstersOfType = nil
st__LevelArray_removeCastersOfType = nil
st__LevelArray_getLastLevelId = nil
st__LevelArray_getNbMonsters = nil
st__MakeCaster_getCasterType = nil
st__MakeCaster_getAngle = nil
st__MakeCaster_create = nil
st__MakeDeleteCasters_isLastLocSavedUsed = nil
st__MakeDeleteCasters_create = nil
st__MakeDeleteCasters_saveLoc = nil
st__MakeDeleteCasters_unsaveLocDefinitely = nil
st__MakeDeleteCasters_getMode = nil
st__MakeDeleteMeteors_isLastLocSavedUsed = nil
st__MakeDeleteMeteors_create = nil
st__MakeDeleteMeteors_saveLoc = nil
st__MakeDeleteMeteors_unsaveLocDefinitely = nil
st__MakeDeleteMeteors_getMode = nil
st__MakeDeleteMonsters_isLastLocSavedUsed = nil
st__MakeDeleteMonsters_create = nil
st__MakeDeleteMonsters_saveLoc = nil
st__MakeDeleteMonsters_unsaveLocDefinitely = nil
st__MakeDeleteMonsters_getMode = nil
st__MakeEnd_create = nil
st__MakeEnd_saveLoc = nil
st__MakeEnd_isLastLocSavedUsed = nil
st__MakeExchangeTerrains_create = nil
st__MakeExchangeTerrains_saveLoc = nil
st__MakeExchangeTerrains_unsaveLocDefinitely = nil
st__MakeExchangeTerrains_isLastLocSavedUsed = nil
st__MakeGetTerrainType_create = nil
st__MakeGetUnitTeleportPeriod_create = nil
st__MakeMeteor_create = nil
st__MakeMonsterMultiplePatrols_getMonsterType = nil
st__MakeMonsterMultiplePatrols_getMode = nil
st__MakeMonsterMultiplePatrols_getMonster = nil
st__MakeMonsterMultiplePatrols_create = nil
st__MakeMonsterMultiplePatrols_nextMonster = nil
st__MakeMonsterMultiplePatrols_getLocPointeur = nil
st__MakeMonsterMultiplePatrols_saveLoc = nil
st__MakeMonsterMultiplePatrols_setMonster = nil
st__MakeMonsterNoMove_getMonsterType = nil
st__MakeMonsterNoMove_getFacingAngle = nil
st__MakeMonsterNoMove_create = nil
st__MakeMonsterSimplePatrol_getMonsterType = nil
st__MakeMonsterSimplePatrol_create = nil
st__MakeMonsterSimplePatrol_saveLoc = nil
st__MakeMonsterSimplePatrol_unsaveLoc = nil
st__MakeMonsterSimplePatrol_unsaveLocDefinitely = nil
st__MakeMonsterSimplePatrol_isLastLocSavedUsed = nil
st__MakeMonsterSimplePatrol_getMode = nil
st__MakeMonsterSpawn_create = nil
st__MakeMonsterSpawn_saveLoc = nil
st__MakeMonsterSpawn_isLastLocSavedUsed = nil
st__MakeMonsterTeleport_getMonsterType = nil
st__MakeMonsterTeleport_getPeriod = nil
st__MakeMonsterTeleport_getAngle = nil
st__MakeMonsterTeleport_getMode = nil
st__MakeMonsterTeleport_getMonster = nil
st__MakeMonsterTeleport_create = nil
st__MakeMonsterTeleport_nextMonster = nil
st__MakeMonsterTeleport_addWaitPeriod = nil
st__MakeMonsterTeleport_addHidePeriod = nil
st__MakeMonsterTeleport_getLocPointeur = nil
st__MakeMonsterTeleport_saveLoc = nil
st__MakeMonsterTeleport_setMonster = nil
st__MakeSetUnitMonsterType_getMonsterType = nil
st__MakeSetUnitMonsterType_isLastLocSavedUsed = nil
st__MakeSetUnitMonsterType_create = nil
st__MakeSetUnitMonsterType_saveLoc = nil
st__MakeSetUnitMonsterType_unsaveLocDefinitely = nil
st__MakeSetUnitMonsterType_getMode = nil
st__MakeSetUnitTeleportPeriod_getPeriod = nil
st__MakeSetUnitTeleportPeriod_isLastLocSavedUsed = nil
st__MakeSetUnitTeleportPeriod_create = nil
st__MakeSetUnitTeleportPeriod_saveLoc = nil
st__MakeSetUnitTeleportPeriod_unsaveLocDefinitely = nil
st__MakeSetUnitTeleportPeriod_getMode = nil
st__MakeStart_create = nil
st__MakeStart_saveLoc = nil
st__MakeStart_isLastLocSavedUsed = nil
st__MakeStart_forNext = nil
st__MakeTerrainCopyPaste_create = nil
st__MakeTerrainCopyPaste_saveLoc = nil
st__MakeTerrainCreate_isLastLocSavedUsed = nil
st__MakeTerrainCreate_getTerrainType = nil
st__MakeTerrainCreate_create = nil
st__MakeTerrainCreate_saveLoc = nil
st__MakeTerrainCreate_unsaveLocDefinitely = nil
st__MakeTerrainHeight_create = nil
st__MakeTerrainHeight_getRadius = nil
st__MakeTerrainHeight_getHeight = nil
st__MakeTerrainHorizontalSymmetry_isLastLocSavedUsed = nil
st__MakeTerrainHorizontalSymmetry_create = nil
st__MakeTerrainHorizontalSymmetry_saveLoc = nil
st__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely = nil
st__MakeTerrainVerticalSymmetry_isLastLocSavedUsed = nil
st__MakeTerrainVerticalSymmetry_create = nil
st__MakeTerrainVerticalSymmetry_saveLoc = nil
st__MakeTerrainVerticalSymmetry_unsaveLocDefinitely = nil
st__MakeVisibilityModifier_create = nil
st__MakeVisibilityModifier_saveLoc = nil
st__MakeVisibilityModifier_unsaveLocDefinitely = nil
st__MakeVisibilityModifier_isLastLocSavedUsed = nil
st__MonsterMultiplePatrols_storeNewLoc = nil
st__MonsterMultiplePatrols_destroyLocs = nil
st__MonsterMultiplePatrols_getCurrentTrigger = nil
st__MonsterMultiplePatrols_nextMove = nil
st__MonsterMultiplePatrols_destroyLastLoc = nil
st__MonsterMultiplePatrols_addNewLoc = nil
st__MonsterMultiplePatrols_destroy = nil
st__MonsterOrCaster_create = nil
st__MonsterOrCaster_getId = nil
st__MonsterOrCaster_killUnit = nil
st__MonsterOrCaster_temporarilyDisable = nil
st__MonsterOrCaster_temporarilyEnable = nil
st__MonsterOrCaster_setBaseColor = nil
st__MonsterOrCaster_setVertexColor = nil
st__MonsterOrCaster_reinitColor = nil
st__MonsterOrCaster_getUnit = nil
st__MonsterOrCaster_copy = nil
st__MonsterOrCaster_getMonsterType = nil
st__MonsterTeleport_storeNewLoc = nil
st__MonsterTeleport_destroyLocs = nil
st__MonsterTeleport_setPeriod = nil
st__MonsterTeleport_getPeriod = nil
st__MonsterTeleport_nextMove = nil
st__MonsterTeleport_getX = nil
st__MonsterTeleport_getY = nil
st__MonsterTeleport_addNewLoc = nil
st__MonsterTeleport_destroyLastLoc = nil
st__MonsterTeleport_destroy = nil
st__Caster_isEnabled = nil
st__Caster_getId = nil
st__Caster_getX = nil
st__Caster_getY = nil
st__Caster_getRange = nil
st__Caster_getProjectileSpeed = nil
st__Caster_getCasterUnit = nil
st__Caster_getProjectileMonsterType = nil
st__Caster_getLoadTime = nil
st__Caster_getCasterType = nil
st__Caster_getAnimation = nil
st__Caster_enable = nil
st__Caster_disable = nil
st__Caster_killUnit = nil
st__Caster_onDestroy = nil
st__Caster_escaperOutOfRangeOrDead = nil
st__Caster_temporarilyDisable = nil
st__Caster_temporarilyEnable = nil
st__Caster_setBaseColor = nil
st__Caster_setVertexColor = nil
st__Caster_reinitColor = nil
st__Caster_toString = nil
st__Caster_destroy = nil
st__ClearMobArray_create = nil
st__ClearMobArray_onDestroy = nil
st__ClearMobArray_setClearMobNull = nil
st__ClearMobArray_initializeClearMobs = nil
st__MakeClearMob_create = nil
st__MakeClearMob_clickMade = nil
st__MakeDeleteClearMob_create = nil
st__MakeDeleteClearMob_clickMade = nil
st__MonsterMultiplePatrolsArray_create = nil
st__MonsterMultiplePatrolsArray_get = nil
st__MonsterMultiplePatrolsArray_getLastInstanceId = nil
st__MonsterMultiplePatrolsArray_new = nil
st__MonsterMultiplePatrolsArray_count = nil
st__MonsterMultiplePatrolsArray_onDestroy = nil
st__MonsterMultiplePatrolsArray_setMonsterNull = nil
st__MonsterMultiplePatrolsArray_getMonsterNear = nil
st__MonsterMultiplePatrolsArray_createMonsters = nil
st__MonsterMultiplePatrolsArray_removeMonsters = nil
st__MonsterMultiplePatrolsArray_recreateMonstersOfType = nil
st__MonsterMultiplePatrolsArray_removeMonstersOfType = nil
st__MonsterMultiplePatrolsArray_destroy = nil
st__MonsterNoMoveArray_create = nil
st__MonsterNoMoveArray_get = nil
st__MonsterNoMoveArray_getLastInstanceId = nil
st__MonsterNoMoveArray_new = nil
st__MonsterNoMoveArray_count = nil
st__MonsterNoMoveArray_onDestroy = nil
st__MonsterNoMoveArray_setMonsterNull = nil
st__MonsterNoMoveArray_getMonsterNear = nil
st__MonsterNoMoveArray_createMonsters = nil
st__MonsterNoMoveArray_removeMonsters = nil
st__MonsterNoMoveArray_recreateMonstersOfType = nil
st__MonsterNoMoveArray_removeMonstersOfType = nil
st__MonsterNoMoveArray_destroy = nil
st__MonsterSimplePatrolArray_create = nil
st__MonsterSimplePatrolArray_get = nil
st__MonsterSimplePatrolArray_getLastInstanceId = nil
st__MonsterSimplePatrolArray_new = nil
st__MonsterSimplePatrolArray_count = nil
st__MonsterSimplePatrolArray_onDestroy = nil
st__MonsterSimplePatrolArray_setMonsterNull = nil
st__MonsterSimplePatrolArray_getMonsterNear = nil
st__MonsterSimplePatrolArray_createMonsters = nil
st__MonsterSimplePatrolArray_removeMonsters = nil
st__MonsterSimplePatrolArray_recreateMonstersOfType = nil
st__MonsterSimplePatrolArray_removeMonstersOfType = nil
st__MonsterSimplePatrolArray_destroy = nil
st__MonsterTeleportArray_create = nil
st__MonsterTeleportArray_get = nil
st__MonsterTeleportArray_getLastInstanceId = nil
st__MonsterTeleportArray_new = nil
st__MonsterTeleportArray_count = nil
st__MonsterTeleportArray_onDestroy = nil
st__MonsterTeleportArray_setMonsterNull = nil
st__MonsterTeleportArray_getMonsterNear = nil
st__MonsterTeleportArray_createMonsters = nil
st__MonsterTeleportArray_removeMonsters = nil
st__MonsterTeleportArray_recreateMonstersOfType = nil
st__MonsterTeleportArray_removeMonstersOfType = nil
st__MonsterTeleportArray_destroy = nil
st__CasterArray_create = nil
st__CasterArray_get = nil
st__CasterArray_getLastInstanceId = nil
st__CasterArray_new = nil
st__CasterArray_count = nil
st__CasterArray_onDestroy = nil
st__CasterArray_setCasterNull = nil
st__CasterArray_getCasterNear = nil
st__CasterArray_createCasters = nil
st__CasterArray_removeCasters = nil
st__CasterArray_refreshCastersOfType = nil
st__CasterArray_removeCastersOfType = nil
st__EscaperSavedCommands_new = nil
st__EscaperSavedCommands_execute = nil
st___prototype2 = {}
st___prototype3 = {}
st___prototype51 = {}
f__arg_integer1 = nil
f__arg_integer2 = nil
f__arg_string1 = nil
f__arg_string2 = nil
f__arg_boolean1 = nil
f__arg_boolean2 = nil
f__arg_real1 = nil
f__arg_real2 = nil
f__arg_real3 = nil
f__arg_real4 = nil
f__arg_real5 = nil
f__arg_unit1 = nil
f__arg_player1 = nil
f__arg_timer1 = nil
f__arg_sound1 = nil
f__arg_this = nil
f__result_boolean = nil
f__result_integer = nil
f__result_leaderboard = nil
f__result_string = nil
f__result_unit = nil
f__result_real = nil
f__result_player = nil
f__result_timer = nil
f__result_trigger = nil



-- TRANSPILER FIX
local oldSubString = SubString
SubString = function(source, start, _end)
    if start > StringLength(source) then
        return nil
    end
    local result = oldSubString(source, start, _end)
    return result
end
function sg__ReinitTerrainsPositions___TERRAIN_SAVE_get(i)
  if (i < 8191) then
    return s__ReinitTerrainsPositions___TERRAIN_SAVE[i]
  elseif (i < 122865) then
    if (i < 16382) then
      return s__2ReinitTerrainsPositions___TERRAIN_SAVE[i - 8191]
    elseif (i < 65528) then
      if (i < 24573) then
        return s__3ReinitTerrainsPositions___TERRAIN_SAVE[i - 16382]
      elseif (i < 40955) then
        if (i < 32764) then
          return s__4ReinitTerrainsPositions___TERRAIN_SAVE[i - 24573]
        else
          return s__5ReinitTerrainsPositions___TERRAIN_SAVE[i - 32764]
        end
      elseif (i < 49146) then
        return s__6ReinitTerrainsPositions___TERRAIN_SAVE[i - 40955]
      elseif (i < 57337) then
        return s__7ReinitTerrainsPositions___TERRAIN_SAVE[i - 49146]
      else
        return s__8ReinitTerrainsPositions___TERRAIN_SAVE[i - 57337]
      end
    elseif (i < 73719) then
      return s__9ReinitTerrainsPositions___TERRAIN_SAVE[i - 65528]
    elseif (i < 98292) then
      if (i < 81910) then
        return s__10ReinitTerrainsPositions___TERRAIN_SAVE[i - 73719]
      elseif (i < 90101) then
        return s__11ReinitTerrainsPositions___TERRAIN_SAVE[i - 81910]
      else
        return s__12ReinitTerrainsPositions___TERRAIN_SAVE[i - 90101]
      end
    elseif (i < 106483) then
      return s__13ReinitTerrainsPositions___TERRAIN_SAVE[i - 98292]
    elseif (i < 114674) then
      return s__14ReinitTerrainsPositions___TERRAIN_SAVE[i - 106483]
    else
      return s__15ReinitTerrainsPositions___TERRAIN_SAVE[i - 114674]
    end
  elseif (i < 131056) then
    return s__16ReinitTerrainsPositions___TERRAIN_SAVE[i - 122865]
  elseif (i < 180202) then
    if (i < 139247) then
      return s__17ReinitTerrainsPositions___TERRAIN_SAVE[i - 131056]
    elseif (i < 155629) then
      if (i < 147438) then
        return s__18ReinitTerrainsPositions___TERRAIN_SAVE[i - 139247]
      else
        return s__19ReinitTerrainsPositions___TERRAIN_SAVE[i - 147438]
      end
    elseif (i < 163820) then
      return s__20ReinitTerrainsPositions___TERRAIN_SAVE[i - 155629]
    elseif (i < 172011) then
      return s__21ReinitTerrainsPositions___TERRAIN_SAVE[i - 163820]
    else
      return s__22ReinitTerrainsPositions___TERRAIN_SAVE[i - 172011]
    end
  elseif (i < 188393) then
    return s__23ReinitTerrainsPositions___TERRAIN_SAVE[i - 180202]
  elseif (i < 212966) then
    if (i < 196584) then
      return s__24ReinitTerrainsPositions___TERRAIN_SAVE[i - 188393]
    elseif (i < 204775) then
      return s__25ReinitTerrainsPositions___TERRAIN_SAVE[i - 196584]
    else
      return s__26ReinitTerrainsPositions___TERRAIN_SAVE[i - 204775]
    end
  elseif (i < 221157) then
    return s__27ReinitTerrainsPositions___TERRAIN_SAVE[i - 212966]
  elseif (i < 229348) then
    return s__28ReinitTerrainsPositions___TERRAIN_SAVE[i - 221157]
  else
    return s__29ReinitTerrainsPositions___TERRAIN_SAVE[i - 229348]
  end
end

function sg__ReinitTerrainsPositions___TERRAIN_SAVE_set(i, v)
  if (i < 8191) then
    s__ReinitTerrainsPositions___TERRAIN_SAVE[i] = v
  elseif (i < 122865) then
    if (i < 16382) then
      s__2ReinitTerrainsPositions___TERRAIN_SAVE[i - 8191] = v
    elseif (i < 65528) then
      if (i < 24573) then
        s__3ReinitTerrainsPositions___TERRAIN_SAVE[i - 16382] = v
      elseif (i < 40955) then
        if (i < 32764) then
          s__4ReinitTerrainsPositions___TERRAIN_SAVE[i - 24573] = v
        else
          s__5ReinitTerrainsPositions___TERRAIN_SAVE[i - 32764] = v
        end
      elseif (i < 49146) then
        s__6ReinitTerrainsPositions___TERRAIN_SAVE[i - 40955] = v
      elseif (i < 57337) then
        s__7ReinitTerrainsPositions___TERRAIN_SAVE[i - 49146] = v
      else
        s__8ReinitTerrainsPositions___TERRAIN_SAVE[i - 57337] = v
      end
    elseif (i < 73719) then
      s__9ReinitTerrainsPositions___TERRAIN_SAVE[i - 65528] = v
    elseif (i < 98292) then
      if (i < 81910) then
        s__10ReinitTerrainsPositions___TERRAIN_SAVE[i - 73719] = v
      elseif (i < 90101) then
        s__11ReinitTerrainsPositions___TERRAIN_SAVE[i - 81910] = v
      else
        s__12ReinitTerrainsPositions___TERRAIN_SAVE[i - 90101] = v
      end
    elseif (i < 106483) then
      s__13ReinitTerrainsPositions___TERRAIN_SAVE[i - 98292] = v
    elseif (i < 114674) then
      s__14ReinitTerrainsPositions___TERRAIN_SAVE[i - 106483] = v
    else
      s__15ReinitTerrainsPositions___TERRAIN_SAVE[i - 114674] = v
    end
  elseif (i < 131056) then
    s__16ReinitTerrainsPositions___TERRAIN_SAVE[i - 122865] = v
  elseif (i < 180202) then
    if (i < 139247) then
      s__17ReinitTerrainsPositions___TERRAIN_SAVE[i - 131056] = v
    elseif (i < 155629) then
      if (i < 147438) then
        s__18ReinitTerrainsPositions___TERRAIN_SAVE[i - 139247] = v
      else
        s__19ReinitTerrainsPositions___TERRAIN_SAVE[i - 147438] = v
      end
    elseif (i < 163820) then
      s__20ReinitTerrainsPositions___TERRAIN_SAVE[i - 155629] = v
    elseif (i < 172011) then
      s__21ReinitTerrainsPositions___TERRAIN_SAVE[i - 163820] = v
    else
      s__22ReinitTerrainsPositions___TERRAIN_SAVE[i - 172011] = v
    end
  elseif (i < 188393) then
    s__23ReinitTerrainsPositions___TERRAIN_SAVE[i - 180202] = v
  elseif (i < 212966) then
    if (i < 196584) then
      s__24ReinitTerrainsPositions___TERRAIN_SAVE[i - 188393] = v
    elseif (i < 204775) then
      s__25ReinitTerrainsPositions___TERRAIN_SAVE[i - 196584] = v
    else
      s__26ReinitTerrainsPositions___TERRAIN_SAVE[i - 204775] = v
    end
  elseif (i < 221157) then
    s__27ReinitTerrainsPositions___TERRAIN_SAVE[i - 212966] = v
  elseif (i < 229348) then
    s__28ReinitTerrainsPositions___TERRAIN_SAVE[i - 221157] = v
  else
    s__29ReinitTerrainsPositions___TERRAIN_SAVE[i - 229348] = v
  end
end

function sg__SaveLoadTerrainWithoutName___terrainSave_get(i)
  if (i < 8191) then
    return s__SaveLoadTerrainWithoutName___terrainSave[i]
  elseif (i < 122865) then
    if (i < 16382) then
      return s__2SaveLoadTerrainWithoutName___terrainSave[i - 8191]
    elseif (i < 65528) then
      if (i < 24573) then
        return s__3SaveLoadTerrainWithoutName___terrainSave[i - 16382]
      elseif (i < 40955) then
        if (i < 32764) then
          return s__4SaveLoadTerrainWithoutName___terrainSave[i - 24573]
        else
          return s__5SaveLoadTerrainWithoutName___terrainSave[i - 32764]
        end
      elseif (i < 49146) then
        return s__6SaveLoadTerrainWithoutName___terrainSave[i - 40955]
      elseif (i < 57337) then
        return s__7SaveLoadTerrainWithoutName___terrainSave[i - 49146]
      else
        return s__8SaveLoadTerrainWithoutName___terrainSave[i - 57337]
      end
    elseif (i < 73719) then
      return s__9SaveLoadTerrainWithoutName___terrainSave[i - 65528]
    elseif (i < 98292) then
      if (i < 81910) then
        return s__10SaveLoadTerrainWithoutName___terrainSave[i - 73719]
      elseif (i < 90101) then
        return s__11SaveLoadTerrainWithoutName___terrainSave[i - 81910]
      else
        return s__12SaveLoadTerrainWithoutName___terrainSave[i - 90101]
      end
    elseif (i < 106483) then
      return s__13SaveLoadTerrainWithoutName___terrainSave[i - 98292]
    elseif (i < 114674) then
      return s__14SaveLoadTerrainWithoutName___terrainSave[i - 106483]
    else
      return s__15SaveLoadTerrainWithoutName___terrainSave[i - 114674]
    end
  elseif (i < 131056) then
    return s__16SaveLoadTerrainWithoutName___terrainSave[i - 122865]
  elseif (i < 180202) then
    if (i < 139247) then
      return s__17SaveLoadTerrainWithoutName___terrainSave[i - 131056]
    elseif (i < 155629) then
      if (i < 147438) then
        return s__18SaveLoadTerrainWithoutName___terrainSave[i - 139247]
      else
        return s__19SaveLoadTerrainWithoutName___terrainSave[i - 147438]
      end
    elseif (i < 163820) then
      return s__20SaveLoadTerrainWithoutName___terrainSave[i - 155629]
    elseif (i < 172011) then
      return s__21SaveLoadTerrainWithoutName___terrainSave[i - 163820]
    else
      return s__22SaveLoadTerrainWithoutName___terrainSave[i - 172011]
    end
  elseif (i < 188393) then
    return s__23SaveLoadTerrainWithoutName___terrainSave[i - 180202]
  elseif (i < 212966) then
    if (i < 196584) then
      return s__24SaveLoadTerrainWithoutName___terrainSave[i - 188393]
    elseif (i < 204775) then
      return s__25SaveLoadTerrainWithoutName___terrainSave[i - 196584]
    else
      return s__26SaveLoadTerrainWithoutName___terrainSave[i - 204775]
    end
  elseif (i < 221157) then
    return s__27SaveLoadTerrainWithoutName___terrainSave[i - 212966]
  elseif (i < 229348) then
    return s__28SaveLoadTerrainWithoutName___terrainSave[i - 221157]
  else
    return s__29SaveLoadTerrainWithoutName___terrainSave[i - 229348]
  end
end

function sg__SaveLoadTerrainWithoutName___terrainSave_set(i, v)
  if (i < 8191) then
    s__SaveLoadTerrainWithoutName___terrainSave[i] = v
  elseif (i < 122865) then
    if (i < 16382) then
      s__2SaveLoadTerrainWithoutName___terrainSave[i - 8191] = v
    elseif (i < 65528) then
      if (i < 24573) then
        s__3SaveLoadTerrainWithoutName___terrainSave[i - 16382] = v
      elseif (i < 40955) then
        if (i < 32764) then
          s__4SaveLoadTerrainWithoutName___terrainSave[i - 24573] = v
        else
          s__5SaveLoadTerrainWithoutName___terrainSave[i - 32764] = v
        end
      elseif (i < 49146) then
        s__6SaveLoadTerrainWithoutName___terrainSave[i - 40955] = v
      elseif (i < 57337) then
        s__7SaveLoadTerrainWithoutName___terrainSave[i - 49146] = v
      else
        s__8SaveLoadTerrainWithoutName___terrainSave[i - 57337] = v
      end
    elseif (i < 73719) then
      s__9SaveLoadTerrainWithoutName___terrainSave[i - 65528] = v
    elseif (i < 98292) then
      if (i < 81910) then
        s__10SaveLoadTerrainWithoutName___terrainSave[i - 73719] = v
      elseif (i < 90101) then
        s__11SaveLoadTerrainWithoutName___terrainSave[i - 81910] = v
      else
        s__12SaveLoadTerrainWithoutName___terrainSave[i - 90101] = v
      end
    elseif (i < 106483) then
      s__13SaveLoadTerrainWithoutName___terrainSave[i - 98292] = v
    elseif (i < 114674) then
      s__14SaveLoadTerrainWithoutName___terrainSave[i - 106483] = v
    else
      s__15SaveLoadTerrainWithoutName___terrainSave[i - 114674] = v
    end
  elseif (i < 131056) then
    s__16SaveLoadTerrainWithoutName___terrainSave[i - 122865] = v
  elseif (i < 180202) then
    if (i < 139247) then
      s__17SaveLoadTerrainWithoutName___terrainSave[i - 131056] = v
    elseif (i < 155629) then
      if (i < 147438) then
        s__18SaveLoadTerrainWithoutName___terrainSave[i - 139247] = v
      else
        s__19SaveLoadTerrainWithoutName___terrainSave[i - 147438] = v
      end
    elseif (i < 163820) then
      s__20SaveLoadTerrainWithoutName___terrainSave[i - 155629] = v
    elseif (i < 172011) then
      s__21SaveLoadTerrainWithoutName___terrainSave[i - 163820] = v
    else
      s__22SaveLoadTerrainWithoutName___terrainSave[i - 172011] = v
    end
  elseif (i < 188393) then
    s__23SaveLoadTerrainWithoutName___terrainSave[i - 180202] = v
  elseif (i < 212966) then
    if (i < 196584) then
      s__24SaveLoadTerrainWithoutName___terrainSave[i - 188393] = v
    elseif (i < 204775) then
      s__25SaveLoadTerrainWithoutName___terrainSave[i - 196584] = v
    else
      s__26SaveLoadTerrainWithoutName___terrainSave[i - 204775] = v
    end
  elseif (i < 221157) then
    s__27SaveLoadTerrainWithoutName___terrainSave[i - 212966] = v
  elseif (i < 229348) then
    s__28SaveLoadTerrainWithoutName___terrainSave[i - 221157] = v
  else
    s__29SaveLoadTerrainWithoutName___terrainSave[i - 229348] = v
  end
end

function sg___CasterArray_casters_get(i)
  if (i < 8191) then
    return s___CasterArray_casters[i]
  elseif (i < 16382) then
    return s__2_CasterArray_casters[i - 8191]
  elseif (i < 24573) then
    return s__3_CasterArray_casters[i - 16382]
  else
    return s__4_CasterArray_casters[i - 24573]
  end
end

function sg___CasterArray_casters_set(i, v)
  if (i < 8191) then
    s___CasterArray_casters[i] = v
  elseif (i < 16382) then
    s__2_CasterArray_casters[i - 8191] = v
  elseif (i < 24573) then
    s__3_CasterArray_casters[i - 16382] = v
  else
    s__4_CasterArray_casters[i - 24573] = v
  end
end

function sg__CasterArray_get_casters(i)
  if (i < 8191) then
    return s__CasterArray_casters[i]
  elseif (i < 16382) then
    return s__CasterArray_2casters[i - 8191]
  elseif (i < 24573) then
    return s__CasterArray_3casters[i - 16382]
  else
    return s__CasterArray_4casters[i - 24573]
  end
end

function sg__CasterArray_set_casters(i, v)
  if (i < 8191) then
    s__CasterArray_casters[i] = v
  elseif (i < 16382) then
    s__CasterArray_2casters[i - 8191] = v
  elseif (i < 24573) then
    s__CasterArray_3casters[i - 16382] = v
  else
    s__CasterArray_4casters[i - 24573] = v
  end
end

function sg__CasterArray_get_lastInstance(i)
  if (i < 8191) then
    return s__CasterArray_lastInstance[i]
  elseif (i < 16382) then
    return s__CasterArray_2lastInstance[i - 8191]
  elseif (i < 24573) then
    return s__CasterArray_3lastInstance[i - 16382]
  else
    return s__CasterArray_4lastInstance[i - 24573]
  end
end

function sg__CasterArray_set_lastInstance(i, v)
  if (i < 8191) then
    s__CasterArray_lastInstance[i] = v
  elseif (i < 16382) then
    s__CasterArray_2lastInstance[i - 8191] = v
  elseif (i < 24573) then
    s__CasterArray_3lastInstance[i - 16382] = v
  else
    s__CasterArray_4lastInstance[i - 24573] = v
  end
end

function sg___MonsterTeleportArray_monsters_get(i)
  if (i < 8191) then
    return s___MonsterTeleportArray_monsters[i]
  elseif (i < 16382) then
    return s__2_MonsterTeleportArray_monsters[i - 8191]
  elseif (i < 24573) then
    return s__3_MonsterTeleportArray_monsters[i - 16382]
  else
    return s__4_MonsterTeleportArray_monsters[i - 24573]
  end
end

function sg___MonsterTeleportArray_monsters_set(i, v)
  if (i < 8191) then
    s___MonsterTeleportArray_monsters[i] = v
  elseif (i < 16382) then
    s__2_MonsterTeleportArray_monsters[i - 8191] = v
  elseif (i < 24573) then
    s__3_MonsterTeleportArray_monsters[i - 16382] = v
  else
    s__4_MonsterTeleportArray_monsters[i - 24573] = v
  end
end

function sg__MonsterTeleportArray_get_monsters(i)
  if (i < 8191) then
    return s__MonsterTeleportArray_monsters[i]
  elseif (i < 16382) then
    return s__MonsterTeleportArray_2monsters[i - 8191]
  elseif (i < 24573) then
    return s__MonsterTeleportArray_3monsters[i - 16382]
  else
    return s__MonsterTeleportArray_4monsters[i - 24573]
  end
end

function sg__MonsterTeleportArray_set_monsters(i, v)
  if (i < 8191) then
    s__MonsterTeleportArray_monsters[i] = v
  elseif (i < 16382) then
    s__MonsterTeleportArray_2monsters[i - 8191] = v
  elseif (i < 24573) then
    s__MonsterTeleportArray_3monsters[i - 16382] = v
  else
    s__MonsterTeleportArray_4monsters[i - 24573] = v
  end
end

function sg__MonsterTeleportArray_get_lastInstance(i)
  if (i < 8191) then
    return s__MonsterTeleportArray_lastInstance[i]
  elseif (i < 16382) then
    return s__MonsterTeleportArray_2lastInstance[i - 8191]
  elseif (i < 24573) then
    return s__MonsterTeleportArray_3lastInstance[i - 16382]
  else
    return s__MonsterTeleportArray_4lastInstance[i - 24573]
  end
end

function sg__MonsterTeleportArray_set_lastInstance(i, v)
  if (i < 8191) then
    s__MonsterTeleportArray_lastInstance[i] = v
  elseif (i < 16382) then
    s__MonsterTeleportArray_2lastInstance[i - 8191] = v
  elseif (i < 24573) then
    s__MonsterTeleportArray_3lastInstance[i - 16382] = v
  else
    s__MonsterTeleportArray_4lastInstance[i - 24573] = v
  end
end

function sg___MonsterSimplePatrolArray_monsters_get(i)
  if (i < 8191) then
    return s___MonsterSimplePatrolArray_monsters[i]
  elseif (i < 16382) then
    return s__2_MonsterSimplePatrolArray_monsters[i - 8191]
  elseif (i < 24573) then
    return s__3_MonsterSimplePatrolArray_monsters[i - 16382]
  else
    return s__4_MonsterSimplePatrolArray_monsters[i - 24573]
  end
end

function sg___MonsterSimplePatrolArray_monsters_set(i, v)
  if (i < 8191) then
    s___MonsterSimplePatrolArray_monsters[i] = v
  elseif (i < 16382) then
    s__2_MonsterSimplePatrolArray_monsters[i - 8191] = v
  elseif (i < 24573) then
    s__3_MonsterSimplePatrolArray_monsters[i - 16382] = v
  else
    s__4_MonsterSimplePatrolArray_monsters[i - 24573] = v
  end
end

function sg__MonsterSimplePatrolArray_get_monsters(i)
  if (i < 8191) then
    return s__MonsterSimplePatrolArray_monsters[i]
  elseif (i < 16382) then
    return s__MonsterSimplePatrolArray_2monsters[i - 8191]
  elseif (i < 24573) then
    return s__MonsterSimplePatrolArray_3monsters[i - 16382]
  else
    return s__MonsterSimplePatrolArray_4monsters[i - 24573]
  end
end

function sg__MonsterSimplePatrolArray_set_monsters(i, v)
  if (i < 8191) then
    s__MonsterSimplePatrolArray_monsters[i] = v
  elseif (i < 16382) then
    s__MonsterSimplePatrolArray_2monsters[i - 8191] = v
  elseif (i < 24573) then
    s__MonsterSimplePatrolArray_3monsters[i - 16382] = v
  else
    s__MonsterSimplePatrolArray_4monsters[i - 24573] = v
  end
end

function sg__MonsterSimplePatrolArray_get_lastInstance(i)
  if (i < 8191) then
    return s__MonsterSimplePatrolArray_lastInstance[i]
  elseif (i < 16382) then
    return s__MonsterSimplePatrolArray_2lastInstance[i - 8191]
  elseif (i < 24573) then
    return s__MonsterSimplePatrolArray_3lastInstance[i - 16382]
  else
    return s__MonsterSimplePatrolArray_4lastInstance[i - 24573]
  end
end

function sg__MonsterSimplePatrolArray_set_lastInstance(i, v)
  if (i < 8191) then
    s__MonsterSimplePatrolArray_lastInstance[i] = v
  elseif (i < 16382) then
    s__MonsterSimplePatrolArray_2lastInstance[i - 8191] = v
  elseif (i < 24573) then
    s__MonsterSimplePatrolArray_3lastInstance[i - 16382] = v
  else
    s__MonsterSimplePatrolArray_4lastInstance[i - 24573] = v
  end
end

function sg___MonsterNoMoveArray_monsters_get(i)
  if (i < 8191) then
    return s___MonsterNoMoveArray_monsters[i]
  elseif (i < 16382) then
    return s__2_MonsterNoMoveArray_monsters[i - 8191]
  elseif (i < 24573) then
    return s__3_MonsterNoMoveArray_monsters[i - 16382]
  else
    return s__4_MonsterNoMoveArray_monsters[i - 24573]
  end
end

function sg___MonsterNoMoveArray_monsters_set(i, v)
  if (i < 8191) then
    s___MonsterNoMoveArray_monsters[i] = v
  elseif (i < 16382) then
    s__2_MonsterNoMoveArray_monsters[i - 8191] = v
  elseif (i < 24573) then
    s__3_MonsterNoMoveArray_monsters[i - 16382] = v
  else
    s__4_MonsterNoMoveArray_monsters[i - 24573] = v
  end
end

function sg__MonsterNoMoveArray_get_monsters(i)
  if (i < 8191) then
    return s__MonsterNoMoveArray_monsters[i]
  elseif (i < 16382) then
    return s__MonsterNoMoveArray_2monsters[i - 8191]
  elseif (i < 24573) then
    return s__MonsterNoMoveArray_3monsters[i - 16382]
  else
    return s__MonsterNoMoveArray_4monsters[i - 24573]
  end
end

function sg__MonsterNoMoveArray_set_monsters(i, v)
  if (i < 8191) then
    s__MonsterNoMoveArray_monsters[i] = v
  elseif (i < 16382) then
    s__MonsterNoMoveArray_2monsters[i - 8191] = v
  elseif (i < 24573) then
    s__MonsterNoMoveArray_3monsters[i - 16382] = v
  else
    s__MonsterNoMoveArray_4monsters[i - 24573] = v
  end
end

function sg__MonsterNoMoveArray_get_lastInstance(i)
  if (i < 8191) then
    return s__MonsterNoMoveArray_lastInstance[i]
  elseif (i < 16382) then
    return s__MonsterNoMoveArray_2lastInstance[i - 8191]
  elseif (i < 24573) then
    return s__MonsterNoMoveArray_3lastInstance[i - 16382]
  else
    return s__MonsterNoMoveArray_4lastInstance[i - 24573]
  end
end

function sg__MonsterNoMoveArray_set_lastInstance(i, v)
  if (i < 8191) then
    s__MonsterNoMoveArray_lastInstance[i] = v
  elseif (i < 16382) then
    s__MonsterNoMoveArray_2lastInstance[i - 8191] = v
  elseif (i < 24573) then
    s__MonsterNoMoveArray_3lastInstance[i - 16382] = v
  else
    s__MonsterNoMoveArray_4lastInstance[i - 24573] = v
  end
end

function sg___MonsterMultiplePatrolsArray_monsters_get(i)
  if (i < 8191) then
    return s___MonsterMultiplePatrolsArray_monsters[i]
  elseif (i < 16382) then
    return s__2_MonsterMultiplePatrolsArray_monsters[i - 8191]
  elseif (i < 24573) then
    return s__3_MonsterMultiplePatrolsArray_monsters[i - 16382]
  else
    return s__4_MonsterMultiplePatrolsArray_monsters[i - 24573]
  end
end

function sg___MonsterMultiplePatrolsArray_monsters_set(i, v)
  if (i < 8191) then
    s___MonsterMultiplePatrolsArray_monsters[i] = v
  elseif (i < 16382) then
    s__2_MonsterMultiplePatrolsArray_monsters[i - 8191] = v
  elseif (i < 24573) then
    s__3_MonsterMultiplePatrolsArray_monsters[i - 16382] = v
  else
    s__4_MonsterMultiplePatrolsArray_monsters[i - 24573] = v
  end
end

function sg__MonsterMultiplePatrolsArray_get_monsters(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrolsArray_monsters[i]
  elseif (i < 16382) then
    return s__MonsterMultiplePatrolsArray_2monsters[i - 8191]
  elseif (i < 24573) then
    return s__MonsterMultiplePatrolsArray_3monsters[i - 16382]
  else
    return s__MonsterMultiplePatrolsArray_4monsters[i - 24573]
  end
end

function sg__MonsterMultiplePatrolsArray_set_monsters(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrolsArray_monsters[i] = v
  elseif (i < 16382) then
    s__MonsterMultiplePatrolsArray_2monsters[i - 8191] = v
  elseif (i < 24573) then
    s__MonsterMultiplePatrolsArray_3monsters[i - 16382] = v
  else
    s__MonsterMultiplePatrolsArray_4monsters[i - 24573] = v
  end
end

function sg__MonsterMultiplePatrolsArray_get_lastInstance(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrolsArray_lastInstance[i]
  elseif (i < 16382) then
    return s__MonsterMultiplePatrolsArray_2lastInstance[i - 8191]
  elseif (i < 24573) then
    return s__MonsterMultiplePatrolsArray_3lastInstance[i - 16382]
  else
    return s__MonsterMultiplePatrolsArray_4lastInstance[i - 24573]
  end
end

function sg__MonsterMultiplePatrolsArray_set_lastInstance(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrolsArray_lastInstance[i] = v
  elseif (i < 16382) then
    s__MonsterMultiplePatrolsArray_2lastInstance[i - 8191] = v
  elseif (i < 24573) then
    s__MonsterMultiplePatrolsArray_3lastInstance[i - 16382] = v
  else
    s__MonsterMultiplePatrolsArray_4lastInstance[i - 24573] = v
  end
end

function sg__MonsterOrCasterStack_get_monsterOrCaster(i)
  if (i < 8191) then
    return s__MonsterOrCasterStack_monsterOrCaster[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterOrCasterStack_2monsterOrCaster[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterOrCasterStack_3monsterOrCaster[i - 16382]
      else
        return s__MonsterOrCasterStack_4monsterOrCaster[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterOrCasterStack_5monsterOrCaster[i - 32764]
    elseif (i < 49146) then
      return s__MonsterOrCasterStack_6monsterOrCaster[i - 40955]
    else
      return s__MonsterOrCasterStack_7monsterOrCaster[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterOrCasterStack_8monsterOrCaster[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterOrCasterStack_9monsterOrCaster[i - 65528]
    else
      return s__MonsterOrCasterStack_10monsterOrCaster[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterOrCasterStack_11monsterOrCaster[i - 81910]
  elseif (i < 98292) then
    return s__MonsterOrCasterStack_12monsterOrCaster[i - 90101]
  else
    return s__MonsterOrCasterStack_13monsterOrCaster[i - 98292]
  end
end

function sg__MonsterOrCasterStack_set_monsterOrCaster(i, v)
  if (i < 8191) then
    s__MonsterOrCasterStack_monsterOrCaster[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterOrCasterStack_2monsterOrCaster[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterOrCasterStack_3monsterOrCaster[i - 16382] = v
      else
        s__MonsterOrCasterStack_4monsterOrCaster[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterOrCasterStack_5monsterOrCaster[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterOrCasterStack_6monsterOrCaster[i - 40955] = v
    else
      s__MonsterOrCasterStack_7monsterOrCaster[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterOrCasterStack_8monsterOrCaster[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterOrCasterStack_9monsterOrCaster[i - 65528] = v
    else
      s__MonsterOrCasterStack_10monsterOrCaster[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterOrCasterStack_11monsterOrCaster[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterOrCasterStack_12monsterOrCaster[i - 90101] = v
  else
    s__MonsterOrCasterStack_13monsterOrCaster[i - 98292] = v
  end
end

function sg__MonsterOrCasterStack_get_nextElement(i)
  if (i < 8191) then
    return s__MonsterOrCasterStack_nextElement[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterOrCasterStack_2nextElement[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterOrCasterStack_3nextElement[i - 16382]
      else
        return s__MonsterOrCasterStack_4nextElement[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterOrCasterStack_5nextElement[i - 32764]
    elseif (i < 49146) then
      return s__MonsterOrCasterStack_6nextElement[i - 40955]
    else
      return s__MonsterOrCasterStack_7nextElement[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterOrCasterStack_8nextElement[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterOrCasterStack_9nextElement[i - 65528]
    else
      return s__MonsterOrCasterStack_10nextElement[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterOrCasterStack_11nextElement[i - 81910]
  elseif (i < 98292) then
    return s__MonsterOrCasterStack_12nextElement[i - 90101]
  else
    return s__MonsterOrCasterStack_13nextElement[i - 98292]
  end
end

function sg__MonsterOrCasterStack_set_nextElement(i, v)
  if (i < 8191) then
    s__MonsterOrCasterStack_nextElement[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterOrCasterStack_2nextElement[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterOrCasterStack_3nextElement[i - 16382] = v
      else
        s__MonsterOrCasterStack_4nextElement[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterOrCasterStack_5nextElement[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterOrCasterStack_6nextElement[i - 40955] = v
    else
      s__MonsterOrCasterStack_7nextElement[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterOrCasterStack_8nextElement[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterOrCasterStack_9nextElement[i - 65528] = v
    else
      s__MonsterOrCasterStack_10nextElement[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterOrCasterStack_11nextElement[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterOrCasterStack_12nextElement[i - 90101] = v
  else
    s__MonsterOrCasterStack_13nextElement[i - 98292] = v
  end
end

function sg___Caster_escapersInRange_get(i)
  if (i < 8191) then
    return s___Caster_escapersInRange[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__2_Caster_escapersInRange[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__3_Caster_escapersInRange[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__4_Caster_escapersInRange[i - 24573]
        elseif (i < 40955) then
          return s__5_Caster_escapersInRange[i - 32764]
        else
          return s__6_Caster_escapersInRange[i - 40955]
        end
      elseif (i < 57337) then
        return s__7_Caster_escapersInRange[i - 49146]
      elseif (i < 65528) then
        return s__8_Caster_escapersInRange[i - 57337]
      elseif (i < 73719) then
        return s__9_Caster_escapersInRange[i - 65528]
      else
        return s__10_Caster_escapersInRange[i - 73719]
      end
    elseif (i < 90101) then
      return s__11_Caster_escapersInRange[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__12_Caster_escapersInRange[i - 90101]
      elseif (i < 106483) then
        return s__13_Caster_escapersInRange[i - 98292]
      elseif (i < 114674) then
        return s__14_Caster_escapersInRange[i - 106483]
      else
        return s__15_Caster_escapersInRange[i - 114674]
      end
    elseif (i < 131056) then
      return s__16_Caster_escapersInRange[i - 122865]
    elseif (i < 139247) then
      return s__17_Caster_escapersInRange[i - 131056]
    elseif (i < 147438) then
      return s__18_Caster_escapersInRange[i - 139247]
    else
      return s__19_Caster_escapersInRange[i - 147438]
    end
  elseif (i < 163820) then
    return s__20_Caster_escapersInRange[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__21_Caster_escapersInRange[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__22_Caster_escapersInRange[i - 172011]
      elseif (i < 188393) then
        return s__23_Caster_escapersInRange[i - 180202]
      else
        return s__24_Caster_escapersInRange[i - 188393]
      end
    elseif (i < 204775) then
      return s__25_Caster_escapersInRange[i - 196584]
    elseif (i < 212966) then
      return s__26_Caster_escapersInRange[i - 204775]
    elseif (i < 221157) then
      return s__27_Caster_escapersInRange[i - 212966]
    else
      return s__28_Caster_escapersInRange[i - 221157]
    end
  elseif (i < 237539) then
    return s__29_Caster_escapersInRange[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__30_Caster_escapersInRange[i - 237539]
    elseif (i < 253921) then
      return s__31_Caster_escapersInRange[i - 245730]
    elseif (i < 262112) then
      return s__32_Caster_escapersInRange[i - 253921]
    else
      return s__33_Caster_escapersInRange[i - 262112]
    end
  elseif (i < 278494) then
    return s__34_Caster_escapersInRange[i - 270303]
  elseif (i < 286685) then
    return s__35_Caster_escapersInRange[i - 278494]
  elseif (i < 294876) then
    return s__36_Caster_escapersInRange[i - 286685]
  else
    return s__37_Caster_escapersInRange[i - 294876]
  end
end

function sg___Caster_escapersInRange_set(i, v)
  if (i < 8191) then
    s___Caster_escapersInRange[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__2_Caster_escapersInRange[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__3_Caster_escapersInRange[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__4_Caster_escapersInRange[i - 24573] = v
        elseif (i < 40955) then
          s__5_Caster_escapersInRange[i - 32764] = v
        else
          s__6_Caster_escapersInRange[i - 40955] = v
        end
      elseif (i < 57337) then
        s__7_Caster_escapersInRange[i - 49146] = v
      elseif (i < 65528) then
        s__8_Caster_escapersInRange[i - 57337] = v
      elseif (i < 73719) then
        s__9_Caster_escapersInRange[i - 65528] = v
      else
        s__10_Caster_escapersInRange[i - 73719] = v
      end
    elseif (i < 90101) then
      s__11_Caster_escapersInRange[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__12_Caster_escapersInRange[i - 90101] = v
      elseif (i < 106483) then
        s__13_Caster_escapersInRange[i - 98292] = v
      elseif (i < 114674) then
        s__14_Caster_escapersInRange[i - 106483] = v
      else
        s__15_Caster_escapersInRange[i - 114674] = v
      end
    elseif (i < 131056) then
      s__16_Caster_escapersInRange[i - 122865] = v
    elseif (i < 139247) then
      s__17_Caster_escapersInRange[i - 131056] = v
    elseif (i < 147438) then
      s__18_Caster_escapersInRange[i - 139247] = v
    else
      s__19_Caster_escapersInRange[i - 147438] = v
    end
  elseif (i < 163820) then
    s__20_Caster_escapersInRange[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__21_Caster_escapersInRange[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__22_Caster_escapersInRange[i - 172011] = v
      elseif (i < 188393) then
        s__23_Caster_escapersInRange[i - 180202] = v
      else
        s__24_Caster_escapersInRange[i - 188393] = v
      end
    elseif (i < 204775) then
      s__25_Caster_escapersInRange[i - 196584] = v
    elseif (i < 212966) then
      s__26_Caster_escapersInRange[i - 204775] = v
    elseif (i < 221157) then
      s__27_Caster_escapersInRange[i - 212966] = v
    else
      s__28_Caster_escapersInRange[i - 221157] = v
    end
  elseif (i < 237539) then
    s__29_Caster_escapersInRange[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__30_Caster_escapersInRange[i - 237539] = v
    elseif (i < 253921) then
      s__31_Caster_escapersInRange[i - 245730] = v
    elseif (i < 262112) then
      s__32_Caster_escapersInRange[i - 253921] = v
    else
      s__33_Caster_escapersInRange[i - 262112] = v
    end
  elseif (i < 278494) then
    s__34_Caster_escapersInRange[i - 270303] = v
  elseif (i < 286685) then
    s__35_Caster_escapersInRange[i - 278494] = v
  elseif (i < 294876) then
    s__36_Caster_escapersInRange[i - 286685] = v
  else
    s__37_Caster_escapersInRange[i - 294876] = v
  end
end

function sg__Caster_get_id(i)
  if (i < 8191) then
    return s__Caster_id[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2id[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3id[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4id[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5id[i - 32764]
        else
          return s__Caster_6id[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7id[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8id[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9id[i - 65528]
      else
        return s__Caster_10id[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11id[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12id[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13id[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14id[i - 106483]
      else
        return s__Caster_15id[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16id[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17id[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18id[i - 139247]
    else
      return s__Caster_19id[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20id[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21id[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22id[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23id[i - 180202]
      else
        return s__Caster_24id[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25id[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26id[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27id[i - 212966]
    else
      return s__Caster_28id[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29id[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30id[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31id[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32id[i - 253921]
    else
      return s__Caster_33id[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34id[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35id[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36id[i - 286685]
  else
    return s__Caster_37id[i - 294876]
  end
end

function sg__Caster_set_id(i, v)
  if (i < 8191) then
    s__Caster_id[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2id[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3id[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4id[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5id[i - 32764] = v
        else
          s__Caster_6id[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7id[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8id[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9id[i - 65528] = v
      else
        s__Caster_10id[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11id[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12id[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13id[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14id[i - 106483] = v
      else
        s__Caster_15id[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16id[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17id[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18id[i - 139247] = v
    else
      s__Caster_19id[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20id[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21id[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22id[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23id[i - 180202] = v
      else
        s__Caster_24id[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25id[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26id[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27id[i - 212966] = v
    else
      s__Caster_28id[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29id[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30id[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31id[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32id[i - 253921] = v
    else
      s__Caster_33id[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34id[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35id[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36id[i - 286685] = v
  else
    s__Caster_37id[i - 294876] = v
  end
end

function sg__Caster_get_level(i)
  if (i < 8191) then
    return s__Caster_level[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2level[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3level[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4level[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5level[i - 32764]
        else
          return s__Caster_6level[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7level[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8level[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9level[i - 65528]
      else
        return s__Caster_10level[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11level[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12level[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13level[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14level[i - 106483]
      else
        return s__Caster_15level[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16level[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17level[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18level[i - 139247]
    else
      return s__Caster_19level[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20level[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21level[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22level[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23level[i - 180202]
      else
        return s__Caster_24level[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25level[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26level[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27level[i - 212966]
    else
      return s__Caster_28level[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29level[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30level[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31level[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32level[i - 253921]
    else
      return s__Caster_33level[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34level[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35level[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36level[i - 286685]
  else
    return s__Caster_37level[i - 294876]
  end
end

function sg__Caster_set_level(i, v)
  if (i < 8191) then
    s__Caster_level[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2level[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3level[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4level[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5level[i - 32764] = v
        else
          s__Caster_6level[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7level[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8level[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9level[i - 65528] = v
      else
        s__Caster_10level[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11level[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12level[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13level[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14level[i - 106483] = v
      else
        s__Caster_15level[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16level[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17level[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18level[i - 139247] = v
    else
      s__Caster_19level[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20level[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21level[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22level[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23level[i - 180202] = v
      else
        s__Caster_24level[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25level[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26level[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27level[i - 212966] = v
    else
      s__Caster_28level[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29level[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30level[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31level[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32level[i - 253921] = v
    else
      s__Caster_33level[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34level[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35level[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36level[i - 286685] = v
  else
    s__Caster_37level[i - 294876] = v
  end
end

function sg__Caster_get_arrayId(i)
  if (i < 8191) then
    return s__Caster_arrayId[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2arrayId[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3arrayId[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4arrayId[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5arrayId[i - 32764]
        else
          return s__Caster_6arrayId[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7arrayId[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8arrayId[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9arrayId[i - 65528]
      else
        return s__Caster_10arrayId[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11arrayId[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12arrayId[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13arrayId[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14arrayId[i - 106483]
      else
        return s__Caster_15arrayId[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16arrayId[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17arrayId[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18arrayId[i - 139247]
    else
      return s__Caster_19arrayId[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20arrayId[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21arrayId[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22arrayId[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23arrayId[i - 180202]
      else
        return s__Caster_24arrayId[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25arrayId[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26arrayId[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27arrayId[i - 212966]
    else
      return s__Caster_28arrayId[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29arrayId[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30arrayId[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31arrayId[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32arrayId[i - 253921]
    else
      return s__Caster_33arrayId[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34arrayId[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35arrayId[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36arrayId[i - 286685]
  else
    return s__Caster_37arrayId[i - 294876]
  end
end

function sg__Caster_set_arrayId(i, v)
  if (i < 8191) then
    s__Caster_arrayId[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2arrayId[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3arrayId[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4arrayId[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5arrayId[i - 32764] = v
        else
          s__Caster_6arrayId[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7arrayId[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8arrayId[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9arrayId[i - 65528] = v
      else
        s__Caster_10arrayId[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11arrayId[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12arrayId[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13arrayId[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14arrayId[i - 106483] = v
      else
        s__Caster_15arrayId[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16arrayId[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17arrayId[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18arrayId[i - 139247] = v
    else
      s__Caster_19arrayId[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20arrayId[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21arrayId[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22arrayId[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23arrayId[i - 180202] = v
      else
        s__Caster_24arrayId[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25arrayId[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26arrayId[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27arrayId[i - 212966] = v
    else
      s__Caster_28arrayId[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29arrayId[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30arrayId[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31arrayId[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32arrayId[i - 253921] = v
    else
      s__Caster_33arrayId[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34arrayId[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35arrayId[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36arrayId[i - 286685] = v
  else
    s__Caster_37arrayId[i - 294876] = v
  end
end

function sg__Caster_get_casterType(i)
  if (i < 8191) then
    return s__Caster_casterType[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2casterType[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3casterType[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4casterType[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5casterType[i - 32764]
        else
          return s__Caster_6casterType[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7casterType[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8casterType[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9casterType[i - 65528]
      else
        return s__Caster_10casterType[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11casterType[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12casterType[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13casterType[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14casterType[i - 106483]
      else
        return s__Caster_15casterType[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16casterType[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17casterType[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18casterType[i - 139247]
    else
      return s__Caster_19casterType[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20casterType[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21casterType[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22casterType[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23casterType[i - 180202]
      else
        return s__Caster_24casterType[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25casterType[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26casterType[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27casterType[i - 212966]
    else
      return s__Caster_28casterType[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29casterType[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30casterType[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31casterType[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32casterType[i - 253921]
    else
      return s__Caster_33casterType[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34casterType[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35casterType[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36casterType[i - 286685]
  else
    return s__Caster_37casterType[i - 294876]
  end
end

function sg__Caster_set_casterType(i, v)
  if (i < 8191) then
    s__Caster_casterType[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2casterType[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3casterType[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4casterType[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5casterType[i - 32764] = v
        else
          s__Caster_6casterType[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7casterType[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8casterType[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9casterType[i - 65528] = v
      else
        s__Caster_10casterType[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11casterType[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12casterType[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13casterType[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14casterType[i - 106483] = v
      else
        s__Caster_15casterType[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16casterType[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17casterType[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18casterType[i - 139247] = v
    else
      s__Caster_19casterType[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20casterType[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21casterType[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22casterType[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23casterType[i - 180202] = v
      else
        s__Caster_24casterType[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25casterType[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26casterType[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27casterType[i - 212966] = v
    else
      s__Caster_28casterType[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29casterType[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30casterType[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31casterType[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32casterType[i - 253921] = v
    else
      s__Caster_33casterType[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34casterType[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35casterType[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36casterType[i - 286685] = v
  else
    s__Caster_37casterType[i - 294876] = v
  end
end

function sg__Caster_get_x(i)
  if (i < 8191) then
    return s__Caster_x[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2x[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3x[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4x[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5x[i - 32764]
        else
          return s__Caster_6x[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7x[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8x[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9x[i - 65528]
      else
        return s__Caster_10x[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11x[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12x[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13x[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14x[i - 106483]
      else
        return s__Caster_15x[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16x[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17x[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18x[i - 139247]
    else
      return s__Caster_19x[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20x[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21x[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22x[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23x[i - 180202]
      else
        return s__Caster_24x[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25x[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26x[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27x[i - 212966]
    else
      return s__Caster_28x[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29x[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30x[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31x[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32x[i - 253921]
    else
      return s__Caster_33x[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34x[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35x[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36x[i - 286685]
  else
    return s__Caster_37x[i - 294876]
  end
end

function sg__Caster_set_x(i, v)
  if (i < 8191) then
    s__Caster_x[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2x[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3x[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4x[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5x[i - 32764] = v
        else
          s__Caster_6x[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7x[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8x[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9x[i - 65528] = v
      else
        s__Caster_10x[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11x[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12x[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13x[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14x[i - 106483] = v
      else
        s__Caster_15x[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16x[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17x[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18x[i - 139247] = v
    else
      s__Caster_19x[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20x[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21x[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22x[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23x[i - 180202] = v
      else
        s__Caster_24x[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25x[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26x[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27x[i - 212966] = v
    else
      s__Caster_28x[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29x[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30x[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31x[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32x[i - 253921] = v
    else
      s__Caster_33x[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34x[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35x[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36x[i - 286685] = v
  else
    s__Caster_37x[i - 294876] = v
  end
end

function sg__Caster_get_y(i)
  if (i < 8191) then
    return s__Caster_y[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2y[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3y[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4y[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5y[i - 32764]
        else
          return s__Caster_6y[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7y[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8y[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9y[i - 65528]
      else
        return s__Caster_10y[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11y[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12y[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13y[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14y[i - 106483]
      else
        return s__Caster_15y[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16y[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17y[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18y[i - 139247]
    else
      return s__Caster_19y[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20y[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21y[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22y[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23y[i - 180202]
      else
        return s__Caster_24y[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25y[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26y[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27y[i - 212966]
    else
      return s__Caster_28y[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29y[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30y[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31y[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32y[i - 253921]
    else
      return s__Caster_33y[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34y[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35y[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36y[i - 286685]
  else
    return s__Caster_37y[i - 294876]
  end
end

function sg__Caster_set_y(i, v)
  if (i < 8191) then
    s__Caster_y[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2y[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3y[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4y[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5y[i - 32764] = v
        else
          s__Caster_6y[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7y[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8y[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9y[i - 65528] = v
      else
        s__Caster_10y[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11y[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12y[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13y[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14y[i - 106483] = v
      else
        s__Caster_15y[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16y[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17y[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18y[i - 139247] = v
    else
      s__Caster_19y[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20y[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21y[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22y[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23y[i - 180202] = v
      else
        s__Caster_24y[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25y[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26y[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27y[i - 212966] = v
    else
      s__Caster_28y[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29y[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30y[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31y[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32y[i - 253921] = v
    else
      s__Caster_33y[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34y[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35y[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36y[i - 286685] = v
  else
    s__Caster_37y[i - 294876] = v
  end
end

function sg__Caster_get_angle(i)
  if (i < 8191) then
    return s__Caster_angle[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2angle[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3angle[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4angle[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5angle[i - 32764]
        else
          return s__Caster_6angle[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7angle[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8angle[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9angle[i - 65528]
      else
        return s__Caster_10angle[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11angle[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12angle[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13angle[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14angle[i - 106483]
      else
        return s__Caster_15angle[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16angle[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17angle[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18angle[i - 139247]
    else
      return s__Caster_19angle[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20angle[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21angle[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22angle[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23angle[i - 180202]
      else
        return s__Caster_24angle[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25angle[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26angle[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27angle[i - 212966]
    else
      return s__Caster_28angle[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29angle[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30angle[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31angle[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32angle[i - 253921]
    else
      return s__Caster_33angle[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34angle[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35angle[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36angle[i - 286685]
  else
    return s__Caster_37angle[i - 294876]
  end
end

function sg__Caster_set_angle(i, v)
  if (i < 8191) then
    s__Caster_angle[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2angle[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3angle[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4angle[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5angle[i - 32764] = v
        else
          s__Caster_6angle[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7angle[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8angle[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9angle[i - 65528] = v
      else
        s__Caster_10angle[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11angle[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12angle[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13angle[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14angle[i - 106483] = v
      else
        s__Caster_15angle[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16angle[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17angle[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18angle[i - 139247] = v
    else
      s__Caster_19angle[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20angle[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21angle[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22angle[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23angle[i - 180202] = v
      else
        s__Caster_24angle[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25angle[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26angle[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27angle[i - 212966] = v
    else
      s__Caster_28angle[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29angle[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30angle[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31angle[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32angle[i - 253921] = v
    else
      s__Caster_33angle[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34angle[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35angle[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36angle[i - 286685] = v
  else
    s__Caster_37angle[i - 294876] = v
  end
end

function sg__Caster_get_disablingTimer(i)
  if (i < 8191) then
    return s__Caster_disablingTimer[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2disablingTimer[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3disablingTimer[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4disablingTimer[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5disablingTimer[i - 32764]
        else
          return s__Caster_6disablingTimer[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7disablingTimer[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8disablingTimer[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9disablingTimer[i - 65528]
      else
        return s__Caster_10disablingTimer[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11disablingTimer[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12disablingTimer[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13disablingTimer[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14disablingTimer[i - 106483]
      else
        return s__Caster_15disablingTimer[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16disablingTimer[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17disablingTimer[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18disablingTimer[i - 139247]
    else
      return s__Caster_19disablingTimer[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20disablingTimer[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21disablingTimer[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22disablingTimer[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23disablingTimer[i - 180202]
      else
        return s__Caster_24disablingTimer[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25disablingTimer[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26disablingTimer[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27disablingTimer[i - 212966]
    else
      return s__Caster_28disablingTimer[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29disablingTimer[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30disablingTimer[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31disablingTimer[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32disablingTimer[i - 253921]
    else
      return s__Caster_33disablingTimer[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34disablingTimer[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35disablingTimer[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36disablingTimer[i - 286685]
  else
    return s__Caster_37disablingTimer[i - 294876]
  end
end

function sg__Caster_set_disablingTimer(i, v)
  if (i < 8191) then
    s__Caster_disablingTimer[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2disablingTimer[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3disablingTimer[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4disablingTimer[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5disablingTimer[i - 32764] = v
        else
          s__Caster_6disablingTimer[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7disablingTimer[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8disablingTimer[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9disablingTimer[i - 65528] = v
      else
        s__Caster_10disablingTimer[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11disablingTimer[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12disablingTimer[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13disablingTimer[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14disablingTimer[i - 106483] = v
      else
        s__Caster_15disablingTimer[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16disablingTimer[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17disablingTimer[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18disablingTimer[i - 139247] = v
    else
      s__Caster_19disablingTimer[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20disablingTimer[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21disablingTimer[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22disablingTimer[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23disablingTimer[i - 180202] = v
      else
        s__Caster_24disablingTimer[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25disablingTimer[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26disablingTimer[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27disablingTimer[i - 212966] = v
    else
      s__Caster_28disablingTimer[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29disablingTimer[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30disablingTimer[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31disablingTimer[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32disablingTimer[i - 253921] = v
    else
      s__Caster_33disablingTimer[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34disablingTimer[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35disablingTimer[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36disablingTimer[i - 286685] = v
  else
    s__Caster_37disablingTimer[i - 294876] = v
  end
end

function sg__Caster_get_baseColorId(i)
  if (i < 8191) then
    return s__Caster_baseColorId[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2baseColorId[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3baseColorId[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4baseColorId[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5baseColorId[i - 32764]
        else
          return s__Caster_6baseColorId[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7baseColorId[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8baseColorId[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9baseColorId[i - 65528]
      else
        return s__Caster_10baseColorId[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11baseColorId[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12baseColorId[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13baseColorId[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14baseColorId[i - 106483]
      else
        return s__Caster_15baseColorId[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16baseColorId[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17baseColorId[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18baseColorId[i - 139247]
    else
      return s__Caster_19baseColorId[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20baseColorId[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21baseColorId[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22baseColorId[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23baseColorId[i - 180202]
      else
        return s__Caster_24baseColorId[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25baseColorId[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26baseColorId[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27baseColorId[i - 212966]
    else
      return s__Caster_28baseColorId[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29baseColorId[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30baseColorId[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31baseColorId[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32baseColorId[i - 253921]
    else
      return s__Caster_33baseColorId[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34baseColorId[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35baseColorId[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36baseColorId[i - 286685]
  else
    return s__Caster_37baseColorId[i - 294876]
  end
end

function sg__Caster_set_baseColorId(i, v)
  if (i < 8191) then
    s__Caster_baseColorId[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2baseColorId[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3baseColorId[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4baseColorId[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5baseColorId[i - 32764] = v
        else
          s__Caster_6baseColorId[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7baseColorId[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8baseColorId[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9baseColorId[i - 65528] = v
      else
        s__Caster_10baseColorId[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11baseColorId[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12baseColorId[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13baseColorId[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14baseColorId[i - 106483] = v
      else
        s__Caster_15baseColorId[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16baseColorId[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17baseColorId[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18baseColorId[i - 139247] = v
    else
      s__Caster_19baseColorId[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20baseColorId[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21baseColorId[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22baseColorId[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23baseColorId[i - 180202] = v
      else
        s__Caster_24baseColorId[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25baseColorId[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26baseColorId[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27baseColorId[i - 212966] = v
    else
      s__Caster_28baseColorId[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29baseColorId[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30baseColorId[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31baseColorId[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32baseColorId[i - 253921] = v
    else
      s__Caster_33baseColorId[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34baseColorId[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35baseColorId[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36baseColorId[i - 286685] = v
  else
    s__Caster_37baseColorId[i - 294876] = v
  end
end

function sg__Caster_get_vcRed(i)
  if (i < 8191) then
    return s__Caster_vcRed[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2vcRed[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3vcRed[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4vcRed[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5vcRed[i - 32764]
        else
          return s__Caster_6vcRed[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7vcRed[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8vcRed[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9vcRed[i - 65528]
      else
        return s__Caster_10vcRed[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11vcRed[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12vcRed[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13vcRed[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14vcRed[i - 106483]
      else
        return s__Caster_15vcRed[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16vcRed[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17vcRed[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18vcRed[i - 139247]
    else
      return s__Caster_19vcRed[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20vcRed[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21vcRed[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22vcRed[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23vcRed[i - 180202]
      else
        return s__Caster_24vcRed[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25vcRed[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26vcRed[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27vcRed[i - 212966]
    else
      return s__Caster_28vcRed[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29vcRed[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30vcRed[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31vcRed[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32vcRed[i - 253921]
    else
      return s__Caster_33vcRed[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34vcRed[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35vcRed[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36vcRed[i - 286685]
  else
    return s__Caster_37vcRed[i - 294876]
  end
end

function sg__Caster_set_vcRed(i, v)
  if (i < 8191) then
    s__Caster_vcRed[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2vcRed[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3vcRed[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4vcRed[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5vcRed[i - 32764] = v
        else
          s__Caster_6vcRed[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7vcRed[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8vcRed[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9vcRed[i - 65528] = v
      else
        s__Caster_10vcRed[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11vcRed[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12vcRed[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13vcRed[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14vcRed[i - 106483] = v
      else
        s__Caster_15vcRed[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16vcRed[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17vcRed[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18vcRed[i - 139247] = v
    else
      s__Caster_19vcRed[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20vcRed[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21vcRed[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22vcRed[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23vcRed[i - 180202] = v
      else
        s__Caster_24vcRed[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25vcRed[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26vcRed[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27vcRed[i - 212966] = v
    else
      s__Caster_28vcRed[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29vcRed[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30vcRed[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31vcRed[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32vcRed[i - 253921] = v
    else
      s__Caster_33vcRed[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34vcRed[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35vcRed[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36vcRed[i - 286685] = v
  else
    s__Caster_37vcRed[i - 294876] = v
  end
end

function sg__Caster_get_vcGreen(i)
  if (i < 8191) then
    return s__Caster_vcGreen[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2vcGreen[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3vcGreen[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4vcGreen[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5vcGreen[i - 32764]
        else
          return s__Caster_6vcGreen[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7vcGreen[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8vcGreen[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9vcGreen[i - 65528]
      else
        return s__Caster_10vcGreen[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11vcGreen[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12vcGreen[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13vcGreen[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14vcGreen[i - 106483]
      else
        return s__Caster_15vcGreen[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16vcGreen[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17vcGreen[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18vcGreen[i - 139247]
    else
      return s__Caster_19vcGreen[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20vcGreen[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21vcGreen[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22vcGreen[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23vcGreen[i - 180202]
      else
        return s__Caster_24vcGreen[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25vcGreen[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26vcGreen[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27vcGreen[i - 212966]
    else
      return s__Caster_28vcGreen[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29vcGreen[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30vcGreen[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31vcGreen[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32vcGreen[i - 253921]
    else
      return s__Caster_33vcGreen[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34vcGreen[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35vcGreen[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36vcGreen[i - 286685]
  else
    return s__Caster_37vcGreen[i - 294876]
  end
end

function sg__Caster_set_vcGreen(i, v)
  if (i < 8191) then
    s__Caster_vcGreen[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2vcGreen[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3vcGreen[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4vcGreen[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5vcGreen[i - 32764] = v
        else
          s__Caster_6vcGreen[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7vcGreen[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8vcGreen[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9vcGreen[i - 65528] = v
      else
        s__Caster_10vcGreen[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11vcGreen[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12vcGreen[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13vcGreen[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14vcGreen[i - 106483] = v
      else
        s__Caster_15vcGreen[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16vcGreen[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17vcGreen[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18vcGreen[i - 139247] = v
    else
      s__Caster_19vcGreen[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20vcGreen[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21vcGreen[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22vcGreen[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23vcGreen[i - 180202] = v
      else
        s__Caster_24vcGreen[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25vcGreen[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26vcGreen[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27vcGreen[i - 212966] = v
    else
      s__Caster_28vcGreen[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29vcGreen[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30vcGreen[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31vcGreen[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32vcGreen[i - 253921] = v
    else
      s__Caster_33vcGreen[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34vcGreen[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35vcGreen[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36vcGreen[i - 286685] = v
  else
    s__Caster_37vcGreen[i - 294876] = v
  end
end

function sg__Caster_get_vcBlue(i)
  if (i < 8191) then
    return s__Caster_vcBlue[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2vcBlue[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3vcBlue[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4vcBlue[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5vcBlue[i - 32764]
        else
          return s__Caster_6vcBlue[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7vcBlue[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8vcBlue[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9vcBlue[i - 65528]
      else
        return s__Caster_10vcBlue[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11vcBlue[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12vcBlue[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13vcBlue[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14vcBlue[i - 106483]
      else
        return s__Caster_15vcBlue[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16vcBlue[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17vcBlue[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18vcBlue[i - 139247]
    else
      return s__Caster_19vcBlue[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20vcBlue[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21vcBlue[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22vcBlue[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23vcBlue[i - 180202]
      else
        return s__Caster_24vcBlue[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25vcBlue[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26vcBlue[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27vcBlue[i - 212966]
    else
      return s__Caster_28vcBlue[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29vcBlue[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30vcBlue[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31vcBlue[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32vcBlue[i - 253921]
    else
      return s__Caster_33vcBlue[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34vcBlue[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35vcBlue[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36vcBlue[i - 286685]
  else
    return s__Caster_37vcBlue[i - 294876]
  end
end

function sg__Caster_set_vcBlue(i, v)
  if (i < 8191) then
    s__Caster_vcBlue[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2vcBlue[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3vcBlue[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4vcBlue[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5vcBlue[i - 32764] = v
        else
          s__Caster_6vcBlue[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7vcBlue[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8vcBlue[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9vcBlue[i - 65528] = v
      else
        s__Caster_10vcBlue[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11vcBlue[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12vcBlue[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13vcBlue[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14vcBlue[i - 106483] = v
      else
        s__Caster_15vcBlue[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16vcBlue[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17vcBlue[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18vcBlue[i - 139247] = v
    else
      s__Caster_19vcBlue[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20vcBlue[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21vcBlue[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22vcBlue[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23vcBlue[i - 180202] = v
      else
        s__Caster_24vcBlue[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25vcBlue[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26vcBlue[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27vcBlue[i - 212966] = v
    else
      s__Caster_28vcBlue[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29vcBlue[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30vcBlue[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31vcBlue[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32vcBlue[i - 253921] = v
    else
      s__Caster_33vcBlue[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34vcBlue[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35vcBlue[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36vcBlue[i - 286685] = v
  else
    s__Caster_37vcBlue[i - 294876] = v
  end
end

function sg__Caster_get_vcTransparency(i)
  if (i < 8191) then
    return s__Caster_vcTransparency[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2vcTransparency[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3vcTransparency[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4vcTransparency[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5vcTransparency[i - 32764]
        else
          return s__Caster_6vcTransparency[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7vcTransparency[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8vcTransparency[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9vcTransparency[i - 65528]
      else
        return s__Caster_10vcTransparency[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11vcTransparency[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12vcTransparency[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13vcTransparency[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14vcTransparency[i - 106483]
      else
        return s__Caster_15vcTransparency[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16vcTransparency[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17vcTransparency[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18vcTransparency[i - 139247]
    else
      return s__Caster_19vcTransparency[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20vcTransparency[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21vcTransparency[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22vcTransparency[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23vcTransparency[i - 180202]
      else
        return s__Caster_24vcTransparency[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25vcTransparency[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26vcTransparency[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27vcTransparency[i - 212966]
    else
      return s__Caster_28vcTransparency[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29vcTransparency[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30vcTransparency[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31vcTransparency[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32vcTransparency[i - 253921]
    else
      return s__Caster_33vcTransparency[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34vcTransparency[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35vcTransparency[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36vcTransparency[i - 286685]
  else
    return s__Caster_37vcTransparency[i - 294876]
  end
end

function sg__Caster_set_vcTransparency(i, v)
  if (i < 8191) then
    s__Caster_vcTransparency[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2vcTransparency[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3vcTransparency[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4vcTransparency[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5vcTransparency[i - 32764] = v
        else
          s__Caster_6vcTransparency[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7vcTransparency[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8vcTransparency[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9vcTransparency[i - 65528] = v
      else
        s__Caster_10vcTransparency[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11vcTransparency[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12vcTransparency[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13vcTransparency[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14vcTransparency[i - 106483] = v
      else
        s__Caster_15vcTransparency[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16vcTransparency[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17vcTransparency[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18vcTransparency[i - 139247] = v
    else
      s__Caster_19vcTransparency[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20vcTransparency[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21vcTransparency[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22vcTransparency[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23vcTransparency[i - 180202] = v
      else
        s__Caster_24vcTransparency[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25vcTransparency[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26vcTransparency[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27vcTransparency[i - 212966] = v
    else
      s__Caster_28vcTransparency[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29vcTransparency[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30vcTransparency[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31vcTransparency[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32vcTransparency[i - 253921] = v
    else
      s__Caster_33vcTransparency[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34vcTransparency[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35vcTransparency[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36vcTransparency[i - 286685] = v
  else
    s__Caster_37vcTransparency[i - 294876] = v
  end
end

function sg__Caster_get_casterUnit(i)
  if (i < 8191) then
    return s__Caster_casterUnit[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2casterUnit[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3casterUnit[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4casterUnit[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5casterUnit[i - 32764]
        else
          return s__Caster_6casterUnit[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7casterUnit[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8casterUnit[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9casterUnit[i - 65528]
      else
        return s__Caster_10casterUnit[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11casterUnit[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12casterUnit[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13casterUnit[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14casterUnit[i - 106483]
      else
        return s__Caster_15casterUnit[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16casterUnit[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17casterUnit[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18casterUnit[i - 139247]
    else
      return s__Caster_19casterUnit[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20casterUnit[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21casterUnit[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22casterUnit[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23casterUnit[i - 180202]
      else
        return s__Caster_24casterUnit[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25casterUnit[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26casterUnit[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27casterUnit[i - 212966]
    else
      return s__Caster_28casterUnit[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29casterUnit[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30casterUnit[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31casterUnit[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32casterUnit[i - 253921]
    else
      return s__Caster_33casterUnit[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34casterUnit[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35casterUnit[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36casterUnit[i - 286685]
  else
    return s__Caster_37casterUnit[i - 294876]
  end
end

function sg__Caster_set_casterUnit(i, v)
  if (i < 8191) then
    s__Caster_casterUnit[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2casterUnit[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3casterUnit[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4casterUnit[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5casterUnit[i - 32764] = v
        else
          s__Caster_6casterUnit[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7casterUnit[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8casterUnit[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9casterUnit[i - 65528] = v
      else
        s__Caster_10casterUnit[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11casterUnit[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12casterUnit[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13casterUnit[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14casterUnit[i - 106483] = v
      else
        s__Caster_15casterUnit[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16casterUnit[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17casterUnit[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18casterUnit[i - 139247] = v
    else
      s__Caster_19casterUnit[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20casterUnit[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21casterUnit[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22casterUnit[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23casterUnit[i - 180202] = v
      else
        s__Caster_24casterUnit[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25casterUnit[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26casterUnit[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27casterUnit[i - 212966] = v
    else
      s__Caster_28casterUnit[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29casterUnit[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30casterUnit[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31casterUnit[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32casterUnit[i - 253921] = v
    else
      s__Caster_33casterUnit[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34casterUnit[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35casterUnit[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36casterUnit[i - 286685] = v
  else
    s__Caster_37casterUnit[i - 294876] = v
  end
end

function sg__Caster_get_trg_unitWithinRange(i)
  if (i < 8191) then
    return s__Caster_trg_unitWithinRange[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2trg_unitWithinRange[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3trg_unitWithinRange[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4trg_unitWithinRange[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5trg_unitWithinRange[i - 32764]
        else
          return s__Caster_6trg_unitWithinRange[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7trg_unitWithinRange[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8trg_unitWithinRange[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9trg_unitWithinRange[i - 65528]
      else
        return s__Caster_10trg_unitWithinRange[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11trg_unitWithinRange[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12trg_unitWithinRange[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13trg_unitWithinRange[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14trg_unitWithinRange[i - 106483]
      else
        return s__Caster_15trg_unitWithinRange[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16trg_unitWithinRange[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17trg_unitWithinRange[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18trg_unitWithinRange[i - 139247]
    else
      return s__Caster_19trg_unitWithinRange[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20trg_unitWithinRange[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21trg_unitWithinRange[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22trg_unitWithinRange[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23trg_unitWithinRange[i - 180202]
      else
        return s__Caster_24trg_unitWithinRange[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25trg_unitWithinRange[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26trg_unitWithinRange[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27trg_unitWithinRange[i - 212966]
    else
      return s__Caster_28trg_unitWithinRange[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29trg_unitWithinRange[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30trg_unitWithinRange[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31trg_unitWithinRange[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32trg_unitWithinRange[i - 253921]
    else
      return s__Caster_33trg_unitWithinRange[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34trg_unitWithinRange[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35trg_unitWithinRange[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36trg_unitWithinRange[i - 286685]
  else
    return s__Caster_37trg_unitWithinRange[i - 294876]
  end
end

function sg__Caster_set_trg_unitWithinRange(i, v)
  if (i < 8191) then
    s__Caster_trg_unitWithinRange[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2trg_unitWithinRange[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3trg_unitWithinRange[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4trg_unitWithinRange[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5trg_unitWithinRange[i - 32764] = v
        else
          s__Caster_6trg_unitWithinRange[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7trg_unitWithinRange[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8trg_unitWithinRange[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9trg_unitWithinRange[i - 65528] = v
      else
        s__Caster_10trg_unitWithinRange[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11trg_unitWithinRange[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12trg_unitWithinRange[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13trg_unitWithinRange[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14trg_unitWithinRange[i - 106483] = v
      else
        s__Caster_15trg_unitWithinRange[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16trg_unitWithinRange[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17trg_unitWithinRange[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18trg_unitWithinRange[i - 139247] = v
    else
      s__Caster_19trg_unitWithinRange[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20trg_unitWithinRange[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21trg_unitWithinRange[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22trg_unitWithinRange[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23trg_unitWithinRange[i - 180202] = v
      else
        s__Caster_24trg_unitWithinRange[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25trg_unitWithinRange[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26trg_unitWithinRange[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27trg_unitWithinRange[i - 212966] = v
    else
      s__Caster_28trg_unitWithinRange[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29trg_unitWithinRange[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30trg_unitWithinRange[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31trg_unitWithinRange[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32trg_unitWithinRange[i - 253921] = v
    else
      s__Caster_33trg_unitWithinRange[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34trg_unitWithinRange[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35trg_unitWithinRange[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36trg_unitWithinRange[i - 286685] = v
  else
    s__Caster_37trg_unitWithinRange[i - 294876] = v
  end
end

function sg__Caster_get_escapersInRange(i)
  if (i < 8191) then
    return s__Caster_escapersInRange[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2escapersInRange[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3escapersInRange[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4escapersInRange[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5escapersInRange[i - 32764]
        else
          return s__Caster_6escapersInRange[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7escapersInRange[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8escapersInRange[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9escapersInRange[i - 65528]
      else
        return s__Caster_10escapersInRange[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11escapersInRange[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12escapersInRange[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13escapersInRange[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14escapersInRange[i - 106483]
      else
        return s__Caster_15escapersInRange[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16escapersInRange[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17escapersInRange[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18escapersInRange[i - 139247]
    else
      return s__Caster_19escapersInRange[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20escapersInRange[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21escapersInRange[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22escapersInRange[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23escapersInRange[i - 180202]
      else
        return s__Caster_24escapersInRange[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25escapersInRange[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26escapersInRange[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27escapersInRange[i - 212966]
    else
      return s__Caster_28escapersInRange[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29escapersInRange[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30escapersInRange[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31escapersInRange[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32escapersInRange[i - 253921]
    else
      return s__Caster_33escapersInRange[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34escapersInRange[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35escapersInRange[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36escapersInRange[i - 286685]
  else
    return s__Caster_37escapersInRange[i - 294876]
  end
end

function sg__Caster_set_escapersInRange(i, v)
  if (i < 8191) then
    s__Caster_escapersInRange[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2escapersInRange[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3escapersInRange[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4escapersInRange[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5escapersInRange[i - 32764] = v
        else
          s__Caster_6escapersInRange[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7escapersInRange[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8escapersInRange[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9escapersInRange[i - 65528] = v
      else
        s__Caster_10escapersInRange[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11escapersInRange[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12escapersInRange[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13escapersInRange[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14escapersInRange[i - 106483] = v
      else
        s__Caster_15escapersInRange[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16escapersInRange[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17escapersInRange[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18escapersInRange[i - 139247] = v
    else
      s__Caster_19escapersInRange[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20escapersInRange[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21escapersInRange[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22escapersInRange[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23escapersInRange[i - 180202] = v
      else
        s__Caster_24escapersInRange[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25escapersInRange[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26escapersInRange[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27escapersInRange[i - 212966] = v
    else
      s__Caster_28escapersInRange[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29escapersInRange[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30escapersInRange[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31escapersInRange[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32escapersInRange[i - 253921] = v
    else
      s__Caster_33escapersInRange[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34escapersInRange[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35escapersInRange[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36escapersInRange[i - 286685] = v
  else
    s__Caster_37escapersInRange[i - 294876] = v
  end
end

function sg__Caster_get_nbEscapersInRange(i)
  if (i < 8191) then
    return s__Caster_nbEscapersInRange[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2nbEscapersInRange[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3nbEscapersInRange[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4nbEscapersInRange[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5nbEscapersInRange[i - 32764]
        else
          return s__Caster_6nbEscapersInRange[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7nbEscapersInRange[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8nbEscapersInRange[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9nbEscapersInRange[i - 65528]
      else
        return s__Caster_10nbEscapersInRange[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11nbEscapersInRange[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12nbEscapersInRange[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13nbEscapersInRange[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14nbEscapersInRange[i - 106483]
      else
        return s__Caster_15nbEscapersInRange[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16nbEscapersInRange[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17nbEscapersInRange[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18nbEscapersInRange[i - 139247]
    else
      return s__Caster_19nbEscapersInRange[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20nbEscapersInRange[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21nbEscapersInRange[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22nbEscapersInRange[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23nbEscapersInRange[i - 180202]
      else
        return s__Caster_24nbEscapersInRange[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25nbEscapersInRange[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26nbEscapersInRange[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27nbEscapersInRange[i - 212966]
    else
      return s__Caster_28nbEscapersInRange[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29nbEscapersInRange[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30nbEscapersInRange[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31nbEscapersInRange[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32nbEscapersInRange[i - 253921]
    else
      return s__Caster_33nbEscapersInRange[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34nbEscapersInRange[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35nbEscapersInRange[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36nbEscapersInRange[i - 286685]
  else
    return s__Caster_37nbEscapersInRange[i - 294876]
  end
end

function sg__Caster_set_nbEscapersInRange(i, v)
  if (i < 8191) then
    s__Caster_nbEscapersInRange[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2nbEscapersInRange[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3nbEscapersInRange[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4nbEscapersInRange[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5nbEscapersInRange[i - 32764] = v
        else
          s__Caster_6nbEscapersInRange[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7nbEscapersInRange[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8nbEscapersInRange[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9nbEscapersInRange[i - 65528] = v
      else
        s__Caster_10nbEscapersInRange[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11nbEscapersInRange[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12nbEscapersInRange[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13nbEscapersInRange[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14nbEscapersInRange[i - 106483] = v
      else
        s__Caster_15nbEscapersInRange[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16nbEscapersInRange[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17nbEscapersInRange[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18nbEscapersInRange[i - 139247] = v
    else
      s__Caster_19nbEscapersInRange[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20nbEscapersInRange[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21nbEscapersInRange[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22nbEscapersInRange[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23nbEscapersInRange[i - 180202] = v
      else
        s__Caster_24nbEscapersInRange[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25nbEscapersInRange[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26nbEscapersInRange[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27nbEscapersInRange[i - 212966] = v
    else
      s__Caster_28nbEscapersInRange[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29nbEscapersInRange[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30nbEscapersInRange[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31nbEscapersInRange[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32nbEscapersInRange[i - 253921] = v
    else
      s__Caster_33nbEscapersInRange[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34nbEscapersInRange[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35nbEscapersInRange[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36nbEscapersInRange[i - 286685] = v
  else
    s__Caster_37nbEscapersInRange[i - 294876] = v
  end
end

function sg__Caster_get_canShoot(i)
  if (i < 8191) then
    return s__Caster_canShoot[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2canShoot[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3canShoot[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4canShoot[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5canShoot[i - 32764]
        else
          return s__Caster_6canShoot[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7canShoot[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8canShoot[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9canShoot[i - 65528]
      else
        return s__Caster_10canShoot[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11canShoot[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12canShoot[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13canShoot[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14canShoot[i - 106483]
      else
        return s__Caster_15canShoot[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16canShoot[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17canShoot[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18canShoot[i - 139247]
    else
      return s__Caster_19canShoot[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20canShoot[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21canShoot[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22canShoot[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23canShoot[i - 180202]
      else
        return s__Caster_24canShoot[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25canShoot[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26canShoot[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27canShoot[i - 212966]
    else
      return s__Caster_28canShoot[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29canShoot[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30canShoot[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31canShoot[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32canShoot[i - 253921]
    else
      return s__Caster_33canShoot[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34canShoot[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35canShoot[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36canShoot[i - 286685]
  else
    return s__Caster_37canShoot[i - 294876]
  end
end

function sg__Caster_set_canShoot(i, v)
  if (i < 8191) then
    s__Caster_canShoot[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2canShoot[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3canShoot[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4canShoot[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5canShoot[i - 32764] = v
        else
          s__Caster_6canShoot[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7canShoot[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8canShoot[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9canShoot[i - 65528] = v
      else
        s__Caster_10canShoot[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11canShoot[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12canShoot[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13canShoot[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14canShoot[i - 106483] = v
      else
        s__Caster_15canShoot[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16canShoot[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17canShoot[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18canShoot[i - 139247] = v
    else
      s__Caster_19canShoot[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20canShoot[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21canShoot[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22canShoot[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23canShoot[i - 180202] = v
      else
        s__Caster_24canShoot[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25canShoot[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26canShoot[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27canShoot[i - 212966] = v
    else
      s__Caster_28canShoot[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29canShoot[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30canShoot[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31canShoot[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32canShoot[i - 253921] = v
    else
      s__Caster_33canShoot[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34canShoot[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35canShoot[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36canShoot[i - 286685] = v
  else
    s__Caster_37canShoot[i - 294876] = v
  end
end

function sg__Caster_get_t(i)
  if (i < 8191) then
    return s__Caster_t[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2t[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3t[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4t[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5t[i - 32764]
        else
          return s__Caster_6t[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7t[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8t[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9t[i - 65528]
      else
        return s__Caster_10t[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11t[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12t[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13t[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14t[i - 106483]
      else
        return s__Caster_15t[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16t[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17t[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18t[i - 139247]
    else
      return s__Caster_19t[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20t[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21t[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22t[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23t[i - 180202]
      else
        return s__Caster_24t[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25t[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26t[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27t[i - 212966]
    else
      return s__Caster_28t[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29t[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30t[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31t[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32t[i - 253921]
    else
      return s__Caster_33t[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34t[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35t[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36t[i - 286685]
  else
    return s__Caster_37t[i - 294876]
  end
end

function sg__Caster_set_t(i, v)
  if (i < 8191) then
    s__Caster_t[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2t[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3t[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4t[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5t[i - 32764] = v
        else
          s__Caster_6t[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7t[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8t[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9t[i - 65528] = v
      else
        s__Caster_10t[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11t[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12t[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13t[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14t[i - 106483] = v
      else
        s__Caster_15t[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16t[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17t[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18t[i - 139247] = v
    else
      s__Caster_19t[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20t[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21t[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22t[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23t[i - 180202] = v
      else
        s__Caster_24t[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25t[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26t[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27t[i - 212966] = v
    else
      s__Caster_28t[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29t[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30t[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31t[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32t[i - 253921] = v
    else
      s__Caster_33t[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34t[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35t[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36t[i - 286685] = v
  else
    s__Caster_37t[i - 294876] = v
  end
end

function sg__Caster_get_enabled(i)
  if (i < 8191) then
    return s__Caster_enabled[i]
  elseif (i < 155629) then
    if (i < 16382) then
      return s__Caster_2enabled[i - 8191]
    elseif (i < 81910) then
      if (i < 24573) then
        return s__Caster_3enabled[i - 16382]
      elseif (i < 49146) then
        if (i < 32764) then
          return s__Caster_4enabled[i - 24573]
        elseif (i < 40955) then
          return s__Caster_5enabled[i - 32764]
        else
          return s__Caster_6enabled[i - 40955]
        end
      elseif (i < 57337) then
        return s__Caster_7enabled[i - 49146]
      elseif (i < 65528) then
        return s__Caster_8enabled[i - 57337]
      elseif (i < 73719) then
        return s__Caster_9enabled[i - 65528]
      else
        return s__Caster_10enabled[i - 73719]
      end
    elseif (i < 90101) then
      return s__Caster_11enabled[i - 81910]
    elseif (i < 122865) then
      if (i < 98292) then
        return s__Caster_12enabled[i - 90101]
      elseif (i < 106483) then
        return s__Caster_13enabled[i - 98292]
      elseif (i < 114674) then
        return s__Caster_14enabled[i - 106483]
      else
        return s__Caster_15enabled[i - 114674]
      end
    elseif (i < 131056) then
      return s__Caster_16enabled[i - 122865]
    elseif (i < 139247) then
      return s__Caster_17enabled[i - 131056]
    elseif (i < 147438) then
      return s__Caster_18enabled[i - 139247]
    else
      return s__Caster_19enabled[i - 147438]
    end
  elseif (i < 163820) then
    return s__Caster_20enabled[i - 155629]
  elseif (i < 229348) then
    if (i < 172011) then
      return s__Caster_21enabled[i - 163820]
    elseif (i < 196584) then
      if (i < 180202) then
        return s__Caster_22enabled[i - 172011]
      elseif (i < 188393) then
        return s__Caster_23enabled[i - 180202]
      else
        return s__Caster_24enabled[i - 188393]
      end
    elseif (i < 204775) then
      return s__Caster_25enabled[i - 196584]
    elseif (i < 212966) then
      return s__Caster_26enabled[i - 204775]
    elseif (i < 221157) then
      return s__Caster_27enabled[i - 212966]
    else
      return s__Caster_28enabled[i - 221157]
    end
  elseif (i < 237539) then
    return s__Caster_29enabled[i - 229348]
  elseif (i < 270303) then
    if (i < 245730) then
      return s__Caster_30enabled[i - 237539]
    elseif (i < 253921) then
      return s__Caster_31enabled[i - 245730]
    elseif (i < 262112) then
      return s__Caster_32enabled[i - 253921]
    else
      return s__Caster_33enabled[i - 262112]
    end
  elseif (i < 278494) then
    return s__Caster_34enabled[i - 270303]
  elseif (i < 286685) then
    return s__Caster_35enabled[i - 278494]
  elseif (i < 294876) then
    return s__Caster_36enabled[i - 286685]
  else
    return s__Caster_37enabled[i - 294876]
  end
end

function sg__Caster_set_enabled(i, v)
  if (i < 8191) then
    s__Caster_enabled[i] = v
  elseif (i < 155629) then
    if (i < 16382) then
      s__Caster_2enabled[i - 8191] = v
    elseif (i < 81910) then
      if (i < 24573) then
        s__Caster_3enabled[i - 16382] = v
      elseif (i < 49146) then
        if (i < 32764) then
          s__Caster_4enabled[i - 24573] = v
        elseif (i < 40955) then
          s__Caster_5enabled[i - 32764] = v
        else
          s__Caster_6enabled[i - 40955] = v
        end
      elseif (i < 57337) then
        s__Caster_7enabled[i - 49146] = v
      elseif (i < 65528) then
        s__Caster_8enabled[i - 57337] = v
      elseif (i < 73719) then
        s__Caster_9enabled[i - 65528] = v
      else
        s__Caster_10enabled[i - 73719] = v
      end
    elseif (i < 90101) then
      s__Caster_11enabled[i - 81910] = v
    elseif (i < 122865) then
      if (i < 98292) then
        s__Caster_12enabled[i - 90101] = v
      elseif (i < 106483) then
        s__Caster_13enabled[i - 98292] = v
      elseif (i < 114674) then
        s__Caster_14enabled[i - 106483] = v
      else
        s__Caster_15enabled[i - 114674] = v
      end
    elseif (i < 131056) then
      s__Caster_16enabled[i - 122865] = v
    elseif (i < 139247) then
      s__Caster_17enabled[i - 131056] = v
    elseif (i < 147438) then
      s__Caster_18enabled[i - 139247] = v
    else
      s__Caster_19enabled[i - 147438] = v
    end
  elseif (i < 163820) then
    s__Caster_20enabled[i - 155629] = v
  elseif (i < 229348) then
    if (i < 172011) then
      s__Caster_21enabled[i - 163820] = v
    elseif (i < 196584) then
      if (i < 180202) then
        s__Caster_22enabled[i - 172011] = v
      elseif (i < 188393) then
        s__Caster_23enabled[i - 180202] = v
      else
        s__Caster_24enabled[i - 188393] = v
      end
    elseif (i < 204775) then
      s__Caster_25enabled[i - 196584] = v
    elseif (i < 212966) then
      s__Caster_26enabled[i - 204775] = v
    elseif (i < 221157) then
      s__Caster_27enabled[i - 212966] = v
    else
      s__Caster_28enabled[i - 221157] = v
    end
  elseif (i < 237539) then
    s__Caster_29enabled[i - 229348] = v
  elseif (i < 270303) then
    if (i < 245730) then
      s__Caster_30enabled[i - 237539] = v
    elseif (i < 253921) then
      s__Caster_31enabled[i - 245730] = v
    elseif (i < 262112) then
      s__Caster_32enabled[i - 253921] = v
    else
      s__Caster_33enabled[i - 262112] = v
    end
  elseif (i < 278494) then
    s__Caster_34enabled[i - 270303] = v
  elseif (i < 286685) then
    s__Caster_35enabled[i - 278494] = v
  elseif (i < 294876) then
    s__Caster_36enabled[i - 286685] = v
  else
    s__Caster_37enabled[i - 294876] = v
  end
end

function sg__MonsterOrCaster_get_monster(i)
  if (i < 8191) then
    return s__MonsterOrCaster_monster[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterOrCaster_2monster[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterOrCaster_3monster[i - 16382]
      else
        return s__MonsterOrCaster_4monster[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterOrCaster_5monster[i - 32764]
    elseif (i < 49146) then
      return s__MonsterOrCaster_6monster[i - 40955]
    else
      return s__MonsterOrCaster_7monster[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterOrCaster_8monster[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterOrCaster_9monster[i - 65528]
    else
      return s__MonsterOrCaster_10monster[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterOrCaster_11monster[i - 81910]
  elseif (i < 98292) then
    return s__MonsterOrCaster_12monster[i - 90101]
  else
    return s__MonsterOrCaster_13monster[i - 98292]
  end
end

function sg__MonsterOrCaster_set_monster(i, v)
  if (i < 8191) then
    s__MonsterOrCaster_monster[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterOrCaster_2monster[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterOrCaster_3monster[i - 16382] = v
      else
        s__MonsterOrCaster_4monster[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterOrCaster_5monster[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterOrCaster_6monster[i - 40955] = v
    else
      s__MonsterOrCaster_7monster[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterOrCaster_8monster[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterOrCaster_9monster[i - 65528] = v
    else
      s__MonsterOrCaster_10monster[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterOrCaster_11monster[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterOrCaster_12monster[i - 90101] = v
  else
    s__MonsterOrCaster_13monster[i - 98292] = v
  end
end

function sg__MonsterOrCaster_get_caster(i)
  if (i < 8191) then
    return s__MonsterOrCaster_caster[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterOrCaster_2caster[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterOrCaster_3caster[i - 16382]
      else
        return s__MonsterOrCaster_4caster[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterOrCaster_5caster[i - 32764]
    elseif (i < 49146) then
      return s__MonsterOrCaster_6caster[i - 40955]
    else
      return s__MonsterOrCaster_7caster[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterOrCaster_8caster[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterOrCaster_9caster[i - 65528]
    else
      return s__MonsterOrCaster_10caster[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterOrCaster_11caster[i - 81910]
  elseif (i < 98292) then
    return s__MonsterOrCaster_12caster[i - 90101]
  else
    return s__MonsterOrCaster_13caster[i - 98292]
  end
end

function sg__MonsterOrCaster_set_caster(i, v)
  if (i < 8191) then
    s__MonsterOrCaster_caster[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterOrCaster_2caster[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterOrCaster_3caster[i - 16382] = v
      else
        s__MonsterOrCaster_4caster[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterOrCaster_5caster[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterOrCaster_6caster[i - 40955] = v
    else
      s__MonsterOrCaster_7caster[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterOrCaster_8caster[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterOrCaster_9caster[i - 65528] = v
    else
      s__MonsterOrCaster_10caster[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterOrCaster_11caster[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterOrCaster_12caster[i - 90101] = v
  else
    s__MonsterOrCaster_13caster[i - 98292] = v
  end
end

function sg__Monster_get_id(i)
  if (i < 8191) then
    return s__Monster_id[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2id[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3id[i - 16382]
      else
        return s__Monster_4id[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5id[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6id[i - 40955]
    else
      return s__Monster_7id[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8id[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9id[i - 65528]
    else
      return s__Monster_10id[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11id[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12id[i - 90101]
  else
    return s__Monster_13id[i - 98292]
  end
end

function sg__Monster_set_id(i, v)
  if (i < 8191) then
    s__Monster_id[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2id[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3id[i - 16382] = v
      else
        s__Monster_4id[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5id[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6id[i - 40955] = v
    else
      s__Monster_7id[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8id[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9id[i - 65528] = v
    else
      s__Monster_10id[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11id[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12id[i - 90101] = v
  else
    s__Monster_13id[i - 98292] = v
  end
end

function sg__Monster_get_u(i)
  if (i < 8191) then
    return s__Monster_u[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2u[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3u[i - 16382]
      else
        return s__Monster_4u[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5u[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6u[i - 40955]
    else
      return s__Monster_7u[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8u[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9u[i - 65528]
    else
      return s__Monster_10u[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11u[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12u[i - 90101]
  else
    return s__Monster_13u[i - 98292]
  end
end

function sg__Monster_set_u(i, v)
  if (i < 8191) then
    s__Monster_u[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2u[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3u[i - 16382] = v
      else
        s__Monster_4u[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5u[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6u[i - 40955] = v
    else
      s__Monster_7u[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8u[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9u[i - 65528] = v
    else
      s__Monster_10u[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11u[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12u[i - 90101] = v
  else
    s__Monster_13u[i - 98292] = v
  end
end

function sg__Monster_get_mt(i)
  if (i < 8191) then
    return s__Monster_mt[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2mt[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3mt[i - 16382]
      else
        return s__Monster_4mt[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5mt[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6mt[i - 40955]
    else
      return s__Monster_7mt[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8mt[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9mt[i - 65528]
    else
      return s__Monster_10mt[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11mt[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12mt[i - 90101]
  else
    return s__Monster_13mt[i - 98292]
  end
end

function sg__Monster_set_mt(i, v)
  if (i < 8191) then
    s__Monster_mt[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2mt[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3mt[i - 16382] = v
      else
        s__Monster_4mt[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5mt[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6mt[i - 40955] = v
    else
      s__Monster_7mt[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8mt[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9mt[i - 65528] = v
    else
      s__Monster_10mt[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11mt[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12mt[i - 90101] = v
  else
    s__Monster_13mt[i - 98292] = v
  end
end

function sg__Monster_get_level(i)
  if (i < 8191) then
    return s__Monster_level[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2level[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3level[i - 16382]
      else
        return s__Monster_4level[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5level[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6level[i - 40955]
    else
      return s__Monster_7level[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8level[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9level[i - 65528]
    else
      return s__Monster_10level[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11level[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12level[i - 90101]
  else
    return s__Monster_13level[i - 98292]
  end
end

function sg__Monster_set_level(i, v)
  if (i < 8191) then
    s__Monster_level[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2level[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3level[i - 16382] = v
      else
        s__Monster_4level[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5level[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6level[i - 40955] = v
    else
      s__Monster_7level[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8level[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9level[i - 65528] = v
    else
      s__Monster_10level[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11level[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12level[i - 90101] = v
  else
    s__Monster_13level[i - 98292] = v
  end
end

function sg__Monster_get_arrayId(i)
  if (i < 8191) then
    return s__Monster_arrayId[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2arrayId[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3arrayId[i - 16382]
      else
        return s__Monster_4arrayId[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5arrayId[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6arrayId[i - 40955]
    else
      return s__Monster_7arrayId[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8arrayId[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9arrayId[i - 65528]
    else
      return s__Monster_10arrayId[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11arrayId[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12arrayId[i - 90101]
  else
    return s__Monster_13arrayId[i - 98292]
  end
end

function sg__Monster_set_arrayId(i, v)
  if (i < 8191) then
    s__Monster_arrayId[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2arrayId[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3arrayId[i - 16382] = v
      else
        s__Monster_4arrayId[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5arrayId[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6arrayId[i - 40955] = v
    else
      s__Monster_7arrayId[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8arrayId[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9arrayId[i - 65528] = v
    else
      s__Monster_10arrayId[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11arrayId[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12arrayId[i - 90101] = v
  else
    s__Monster_13arrayId[i - 98292] = v
  end
end

function sg__Monster_get_life(i)
  if (i < 8191) then
    return s__Monster_life[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2life[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3life[i - 16382]
      else
        return s__Monster_4life[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5life[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6life[i - 40955]
    else
      return s__Monster_7life[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8life[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9life[i - 65528]
    else
      return s__Monster_10life[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11life[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12life[i - 90101]
  else
    return s__Monster_13life[i - 98292]
  end
end

function sg__Monster_set_life(i, v)
  if (i < 8191) then
    s__Monster_life[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2life[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3life[i - 16382] = v
      else
        s__Monster_4life[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5life[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6life[i - 40955] = v
    else
      s__Monster_7life[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8life[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9life[i - 65528] = v
    else
      s__Monster_10life[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11life[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12life[i - 90101] = v
  else
    s__Monster_13life[i - 98292] = v
  end
end

function sg__Monster_get_disablingTimer(i)
  if (i < 8191) then
    return s__Monster_disablingTimer[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2disablingTimer[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3disablingTimer[i - 16382]
      else
        return s__Monster_4disablingTimer[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5disablingTimer[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6disablingTimer[i - 40955]
    else
      return s__Monster_7disablingTimer[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8disablingTimer[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9disablingTimer[i - 65528]
    else
      return s__Monster_10disablingTimer[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11disablingTimer[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12disablingTimer[i - 90101]
  else
    return s__Monster_13disablingTimer[i - 98292]
  end
end

function sg__Monster_set_disablingTimer(i, v)
  if (i < 8191) then
    s__Monster_disablingTimer[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2disablingTimer[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3disablingTimer[i - 16382] = v
      else
        s__Monster_4disablingTimer[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5disablingTimer[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6disablingTimer[i - 40955] = v
    else
      s__Monster_7disablingTimer[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8disablingTimer[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9disablingTimer[i - 65528] = v
    else
      s__Monster_10disablingTimer[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11disablingTimer[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12disablingTimer[i - 90101] = v
  else
    s__Monster_13disablingTimer[i - 98292] = v
  end
end

function sg__Monster_get_baseColorId(i)
  if (i < 8191) then
    return s__Monster_baseColorId[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2baseColorId[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3baseColorId[i - 16382]
      else
        return s__Monster_4baseColorId[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5baseColorId[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6baseColorId[i - 40955]
    else
      return s__Monster_7baseColorId[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8baseColorId[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9baseColorId[i - 65528]
    else
      return s__Monster_10baseColorId[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11baseColorId[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12baseColorId[i - 90101]
  else
    return s__Monster_13baseColorId[i - 98292]
  end
end

function sg__Monster_set_baseColorId(i, v)
  if (i < 8191) then
    s__Monster_baseColorId[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2baseColorId[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3baseColorId[i - 16382] = v
      else
        s__Monster_4baseColorId[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5baseColorId[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6baseColorId[i - 40955] = v
    else
      s__Monster_7baseColorId[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8baseColorId[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9baseColorId[i - 65528] = v
    else
      s__Monster_10baseColorId[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11baseColorId[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12baseColorId[i - 90101] = v
  else
    s__Monster_13baseColorId[i - 98292] = v
  end
end

function sg__Monster_get_vcRed(i)
  if (i < 8191) then
    return s__Monster_vcRed[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2vcRed[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3vcRed[i - 16382]
      else
        return s__Monster_4vcRed[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5vcRed[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6vcRed[i - 40955]
    else
      return s__Monster_7vcRed[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8vcRed[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9vcRed[i - 65528]
    else
      return s__Monster_10vcRed[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11vcRed[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12vcRed[i - 90101]
  else
    return s__Monster_13vcRed[i - 98292]
  end
end

function sg__Monster_set_vcRed(i, v)
  if (i < 8191) then
    s__Monster_vcRed[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2vcRed[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3vcRed[i - 16382] = v
      else
        s__Monster_4vcRed[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5vcRed[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6vcRed[i - 40955] = v
    else
      s__Monster_7vcRed[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8vcRed[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9vcRed[i - 65528] = v
    else
      s__Monster_10vcRed[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11vcRed[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12vcRed[i - 90101] = v
  else
    s__Monster_13vcRed[i - 98292] = v
  end
end

function sg__Monster_get_vcGreen(i)
  if (i < 8191) then
    return s__Monster_vcGreen[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2vcGreen[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3vcGreen[i - 16382]
      else
        return s__Monster_4vcGreen[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5vcGreen[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6vcGreen[i - 40955]
    else
      return s__Monster_7vcGreen[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8vcGreen[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9vcGreen[i - 65528]
    else
      return s__Monster_10vcGreen[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11vcGreen[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12vcGreen[i - 90101]
  else
    return s__Monster_13vcGreen[i - 98292]
  end
end

function sg__Monster_set_vcGreen(i, v)
  if (i < 8191) then
    s__Monster_vcGreen[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2vcGreen[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3vcGreen[i - 16382] = v
      else
        s__Monster_4vcGreen[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5vcGreen[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6vcGreen[i - 40955] = v
    else
      s__Monster_7vcGreen[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8vcGreen[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9vcGreen[i - 65528] = v
    else
      s__Monster_10vcGreen[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11vcGreen[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12vcGreen[i - 90101] = v
  else
    s__Monster_13vcGreen[i - 98292] = v
  end
end

function sg__Monster_get_vcBlue(i)
  if (i < 8191) then
    return s__Monster_vcBlue[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2vcBlue[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3vcBlue[i - 16382]
      else
        return s__Monster_4vcBlue[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5vcBlue[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6vcBlue[i - 40955]
    else
      return s__Monster_7vcBlue[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8vcBlue[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9vcBlue[i - 65528]
    else
      return s__Monster_10vcBlue[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11vcBlue[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12vcBlue[i - 90101]
  else
    return s__Monster_13vcBlue[i - 98292]
  end
end

function sg__Monster_set_vcBlue(i, v)
  if (i < 8191) then
    s__Monster_vcBlue[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2vcBlue[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3vcBlue[i - 16382] = v
      else
        s__Monster_4vcBlue[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5vcBlue[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6vcBlue[i - 40955] = v
    else
      s__Monster_7vcBlue[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8vcBlue[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9vcBlue[i - 65528] = v
    else
      s__Monster_10vcBlue[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11vcBlue[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12vcBlue[i - 90101] = v
  else
    s__Monster_13vcBlue[i - 98292] = v
  end
end

function sg__Monster_get_vcTransparency(i)
  if (i < 8191) then
    return s__Monster_vcTransparency[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__Monster_2vcTransparency[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__Monster_3vcTransparency[i - 16382]
      else
        return s__Monster_4vcTransparency[i - 24573]
      end
    elseif (i < 40955) then
      return s__Monster_5vcTransparency[i - 32764]
    elseif (i < 49146) then
      return s__Monster_6vcTransparency[i - 40955]
    else
      return s__Monster_7vcTransparency[i - 49146]
    end
  elseif (i < 65528) then
    return s__Monster_8vcTransparency[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__Monster_9vcTransparency[i - 65528]
    else
      return s__Monster_10vcTransparency[i - 73719]
    end
  elseif (i < 90101) then
    return s__Monster_11vcTransparency[i - 81910]
  elseif (i < 98292) then
    return s__Monster_12vcTransparency[i - 90101]
  else
    return s__Monster_13vcTransparency[i - 98292]
  end
end

function sg__Monster_set_vcTransparency(i, v)
  if (i < 8191) then
    s__Monster_vcTransparency[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__Monster_2vcTransparency[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__Monster_3vcTransparency[i - 16382] = v
      else
        s__Monster_4vcTransparency[i - 24573] = v
      end
    elseif (i < 40955) then
      s__Monster_5vcTransparency[i - 32764] = v
    elseif (i < 49146) then
      s__Monster_6vcTransparency[i - 40955] = v
    else
      s__Monster_7vcTransparency[i - 49146] = v
    end
  elseif (i < 65528) then
    s__Monster_8vcTransparency[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__Monster_9vcTransparency[i - 65528] = v
    else
      s__Monster_10vcTransparency[i - 73719] = v
    end
  elseif (i < 90101) then
    s__Monster_11vcTransparency[i - 81910] = v
  elseif (i < 98292) then
    s__Monster_12vcTransparency[i - 90101] = v
  else
    s__Monster_13vcTransparency[i - 98292] = v
  end
end

function si__Monster_getType(this)
  if (this < 8191) then
    return si__Monster_type[this]
  elseif (this < 57337) then
    if (this < 16382) then
      return si__Monster_2type[this - 8191]
    elseif (this < 32764) then
      if (this < 24573) then
        return si__Monster_3type[this - 16382]
      else
        return si__Monster_4type[this - 24573]
      end
    elseif (this < 40955) then
      return si__Monster_5type[this - 32764]
    elseif (this < 49146) then
      return si__Monster_6type[this - 40955]
    else
      return si__Monster_7type[this - 49146]
    end
  elseif (this < 65528) then
    return si__Monster_8type[this - 57337]
  elseif (this < 81910) then
    if (this < 73719) then
      return si__Monster_9type[this - 65528]
    else
      return si__Monster_10type[this - 73719]
    end
  elseif (this < 90101) then
    return si__Monster_11type[this - 81910]
  elseif (this < 98292) then
    return si__Monster_12type[this - 90101]
  else
    return si__Monster_13type[this - 98292]
  end
end

function sg__MonsterMultiplePatrols_get_lastLocInd(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_lastLocInd[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2lastLocInd[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3lastLocInd[i - 16382]
      else
        return s__MonsterMultiplePatrols_4lastLocInd[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5lastLocInd[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6lastLocInd[i - 40955]
    else
      return s__MonsterMultiplePatrols_7lastLocInd[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8lastLocInd[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9lastLocInd[i - 65528]
    else
      return s__MonsterMultiplePatrols_10lastLocInd[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11lastLocInd[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12lastLocInd[i - 90101]
  else
    return s__MonsterMultiplePatrols_13lastLocInd[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_lastLocInd(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_lastLocInd[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2lastLocInd[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3lastLocInd[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4lastLocInd[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5lastLocInd[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6lastLocInd[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7lastLocInd[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8lastLocInd[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9lastLocInd[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10lastLocInd[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11lastLocInd[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12lastLocInd[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13lastLocInd[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_currentMove(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_currentMove[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2currentMove[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3currentMove[i - 16382]
      else
        return s__MonsterMultiplePatrols_4currentMove[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5currentMove[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6currentMove[i - 40955]
    else
      return s__MonsterMultiplePatrols_7currentMove[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8currentMove[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9currentMove[i - 65528]
    else
      return s__MonsterMultiplePatrols_10currentMove[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11currentMove[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12currentMove[i - 90101]
  else
    return s__MonsterMultiplePatrols_13currentMove[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_currentMove(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_currentMove[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2currentMove[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3currentMove[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4currentMove[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5currentMove[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6currentMove[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7currentMove[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8currentMove[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9currentMove[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10currentMove[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11currentMove[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12currentMove[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13currentMove[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_sens(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_sens[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2sens[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3sens[i - 16382]
      else
        return s__MonsterMultiplePatrols_4sens[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5sens[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6sens[i - 40955]
    else
      return s__MonsterMultiplePatrols_7sens[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8sens[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9sens[i - 65528]
    else
      return s__MonsterMultiplePatrols_10sens[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11sens[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12sens[i - 90101]
  else
    return s__MonsterMultiplePatrols_13sens[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_sens(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_sens[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2sens[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3sens[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4sens[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5sens[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6sens[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7sens[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8sens[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9sens[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10sens[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11sens[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12sens[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13sens[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x0(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x0[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x0[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x0[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x0[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x0[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x0[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x0[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x0[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x0[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x0[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x0[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x0[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x0[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x0(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x0[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x0[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x0[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x0[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x0[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x0[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x0[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x0[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x0[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x0[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x0[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x0[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x0[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y0(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y0[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y0[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y0[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y0[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y0[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y0[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y0[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y0[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y0[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y0[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y0[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y0[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y0[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y0(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y0[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y0[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y0[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y0[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y0[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y0[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y0[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y0[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y0[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y0[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y0[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y0[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y0[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r0(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r0[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r0[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r0[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r0[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r0[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r0[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r0[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r0[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r0[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r0[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r0[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r0[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r0[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r0(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r0[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r0[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r0[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r0[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r0[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r0[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r0[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r0[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r0[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r0[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r0[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r0[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r0[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t0(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t0[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t0[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t0[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t0[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t0[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t0[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t0[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t0[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t0[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t0[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t0[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t0[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t0[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t0(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t0[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t0[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t0[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t0[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t0[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t0[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t0[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t0[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t0[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t0[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t0[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t0[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t0[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x1(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x1[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x1[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x1[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x1[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x1[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x1[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x1[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x1[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x1[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x1[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x1[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x1[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x1[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x1(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x1[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x1[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x1[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x1[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x1[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x1[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x1[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x1[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x1[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x1[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x1[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x1[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x1[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y1(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y1[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y1[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y1[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y1[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y1[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y1[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y1[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y1[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y1[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y1[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y1[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y1[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y1[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y1(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y1[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y1[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y1[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y1[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y1[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y1[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y1[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y1[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y1[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y1[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y1[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y1[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y1[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r1(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r1[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r1[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r1[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r1[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r1[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r1[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r1[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r1[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r1[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r1[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r1[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r1[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r1[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r1(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r1[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r1[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r1[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r1[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r1[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r1[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r1[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r1[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r1[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r1[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r1[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r1[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r1[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t1(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t1[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t1[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t1[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t1[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t1[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t1[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t1[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t1[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t1[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t1[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t1[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t1[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t1[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t1(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t1[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t1[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t1[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t1[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t1[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t1[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t1[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t1[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t1[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t1[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t1[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t1[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t1[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x2(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x2[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x2[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x2[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x2[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x2[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x2[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x2[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x2[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x2[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x2[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x2[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x2[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x2[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x2(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x2[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x2[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x2[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x2[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x2[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x2[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x2[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x2[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x2[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x2[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x2[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x2[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x2[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y2(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y2[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y2[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y2[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y2[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y2[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y2[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y2[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y2[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y2[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y2[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y2[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y2[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y2[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y2(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y2[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y2[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y2[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y2[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y2[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y2[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y2[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y2[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y2[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y2[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y2[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y2[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y2[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r2(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r2[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r2[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r2[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r2[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r2[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r2[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r2[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r2[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r2[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r2[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r2[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r2[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r2[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r2(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r2[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r2[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r2[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r2[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r2[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r2[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r2[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r2[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r2[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r2[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r2[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r2[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r2[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t2(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t2[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t2[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t2[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t2[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t2[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t2[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t2[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t2[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t2[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t2[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t2[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t2[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t2[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t2(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t2[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t2[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t2[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t2[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t2[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t2[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t2[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t2[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t2[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t2[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t2[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t2[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t2[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x3(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x3[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x3[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x3[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x3[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x3[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x3[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x3[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x3[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x3[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x3[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x3[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x3[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x3[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x3(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x3[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x3[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x3[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x3[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x3[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x3[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x3[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x3[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x3[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x3[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x3[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x3[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x3[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y3(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y3[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y3[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y3[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y3[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y3[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y3[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y3[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y3[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y3[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y3[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y3[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y3[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y3[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y3(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y3[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y3[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y3[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y3[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y3[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y3[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y3[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y3[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y3[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y3[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y3[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y3[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y3[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r3(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r3[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r3[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r3[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r3[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r3[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r3[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r3[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r3[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r3[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r3[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r3[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r3[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r3[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r3(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r3[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r3[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r3[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r3[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r3[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r3[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r3[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r3[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r3[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r3[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r3[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r3[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r3[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t3(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t3[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t3[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t3[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t3[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t3[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t3[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t3[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t3[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t3[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t3[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t3[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t3[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t3[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t3(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t3[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t3[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t3[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t3[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t3[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t3[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t3[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t3[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t3[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t3[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t3[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t3[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t3[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x4(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x4[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x4[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x4[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x4[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x4[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x4[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x4[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x4[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x4[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x4[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x4[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x4[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x4[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x4(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x4[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x4[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x4[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x4[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x4[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x4[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x4[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x4[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x4[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x4[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x4[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x4[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x4[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y4(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y4[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y4[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y4[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y4[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y4[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y4[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y4[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y4[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y4[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y4[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y4[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y4[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y4[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y4(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y4[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y4[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y4[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y4[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y4[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y4[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y4[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y4[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y4[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y4[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y4[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y4[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y4[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r4(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r4[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r4[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r4[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r4[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r4[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r4[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r4[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r4[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r4[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r4[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r4[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r4[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r4[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r4(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r4[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r4[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r4[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r4[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r4[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r4[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r4[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r4[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r4[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r4[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r4[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r4[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r4[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t4(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t4[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t4[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t4[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t4[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t4[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t4[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t4[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t4[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t4[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t4[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t4[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t4[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t4[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t4(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t4[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t4[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t4[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t4[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t4[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t4[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t4[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t4[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t4[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t4[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t4[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t4[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t4[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x5(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x5[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x5[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x5[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x5[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x5[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x5[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x5[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x5[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x5[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x5[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x5[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x5[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x5[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x5(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x5[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x5[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x5[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x5[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x5[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x5[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x5[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x5[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x5[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x5[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x5[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x5[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x5[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y5(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y5[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y5[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y5[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y5[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y5[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y5[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y5[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y5[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y5[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y5[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y5[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y5[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y5[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y5(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y5[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y5[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y5[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y5[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y5[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y5[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y5[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y5[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y5[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y5[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y5[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y5[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y5[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r5(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r5[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r5[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r5[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r5[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r5[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r5[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r5[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r5[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r5[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r5[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r5[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r5[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r5[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r5(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r5[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r5[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r5[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r5[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r5[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r5[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r5[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r5[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r5[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r5[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r5[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r5[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r5[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t5(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t5[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t5[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t5[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t5[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t5[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t5[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t5[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t5[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t5[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t5[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t5[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t5[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t5[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t5(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t5[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t5[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t5[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t5[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t5[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t5[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t5[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t5[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t5[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t5[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t5[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t5[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t5[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x6(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x6[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x6[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x6[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x6[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x6[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x6[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x6[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x6[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x6[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x6[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x6[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x6[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x6[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x6(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x6[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x6[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x6[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x6[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x6[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x6[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x6[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x6[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x6[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x6[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x6[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x6[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x6[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y6(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y6[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y6[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y6[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y6[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y6[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y6[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y6[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y6[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y6[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y6[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y6[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y6[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y6[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y6(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y6[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y6[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y6[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y6[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y6[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y6[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y6[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y6[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y6[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y6[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y6[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y6[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y6[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r6(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r6[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r6[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r6[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r6[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r6[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r6[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r6[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r6[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r6[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r6[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r6[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r6[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r6[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r6(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r6[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r6[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r6[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r6[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r6[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r6[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r6[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r6[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r6[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r6[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r6[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r6[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r6[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t6(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t6[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t6[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t6[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t6[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t6[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t6[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t6[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t6[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t6[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t6[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t6[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t6[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t6[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t6(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t6[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t6[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t6[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t6[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t6[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t6[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t6[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t6[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t6[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t6[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t6[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t6[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t6[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x7(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x7[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x7[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x7[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x7[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x7[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x7[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x7[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x7[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x7[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x7[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x7[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x7[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x7[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x7(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x7[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x7[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x7[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x7[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x7[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x7[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x7[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x7[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x7[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x7[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x7[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x7[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x7[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y7(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y7[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y7[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y7[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y7[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y7[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y7[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y7[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y7[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y7[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y7[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y7[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y7[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y7[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y7(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y7[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y7[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y7[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y7[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y7[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y7[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y7[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y7[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y7[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y7[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y7[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y7[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y7[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r7(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r7[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r7[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r7[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r7[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r7[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r7[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r7[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r7[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r7[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r7[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r7[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r7[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r7[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r7(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r7[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r7[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r7[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r7[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r7[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r7[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r7[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r7[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r7[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r7[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r7[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r7[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r7[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t7(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t7[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t7[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t7[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t7[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t7[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t7[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t7[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t7[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t7[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t7[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t7[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t7[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t7[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t7(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t7[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t7[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t7[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t7[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t7[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t7[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t7[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t7[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t7[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t7[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t7[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t7[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t7[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x8(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x8[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x8[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x8[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x8[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x8[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x8[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x8[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x8[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x8[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x8[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x8[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x8[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x8[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x8(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x8[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x8[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x8[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x8[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x8[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x8[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x8[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x8[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x8[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x8[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x8[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x8[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x8[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y8(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y8[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y8[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y8[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y8[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y8[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y8[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y8[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y8[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y8[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y8[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y8[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y8[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y8[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y8(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y8[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y8[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y8[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y8[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y8[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y8[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y8[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y8[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y8[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y8[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y8[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y8[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y8[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r8(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r8[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r8[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r8[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r8[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r8[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r8[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r8[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r8[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r8[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r8[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r8[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r8[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r8[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r8(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r8[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r8[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r8[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r8[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r8[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r8[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r8[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r8[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r8[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r8[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r8[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r8[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r8[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t8(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t8[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t8[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t8[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t8[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t8[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t8[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t8[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t8[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t8[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t8[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t8[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t8[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t8[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t8(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t8[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t8[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t8[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t8[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t8[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t8[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t8[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t8[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t8[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t8[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t8[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t8[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t8[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x9(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x9[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x9[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x9[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x9[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x9[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x9[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x9[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x9[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x9[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x9[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x9[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x9[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x9[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x9(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x9[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x9[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x9[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x9[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x9[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x9[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x9[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x9[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x9[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x9[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x9[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x9[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x9[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y9(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y9[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y9[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y9[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y9[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y9[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y9[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y9[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y9[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y9[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y9[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y9[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y9[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y9[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y9(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y9[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y9[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y9[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y9[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y9[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y9[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y9[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y9[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y9[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y9[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y9[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y9[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y9[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r9(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r9[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r9[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r9[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r9[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r9[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r9[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r9[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r9[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r9[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r9[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r9[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r9[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r9[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r9(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r9[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r9[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r9[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r9[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r9[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r9[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r9[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r9[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r9[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r9[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r9[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r9[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r9[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t9(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t9[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t9[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t9[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t9[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t9[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t9[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t9[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t9[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t9[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t9[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t9[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t9[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t9[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t9(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t9[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t9[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t9[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t9[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t9[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t9[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t9[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t9[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t9[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t9[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t9[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t9[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t9[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x10(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x10[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x10[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x10[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x10[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x10[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x10[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x10[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x10[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x10[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x10[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x10[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x10[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x10[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x10(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x10[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x10[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x10[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x10[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x10[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x10[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x10[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x10[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x10[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x10[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x10[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x10[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x10[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y10(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y10[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y10[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y10[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y10[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y10[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y10[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y10[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y10[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y10[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y10[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y10[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y10[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y10[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y10(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y10[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y10[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y10[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y10[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y10[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y10[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y10[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y10[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y10[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y10[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y10[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y10[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y10[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r10(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r10[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r10[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r10[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r10[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r10[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r10[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r10[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r10[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r10[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r10[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r10[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r10[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r10[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r10(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r10[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r10[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r10[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r10[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r10[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r10[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r10[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r10[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r10[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r10[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r10[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r10[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r10[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t10(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t10[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t10[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t10[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t10[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t10[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t10[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t10[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t10[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t10[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t10[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t10[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t10[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t10[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t10(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t10[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t10[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t10[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t10[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t10[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t10[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t10[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t10[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t10[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t10[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t10[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t10[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t10[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x11(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x11[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x11[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x11[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x11[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x11[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x11[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x11[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x11[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x11[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x11[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x11[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x11[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x11[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x11(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x11[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x11[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x11[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x11[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x11[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x11[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x11[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x11[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x11[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x11[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x11[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x11[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x11[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y11(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y11[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y11[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y11[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y11[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y11[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y11[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y11[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y11[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y11[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y11[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y11[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y11[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y11[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y11(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y11[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y11[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y11[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y11[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y11[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y11[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y11[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y11[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y11[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y11[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y11[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y11[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y11[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r11(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r11[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r11[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r11[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r11[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r11[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r11[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r11[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r11[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r11[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r11[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r11[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r11[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r11[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r11(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r11[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r11[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r11[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r11[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r11[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r11[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r11[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r11[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r11[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r11[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r11[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r11[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r11[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t11(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t11[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t11[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t11[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t11[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t11[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t11[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t11[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t11[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t11[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t11[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t11[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t11[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t11[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t11(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t11[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t11[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t11[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t11[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t11[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t11[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t11[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t11[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t11[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t11[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t11[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t11[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t11[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x12(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x12[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x12[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x12[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x12[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x12[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x12[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x12[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x12[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x12[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x12[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x12[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x12[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x12[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x12(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x12[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x12[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x12[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x12[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x12[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x12[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x12[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x12[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x12[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x12[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x12[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x12[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x12[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y12(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y12[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y12[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y12[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y12[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y12[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y12[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y12[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y12[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y12[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y12[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y12[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y12[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y12[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y12(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y12[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y12[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y12[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y12[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y12[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y12[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y12[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y12[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y12[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y12[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y12[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y12[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y12[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r12(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r12[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r12[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r12[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r12[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r12[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r12[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r12[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r12[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r12[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r12[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r12[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r12[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r12[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r12(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r12[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r12[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r12[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r12[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r12[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r12[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r12[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r12[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r12[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r12[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r12[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r12[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r12[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t12(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t12[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t12[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t12[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t12[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t12[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t12[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t12[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t12[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t12[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t12[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t12[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t12[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t12[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t12(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t12[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t12[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t12[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t12[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t12[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t12[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t12[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t12[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t12[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t12[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t12[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t12[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t12[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x13(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x13[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x13[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x13[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x13[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x13[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x13[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x13[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x13[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x13[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x13[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x13[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x13[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x13[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x13(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x13[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x13[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x13[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x13[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x13[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x13[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x13[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x13[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x13[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x13[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x13[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x13[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x13[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y13(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y13[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y13[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y13[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y13[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y13[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y13[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y13[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y13[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y13[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y13[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y13[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y13[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y13[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y13(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y13[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y13[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y13[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y13[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y13[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y13[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y13[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y13[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y13[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y13[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y13[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y13[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y13[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r13(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r13[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r13[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r13[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r13[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r13[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r13[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r13[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r13[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r13[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r13[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r13[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r13[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r13[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r13(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r13[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r13[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r13[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r13[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r13[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r13[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r13[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r13[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r13[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r13[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r13[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r13[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r13[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t13(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t13[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t13[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t13[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t13[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t13[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t13[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t13[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t13[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t13[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t13[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t13[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t13[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t13[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t13(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t13[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t13[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t13[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t13[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t13[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t13[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t13[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t13[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t13[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t13[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t13[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t13[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t13[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x14(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x14[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x14[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x14[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x14[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x14[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x14[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x14[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x14[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x14[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x14[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x14[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x14[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x14[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x14(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x14[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x14[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x14[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x14[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x14[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x14[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x14[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x14[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x14[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x14[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x14[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x14[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x14[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y14(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y14[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y14[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y14[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y14[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y14[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y14[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y14[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y14[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y14[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y14[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y14[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y14[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y14[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y14(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y14[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y14[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y14[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y14[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y14[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y14[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y14[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y14[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y14[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y14[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y14[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y14[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y14[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r14(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r14[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r14[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r14[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r14[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r14[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r14[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r14[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r14[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r14[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r14[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r14[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r14[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r14[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r14(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r14[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r14[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r14[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r14[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r14[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r14[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r14[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r14[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r14[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r14[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r14[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r14[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r14[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t14(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t14[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t14[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t14[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t14[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t14[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t14[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t14[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t14[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t14[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t14[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t14[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t14[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t14[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t14(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t14[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t14[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t14[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t14[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t14[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t14[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t14[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t14[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t14[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t14[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t14[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t14[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t14[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x15(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x15[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x15[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x15[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x15[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x15[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x15[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x15[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x15[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x15[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x15[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x15[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x15[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x15[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x15(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x15[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x15[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x15[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x15[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x15[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x15[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x15[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x15[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x15[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x15[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x15[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x15[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x15[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y15(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y15[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y15[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y15[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y15[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y15[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y15[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y15[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y15[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y15[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y15[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y15[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y15[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y15[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y15(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y15[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y15[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y15[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y15[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y15[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y15[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y15[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y15[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y15[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y15[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y15[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y15[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y15[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r15(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r15[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r15[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r15[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r15[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r15[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r15[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r15[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r15[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r15[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r15[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r15[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r15[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r15[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r15(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r15[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r15[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r15[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r15[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r15[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r15[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r15[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r15[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r15[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r15[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r15[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r15[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r15[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t15(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t15[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t15[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t15[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t15[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t15[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t15[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t15[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t15[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t15[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t15[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t15[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t15[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t15[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t15(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t15[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t15[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t15[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t15[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t15[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t15[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t15[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t15[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t15[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t15[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t15[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t15[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t15[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x16(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x16[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x16[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x16[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x16[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x16[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x16[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x16[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x16[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x16[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x16[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x16[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x16[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x16[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x16(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x16[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x16[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x16[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x16[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x16[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x16[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x16[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x16[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x16[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x16[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x16[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x16[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x16[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y16(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y16[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y16[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y16[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y16[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y16[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y16[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y16[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y16[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y16[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y16[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y16[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y16[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y16[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y16(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y16[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y16[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y16[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y16[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y16[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y16[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y16[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y16[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y16[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y16[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y16[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y16[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y16[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r16(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r16[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r16[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r16[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r16[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r16[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r16[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r16[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r16[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r16[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r16[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r16[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r16[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r16[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r16(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r16[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r16[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r16[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r16[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r16[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r16[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r16[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r16[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r16[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r16[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r16[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r16[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r16[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t16(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t16[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t16[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t16[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t16[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t16[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t16[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t16[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t16[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t16[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t16[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t16[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t16[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t16[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t16(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t16[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t16[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t16[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t16[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t16[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t16[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t16[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t16[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t16[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t16[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t16[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t16[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t16[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x17(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x17[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x17[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x17[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x17[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x17[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x17[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x17[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x17[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x17[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x17[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x17[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x17[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x17[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x17(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x17[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x17[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x17[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x17[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x17[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x17[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x17[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x17[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x17[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x17[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x17[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x17[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x17[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y17(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y17[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y17[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y17[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y17[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y17[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y17[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y17[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y17[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y17[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y17[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y17[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y17[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y17[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y17(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y17[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y17[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y17[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y17[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y17[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y17[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y17[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y17[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y17[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y17[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y17[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y17[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y17[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r17(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r17[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r17[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r17[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r17[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r17[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r17[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r17[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r17[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r17[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r17[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r17[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r17[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r17[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r17(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r17[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r17[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r17[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r17[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r17[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r17[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r17[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r17[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r17[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r17[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r17[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r17[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r17[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t17(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t17[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t17[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t17[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t17[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t17[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t17[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t17[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t17[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t17[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t17[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t17[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t17[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t17[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t17(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t17[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t17[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t17[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t17[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t17[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t17[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t17[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t17[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t17[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t17[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t17[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t17[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t17[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x18(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x18[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x18[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x18[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x18[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x18[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x18[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x18[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x18[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x18[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x18[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x18[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x18[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x18[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x18(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x18[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x18[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x18[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x18[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x18[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x18[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x18[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x18[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x18[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x18[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x18[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x18[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x18[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y18(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y18[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y18[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y18[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y18[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y18[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y18[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y18[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y18[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y18[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y18[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y18[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y18[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y18[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y18(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y18[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y18[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y18[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y18[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y18[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y18[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y18[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y18[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y18[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y18[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y18[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y18[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y18[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r18(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r18[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r18[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r18[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r18[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r18[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r18[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r18[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r18[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r18[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r18[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r18[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r18[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r18[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r18(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r18[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r18[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r18[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r18[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r18[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r18[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r18[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r18[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r18[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r18[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r18[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r18[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r18[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t18(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t18[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t18[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t18[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t18[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t18[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t18[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t18[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t18[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t18[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t18[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t18[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t18[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t18[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t18(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t18[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t18[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t18[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t18[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t18[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t18[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t18[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t18[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t18[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t18[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t18[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t18[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t18[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_x19(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_x19[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2x19[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3x19[i - 16382]
      else
        return s__MonsterMultiplePatrols_4x19[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5x19[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6x19[i - 40955]
    else
      return s__MonsterMultiplePatrols_7x19[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8x19[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9x19[i - 65528]
    else
      return s__MonsterMultiplePatrols_10x19[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11x19[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12x19[i - 90101]
  else
    return s__MonsterMultiplePatrols_13x19[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_x19(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_x19[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2x19[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3x19[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4x19[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5x19[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6x19[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7x19[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8x19[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9x19[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10x19[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11x19[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12x19[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13x19[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_y19(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_y19[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2y19[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3y19[i - 16382]
      else
        return s__MonsterMultiplePatrols_4y19[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5y19[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6y19[i - 40955]
    else
      return s__MonsterMultiplePatrols_7y19[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8y19[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9y19[i - 65528]
    else
      return s__MonsterMultiplePatrols_10y19[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11y19[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12y19[i - 90101]
  else
    return s__MonsterMultiplePatrols_13y19[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_y19(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_y19[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2y19[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3y19[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4y19[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5y19[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6y19[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7y19[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8y19[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9y19[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10y19[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11y19[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12y19[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13y19[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_r19(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_r19[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2r19[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3r19[i - 16382]
      else
        return s__MonsterMultiplePatrols_4r19[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5r19[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6r19[i - 40955]
    else
      return s__MonsterMultiplePatrols_7r19[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8r19[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9r19[i - 65528]
    else
      return s__MonsterMultiplePatrols_10r19[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11r19[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12r19[i - 90101]
  else
    return s__MonsterMultiplePatrols_13r19[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_r19(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_r19[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2r19[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3r19[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4r19[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5r19[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6r19[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7r19[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8r19[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9r19[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10r19[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11r19[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12r19[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13r19[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_t19(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_t19[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2t19[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3t19[i - 16382]
      else
        return s__MonsterMultiplePatrols_4t19[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5t19[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6t19[i - 40955]
    else
      return s__MonsterMultiplePatrols_7t19[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8t19[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9t19[i - 65528]
    else
      return s__MonsterMultiplePatrols_10t19[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11t19[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12t19[i - 90101]
  else
    return s__MonsterMultiplePatrols_13t19[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_t19(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_t19[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2t19[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3t19[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4t19[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5t19[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6t19[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7t19[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8t19[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9t19[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10t19[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11t19[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12t19[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13t19[i - 98292] = v
  end
end

function sg__MonsterMultiplePatrols_get_currentTrigger(i)
  if (i < 8191) then
    return s__MonsterMultiplePatrols_currentTrigger[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterMultiplePatrols_2currentTrigger[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterMultiplePatrols_3currentTrigger[i - 16382]
      else
        return s__MonsterMultiplePatrols_4currentTrigger[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterMultiplePatrols_5currentTrigger[i - 32764]
    elseif (i < 49146) then
      return s__MonsterMultiplePatrols_6currentTrigger[i - 40955]
    else
      return s__MonsterMultiplePatrols_7currentTrigger[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterMultiplePatrols_8currentTrigger[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterMultiplePatrols_9currentTrigger[i - 65528]
    else
      return s__MonsterMultiplePatrols_10currentTrigger[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterMultiplePatrols_11currentTrigger[i - 81910]
  elseif (i < 98292) then
    return s__MonsterMultiplePatrols_12currentTrigger[i - 90101]
  else
    return s__MonsterMultiplePatrols_13currentTrigger[i - 98292]
  end
end

function sg__MonsterMultiplePatrols_set_currentTrigger(i, v)
  if (i < 8191) then
    s__MonsterMultiplePatrols_currentTrigger[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterMultiplePatrols_2currentTrigger[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterMultiplePatrols_3currentTrigger[i - 16382] = v
      else
        s__MonsterMultiplePatrols_4currentTrigger[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterMultiplePatrols_5currentTrigger[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterMultiplePatrols_6currentTrigger[i - 40955] = v
    else
      s__MonsterMultiplePatrols_7currentTrigger[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterMultiplePatrols_8currentTrigger[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterMultiplePatrols_9currentTrigger[i - 65528] = v
    else
      s__MonsterMultiplePatrols_10currentTrigger[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterMultiplePatrols_11currentTrigger[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterMultiplePatrols_12currentTrigger[i - 90101] = v
  else
    s__MonsterMultiplePatrols_13currentTrigger[i - 98292] = v
  end
end

function sg__MonsterNoMove_get_x(i)
  if (i < 8191) then
    return s__MonsterNoMove_x[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterNoMove_2x[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterNoMove_3x[i - 16382]
      else
        return s__MonsterNoMove_4x[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterNoMove_5x[i - 32764]
    elseif (i < 49146) then
      return s__MonsterNoMove_6x[i - 40955]
    else
      return s__MonsterNoMove_7x[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterNoMove_8x[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterNoMove_9x[i - 65528]
    else
      return s__MonsterNoMove_10x[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterNoMove_11x[i - 81910]
  elseif (i < 98292) then
    return s__MonsterNoMove_12x[i - 90101]
  else
    return s__MonsterNoMove_13x[i - 98292]
  end
end

function sg__MonsterNoMove_set_x(i, v)
  if (i < 8191) then
    s__MonsterNoMove_x[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterNoMove_2x[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterNoMove_3x[i - 16382] = v
      else
        s__MonsterNoMove_4x[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterNoMove_5x[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterNoMove_6x[i - 40955] = v
    else
      s__MonsterNoMove_7x[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterNoMove_8x[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterNoMove_9x[i - 65528] = v
    else
      s__MonsterNoMove_10x[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterNoMove_11x[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterNoMove_12x[i - 90101] = v
  else
    s__MonsterNoMove_13x[i - 98292] = v
  end
end

function sg__MonsterNoMove_get_y(i)
  if (i < 8191) then
    return s__MonsterNoMove_y[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterNoMove_2y[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterNoMove_3y[i - 16382]
      else
        return s__MonsterNoMove_4y[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterNoMove_5y[i - 32764]
    elseif (i < 49146) then
      return s__MonsterNoMove_6y[i - 40955]
    else
      return s__MonsterNoMove_7y[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterNoMove_8y[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterNoMove_9y[i - 65528]
    else
      return s__MonsterNoMove_10y[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterNoMove_11y[i - 81910]
  elseif (i < 98292) then
    return s__MonsterNoMove_12y[i - 90101]
  else
    return s__MonsterNoMove_13y[i - 98292]
  end
end

function sg__MonsterNoMove_set_y(i, v)
  if (i < 8191) then
    s__MonsterNoMove_y[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterNoMove_2y[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterNoMove_3y[i - 16382] = v
      else
        s__MonsterNoMove_4y[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterNoMove_5y[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterNoMove_6y[i - 40955] = v
    else
      s__MonsterNoMove_7y[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterNoMove_8y[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterNoMove_9y[i - 65528] = v
    else
      s__MonsterNoMove_10y[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterNoMove_11y[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterNoMove_12y[i - 90101] = v
  else
    s__MonsterNoMove_13y[i - 98292] = v
  end
end

function sg__MonsterNoMove_get_angle(i)
  if (i < 8191) then
    return s__MonsterNoMove_angle[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterNoMove_2angle[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterNoMove_3angle[i - 16382]
      else
        return s__MonsterNoMove_4angle[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterNoMove_5angle[i - 32764]
    elseif (i < 49146) then
      return s__MonsterNoMove_6angle[i - 40955]
    else
      return s__MonsterNoMove_7angle[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterNoMove_8angle[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterNoMove_9angle[i - 65528]
    else
      return s__MonsterNoMove_10angle[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterNoMove_11angle[i - 81910]
  elseif (i < 98292) then
    return s__MonsterNoMove_12angle[i - 90101]
  else
    return s__MonsterNoMove_13angle[i - 98292]
  end
end

function sg__MonsterNoMove_set_angle(i, v)
  if (i < 8191) then
    s__MonsterNoMove_angle[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterNoMove_2angle[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterNoMove_3angle[i - 16382] = v
      else
        s__MonsterNoMove_4angle[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterNoMove_5angle[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterNoMove_6angle[i - 40955] = v
    else
      s__MonsterNoMove_7angle[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterNoMove_8angle[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterNoMove_9angle[i - 65528] = v
    else
      s__MonsterNoMove_10angle[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterNoMove_11angle[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterNoMove_12angle[i - 90101] = v
  else
    s__MonsterNoMove_13angle[i - 98292] = v
  end
end

function sg__MonsterSimplePatrol_get_x1(i)
  if (i < 8191) then
    return s__MonsterSimplePatrol_x1[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterSimplePatrol_2x1[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterSimplePatrol_3x1[i - 16382]
      else
        return s__MonsterSimplePatrol_4x1[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterSimplePatrol_5x1[i - 32764]
    elseif (i < 49146) then
      return s__MonsterSimplePatrol_6x1[i - 40955]
    else
      return s__MonsterSimplePatrol_7x1[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterSimplePatrol_8x1[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterSimplePatrol_9x1[i - 65528]
    else
      return s__MonsterSimplePatrol_10x1[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterSimplePatrol_11x1[i - 81910]
  elseif (i < 98292) then
    return s__MonsterSimplePatrol_12x1[i - 90101]
  else
    return s__MonsterSimplePatrol_13x1[i - 98292]
  end
end

function sg__MonsterSimplePatrol_set_x1(i, v)
  if (i < 8191) then
    s__MonsterSimplePatrol_x1[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterSimplePatrol_2x1[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterSimplePatrol_3x1[i - 16382] = v
      else
        s__MonsterSimplePatrol_4x1[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterSimplePatrol_5x1[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterSimplePatrol_6x1[i - 40955] = v
    else
      s__MonsterSimplePatrol_7x1[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterSimplePatrol_8x1[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterSimplePatrol_9x1[i - 65528] = v
    else
      s__MonsterSimplePatrol_10x1[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterSimplePatrol_11x1[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterSimplePatrol_12x1[i - 90101] = v
  else
    s__MonsterSimplePatrol_13x1[i - 98292] = v
  end
end

function sg__MonsterSimplePatrol_get_y1(i)
  if (i < 8191) then
    return s__MonsterSimplePatrol_y1[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterSimplePatrol_2y1[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterSimplePatrol_3y1[i - 16382]
      else
        return s__MonsterSimplePatrol_4y1[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterSimplePatrol_5y1[i - 32764]
    elseif (i < 49146) then
      return s__MonsterSimplePatrol_6y1[i - 40955]
    else
      return s__MonsterSimplePatrol_7y1[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterSimplePatrol_8y1[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterSimplePatrol_9y1[i - 65528]
    else
      return s__MonsterSimplePatrol_10y1[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterSimplePatrol_11y1[i - 81910]
  elseif (i < 98292) then
    return s__MonsterSimplePatrol_12y1[i - 90101]
  else
    return s__MonsterSimplePatrol_13y1[i - 98292]
  end
end

function sg__MonsterSimplePatrol_set_y1(i, v)
  if (i < 8191) then
    s__MonsterSimplePatrol_y1[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterSimplePatrol_2y1[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterSimplePatrol_3y1[i - 16382] = v
      else
        s__MonsterSimplePatrol_4y1[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterSimplePatrol_5y1[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterSimplePatrol_6y1[i - 40955] = v
    else
      s__MonsterSimplePatrol_7y1[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterSimplePatrol_8y1[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterSimplePatrol_9y1[i - 65528] = v
    else
      s__MonsterSimplePatrol_10y1[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterSimplePatrol_11y1[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterSimplePatrol_12y1[i - 90101] = v
  else
    s__MonsterSimplePatrol_13y1[i - 98292] = v
  end
end

function sg__MonsterSimplePatrol_get_x2(i)
  if (i < 8191) then
    return s__MonsterSimplePatrol_x2[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterSimplePatrol_2x2[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterSimplePatrol_3x2[i - 16382]
      else
        return s__MonsterSimplePatrol_4x2[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterSimplePatrol_5x2[i - 32764]
    elseif (i < 49146) then
      return s__MonsterSimplePatrol_6x2[i - 40955]
    else
      return s__MonsterSimplePatrol_7x2[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterSimplePatrol_8x2[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterSimplePatrol_9x2[i - 65528]
    else
      return s__MonsterSimplePatrol_10x2[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterSimplePatrol_11x2[i - 81910]
  elseif (i < 98292) then
    return s__MonsterSimplePatrol_12x2[i - 90101]
  else
    return s__MonsterSimplePatrol_13x2[i - 98292]
  end
end

function sg__MonsterSimplePatrol_set_x2(i, v)
  if (i < 8191) then
    s__MonsterSimplePatrol_x2[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterSimplePatrol_2x2[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterSimplePatrol_3x2[i - 16382] = v
      else
        s__MonsterSimplePatrol_4x2[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterSimplePatrol_5x2[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterSimplePatrol_6x2[i - 40955] = v
    else
      s__MonsterSimplePatrol_7x2[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterSimplePatrol_8x2[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterSimplePatrol_9x2[i - 65528] = v
    else
      s__MonsterSimplePatrol_10x2[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterSimplePatrol_11x2[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterSimplePatrol_12x2[i - 90101] = v
  else
    s__MonsterSimplePatrol_13x2[i - 98292] = v
  end
end

function sg__MonsterSimplePatrol_get_y2(i)
  if (i < 8191) then
    return s__MonsterSimplePatrol_y2[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterSimplePatrol_2y2[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterSimplePatrol_3y2[i - 16382]
      else
        return s__MonsterSimplePatrol_4y2[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterSimplePatrol_5y2[i - 32764]
    elseif (i < 49146) then
      return s__MonsterSimplePatrol_6y2[i - 40955]
    else
      return s__MonsterSimplePatrol_7y2[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterSimplePatrol_8y2[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterSimplePatrol_9y2[i - 65528]
    else
      return s__MonsterSimplePatrol_10y2[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterSimplePatrol_11y2[i - 81910]
  elseif (i < 98292) then
    return s__MonsterSimplePatrol_12y2[i - 90101]
  else
    return s__MonsterSimplePatrol_13y2[i - 98292]
  end
end

function sg__MonsterSimplePatrol_set_y2(i, v)
  if (i < 8191) then
    s__MonsterSimplePatrol_y2[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterSimplePatrol_2y2[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterSimplePatrol_3y2[i - 16382] = v
      else
        s__MonsterSimplePatrol_4y2[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterSimplePatrol_5y2[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterSimplePatrol_6y2[i - 40955] = v
    else
      s__MonsterSimplePatrol_7y2[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterSimplePatrol_8y2[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterSimplePatrol_9y2[i - 65528] = v
    else
      s__MonsterSimplePatrol_10y2[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterSimplePatrol_11y2[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterSimplePatrol_12y2[i - 90101] = v
  else
    s__MonsterSimplePatrol_13y2[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_period(i)
  if (i < 8191) then
    return s__MonsterTeleport_period[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2period[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3period[i - 16382]
      else
        return s__MonsterTeleport_4period[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5period[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6period[i - 40955]
    else
      return s__MonsterTeleport_7period[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8period[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9period[i - 65528]
    else
      return s__MonsterTeleport_10period[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11period[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12period[i - 90101]
  else
    return s__MonsterTeleport_13period[i - 98292]
  end
end

function sg__MonsterTeleport_set_period(i, v)
  if (i < 8191) then
    s__MonsterTeleport_period[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2period[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3period[i - 16382] = v
      else
        s__MonsterTeleport_4period[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5period[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6period[i - 40955] = v
    else
      s__MonsterTeleport_7period[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8period[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9period[i - 65528] = v
    else
      s__MonsterTeleport_10period[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11period[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12period[i - 90101] = v
  else
    s__MonsterTeleport_13period[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_angle(i)
  if (i < 8191) then
    return s__MonsterTeleport_angle[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2angle[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3angle[i - 16382]
      else
        return s__MonsterTeleport_4angle[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5angle[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6angle[i - 40955]
    else
      return s__MonsterTeleport_7angle[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8angle[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9angle[i - 65528]
    else
      return s__MonsterTeleport_10angle[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11angle[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12angle[i - 90101]
  else
    return s__MonsterTeleport_13angle[i - 98292]
  end
end

function sg__MonsterTeleport_set_angle(i, v)
  if (i < 8191) then
    s__MonsterTeleport_angle[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2angle[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3angle[i - 16382] = v
      else
        s__MonsterTeleport_4angle[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5angle[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6angle[i - 40955] = v
    else
      s__MonsterTeleport_7angle[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8angle[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9angle[i - 65528] = v
    else
      s__MonsterTeleport_10angle[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11angle[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12angle[i - 90101] = v
  else
    s__MonsterTeleport_13angle[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_lastLocInd(i)
  if (i < 8191) then
    return s__MonsterTeleport_lastLocInd[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2lastLocInd[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3lastLocInd[i - 16382]
      else
        return s__MonsterTeleport_4lastLocInd[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5lastLocInd[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6lastLocInd[i - 40955]
    else
      return s__MonsterTeleport_7lastLocInd[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8lastLocInd[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9lastLocInd[i - 65528]
    else
      return s__MonsterTeleport_10lastLocInd[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11lastLocInd[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12lastLocInd[i - 90101]
  else
    return s__MonsterTeleport_13lastLocInd[i - 98292]
  end
end

function sg__MonsterTeleport_set_lastLocInd(i, v)
  if (i < 8191) then
    s__MonsterTeleport_lastLocInd[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2lastLocInd[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3lastLocInd[i - 16382] = v
      else
        s__MonsterTeleport_4lastLocInd[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5lastLocInd[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6lastLocInd[i - 40955] = v
    else
      s__MonsterTeleport_7lastLocInd[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8lastLocInd[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9lastLocInd[i - 65528] = v
    else
      s__MonsterTeleport_10lastLocInd[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11lastLocInd[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12lastLocInd[i - 90101] = v
  else
    s__MonsterTeleport_13lastLocInd[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_currentLoc(i)
  if (i < 8191) then
    return s__MonsterTeleport_currentLoc[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2currentLoc[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3currentLoc[i - 16382]
      else
        return s__MonsterTeleport_4currentLoc[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5currentLoc[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6currentLoc[i - 40955]
    else
      return s__MonsterTeleport_7currentLoc[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8currentLoc[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9currentLoc[i - 65528]
    else
      return s__MonsterTeleport_10currentLoc[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11currentLoc[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12currentLoc[i - 90101]
  else
    return s__MonsterTeleport_13currentLoc[i - 98292]
  end
end

function sg__MonsterTeleport_set_currentLoc(i, v)
  if (i < 8191) then
    s__MonsterTeleport_currentLoc[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2currentLoc[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3currentLoc[i - 16382] = v
      else
        s__MonsterTeleport_4currentLoc[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5currentLoc[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6currentLoc[i - 40955] = v
    else
      s__MonsterTeleport_7currentLoc[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8currentLoc[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9currentLoc[i - 65528] = v
    else
      s__MonsterTeleport_10currentLoc[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11currentLoc[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12currentLoc[i - 90101] = v
  else
    s__MonsterTeleport_13currentLoc[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_sens(i)
  if (i < 8191) then
    return s__MonsterTeleport_sens[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2sens[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3sens[i - 16382]
      else
        return s__MonsterTeleport_4sens[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5sens[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6sens[i - 40955]
    else
      return s__MonsterTeleport_7sens[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8sens[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9sens[i - 65528]
    else
      return s__MonsterTeleport_10sens[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11sens[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12sens[i - 90101]
  else
    return s__MonsterTeleport_13sens[i - 98292]
  end
end

function sg__MonsterTeleport_set_sens(i, v)
  if (i < 8191) then
    s__MonsterTeleport_sens[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2sens[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3sens[i - 16382] = v
      else
        s__MonsterTeleport_4sens[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5sens[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6sens[i - 40955] = v
    else
      s__MonsterTeleport_7sens[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8sens[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9sens[i - 65528] = v
    else
      s__MonsterTeleport_10sens[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11sens[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12sens[i - 90101] = v
  else
    s__MonsterTeleport_13sens[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x0(i)
  if (i < 8191) then
    return s__MonsterTeleport_x0[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x0[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x0[i - 16382]
      else
        return s__MonsterTeleport_4x0[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x0[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x0[i - 40955]
    else
      return s__MonsterTeleport_7x0[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x0[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x0[i - 65528]
    else
      return s__MonsterTeleport_10x0[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x0[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x0[i - 90101]
  else
    return s__MonsterTeleport_13x0[i - 98292]
  end
end

function sg__MonsterTeleport_set_x0(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x0[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x0[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x0[i - 16382] = v
      else
        s__MonsterTeleport_4x0[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x0[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x0[i - 40955] = v
    else
      s__MonsterTeleport_7x0[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x0[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x0[i - 65528] = v
    else
      s__MonsterTeleport_10x0[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x0[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x0[i - 90101] = v
  else
    s__MonsterTeleport_13x0[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y0(i)
  if (i < 8191) then
    return s__MonsterTeleport_y0[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y0[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y0[i - 16382]
      else
        return s__MonsterTeleport_4y0[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y0[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y0[i - 40955]
    else
      return s__MonsterTeleport_7y0[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y0[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y0[i - 65528]
    else
      return s__MonsterTeleport_10y0[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y0[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y0[i - 90101]
  else
    return s__MonsterTeleport_13y0[i - 98292]
  end
end

function sg__MonsterTeleport_set_y0(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y0[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y0[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y0[i - 16382] = v
      else
        s__MonsterTeleport_4y0[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y0[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y0[i - 40955] = v
    else
      s__MonsterTeleport_7y0[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y0[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y0[i - 65528] = v
    else
      s__MonsterTeleport_10y0[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y0[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y0[i - 90101] = v
  else
    s__MonsterTeleport_13y0[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x1(i)
  if (i < 8191) then
    return s__MonsterTeleport_x1[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x1[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x1[i - 16382]
      else
        return s__MonsterTeleport_4x1[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x1[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x1[i - 40955]
    else
      return s__MonsterTeleport_7x1[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x1[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x1[i - 65528]
    else
      return s__MonsterTeleport_10x1[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x1[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x1[i - 90101]
  else
    return s__MonsterTeleport_13x1[i - 98292]
  end
end

function sg__MonsterTeleport_set_x1(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x1[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x1[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x1[i - 16382] = v
      else
        s__MonsterTeleport_4x1[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x1[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x1[i - 40955] = v
    else
      s__MonsterTeleport_7x1[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x1[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x1[i - 65528] = v
    else
      s__MonsterTeleport_10x1[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x1[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x1[i - 90101] = v
  else
    s__MonsterTeleport_13x1[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y1(i)
  if (i < 8191) then
    return s__MonsterTeleport_y1[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y1[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y1[i - 16382]
      else
        return s__MonsterTeleport_4y1[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y1[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y1[i - 40955]
    else
      return s__MonsterTeleport_7y1[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y1[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y1[i - 65528]
    else
      return s__MonsterTeleport_10y1[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y1[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y1[i - 90101]
  else
    return s__MonsterTeleport_13y1[i - 98292]
  end
end

function sg__MonsterTeleport_set_y1(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y1[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y1[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y1[i - 16382] = v
      else
        s__MonsterTeleport_4y1[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y1[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y1[i - 40955] = v
    else
      s__MonsterTeleport_7y1[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y1[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y1[i - 65528] = v
    else
      s__MonsterTeleport_10y1[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y1[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y1[i - 90101] = v
  else
    s__MonsterTeleport_13y1[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x2(i)
  if (i < 8191) then
    return s__MonsterTeleport_x2[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x2[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x2[i - 16382]
      else
        return s__MonsterTeleport_4x2[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x2[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x2[i - 40955]
    else
      return s__MonsterTeleport_7x2[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x2[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x2[i - 65528]
    else
      return s__MonsterTeleport_10x2[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x2[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x2[i - 90101]
  else
    return s__MonsterTeleport_13x2[i - 98292]
  end
end

function sg__MonsterTeleport_set_x2(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x2[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x2[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x2[i - 16382] = v
      else
        s__MonsterTeleport_4x2[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x2[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x2[i - 40955] = v
    else
      s__MonsterTeleport_7x2[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x2[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x2[i - 65528] = v
    else
      s__MonsterTeleport_10x2[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x2[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x2[i - 90101] = v
  else
    s__MonsterTeleport_13x2[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y2(i)
  if (i < 8191) then
    return s__MonsterTeleport_y2[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y2[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y2[i - 16382]
      else
        return s__MonsterTeleport_4y2[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y2[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y2[i - 40955]
    else
      return s__MonsterTeleport_7y2[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y2[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y2[i - 65528]
    else
      return s__MonsterTeleport_10y2[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y2[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y2[i - 90101]
  else
    return s__MonsterTeleport_13y2[i - 98292]
  end
end

function sg__MonsterTeleport_set_y2(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y2[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y2[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y2[i - 16382] = v
      else
        s__MonsterTeleport_4y2[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y2[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y2[i - 40955] = v
    else
      s__MonsterTeleport_7y2[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y2[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y2[i - 65528] = v
    else
      s__MonsterTeleport_10y2[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y2[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y2[i - 90101] = v
  else
    s__MonsterTeleport_13y2[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x3(i)
  if (i < 8191) then
    return s__MonsterTeleport_x3[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x3[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x3[i - 16382]
      else
        return s__MonsterTeleport_4x3[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x3[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x3[i - 40955]
    else
      return s__MonsterTeleport_7x3[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x3[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x3[i - 65528]
    else
      return s__MonsterTeleport_10x3[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x3[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x3[i - 90101]
  else
    return s__MonsterTeleport_13x3[i - 98292]
  end
end

function sg__MonsterTeleport_set_x3(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x3[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x3[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x3[i - 16382] = v
      else
        s__MonsterTeleport_4x3[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x3[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x3[i - 40955] = v
    else
      s__MonsterTeleport_7x3[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x3[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x3[i - 65528] = v
    else
      s__MonsterTeleport_10x3[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x3[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x3[i - 90101] = v
  else
    s__MonsterTeleport_13x3[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y3(i)
  if (i < 8191) then
    return s__MonsterTeleport_y3[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y3[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y3[i - 16382]
      else
        return s__MonsterTeleport_4y3[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y3[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y3[i - 40955]
    else
      return s__MonsterTeleport_7y3[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y3[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y3[i - 65528]
    else
      return s__MonsterTeleport_10y3[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y3[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y3[i - 90101]
  else
    return s__MonsterTeleport_13y3[i - 98292]
  end
end

function sg__MonsterTeleport_set_y3(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y3[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y3[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y3[i - 16382] = v
      else
        s__MonsterTeleport_4y3[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y3[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y3[i - 40955] = v
    else
      s__MonsterTeleport_7y3[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y3[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y3[i - 65528] = v
    else
      s__MonsterTeleport_10y3[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y3[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y3[i - 90101] = v
  else
    s__MonsterTeleport_13y3[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x4(i)
  if (i < 8191) then
    return s__MonsterTeleport_x4[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x4[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x4[i - 16382]
      else
        return s__MonsterTeleport_4x4[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x4[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x4[i - 40955]
    else
      return s__MonsterTeleport_7x4[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x4[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x4[i - 65528]
    else
      return s__MonsterTeleport_10x4[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x4[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x4[i - 90101]
  else
    return s__MonsterTeleport_13x4[i - 98292]
  end
end

function sg__MonsterTeleport_set_x4(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x4[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x4[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x4[i - 16382] = v
      else
        s__MonsterTeleport_4x4[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x4[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x4[i - 40955] = v
    else
      s__MonsterTeleport_7x4[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x4[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x4[i - 65528] = v
    else
      s__MonsterTeleport_10x4[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x4[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x4[i - 90101] = v
  else
    s__MonsterTeleport_13x4[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y4(i)
  if (i < 8191) then
    return s__MonsterTeleport_y4[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y4[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y4[i - 16382]
      else
        return s__MonsterTeleport_4y4[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y4[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y4[i - 40955]
    else
      return s__MonsterTeleport_7y4[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y4[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y4[i - 65528]
    else
      return s__MonsterTeleport_10y4[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y4[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y4[i - 90101]
  else
    return s__MonsterTeleport_13y4[i - 98292]
  end
end

function sg__MonsterTeleport_set_y4(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y4[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y4[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y4[i - 16382] = v
      else
        s__MonsterTeleport_4y4[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y4[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y4[i - 40955] = v
    else
      s__MonsterTeleport_7y4[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y4[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y4[i - 65528] = v
    else
      s__MonsterTeleport_10y4[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y4[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y4[i - 90101] = v
  else
    s__MonsterTeleport_13y4[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x5(i)
  if (i < 8191) then
    return s__MonsterTeleport_x5[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x5[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x5[i - 16382]
      else
        return s__MonsterTeleport_4x5[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x5[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x5[i - 40955]
    else
      return s__MonsterTeleport_7x5[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x5[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x5[i - 65528]
    else
      return s__MonsterTeleport_10x5[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x5[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x5[i - 90101]
  else
    return s__MonsterTeleport_13x5[i - 98292]
  end
end

function sg__MonsterTeleport_set_x5(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x5[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x5[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x5[i - 16382] = v
      else
        s__MonsterTeleport_4x5[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x5[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x5[i - 40955] = v
    else
      s__MonsterTeleport_7x5[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x5[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x5[i - 65528] = v
    else
      s__MonsterTeleport_10x5[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x5[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x5[i - 90101] = v
  else
    s__MonsterTeleport_13x5[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y5(i)
  if (i < 8191) then
    return s__MonsterTeleport_y5[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y5[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y5[i - 16382]
      else
        return s__MonsterTeleport_4y5[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y5[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y5[i - 40955]
    else
      return s__MonsterTeleport_7y5[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y5[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y5[i - 65528]
    else
      return s__MonsterTeleport_10y5[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y5[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y5[i - 90101]
  else
    return s__MonsterTeleport_13y5[i - 98292]
  end
end

function sg__MonsterTeleport_set_y5(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y5[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y5[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y5[i - 16382] = v
      else
        s__MonsterTeleport_4y5[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y5[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y5[i - 40955] = v
    else
      s__MonsterTeleport_7y5[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y5[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y5[i - 65528] = v
    else
      s__MonsterTeleport_10y5[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y5[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y5[i - 90101] = v
  else
    s__MonsterTeleport_13y5[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x6(i)
  if (i < 8191) then
    return s__MonsterTeleport_x6[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x6[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x6[i - 16382]
      else
        return s__MonsterTeleport_4x6[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x6[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x6[i - 40955]
    else
      return s__MonsterTeleport_7x6[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x6[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x6[i - 65528]
    else
      return s__MonsterTeleport_10x6[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x6[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x6[i - 90101]
  else
    return s__MonsterTeleport_13x6[i - 98292]
  end
end

function sg__MonsterTeleport_set_x6(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x6[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x6[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x6[i - 16382] = v
      else
        s__MonsterTeleport_4x6[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x6[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x6[i - 40955] = v
    else
      s__MonsterTeleport_7x6[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x6[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x6[i - 65528] = v
    else
      s__MonsterTeleport_10x6[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x6[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x6[i - 90101] = v
  else
    s__MonsterTeleport_13x6[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y6(i)
  if (i < 8191) then
    return s__MonsterTeleport_y6[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y6[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y6[i - 16382]
      else
        return s__MonsterTeleport_4y6[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y6[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y6[i - 40955]
    else
      return s__MonsterTeleport_7y6[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y6[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y6[i - 65528]
    else
      return s__MonsterTeleport_10y6[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y6[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y6[i - 90101]
  else
    return s__MonsterTeleport_13y6[i - 98292]
  end
end

function sg__MonsterTeleport_set_y6(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y6[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y6[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y6[i - 16382] = v
      else
        s__MonsterTeleport_4y6[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y6[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y6[i - 40955] = v
    else
      s__MonsterTeleport_7y6[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y6[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y6[i - 65528] = v
    else
      s__MonsterTeleport_10y6[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y6[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y6[i - 90101] = v
  else
    s__MonsterTeleport_13y6[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x7(i)
  if (i < 8191) then
    return s__MonsterTeleport_x7[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x7[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x7[i - 16382]
      else
        return s__MonsterTeleport_4x7[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x7[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x7[i - 40955]
    else
      return s__MonsterTeleport_7x7[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x7[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x7[i - 65528]
    else
      return s__MonsterTeleport_10x7[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x7[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x7[i - 90101]
  else
    return s__MonsterTeleport_13x7[i - 98292]
  end
end

function sg__MonsterTeleport_set_x7(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x7[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x7[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x7[i - 16382] = v
      else
        s__MonsterTeleport_4x7[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x7[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x7[i - 40955] = v
    else
      s__MonsterTeleport_7x7[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x7[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x7[i - 65528] = v
    else
      s__MonsterTeleport_10x7[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x7[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x7[i - 90101] = v
  else
    s__MonsterTeleport_13x7[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y7(i)
  if (i < 8191) then
    return s__MonsterTeleport_y7[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y7[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y7[i - 16382]
      else
        return s__MonsterTeleport_4y7[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y7[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y7[i - 40955]
    else
      return s__MonsterTeleport_7y7[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y7[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y7[i - 65528]
    else
      return s__MonsterTeleport_10y7[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y7[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y7[i - 90101]
  else
    return s__MonsterTeleport_13y7[i - 98292]
  end
end

function sg__MonsterTeleport_set_y7(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y7[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y7[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y7[i - 16382] = v
      else
        s__MonsterTeleport_4y7[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y7[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y7[i - 40955] = v
    else
      s__MonsterTeleport_7y7[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y7[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y7[i - 65528] = v
    else
      s__MonsterTeleport_10y7[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y7[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y7[i - 90101] = v
  else
    s__MonsterTeleport_13y7[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x8(i)
  if (i < 8191) then
    return s__MonsterTeleport_x8[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x8[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x8[i - 16382]
      else
        return s__MonsterTeleport_4x8[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x8[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x8[i - 40955]
    else
      return s__MonsterTeleport_7x8[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x8[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x8[i - 65528]
    else
      return s__MonsterTeleport_10x8[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x8[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x8[i - 90101]
  else
    return s__MonsterTeleport_13x8[i - 98292]
  end
end

function sg__MonsterTeleport_set_x8(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x8[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x8[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x8[i - 16382] = v
      else
        s__MonsterTeleport_4x8[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x8[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x8[i - 40955] = v
    else
      s__MonsterTeleport_7x8[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x8[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x8[i - 65528] = v
    else
      s__MonsterTeleport_10x8[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x8[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x8[i - 90101] = v
  else
    s__MonsterTeleport_13x8[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y8(i)
  if (i < 8191) then
    return s__MonsterTeleport_y8[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y8[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y8[i - 16382]
      else
        return s__MonsterTeleport_4y8[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y8[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y8[i - 40955]
    else
      return s__MonsterTeleport_7y8[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y8[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y8[i - 65528]
    else
      return s__MonsterTeleport_10y8[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y8[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y8[i - 90101]
  else
    return s__MonsterTeleport_13y8[i - 98292]
  end
end

function sg__MonsterTeleport_set_y8(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y8[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y8[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y8[i - 16382] = v
      else
        s__MonsterTeleport_4y8[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y8[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y8[i - 40955] = v
    else
      s__MonsterTeleport_7y8[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y8[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y8[i - 65528] = v
    else
      s__MonsterTeleport_10y8[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y8[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y8[i - 90101] = v
  else
    s__MonsterTeleport_13y8[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x9(i)
  if (i < 8191) then
    return s__MonsterTeleport_x9[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x9[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x9[i - 16382]
      else
        return s__MonsterTeleport_4x9[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x9[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x9[i - 40955]
    else
      return s__MonsterTeleport_7x9[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x9[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x9[i - 65528]
    else
      return s__MonsterTeleport_10x9[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x9[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x9[i - 90101]
  else
    return s__MonsterTeleport_13x9[i - 98292]
  end
end

function sg__MonsterTeleport_set_x9(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x9[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x9[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x9[i - 16382] = v
      else
        s__MonsterTeleport_4x9[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x9[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x9[i - 40955] = v
    else
      s__MonsterTeleport_7x9[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x9[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x9[i - 65528] = v
    else
      s__MonsterTeleport_10x9[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x9[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x9[i - 90101] = v
  else
    s__MonsterTeleport_13x9[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y9(i)
  if (i < 8191) then
    return s__MonsterTeleport_y9[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y9[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y9[i - 16382]
      else
        return s__MonsterTeleport_4y9[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y9[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y9[i - 40955]
    else
      return s__MonsterTeleport_7y9[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y9[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y9[i - 65528]
    else
      return s__MonsterTeleport_10y9[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y9[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y9[i - 90101]
  else
    return s__MonsterTeleport_13y9[i - 98292]
  end
end

function sg__MonsterTeleport_set_y9(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y9[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y9[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y9[i - 16382] = v
      else
        s__MonsterTeleport_4y9[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y9[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y9[i - 40955] = v
    else
      s__MonsterTeleport_7y9[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y9[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y9[i - 65528] = v
    else
      s__MonsterTeleport_10y9[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y9[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y9[i - 90101] = v
  else
    s__MonsterTeleport_13y9[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x10(i)
  if (i < 8191) then
    return s__MonsterTeleport_x10[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x10[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x10[i - 16382]
      else
        return s__MonsterTeleport_4x10[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x10[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x10[i - 40955]
    else
      return s__MonsterTeleport_7x10[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x10[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x10[i - 65528]
    else
      return s__MonsterTeleport_10x10[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x10[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x10[i - 90101]
  else
    return s__MonsterTeleport_13x10[i - 98292]
  end
end

function sg__MonsterTeleport_set_x10(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x10[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x10[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x10[i - 16382] = v
      else
        s__MonsterTeleport_4x10[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x10[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x10[i - 40955] = v
    else
      s__MonsterTeleport_7x10[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x10[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x10[i - 65528] = v
    else
      s__MonsterTeleport_10x10[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x10[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x10[i - 90101] = v
  else
    s__MonsterTeleport_13x10[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y10(i)
  if (i < 8191) then
    return s__MonsterTeleport_y10[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y10[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y10[i - 16382]
      else
        return s__MonsterTeleport_4y10[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y10[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y10[i - 40955]
    else
      return s__MonsterTeleport_7y10[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y10[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y10[i - 65528]
    else
      return s__MonsterTeleport_10y10[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y10[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y10[i - 90101]
  else
    return s__MonsterTeleport_13y10[i - 98292]
  end
end

function sg__MonsterTeleport_set_y10(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y10[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y10[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y10[i - 16382] = v
      else
        s__MonsterTeleport_4y10[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y10[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y10[i - 40955] = v
    else
      s__MonsterTeleport_7y10[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y10[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y10[i - 65528] = v
    else
      s__MonsterTeleport_10y10[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y10[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y10[i - 90101] = v
  else
    s__MonsterTeleport_13y10[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x11(i)
  if (i < 8191) then
    return s__MonsterTeleport_x11[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x11[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x11[i - 16382]
      else
        return s__MonsterTeleport_4x11[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x11[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x11[i - 40955]
    else
      return s__MonsterTeleport_7x11[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x11[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x11[i - 65528]
    else
      return s__MonsterTeleport_10x11[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x11[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x11[i - 90101]
  else
    return s__MonsterTeleport_13x11[i - 98292]
  end
end

function sg__MonsterTeleport_set_x11(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x11[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x11[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x11[i - 16382] = v
      else
        s__MonsterTeleport_4x11[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x11[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x11[i - 40955] = v
    else
      s__MonsterTeleport_7x11[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x11[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x11[i - 65528] = v
    else
      s__MonsterTeleport_10x11[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x11[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x11[i - 90101] = v
  else
    s__MonsterTeleport_13x11[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y11(i)
  if (i < 8191) then
    return s__MonsterTeleport_y11[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y11[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y11[i - 16382]
      else
        return s__MonsterTeleport_4y11[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y11[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y11[i - 40955]
    else
      return s__MonsterTeleport_7y11[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y11[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y11[i - 65528]
    else
      return s__MonsterTeleport_10y11[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y11[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y11[i - 90101]
  else
    return s__MonsterTeleport_13y11[i - 98292]
  end
end

function sg__MonsterTeleport_set_y11(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y11[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y11[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y11[i - 16382] = v
      else
        s__MonsterTeleport_4y11[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y11[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y11[i - 40955] = v
    else
      s__MonsterTeleport_7y11[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y11[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y11[i - 65528] = v
    else
      s__MonsterTeleport_10y11[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y11[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y11[i - 90101] = v
  else
    s__MonsterTeleport_13y11[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x12(i)
  if (i < 8191) then
    return s__MonsterTeleport_x12[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x12[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x12[i - 16382]
      else
        return s__MonsterTeleport_4x12[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x12[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x12[i - 40955]
    else
      return s__MonsterTeleport_7x12[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x12[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x12[i - 65528]
    else
      return s__MonsterTeleport_10x12[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x12[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x12[i - 90101]
  else
    return s__MonsterTeleport_13x12[i - 98292]
  end
end

function sg__MonsterTeleport_set_x12(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x12[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x12[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x12[i - 16382] = v
      else
        s__MonsterTeleport_4x12[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x12[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x12[i - 40955] = v
    else
      s__MonsterTeleport_7x12[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x12[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x12[i - 65528] = v
    else
      s__MonsterTeleport_10x12[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x12[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x12[i - 90101] = v
  else
    s__MonsterTeleport_13x12[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y12(i)
  if (i < 8191) then
    return s__MonsterTeleport_y12[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y12[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y12[i - 16382]
      else
        return s__MonsterTeleport_4y12[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y12[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y12[i - 40955]
    else
      return s__MonsterTeleport_7y12[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y12[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y12[i - 65528]
    else
      return s__MonsterTeleport_10y12[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y12[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y12[i - 90101]
  else
    return s__MonsterTeleport_13y12[i - 98292]
  end
end

function sg__MonsterTeleport_set_y12(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y12[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y12[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y12[i - 16382] = v
      else
        s__MonsterTeleport_4y12[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y12[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y12[i - 40955] = v
    else
      s__MonsterTeleport_7y12[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y12[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y12[i - 65528] = v
    else
      s__MonsterTeleport_10y12[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y12[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y12[i - 90101] = v
  else
    s__MonsterTeleport_13y12[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x13(i)
  if (i < 8191) then
    return s__MonsterTeleport_x13[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x13[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x13[i - 16382]
      else
        return s__MonsterTeleport_4x13[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x13[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x13[i - 40955]
    else
      return s__MonsterTeleport_7x13[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x13[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x13[i - 65528]
    else
      return s__MonsterTeleport_10x13[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x13[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x13[i - 90101]
  else
    return s__MonsterTeleport_13x13[i - 98292]
  end
end

function sg__MonsterTeleport_set_x13(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x13[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x13[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x13[i - 16382] = v
      else
        s__MonsterTeleport_4x13[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x13[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x13[i - 40955] = v
    else
      s__MonsterTeleport_7x13[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x13[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x13[i - 65528] = v
    else
      s__MonsterTeleport_10x13[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x13[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x13[i - 90101] = v
  else
    s__MonsterTeleport_13x13[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y13(i)
  if (i < 8191) then
    return s__MonsterTeleport_y13[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y13[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y13[i - 16382]
      else
        return s__MonsterTeleport_4y13[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y13[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y13[i - 40955]
    else
      return s__MonsterTeleport_7y13[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y13[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y13[i - 65528]
    else
      return s__MonsterTeleport_10y13[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y13[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y13[i - 90101]
  else
    return s__MonsterTeleport_13y13[i - 98292]
  end
end

function sg__MonsterTeleport_set_y13(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y13[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y13[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y13[i - 16382] = v
      else
        s__MonsterTeleport_4y13[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y13[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y13[i - 40955] = v
    else
      s__MonsterTeleport_7y13[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y13[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y13[i - 65528] = v
    else
      s__MonsterTeleport_10y13[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y13[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y13[i - 90101] = v
  else
    s__MonsterTeleport_13y13[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x14(i)
  if (i < 8191) then
    return s__MonsterTeleport_x14[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x14[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x14[i - 16382]
      else
        return s__MonsterTeleport_4x14[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x14[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x14[i - 40955]
    else
      return s__MonsterTeleport_7x14[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x14[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x14[i - 65528]
    else
      return s__MonsterTeleport_10x14[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x14[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x14[i - 90101]
  else
    return s__MonsterTeleport_13x14[i - 98292]
  end
end

function sg__MonsterTeleport_set_x14(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x14[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x14[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x14[i - 16382] = v
      else
        s__MonsterTeleport_4x14[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x14[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x14[i - 40955] = v
    else
      s__MonsterTeleport_7x14[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x14[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x14[i - 65528] = v
    else
      s__MonsterTeleport_10x14[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x14[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x14[i - 90101] = v
  else
    s__MonsterTeleport_13x14[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y14(i)
  if (i < 8191) then
    return s__MonsterTeleport_y14[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y14[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y14[i - 16382]
      else
        return s__MonsterTeleport_4y14[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y14[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y14[i - 40955]
    else
      return s__MonsterTeleport_7y14[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y14[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y14[i - 65528]
    else
      return s__MonsterTeleport_10y14[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y14[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y14[i - 90101]
  else
    return s__MonsterTeleport_13y14[i - 98292]
  end
end

function sg__MonsterTeleport_set_y14(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y14[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y14[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y14[i - 16382] = v
      else
        s__MonsterTeleport_4y14[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y14[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y14[i - 40955] = v
    else
      s__MonsterTeleport_7y14[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y14[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y14[i - 65528] = v
    else
      s__MonsterTeleport_10y14[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y14[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y14[i - 90101] = v
  else
    s__MonsterTeleport_13y14[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x15(i)
  if (i < 8191) then
    return s__MonsterTeleport_x15[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x15[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x15[i - 16382]
      else
        return s__MonsterTeleport_4x15[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x15[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x15[i - 40955]
    else
      return s__MonsterTeleport_7x15[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x15[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x15[i - 65528]
    else
      return s__MonsterTeleport_10x15[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x15[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x15[i - 90101]
  else
    return s__MonsterTeleport_13x15[i - 98292]
  end
end

function sg__MonsterTeleport_set_x15(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x15[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x15[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x15[i - 16382] = v
      else
        s__MonsterTeleport_4x15[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x15[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x15[i - 40955] = v
    else
      s__MonsterTeleport_7x15[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x15[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x15[i - 65528] = v
    else
      s__MonsterTeleport_10x15[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x15[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x15[i - 90101] = v
  else
    s__MonsterTeleport_13x15[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y15(i)
  if (i < 8191) then
    return s__MonsterTeleport_y15[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y15[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y15[i - 16382]
      else
        return s__MonsterTeleport_4y15[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y15[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y15[i - 40955]
    else
      return s__MonsterTeleport_7y15[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y15[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y15[i - 65528]
    else
      return s__MonsterTeleport_10y15[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y15[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y15[i - 90101]
  else
    return s__MonsterTeleport_13y15[i - 98292]
  end
end

function sg__MonsterTeleport_set_y15(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y15[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y15[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y15[i - 16382] = v
      else
        s__MonsterTeleport_4y15[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y15[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y15[i - 40955] = v
    else
      s__MonsterTeleport_7y15[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y15[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y15[i - 65528] = v
    else
      s__MonsterTeleport_10y15[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y15[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y15[i - 90101] = v
  else
    s__MonsterTeleport_13y15[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x16(i)
  if (i < 8191) then
    return s__MonsterTeleport_x16[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x16[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x16[i - 16382]
      else
        return s__MonsterTeleport_4x16[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x16[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x16[i - 40955]
    else
      return s__MonsterTeleport_7x16[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x16[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x16[i - 65528]
    else
      return s__MonsterTeleport_10x16[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x16[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x16[i - 90101]
  else
    return s__MonsterTeleport_13x16[i - 98292]
  end
end

function sg__MonsterTeleport_set_x16(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x16[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x16[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x16[i - 16382] = v
      else
        s__MonsterTeleport_4x16[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x16[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x16[i - 40955] = v
    else
      s__MonsterTeleport_7x16[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x16[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x16[i - 65528] = v
    else
      s__MonsterTeleport_10x16[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x16[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x16[i - 90101] = v
  else
    s__MonsterTeleport_13x16[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y16(i)
  if (i < 8191) then
    return s__MonsterTeleport_y16[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y16[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y16[i - 16382]
      else
        return s__MonsterTeleport_4y16[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y16[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y16[i - 40955]
    else
      return s__MonsterTeleport_7y16[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y16[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y16[i - 65528]
    else
      return s__MonsterTeleport_10y16[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y16[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y16[i - 90101]
  else
    return s__MonsterTeleport_13y16[i - 98292]
  end
end

function sg__MonsterTeleport_set_y16(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y16[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y16[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y16[i - 16382] = v
      else
        s__MonsterTeleport_4y16[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y16[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y16[i - 40955] = v
    else
      s__MonsterTeleport_7y16[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y16[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y16[i - 65528] = v
    else
      s__MonsterTeleport_10y16[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y16[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y16[i - 90101] = v
  else
    s__MonsterTeleport_13y16[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x17(i)
  if (i < 8191) then
    return s__MonsterTeleport_x17[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x17[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x17[i - 16382]
      else
        return s__MonsterTeleport_4x17[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x17[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x17[i - 40955]
    else
      return s__MonsterTeleport_7x17[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x17[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x17[i - 65528]
    else
      return s__MonsterTeleport_10x17[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x17[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x17[i - 90101]
  else
    return s__MonsterTeleport_13x17[i - 98292]
  end
end

function sg__MonsterTeleport_set_x17(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x17[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x17[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x17[i - 16382] = v
      else
        s__MonsterTeleport_4x17[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x17[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x17[i - 40955] = v
    else
      s__MonsterTeleport_7x17[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x17[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x17[i - 65528] = v
    else
      s__MonsterTeleport_10x17[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x17[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x17[i - 90101] = v
  else
    s__MonsterTeleport_13x17[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y17(i)
  if (i < 8191) then
    return s__MonsterTeleport_y17[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y17[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y17[i - 16382]
      else
        return s__MonsterTeleport_4y17[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y17[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y17[i - 40955]
    else
      return s__MonsterTeleport_7y17[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y17[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y17[i - 65528]
    else
      return s__MonsterTeleport_10y17[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y17[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y17[i - 90101]
  else
    return s__MonsterTeleport_13y17[i - 98292]
  end
end

function sg__MonsterTeleport_set_y17(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y17[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y17[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y17[i - 16382] = v
      else
        s__MonsterTeleport_4y17[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y17[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y17[i - 40955] = v
    else
      s__MonsterTeleport_7y17[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y17[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y17[i - 65528] = v
    else
      s__MonsterTeleport_10y17[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y17[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y17[i - 90101] = v
  else
    s__MonsterTeleport_13y17[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x18(i)
  if (i < 8191) then
    return s__MonsterTeleport_x18[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x18[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x18[i - 16382]
      else
        return s__MonsterTeleport_4x18[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x18[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x18[i - 40955]
    else
      return s__MonsterTeleport_7x18[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x18[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x18[i - 65528]
    else
      return s__MonsterTeleport_10x18[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x18[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x18[i - 90101]
  else
    return s__MonsterTeleport_13x18[i - 98292]
  end
end

function sg__MonsterTeleport_set_x18(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x18[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x18[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x18[i - 16382] = v
      else
        s__MonsterTeleport_4x18[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x18[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x18[i - 40955] = v
    else
      s__MonsterTeleport_7x18[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x18[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x18[i - 65528] = v
    else
      s__MonsterTeleport_10x18[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x18[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x18[i - 90101] = v
  else
    s__MonsterTeleport_13x18[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y18(i)
  if (i < 8191) then
    return s__MonsterTeleport_y18[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y18[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y18[i - 16382]
      else
        return s__MonsterTeleport_4y18[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y18[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y18[i - 40955]
    else
      return s__MonsterTeleport_7y18[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y18[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y18[i - 65528]
    else
      return s__MonsterTeleport_10y18[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y18[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y18[i - 90101]
  else
    return s__MonsterTeleport_13y18[i - 98292]
  end
end

function sg__MonsterTeleport_set_y18(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y18[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y18[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y18[i - 16382] = v
      else
        s__MonsterTeleport_4y18[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y18[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y18[i - 40955] = v
    else
      s__MonsterTeleport_7y18[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y18[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y18[i - 65528] = v
    else
      s__MonsterTeleport_10y18[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y18[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y18[i - 90101] = v
  else
    s__MonsterTeleport_13y18[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_x19(i)
  if (i < 8191) then
    return s__MonsterTeleport_x19[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2x19[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3x19[i - 16382]
      else
        return s__MonsterTeleport_4x19[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5x19[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6x19[i - 40955]
    else
      return s__MonsterTeleport_7x19[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8x19[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9x19[i - 65528]
    else
      return s__MonsterTeleport_10x19[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11x19[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12x19[i - 90101]
  else
    return s__MonsterTeleport_13x19[i - 98292]
  end
end

function sg__MonsterTeleport_set_x19(i, v)
  if (i < 8191) then
    s__MonsterTeleport_x19[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2x19[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3x19[i - 16382] = v
      else
        s__MonsterTeleport_4x19[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5x19[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6x19[i - 40955] = v
    else
      s__MonsterTeleport_7x19[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8x19[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9x19[i - 65528] = v
    else
      s__MonsterTeleport_10x19[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11x19[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12x19[i - 90101] = v
  else
    s__MonsterTeleport_13x19[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_y19(i)
  if (i < 8191) then
    return s__MonsterTeleport_y19[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2y19[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3y19[i - 16382]
      else
        return s__MonsterTeleport_4y19[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5y19[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6y19[i - 40955]
    else
      return s__MonsterTeleport_7y19[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8y19[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9y19[i - 65528]
    else
      return s__MonsterTeleport_10y19[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11y19[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12y19[i - 90101]
  else
    return s__MonsterTeleport_13y19[i - 98292]
  end
end

function sg__MonsterTeleport_set_y19(i, v)
  if (i < 8191) then
    s__MonsterTeleport_y19[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2y19[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3y19[i - 16382] = v
      else
        s__MonsterTeleport_4y19[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5y19[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6y19[i - 40955] = v
    else
      s__MonsterTeleport_7y19[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8y19[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9y19[i - 65528] = v
    else
      s__MonsterTeleport_10y19[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11y19[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12y19[i - 90101] = v
  else
    s__MonsterTeleport_13y19[i - 98292] = v
  end
end

function sg__MonsterTeleport_get_t(i)
  if (i < 8191) then
    return s__MonsterTeleport_t[i]
  elseif (i < 57337) then
    if (i < 16382) then
      return s__MonsterTeleport_2t[i - 8191]
    elseif (i < 32764) then
      if (i < 24573) then
        return s__MonsterTeleport_3t[i - 16382]
      else
        return s__MonsterTeleport_4t[i - 24573]
      end
    elseif (i < 40955) then
      return s__MonsterTeleport_5t[i - 32764]
    elseif (i < 49146) then
      return s__MonsterTeleport_6t[i - 40955]
    else
      return s__MonsterTeleport_7t[i - 49146]
    end
  elseif (i < 65528) then
    return s__MonsterTeleport_8t[i - 57337]
  elseif (i < 81910) then
    if (i < 73719) then
      return s__MonsterTeleport_9t[i - 65528]
    else
      return s__MonsterTeleport_10t[i - 73719]
    end
  elseif (i < 90101) then
    return s__MonsterTeleport_11t[i - 81910]
  elseif (i < 98292) then
    return s__MonsterTeleport_12t[i - 90101]
  else
    return s__MonsterTeleport_13t[i - 98292]
  end
end

function sg__MonsterTeleport_set_t(i, v)
  if (i < 8191) then
    s__MonsterTeleport_t[i] = v
  elseif (i < 57337) then
    if (i < 16382) then
      s__MonsterTeleport_2t[i - 8191] = v
    elseif (i < 32764) then
      if (i < 24573) then
        s__MonsterTeleport_3t[i - 16382] = v
      else
        s__MonsterTeleport_4t[i - 24573] = v
      end
    elseif (i < 40955) then
      s__MonsterTeleport_5t[i - 32764] = v
    elseif (i < 49146) then
      s__MonsterTeleport_6t[i - 40955] = v
    else
      s__MonsterTeleport_7t[i - 49146] = v
    end
  elseif (i < 65528) then
    s__MonsterTeleport_8t[i - 57337] = v
  elseif (i < 81910) then
    if (i < 73719) then
      s__MonsterTeleport_9t[i - 65528] = v
    else
      s__MonsterTeleport_10t[i - 73719] = v
    end
  elseif (i < 90101) then
    s__MonsterTeleport_11t[i - 81910] = v
  elseif (i < 98292) then
    s__MonsterTeleport_12t[i - 90101] = v
  else
    s__MonsterTeleport_13t[i - 98292] = v
  end
end

--Generated method caller for MakeAction.cancel
function sc__MakeAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[si__MakeAction_type[this]])
  return f__result_boolean
end

--Generated method executor for MakeAction.cancel
function sx__MakeAction_cancel(this)
  f__arg_this = this
  TriggerExecute(st__MakeAction_cancel[si__MakeAction_type[this]])
end

--Generated method caller for MakeAction.redo
function sc__MakeAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[si__MakeAction_type[this]])
  return f__result_boolean
end

--Generated method executor for MakeAction.redo
function sx__MakeAction_redo(this)
  f__arg_this = this
  TriggerExecute(st__MakeAction_redo[si__MakeAction_type[this]])
end
--Generated destructor of MakeAction
function sc__MakeAction_deallocate(this)
  if this == nil then
    return
  elseif (si__MakeAction_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[si__MakeAction_type[this]])
  si__MakeAction_V[this] = si__MakeAction_F
  si__MakeAction_F = this
end

--Generated method caller for EscaperSavedCommands.new
function sc__EscaperSavedCommands_new(this, escaper, commandName, command)
  SaveStr(s__EscaperSavedCommands_savedCommands[this], escaper, StringHash(commandName), command)
end

--Generated method caller for EscaperSavedCommands.execute
function sc__EscaperSavedCommands_execute(this, escaper, commandName)
  f__arg_this = this
  f__arg_integer1 = escaper
  f__arg_string1 = commandName
  TriggerEvaluate(st__EscaperSavedCommands_execute)
  return f__result_boolean
end

--Generated allocator of EscaperSavedCommands
function s__EscaperSavedCommands__allocate()
  local this = si__EscaperSavedCommands_F
  if (this ~= 0) then
    si__EscaperSavedCommands_F = si__EscaperSavedCommands_V[this]
  else
    si__EscaperSavedCommands_I = si__EscaperSavedCommands_I + 1
    this = si__EscaperSavedCommands_I
  end
  if (this > 8190) then
    return 0
  end

  si__EscaperSavedCommands_V[this] = -1
  return this
end

--Generated destructor of EscaperSavedCommands
function s__EscaperSavedCommands_deallocate(this)
  if this == nil then
    return
  elseif (si__EscaperSavedCommands_V[this] ~= -1) then
    return
  end
  si__EscaperSavedCommands_V[this] = si__EscaperSavedCommands_F
  si__EscaperSavedCommands_F = this
end

--Generated method caller for CasterArray.create
function sc__CasterArray_create()
  TriggerEvaluate(st__CasterArray_create)
  return f__result_integer
end

--Generated method caller for CasterArray.get
function sc__CasterArray_get(this, arrayId)
  f__arg_this = this
  f__arg_integer1 = arrayId
  TriggerEvaluate(st__CasterArray_get)
  return f__result_integer
end

--Generated method caller for CasterArray.getLastInstanceId
function sc__CasterArray_getLastInstanceId(this)
  f__arg_this = this
  TriggerEvaluate(st__CasterArray_getLastInstanceId)
  return f__result_integer
end

--Generated method caller for CasterArray.new
function sc__CasterArray_new(this, casterType, x, l__y, angle, enable)
  f__arg_this = this
  f__arg_integer1 = casterType
  f__arg_real1 = x
  f__arg_real2 = l__y
  f__arg_real3 = angle
  f__arg_boolean1 = enable
  TriggerEvaluate(st__CasterArray_new)
  return f__result_integer
end

--Generated method caller for CasterArray.count
function sc__CasterArray_count(this)
  f__arg_this = this
  TriggerEvaluate(st__CasterArray_count)
  return f__result_integer
end

--Generated method caller for CasterArray.onDestroy
function sc__CasterArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__CasterArray_onDestroy)
end

--Generated method caller for CasterArray.setCasterNull
function sc__CasterArray_setCasterNull(this, casterArrayId)
  f__arg_this = this
  f__arg_integer1 = casterArrayId
  TriggerEvaluate(st__CasterArray_setCasterNull)
end

--Generated method caller for CasterArray.getCasterNear
function sc__CasterArray_getCasterNear(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__CasterArray_getCasterNear)
  return f__result_integer
end

--Generated method caller for CasterArray.createCasters
function sc__CasterArray_createCasters(this)
  f__arg_this = this
  TriggerEvaluate(st__CasterArray_createCasters)
end

--Generated method caller for CasterArray.removeCasters
function sc__CasterArray_removeCasters(this)
  f__arg_this = this
  TriggerEvaluate(st__CasterArray_removeCasters)
end

--Generated method caller for CasterArray.refreshCastersOfType
function sc__CasterArray_refreshCastersOfType(this, casterType)
  f__arg_this = this
  f__arg_integer1 = casterType
  TriggerEvaluate(st__CasterArray_refreshCastersOfType)
end

--Generated method caller for CasterArray.removeCastersOfType
function sc__CasterArray_removeCastersOfType(this, casterType)
  f__arg_this = this
  f__arg_integer1 = casterType
  TriggerEvaluate(st__CasterArray_removeCastersOfType)
end

--Generated allocator of CasterArray
function s__CasterArray__allocate()
  local this = si__CasterArray_F
  if (this ~= 0) then
    if (this < 8191) then
      si__CasterArray_F = si__CasterArray_V[this]
    elseif (this < 16382) then
      si__CasterArray_F = si__CasterArray_2V[this - 8191]
    elseif (this < 24573) then
      si__CasterArray_F = si__CasterArray_3V[this - 16382]
    else
      si__CasterArray_F = si__CasterArray_4V[this - 24573]
    end
  else
    si__CasterArray_I = si__CasterArray_I + 1
    this = si__CasterArray_I
  end
  if (this > 49) then
    return 0
  end
  if (this < 8191) then
    s__CasterArray_casters[this] = (this - 1) * 500
  elseif (this < 16382) then
    s__CasterArray_2casters[this - 8191] = (this - 1) * 500
  elseif (this < 24573) then
    s__CasterArray_3casters[this - 16382] = (this - 1) * 500
  else
    s__CasterArray_4casters[this - 24573] = (this - 1) * 500
  end
  if (this < 8191) then
    si__CasterArray_V[this] = -1
  elseif (this < 16382) then
    si__CasterArray_2V[this - 8191] = -1
  elseif (this < 24573) then
    si__CasterArray_3V[this - 16382] = -1
  else
    si__CasterArray_4V[this - 24573] = -1
  end
  return this
end

--Generated destructor of CasterArray
function sc__CasterArray_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__CasterArray_V[this]
    elseif (this < 16382) then
      used = si__CasterArray_2V[this - 8191]
    elseif (this < 24573) then
      used = si__CasterArray_3V[this - 16382]
    else
      used = si__CasterArray_4V[this - 24573]
    end
    if (used ~= -1) then
      return
    end
  end
  f__arg_this = this
  TriggerEvaluate(st__CasterArray_onDestroy)
  if (this < 8191) then
    si__CasterArray_V[this] = si__CasterArray_F
  elseif (this < 16382) then
    si__CasterArray_2V[this - 8191] = si__CasterArray_F
  elseif (this < 24573) then
    si__CasterArray_3V[this - 16382] = si__CasterArray_F
  else
    si__CasterArray_4V[this - 24573] = si__CasterArray_F
  end
  si__CasterArray_F = this
end

--Generated method caller for MonsterTeleportArray.create
function sc__MonsterTeleportArray_create()
  TriggerEvaluate(st__MonsterTeleportArray_create)
  return f__result_integer
end

--Generated method caller for MonsterTeleportArray.get
function sc__MonsterTeleportArray_get(this, arrayId)
  f__arg_this = this
  f__arg_integer1 = arrayId
  TriggerEvaluate(st__MonsterTeleportArray_get)
  return f__result_integer
end

--Generated method caller for MonsterTeleportArray.getLastInstanceId
function sc__MonsterTeleportArray_getLastInstanceId(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleportArray_getLastInstanceId)
  return f__result_integer
end

--Generated method caller for MonsterTeleportArray.new
function sc__MonsterTeleportArray_new(this, mt, period, angle, mode, createUnit)
  f__arg_this = this
  f__arg_integer1 = mt
  f__arg_real1 = period
  f__arg_real2 = angle
  f__arg_string1 = mode
  f__arg_boolean1 = createUnit
  TriggerEvaluate(st__MonsterTeleportArray_new)
  return f__result_integer
end

--Generated method caller for MonsterTeleportArray.count
function sc__MonsterTeleportArray_count(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleportArray_count)
  return f__result_integer
end

--Generated method caller for MonsterTeleportArray.onDestroy
function sc__MonsterTeleportArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleportArray_onDestroy)
end

--Generated method caller for MonsterTeleportArray.setMonsterNull
function sc__MonsterTeleportArray_setMonsterNull(this, monsterArrayId)
  f__arg_this = this
  f__arg_integer1 = monsterArrayId
  TriggerEvaluate(st__MonsterTeleportArray_setMonsterNull)
end

--Generated method caller for MonsterTeleportArray.getMonsterNear
function sc__MonsterTeleportArray_getMonsterNear(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MonsterTeleportArray_getMonsterNear)
  return f__result_integer
end

--Generated method caller for MonsterTeleportArray.createMonsters
function sc__MonsterTeleportArray_createMonsters(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleportArray_createMonsters)
end

--Generated method caller for MonsterTeleportArray.removeMonsters
function sc__MonsterTeleportArray_removeMonsters(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleportArray_removeMonsters)
end

--Generated method caller for MonsterTeleportArray.recreateMonstersOfType
function sc__MonsterTeleportArray_recreateMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__MonsterTeleportArray_recreateMonstersOfType)
end

--Generated method caller for MonsterTeleportArray.removeMonstersOfType
function sc__MonsterTeleportArray_removeMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__MonsterTeleportArray_removeMonstersOfType)
end

--Generated allocator of MonsterTeleportArray
function s__MonsterTeleportArray__allocate()
  local this = si__MonsterTeleportArray_F
  if (this ~= 0) then
    if (this < 8191) then
      si__MonsterTeleportArray_F = si__MonsterTeleportArray_V[this]
    elseif (this < 16382) then
      si__MonsterTeleportArray_F = si__MonsterTeleportArray_2V[this - 8191]
    elseif (this < 24573) then
      si__MonsterTeleportArray_F = si__MonsterTeleportArray_3V[this - 16382]
    else
      si__MonsterTeleportArray_F = si__MonsterTeleportArray_4V[this - 24573]
    end
  else
    si__MonsterTeleportArray_I = si__MonsterTeleportArray_I + 1
    this = si__MonsterTeleportArray_I
  end
  if (this > 49) then
    return 0
  end
  if (this < 8191) then
    s__MonsterTeleportArray_monsters[this] = (this - 1) * 500
  elseif (this < 16382) then
    s__MonsterTeleportArray_2monsters[this - 8191] = (this - 1) * 500
  elseif (this < 24573) then
    s__MonsterTeleportArray_3monsters[this - 16382] = (this - 1) * 500
  else
    s__MonsterTeleportArray_4monsters[this - 24573] = (this - 1) * 500
  end
  if (this < 8191) then
    si__MonsterTeleportArray_V[this] = -1
  elseif (this < 16382) then
    si__MonsterTeleportArray_2V[this - 8191] = -1
  elseif (this < 24573) then
    si__MonsterTeleportArray_3V[this - 16382] = -1
  else
    si__MonsterTeleportArray_4V[this - 24573] = -1
  end
  return this
end

--Generated destructor of MonsterTeleportArray
function sc__MonsterTeleportArray_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__MonsterTeleportArray_V[this]
    elseif (this < 16382) then
      used = si__MonsterTeleportArray_2V[this - 8191]
    elseif (this < 24573) then
      used = si__MonsterTeleportArray_3V[this - 16382]
    else
      used = si__MonsterTeleportArray_4V[this - 24573]
    end
    if (used ~= -1) then
      return
    end
  end
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleportArray_onDestroy)
  if (this < 8191) then
    si__MonsterTeleportArray_V[this] = si__MonsterTeleportArray_F
  elseif (this < 16382) then
    si__MonsterTeleportArray_2V[this - 8191] = si__MonsterTeleportArray_F
  elseif (this < 24573) then
    si__MonsterTeleportArray_3V[this - 16382] = si__MonsterTeleportArray_F
  else
    si__MonsterTeleportArray_4V[this - 24573] = si__MonsterTeleportArray_F
  end
  si__MonsterTeleportArray_F = this
end

--Generated method caller for MonsterSimplePatrolArray.create
function sc__MonsterSimplePatrolArray_create()
  TriggerEvaluate(st__MonsterSimplePatrolArray_create)
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrolArray.get
function sc__MonsterSimplePatrolArray_get(this, arrayId)
  f__arg_this = this
  f__arg_integer1 = arrayId
  TriggerEvaluate(st__MonsterSimplePatrolArray_get)
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrolArray.getLastInstanceId
function sc__MonsterSimplePatrolArray_getLastInstanceId(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSimplePatrolArray_getLastInstanceId)
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrolArray.new
function sc__MonsterSimplePatrolArray_new(this, mt, x1, y1, x2, y2, createUnit)
  f__arg_this = this
  f__arg_integer1 = mt
  f__arg_real1 = x1
  f__arg_real2 = y1
  f__arg_real3 = x2
  f__arg_real4 = y2
  f__arg_boolean1 = createUnit
  TriggerEvaluate(st__MonsterSimplePatrolArray_new)
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrolArray.count
function sc__MonsterSimplePatrolArray_count(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSimplePatrolArray_count)
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrolArray.onDestroy
function sc__MonsterSimplePatrolArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSimplePatrolArray_onDestroy)
end

--Generated method caller for MonsterSimplePatrolArray.setMonsterNull
function sc__MonsterSimplePatrolArray_setMonsterNull(this, monsterArrayId)
  f__arg_this = this
  f__arg_integer1 = monsterArrayId
  TriggerEvaluate(st__MonsterSimplePatrolArray_setMonsterNull)
end

--Generated method caller for MonsterSimplePatrolArray.getMonsterNear
function sc__MonsterSimplePatrolArray_getMonsterNear(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MonsterSimplePatrolArray_getMonsterNear)
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrolArray.createMonsters
function sc__MonsterSimplePatrolArray_createMonsters(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSimplePatrolArray_createMonsters)
end

--Generated method caller for MonsterSimplePatrolArray.removeMonsters
function sc__MonsterSimplePatrolArray_removeMonsters(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSimplePatrolArray_removeMonsters)
end

--Generated method caller for MonsterSimplePatrolArray.recreateMonstersOfType
function sc__MonsterSimplePatrolArray_recreateMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__MonsterSimplePatrolArray_recreateMonstersOfType)
end

--Generated method caller for MonsterSimplePatrolArray.removeMonstersOfType
function sc__MonsterSimplePatrolArray_removeMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__MonsterSimplePatrolArray_removeMonstersOfType)
end

--Generated allocator of MonsterSimplePatrolArray
function s__MonsterSimplePatrolArray__allocate()
  local this = si__MonsterSimplePatrolArray_F
  if (this ~= 0) then
    if (this < 8191) then
      si__MonsterSimplePatrolArray_F = si__MonsterSimplePatrolArray_V[this]
    elseif (this < 16382) then
      si__MonsterSimplePatrolArray_F = si__MonsterSimplePatrolArray_2V[this - 8191]
    elseif (this < 24573) then
      si__MonsterSimplePatrolArray_F = si__MonsterSimplePatrolArray_3V[this - 16382]
    else
      si__MonsterSimplePatrolArray_F = si__MonsterSimplePatrolArray_4V[this - 24573]
    end
  else
    si__MonsterSimplePatrolArray_I = si__MonsterSimplePatrolArray_I + 1
    this = si__MonsterSimplePatrolArray_I
  end
  if (this > 49) then
    return 0
  end
  if (this < 8191) then
    s__MonsterSimplePatrolArray_monsters[this] = (this - 1) * 500
  elseif (this < 16382) then
    s__MonsterSimplePatrolArray_2monsters[this - 8191] = (this - 1) * 500
  elseif (this < 24573) then
    s__MonsterSimplePatrolArray_3monsters[this - 16382] = (this - 1) * 500
  else
    s__MonsterSimplePatrolArray_4monsters[this - 24573] = (this - 1) * 500
  end
  if (this < 8191) then
    si__MonsterSimplePatrolArray_V[this] = -1
  elseif (this < 16382) then
    si__MonsterSimplePatrolArray_2V[this - 8191] = -1
  elseif (this < 24573) then
    si__MonsterSimplePatrolArray_3V[this - 16382] = -1
  else
    si__MonsterSimplePatrolArray_4V[this - 24573] = -1
  end
  return this
end

--Generated destructor of MonsterSimplePatrolArray
function sc__MonsterSimplePatrolArray_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__MonsterSimplePatrolArray_V[this]
    elseif (this < 16382) then
      used = si__MonsterSimplePatrolArray_2V[this - 8191]
    elseif (this < 24573) then
      used = si__MonsterSimplePatrolArray_3V[this - 16382]
    else
      used = si__MonsterSimplePatrolArray_4V[this - 24573]
    end
    if (used ~= -1) then
      return
    end
  end
  f__arg_this = this
  TriggerEvaluate(st__MonsterSimplePatrolArray_onDestroy)
  if (this < 8191) then
    si__MonsterSimplePatrolArray_V[this] = si__MonsterSimplePatrolArray_F
  elseif (this < 16382) then
    si__MonsterSimplePatrolArray_2V[this - 8191] = si__MonsterSimplePatrolArray_F
  elseif (this < 24573) then
    si__MonsterSimplePatrolArray_3V[this - 16382] = si__MonsterSimplePatrolArray_F
  else
    si__MonsterSimplePatrolArray_4V[this - 24573] = si__MonsterSimplePatrolArray_F
  end
  si__MonsterSimplePatrolArray_F = this
end

--Generated method caller for MonsterNoMoveArray.create
function sc__MonsterNoMoveArray_create()
  TriggerEvaluate(st__MonsterNoMoveArray_create)
  return f__result_integer
end

--Generated method caller for MonsterNoMoveArray.get
function sc__MonsterNoMoveArray_get(this, arrayId)
  f__arg_this = this
  f__arg_integer1 = arrayId
  TriggerEvaluate(st__MonsterNoMoveArray_get)
  return f__result_integer
end

--Generated method caller for MonsterNoMoveArray.getLastInstanceId
function sc__MonsterNoMoveArray_getLastInstanceId(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterNoMoveArray_getLastInstanceId)
  return f__result_integer
end

--Generated method caller for MonsterNoMoveArray.new
function sc__MonsterNoMoveArray_new(this, mt, x, l__y, angle, createUnit)
  f__arg_this = this
  f__arg_integer1 = mt
  f__arg_real1 = x
  f__arg_real2 = l__y
  f__arg_real3 = angle
  f__arg_boolean1 = createUnit
  TriggerEvaluate(st__MonsterNoMoveArray_new)
  return f__result_integer
end

--Generated method caller for MonsterNoMoveArray.count
function sc__MonsterNoMoveArray_count(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterNoMoveArray_count)
  return f__result_integer
end

--Generated method caller for MonsterNoMoveArray.onDestroy
function sc__MonsterNoMoveArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterNoMoveArray_onDestroy)
end

--Generated method caller for MonsterNoMoveArray.setMonsterNull
function sc__MonsterNoMoveArray_setMonsterNull(this, monsterArrayId)
  f__arg_this = this
  f__arg_integer1 = monsterArrayId
  TriggerEvaluate(st__MonsterNoMoveArray_setMonsterNull)
end

--Generated method caller for MonsterNoMoveArray.getMonsterNear
function sc__MonsterNoMoveArray_getMonsterNear(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MonsterNoMoveArray_getMonsterNear)
  return f__result_integer
end

--Generated method caller for MonsterNoMoveArray.createMonsters
function sc__MonsterNoMoveArray_createMonsters(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterNoMoveArray_createMonsters)
end

--Generated method caller for MonsterNoMoveArray.removeMonsters
function sc__MonsterNoMoveArray_removeMonsters(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterNoMoveArray_removeMonsters)
end

--Generated method caller for MonsterNoMoveArray.recreateMonstersOfType
function sc__MonsterNoMoveArray_recreateMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__MonsterNoMoveArray_recreateMonstersOfType)
end

--Generated method caller for MonsterNoMoveArray.removeMonstersOfType
function sc__MonsterNoMoveArray_removeMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__MonsterNoMoveArray_removeMonstersOfType)
end

--Generated allocator of MonsterNoMoveArray
function s__MonsterNoMoveArray__allocate()
  local this = si__MonsterNoMoveArray_F
  if (this ~= 0) then
    if (this < 8191) then
      si__MonsterNoMoveArray_F = si__MonsterNoMoveArray_V[this]
    elseif (this < 16382) then
      si__MonsterNoMoveArray_F = si__MonsterNoMoveArray_2V[this - 8191]
    elseif (this < 24573) then
      si__MonsterNoMoveArray_F = si__MonsterNoMoveArray_3V[this - 16382]
    else
      si__MonsterNoMoveArray_F = si__MonsterNoMoveArray_4V[this - 24573]
    end
  else
    si__MonsterNoMoveArray_I = si__MonsterNoMoveArray_I + 1
    this = si__MonsterNoMoveArray_I
  end
  if (this > 49) then
    return 0
  end
  if (this < 8191) then
    s__MonsterNoMoveArray_monsters[this] = (this - 1) * 500
  elseif (this < 16382) then
    s__MonsterNoMoveArray_2monsters[this - 8191] = (this - 1) * 500
  elseif (this < 24573) then
    s__MonsterNoMoveArray_3monsters[this - 16382] = (this - 1) * 500
  else
    s__MonsterNoMoveArray_4monsters[this - 24573] = (this - 1) * 500
  end
  if (this < 8191) then
    si__MonsterNoMoveArray_V[this] = -1
  elseif (this < 16382) then
    si__MonsterNoMoveArray_2V[this - 8191] = -1
  elseif (this < 24573) then
    si__MonsterNoMoveArray_3V[this - 16382] = -1
  else
    si__MonsterNoMoveArray_4V[this - 24573] = -1
  end
  return this
end

--Generated destructor of MonsterNoMoveArray
function sc__MonsterNoMoveArray_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__MonsterNoMoveArray_V[this]
    elseif (this < 16382) then
      used = si__MonsterNoMoveArray_2V[this - 8191]
    elseif (this < 24573) then
      used = si__MonsterNoMoveArray_3V[this - 16382]
    else
      used = si__MonsterNoMoveArray_4V[this - 24573]
    end
    if (used ~= -1) then
      return
    end
  end
  f__arg_this = this
  TriggerEvaluate(st__MonsterNoMoveArray_onDestroy)
  if (this < 8191) then
    si__MonsterNoMoveArray_V[this] = si__MonsterNoMoveArray_F
  elseif (this < 16382) then
    si__MonsterNoMoveArray_2V[this - 8191] = si__MonsterNoMoveArray_F
  elseif (this < 24573) then
    si__MonsterNoMoveArray_3V[this - 16382] = si__MonsterNoMoveArray_F
  else
    si__MonsterNoMoveArray_4V[this - 24573] = si__MonsterNoMoveArray_F
  end
  si__MonsterNoMoveArray_F = this
end

--Generated method caller for MonsterMultiplePatrolsArray.create
function sc__MonsterMultiplePatrolsArray_create()
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_create)
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrolsArray.get
function sc__MonsterMultiplePatrolsArray_get(this, arrayId)
  f__arg_this = this
  f__arg_integer1 = arrayId
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_get)
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrolsArray.getLastInstanceId
function sc__MonsterMultiplePatrolsArray_getLastInstanceId(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_getLastInstanceId)
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrolsArray.new
function sc__MonsterMultiplePatrolsArray_new(this, mt, mode, createUnit)
  f__arg_this = this
  f__arg_integer1 = mt
  f__arg_string1 = mode
  f__arg_boolean1 = createUnit
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_new)
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrolsArray.count
function sc__MonsterMultiplePatrolsArray_count(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_count)
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrolsArray.onDestroy
function sc__MonsterMultiplePatrolsArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_onDestroy)
end

--Generated method caller for MonsterMultiplePatrolsArray.setMonsterNull
function sc__MonsterMultiplePatrolsArray_setMonsterNull(this, monsterArrayId)
  f__arg_this = this
  f__arg_integer1 = monsterArrayId
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_setMonsterNull)
end

--Generated method caller for MonsterMultiplePatrolsArray.getMonsterNear
function sc__MonsterMultiplePatrolsArray_getMonsterNear(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_getMonsterNear)
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrolsArray.createMonsters
function sc__MonsterMultiplePatrolsArray_createMonsters(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_createMonsters)
end

--Generated method caller for MonsterMultiplePatrolsArray.removeMonsters
function sc__MonsterMultiplePatrolsArray_removeMonsters(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_removeMonsters)
end

--Generated method caller for MonsterMultiplePatrolsArray.recreateMonstersOfType
function sc__MonsterMultiplePatrolsArray_recreateMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_recreateMonstersOfType)
end

--Generated method caller for MonsterMultiplePatrolsArray.removeMonstersOfType
function sc__MonsterMultiplePatrolsArray_removeMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_removeMonstersOfType)
end

--Generated allocator of MonsterMultiplePatrolsArray
function s__MonsterMultiplePatrolsArray__allocate()
  local this = si__MonsterMultiplePatrolsArray_F
  if (this ~= 0) then
    if (this < 8191) then
      si__MonsterMultiplePatrolsArray_F = si__MonsterMultiplePatrolsArray_V[this]
    elseif (this < 16382) then
      si__MonsterMultiplePatrolsArray_F = si__MonsterMultiplePatrolsArray_2V[this - 8191]
    elseif (this < 24573) then
      si__MonsterMultiplePatrolsArray_F = si__MonsterMultiplePatrolsArray_3V[this - 16382]
    else
      si__MonsterMultiplePatrolsArray_F = si__MonsterMultiplePatrolsArray_4V[this - 24573]
    end
  else
    si__MonsterMultiplePatrolsArray_I = si__MonsterMultiplePatrolsArray_I + 1
    this = si__MonsterMultiplePatrolsArray_I
  end
  if (this > 49) then
    return 0
  end
  if (this < 8191) then
    s__MonsterMultiplePatrolsArray_monsters[this] = (this - 1) * 500
  elseif (this < 16382) then
    s__MonsterMultiplePatrolsArray_2monsters[this - 8191] = (this - 1) * 500
  elseif (this < 24573) then
    s__MonsterMultiplePatrolsArray_3monsters[this - 16382] = (this - 1) * 500
  else
    s__MonsterMultiplePatrolsArray_4monsters[this - 24573] = (this - 1) * 500
  end
  if (this < 8191) then
    si__MonsterMultiplePatrolsArray_V[this] = -1
  elseif (this < 16382) then
    si__MonsterMultiplePatrolsArray_2V[this - 8191] = -1
  elseif (this < 24573) then
    si__MonsterMultiplePatrolsArray_3V[this - 16382] = -1
  else
    si__MonsterMultiplePatrolsArray_4V[this - 24573] = -1
  end
  return this
end

--Generated destructor of MonsterMultiplePatrolsArray
function sc__MonsterMultiplePatrolsArray_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__MonsterMultiplePatrolsArray_V[this]
    elseif (this < 16382) then
      used = si__MonsterMultiplePatrolsArray_2V[this - 8191]
    elseif (this < 24573) then
      used = si__MonsterMultiplePatrolsArray_3V[this - 16382]
    else
      used = si__MonsterMultiplePatrolsArray_4V[this - 24573]
    end
    if (used ~= -1) then
      return
    end
  end
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrolsArray_onDestroy)
  if (this < 8191) then
    si__MonsterMultiplePatrolsArray_V[this] = si__MonsterMultiplePatrolsArray_F
  elseif (this < 16382) then
    si__MonsterMultiplePatrolsArray_2V[this - 8191] = si__MonsterMultiplePatrolsArray_F
  elseif (this < 24573) then
    si__MonsterMultiplePatrolsArray_3V[this - 16382] = si__MonsterMultiplePatrolsArray_F
  else
    si__MonsterMultiplePatrolsArray_4V[this - 24573] = si__MonsterMultiplePatrolsArray_F
  end
  si__MonsterMultiplePatrolsArray_F = this
end

--Generated method caller for Meteor.onDestroy
function sc__Meteor_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Meteor_onDestroy)
end

--Generated allocator of Meteor
function s__Meteor__allocate()
  local this = si__Meteor_F
  if (this ~= 0) then
    si__Meteor_F = si__Meteor_V[this]
  else
    si__Meteor_I = si__Meteor_I + 1
    this = si__Meteor_I
  end
  if (this > 5000) then
    return 0
  end

  si__Meteor_V[this] = -1
  return this
end

--Generated destructor of Meteor
function sc__Meteor_deallocate(this)
  if this == nil then
    return
  elseif (si__Meteor_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__Meteor_onDestroy)
  si__Meteor_V[this] = si__Meteor_F
  si__Meteor_F = this
end

--Generated method caller for MonsterOrCasterStack.onDestroy
function sc__MonsterOrCasterStack_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterOrCasterStack_onDestroy)
end

--Generated allocator of MonsterOrCasterStack
function s__MonsterOrCasterStack__allocate()
  local this = si__MonsterOrCasterStack_F
  if (this ~= 0) then
    if (this < 8191) then
      si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_3V[this - 16382]
        else
          si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_4V[this - 24573]
        end
      elseif (this < 40955) then
        si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_5V[this - 32764]
      elseif (this < 49146) then
        si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_6V[this - 40955]
      else
        si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_7V[this - 49146]
      end
    elseif (this < 65528) then
      si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_9V[this - 65528]
      else
        si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_10V[this - 73719]
      end
    elseif (this < 90101) then
      si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_11V[this - 81910]
    elseif (this < 98292) then
      si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_12V[this - 90101]
    else
      si__MonsterOrCasterStack_F = si__MonsterOrCasterStack_13V[this - 98292]
    end
  else
    si__MonsterOrCasterStack_I = si__MonsterOrCasterStack_I + 1
    this = si__MonsterOrCasterStack_I
  end
  if (this > 100000) then
    return 0
  end

  if (this < 8191) then
    si__MonsterOrCasterStack_V[this] = -1
  elseif (this < 57337) then
    if (this < 16382) then
      si__MonsterOrCasterStack_2V[this - 8191] = -1
    elseif (this < 32764) then
      if (this < 24573) then
        si__MonsterOrCasterStack_3V[this - 16382] = -1
      else
        si__MonsterOrCasterStack_4V[this - 24573] = -1
      end
    elseif (this < 40955) then
      si__MonsterOrCasterStack_5V[this - 32764] = -1
    elseif (this < 49146) then
      si__MonsterOrCasterStack_6V[this - 40955] = -1
    else
      si__MonsterOrCasterStack_7V[this - 49146] = -1
    end
  elseif (this < 65528) then
    si__MonsterOrCasterStack_8V[this - 57337] = -1
  elseif (this < 81910) then
    if (this < 73719) then
      si__MonsterOrCasterStack_9V[this - 65528] = -1
    else
      si__MonsterOrCasterStack_10V[this - 73719] = -1
    end
  elseif (this < 90101) then
    si__MonsterOrCasterStack_11V[this - 81910] = -1
  elseif (this < 98292) then
    si__MonsterOrCasterStack_12V[this - 90101] = -1
  else
    si__MonsterOrCasterStack_13V[this - 98292] = -1
  end
  return this
end

--Generated destructor of MonsterOrCasterStack
function sc__MonsterOrCasterStack_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__MonsterOrCasterStack_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        used = si__MonsterOrCasterStack_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          used = si__MonsterOrCasterStack_3V[this - 16382]
        else
          used = si__MonsterOrCasterStack_4V[this - 24573]
        end
      elseif (this < 40955) then
        used = si__MonsterOrCasterStack_5V[this - 32764]
      elseif (this < 49146) then
        used = si__MonsterOrCasterStack_6V[this - 40955]
      else
        used = si__MonsterOrCasterStack_7V[this - 49146]
      end
    elseif (this < 65528) then
      used = si__MonsterOrCasterStack_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        used = si__MonsterOrCasterStack_9V[this - 65528]
      else
        used = si__MonsterOrCasterStack_10V[this - 73719]
      end
    elseif (this < 90101) then
      used = si__MonsterOrCasterStack_11V[this - 81910]
    elseif (this < 98292) then
      used = si__MonsterOrCasterStack_12V[this - 90101]
    else
      used = si__MonsterOrCasterStack_13V[this - 98292]
    end
    if (used ~= -1) then
      return
    end
  end
  f__arg_this = this
  TriggerEvaluate(st__MonsterOrCasterStack_onDestroy)
  if (this < 8191) then
    si__MonsterOrCasterStack_V[this] = si__MonsterOrCasterStack_F
  elseif (this < 57337) then
    if (this < 16382) then
      si__MonsterOrCasterStack_2V[this - 8191] = si__MonsterOrCasterStack_F
    elseif (this < 32764) then
      if (this < 24573) then
        si__MonsterOrCasterStack_3V[this - 16382] = si__MonsterOrCasterStack_F
      else
        si__MonsterOrCasterStack_4V[this - 24573] = si__MonsterOrCasterStack_F
      end
    elseif (this < 40955) then
      si__MonsterOrCasterStack_5V[this - 32764] = si__MonsterOrCasterStack_F
    elseif (this < 49146) then
      si__MonsterOrCasterStack_6V[this - 40955] = si__MonsterOrCasterStack_F
    else
      si__MonsterOrCasterStack_7V[this - 49146] = si__MonsterOrCasterStack_F
    end
  elseif (this < 65528) then
    si__MonsterOrCasterStack_8V[this - 57337] = si__MonsterOrCasterStack_F
  elseif (this < 81910) then
    if (this < 73719) then
      si__MonsterOrCasterStack_9V[this - 65528] = si__MonsterOrCasterStack_F
    else
      si__MonsterOrCasterStack_10V[this - 73719] = si__MonsterOrCasterStack_F
    end
  elseif (this < 90101) then
    si__MonsterOrCasterStack_11V[this - 81910] = si__MonsterOrCasterStack_F
  elseif (this < 98292) then
    si__MonsterOrCasterStack_12V[this - 90101] = si__MonsterOrCasterStack_F
  else
    si__MonsterOrCasterStack_13V[this - 98292] = si__MonsterOrCasterStack_F
  end
  si__MonsterOrCasterStack_F = this
end

--Generated method caller for ClearMobArray.create
function sc__ClearMobArray_create()
  TriggerEvaluate(st__ClearMobArray_create)
  return f__result_integer
end

--Generated method caller for ClearMobArray.onDestroy
function sc__ClearMobArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__ClearMobArray_onDestroy)
end

--Generated method caller for ClearMobArray.setClearMobNull
function sc__ClearMobArray_setClearMobNull(this, clearMobArrayId)
  s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + clearMobArrayId] = 0
end

--Generated method caller for ClearMobArray.initializeClearMobs
function sc__ClearMobArray_initializeClearMobs(this)
  f__arg_this = this
  TriggerEvaluate(st__ClearMobArray_initializeClearMobs)
end

--Generated allocator of ClearMobArray
function s__ClearMobArray__allocate()
  local this = si__ClearMobArray_F
  if (this ~= 0) then
    si__ClearMobArray_F = si__ClearMobArray_V[this]
  else
    si__ClearMobArray_I = si__ClearMobArray_I + 1
    this = si__ClearMobArray_I
  end
  if (this > 49) then
    return 0
  end
  s__ClearMobArray_clearMobs[this] = (this - 1) * 160
  si__ClearMobArray_V[this] = -1
  return this
end

--Generated destructor of ClearMobArray
function sc__ClearMobArray_deallocate(this)
  if this == nil then
    return
  elseif (si__ClearMobArray_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__ClearMobArray_onDestroy)
  si__ClearMobArray_V[this] = si__ClearMobArray_F
  si__ClearMobArray_F = this
end

--Generated method caller for Caster.isEnabled
function sc__Caster_isEnabled(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_isEnabled)
  return f__result_boolean
end

--Generated method caller for Caster.getId
function sc__Caster_getId(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getId)
  return f__result_integer
end

--Generated method caller for Caster.getX
function sc__Caster_getX(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getX)
  return f__result_real
end

--Generated method caller for Caster.getY
function sc__Caster_getY(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getY)
  return f__result_real
end

--Generated method caller for Caster.getRange
function sc__Caster_getRange(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getRange)
  return f__result_real
end

--Generated method caller for Caster.getProjectileSpeed
function sc__Caster_getProjectileSpeed(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getProjectileSpeed)
  return f__result_real
end

--Generated method caller for Caster.getCasterUnit
function sc__Caster_getCasterUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getCasterUnit)
  return f__result_unit
end

--Generated method caller for Caster.getProjectileMonsterType
function sc__Caster_getProjectileMonsterType(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getProjectileMonsterType)
  return f__result_integer
end

--Generated method caller for Caster.getLoadTime
function sc__Caster_getLoadTime(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getLoadTime)
  return f__result_real
end

--Generated method caller for Caster.getCasterType
function sc__Caster_getCasterType(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getCasterType)
  return f__result_integer
end

--Generated method caller for Caster.getAnimation
function sc__Caster_getAnimation(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_getAnimation)
  return f__result_string
end

--Generated method caller for Caster.enable
function sc__Caster_enable(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_enable)
end

--Generated method caller for Caster.disable
function sc__Caster_disable(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_disable)
end

--Generated method caller for Caster.killUnit
function sc__Caster_killUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_killUnit)
end

--Generated method caller for Caster.onDestroy
function sc__Caster_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_onDestroy)
end

--Generated method caller for Caster.escaperOutOfRangeOrDead
function sc__Caster_escaperOutOfRangeOrDead(this, escaper)
  f__arg_this = this
  f__arg_integer1 = escaper
  TriggerEvaluate(st__Caster_escaperOutOfRangeOrDead)
end

--Generated method caller for Caster.temporarilyDisable
function sc__Caster_temporarilyDisable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Caster_temporarilyDisable)
end

--Generated method caller for Caster.temporarilyEnable
function sc__Caster_temporarilyEnable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Caster_temporarilyEnable)
end

--Generated method caller for Caster.setBaseColor
function sc__Caster_setBaseColor(this, colorString)
  f__arg_this = this
  f__arg_string1 = colorString
  TriggerEvaluate(st__Caster_setBaseColor)
end

--Generated method caller for Caster.setVertexColor
function sc__Caster_setVertexColor(this, vcRed, vcGreen, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcRed
  f__arg_real2 = vcGreen
  f__arg_real3 = vcBlue
  TriggerEvaluate(st__Caster_setVertexColor)
end

--Generated method caller for Caster.reinitColor
function sc__Caster_reinitColor(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_reinitColor)
end

--Generated method caller for Caster.toString
function sc__Caster_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__Caster_toString)
  return f__result_string
end

--Generated allocator of Caster
function s__Caster__allocate()
  local this = si__Caster_F
  if (this ~= 0) then
    if (this < 8191) then
      si__Caster_F = si__Caster_V[this]
    elseif (this < 155629) then
      if (this < 16382) then
        si__Caster_F = si__Caster_2V[this - 8191]
      elseif (this < 81910) then
        if (this < 24573) then
          si__Caster_F = si__Caster_3V[this - 16382]
        elseif (this < 49146) then
          if (this < 32764) then
            si__Caster_F = si__Caster_4V[this - 24573]
          elseif (this < 40955) then
            si__Caster_F = si__Caster_5V[this - 32764]
          else
            si__Caster_F = si__Caster_6V[this - 40955]
          end
        elseif (this < 57337) then
          si__Caster_F = si__Caster_7V[this - 49146]
        elseif (this < 65528) then
          si__Caster_F = si__Caster_8V[this - 57337]
        elseif (this < 73719) then
          si__Caster_F = si__Caster_9V[this - 65528]
        else
          si__Caster_F = si__Caster_10V[this - 73719]
        end
      elseif (this < 90101) then
        si__Caster_F = si__Caster_11V[this - 81910]
      elseif (this < 122865) then
        if (this < 98292) then
          si__Caster_F = si__Caster_12V[this - 90101]
        elseif (this < 106483) then
          si__Caster_F = si__Caster_13V[this - 98292]
        elseif (this < 114674) then
          si__Caster_F = si__Caster_14V[this - 106483]
        else
          si__Caster_F = si__Caster_15V[this - 114674]
        end
      elseif (this < 131056) then
        si__Caster_F = si__Caster_16V[this - 122865]
      elseif (this < 139247) then
        si__Caster_F = si__Caster_17V[this - 131056]
      elseif (this < 147438) then
        si__Caster_F = si__Caster_18V[this - 139247]
      else
        si__Caster_F = si__Caster_19V[this - 147438]
      end
    elseif (this < 163820) then
      si__Caster_F = si__Caster_20V[this - 155629]
    elseif (this < 229348) then
      if (this < 172011) then
        si__Caster_F = si__Caster_21V[this - 163820]
      elseif (this < 196584) then
        if (this < 180202) then
          si__Caster_F = si__Caster_22V[this - 172011]
        elseif (this < 188393) then
          si__Caster_F = si__Caster_23V[this - 180202]
        else
          si__Caster_F = si__Caster_24V[this - 188393]
        end
      elseif (this < 204775) then
        si__Caster_F = si__Caster_25V[this - 196584]
      elseif (this < 212966) then
        si__Caster_F = si__Caster_26V[this - 204775]
      elseif (this < 221157) then
        si__Caster_F = si__Caster_27V[this - 212966]
      else
        si__Caster_F = si__Caster_28V[this - 221157]
      end
    elseif (this < 237539) then
      si__Caster_F = si__Caster_29V[this - 229348]
    elseif (this < 270303) then
      if (this < 245730) then
        si__Caster_F = si__Caster_30V[this - 237539]
      elseif (this < 253921) then
        si__Caster_F = si__Caster_31V[this - 245730]
      elseif (this < 262112) then
        si__Caster_F = si__Caster_32V[this - 253921]
      else
        si__Caster_F = si__Caster_33V[this - 262112]
      end
    elseif (this < 278494) then
      si__Caster_F = si__Caster_34V[this - 270303]
    elseif (this < 286685) then
      si__Caster_F = si__Caster_35V[this - 278494]
    elseif (this < 294876) then
      si__Caster_F = si__Caster_36V[this - 286685]
    else
      si__Caster_F = si__Caster_37V[this - 294876]
    end
  else
    si__Caster_I = si__Caster_I + 1
    this = si__Caster_I
  end
  if (this > 24999) then
    return 0
  end
  if (this < 8191) then
    s__Caster_escapersInRange[this] = (this - 1) * 12
  elseif (this < 155629) then
    if (this < 16382) then
      s__Caster_2escapersInRange[this - 8191] = (this - 1) * 12
    elseif (this < 81910) then
      if (this < 24573) then
        s__Caster_3escapersInRange[this - 16382] = (this - 1) * 12
      elseif (this < 49146) then
        if (this < 32764) then
          s__Caster_4escapersInRange[this - 24573] = (this - 1) * 12
        elseif (this < 40955) then
          s__Caster_5escapersInRange[this - 32764] = (this - 1) * 12
        else
          s__Caster_6escapersInRange[this - 40955] = (this - 1) * 12
        end
      elseif (this < 57337) then
        s__Caster_7escapersInRange[this - 49146] = (this - 1) * 12
      elseif (this < 65528) then
        s__Caster_8escapersInRange[this - 57337] = (this - 1) * 12
      elseif (this < 73719) then
        s__Caster_9escapersInRange[this - 65528] = (this - 1) * 12
      else
        s__Caster_10escapersInRange[this - 73719] = (this - 1) * 12
      end
    elseif (this < 90101) then
      s__Caster_11escapersInRange[this - 81910] = (this - 1) * 12
    elseif (this < 122865) then
      if (this < 98292) then
        s__Caster_12escapersInRange[this - 90101] = (this - 1) * 12
      elseif (this < 106483) then
        s__Caster_13escapersInRange[this - 98292] = (this - 1) * 12
      elseif (this < 114674) then
        s__Caster_14escapersInRange[this - 106483] = (this - 1) * 12
      else
        s__Caster_15escapersInRange[this - 114674] = (this - 1) * 12
      end
    elseif (this < 131056) then
      s__Caster_16escapersInRange[this - 122865] = (this - 1) * 12
    elseif (this < 139247) then
      s__Caster_17escapersInRange[this - 131056] = (this - 1) * 12
    elseif (this < 147438) then
      s__Caster_18escapersInRange[this - 139247] = (this - 1) * 12
    else
      s__Caster_19escapersInRange[this - 147438] = (this - 1) * 12
    end
  elseif (this < 163820) then
    s__Caster_20escapersInRange[this - 155629] = (this - 1) * 12
  elseif (this < 229348) then
    if (this < 172011) then
      s__Caster_21escapersInRange[this - 163820] = (this - 1) * 12
    elseif (this < 196584) then
      if (this < 180202) then
        s__Caster_22escapersInRange[this - 172011] = (this - 1) * 12
      elseif (this < 188393) then
        s__Caster_23escapersInRange[this - 180202] = (this - 1) * 12
      else
        s__Caster_24escapersInRange[this - 188393] = (this - 1) * 12
      end
    elseif (this < 204775) then
      s__Caster_25escapersInRange[this - 196584] = (this - 1) * 12
    elseif (this < 212966) then
      s__Caster_26escapersInRange[this - 204775] = (this - 1) * 12
    elseif (this < 221157) then
      s__Caster_27escapersInRange[this - 212966] = (this - 1) * 12
    else
      s__Caster_28escapersInRange[this - 221157] = (this - 1) * 12
    end
  elseif (this < 237539) then
    s__Caster_29escapersInRange[this - 229348] = (this - 1) * 12
  elseif (this < 270303) then
    if (this < 245730) then
      s__Caster_30escapersInRange[this - 237539] = (this - 1) * 12
    elseif (this < 253921) then
      s__Caster_31escapersInRange[this - 245730] = (this - 1) * 12
    elseif (this < 262112) then
      s__Caster_32escapersInRange[this - 253921] = (this - 1) * 12
    else
      s__Caster_33escapersInRange[this - 262112] = (this - 1) * 12
    end
  elseif (this < 278494) then
    s__Caster_34escapersInRange[this - 270303] = (this - 1) * 12
  elseif (this < 286685) then
    s__Caster_35escapersInRange[this - 278494] = (this - 1) * 12
  elseif (this < 294876) then
    s__Caster_36escapersInRange[this - 286685] = (this - 1) * 12
  else
    s__Caster_37escapersInRange[this - 294876] = (this - 1) * 12
  end
  if (this < 8191) then
    si__Caster_V[this] = -1
  elseif (this < 155629) then
    if (this < 16382) then
      si__Caster_2V[this - 8191] = -1
    elseif (this < 81910) then
      if (this < 24573) then
        si__Caster_3V[this - 16382] = -1
      elseif (this < 49146) then
        if (this < 32764) then
          si__Caster_4V[this - 24573] = -1
        elseif (this < 40955) then
          si__Caster_5V[this - 32764] = -1
        else
          si__Caster_6V[this - 40955] = -1
        end
      elseif (this < 57337) then
        si__Caster_7V[this - 49146] = -1
      elseif (this < 65528) then
        si__Caster_8V[this - 57337] = -1
      elseif (this < 73719) then
        si__Caster_9V[this - 65528] = -1
      else
        si__Caster_10V[this - 73719] = -1
      end
    elseif (this < 90101) then
      si__Caster_11V[this - 81910] = -1
    elseif (this < 122865) then
      if (this < 98292) then
        si__Caster_12V[this - 90101] = -1
      elseif (this < 106483) then
        si__Caster_13V[this - 98292] = -1
      elseif (this < 114674) then
        si__Caster_14V[this - 106483] = -1
      else
        si__Caster_15V[this - 114674] = -1
      end
    elseif (this < 131056) then
      si__Caster_16V[this - 122865] = -1
    elseif (this < 139247) then
      si__Caster_17V[this - 131056] = -1
    elseif (this < 147438) then
      si__Caster_18V[this - 139247] = -1
    else
      si__Caster_19V[this - 147438] = -1
    end
  elseif (this < 163820) then
    si__Caster_20V[this - 155629] = -1
  elseif (this < 229348) then
    if (this < 172011) then
      si__Caster_21V[this - 163820] = -1
    elseif (this < 196584) then
      if (this < 180202) then
        si__Caster_22V[this - 172011] = -1
      elseif (this < 188393) then
        si__Caster_23V[this - 180202] = -1
      else
        si__Caster_24V[this - 188393] = -1
      end
    elseif (this < 204775) then
      si__Caster_25V[this - 196584] = -1
    elseif (this < 212966) then
      si__Caster_26V[this - 204775] = -1
    elseif (this < 221157) then
      si__Caster_27V[this - 212966] = -1
    else
      si__Caster_28V[this - 221157] = -1
    end
  elseif (this < 237539) then
    si__Caster_29V[this - 229348] = -1
  elseif (this < 270303) then
    if (this < 245730) then
      si__Caster_30V[this - 237539] = -1
    elseif (this < 253921) then
      si__Caster_31V[this - 245730] = -1
    elseif (this < 262112) then
      si__Caster_32V[this - 253921] = -1
    else
      si__Caster_33V[this - 262112] = -1
    end
  elseif (this < 278494) then
    si__Caster_34V[this - 270303] = -1
  elseif (this < 286685) then
    si__Caster_35V[this - 278494] = -1
  elseif (this < 294876) then
    si__Caster_36V[this - 286685] = -1
  else
    si__Caster_37V[this - 294876] = -1
  end
  return this
end

--Generated destructor of Caster
function sc__Caster_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__Caster_V[this]
    elseif (this < 155629) then
      if (this < 16382) then
        used = si__Caster_2V[this - 8191]
      elseif (this < 81910) then
        if (this < 24573) then
          used = si__Caster_3V[this - 16382]
        elseif (this < 49146) then
          if (this < 32764) then
            used = si__Caster_4V[this - 24573]
          elseif (this < 40955) then
            used = si__Caster_5V[this - 32764]
          else
            used = si__Caster_6V[this - 40955]
          end
        elseif (this < 57337) then
          used = si__Caster_7V[this - 49146]
        elseif (this < 65528) then
          used = si__Caster_8V[this - 57337]
        elseif (this < 73719) then
          used = si__Caster_9V[this - 65528]
        else
          used = si__Caster_10V[this - 73719]
        end
      elseif (this < 90101) then
        used = si__Caster_11V[this - 81910]
      elseif (this < 122865) then
        if (this < 98292) then
          used = si__Caster_12V[this - 90101]
        elseif (this < 106483) then
          used = si__Caster_13V[this - 98292]
        elseif (this < 114674) then
          used = si__Caster_14V[this - 106483]
        else
          used = si__Caster_15V[this - 114674]
        end
      elseif (this < 131056) then
        used = si__Caster_16V[this - 122865]
      elseif (this < 139247) then
        used = si__Caster_17V[this - 131056]
      elseif (this < 147438) then
        used = si__Caster_18V[this - 139247]
      else
        used = si__Caster_19V[this - 147438]
      end
    elseif (this < 163820) then
      used = si__Caster_20V[this - 155629]
    elseif (this < 229348) then
      if (this < 172011) then
        used = si__Caster_21V[this - 163820]
      elseif (this < 196584) then
        if (this < 180202) then
          used = si__Caster_22V[this - 172011]
        elseif (this < 188393) then
          used = si__Caster_23V[this - 180202]
        else
          used = si__Caster_24V[this - 188393]
        end
      elseif (this < 204775) then
        used = si__Caster_25V[this - 196584]
      elseif (this < 212966) then
        used = si__Caster_26V[this - 204775]
      elseif (this < 221157) then
        used = si__Caster_27V[this - 212966]
      else
        used = si__Caster_28V[this - 221157]
      end
    elseif (this < 237539) then
      used = si__Caster_29V[this - 229348]
    elseif (this < 270303) then
      if (this < 245730) then
        used = si__Caster_30V[this - 237539]
      elseif (this < 253921) then
        used = si__Caster_31V[this - 245730]
      elseif (this < 262112) then
        used = si__Caster_32V[this - 253921]
      else
        used = si__Caster_33V[this - 262112]
      end
    elseif (this < 278494) then
      used = si__Caster_34V[this - 270303]
    elseif (this < 286685) then
      used = si__Caster_35V[this - 278494]
    elseif (this < 294876) then
      used = si__Caster_36V[this - 286685]
    else
      used = si__Caster_37V[this - 294876]
    end
    if (used ~= -1) then
      return
    end
  end
  f__arg_this = this
  TriggerEvaluate(st__Caster_onDestroy)
  if (this < 8191) then
    si__Caster_V[this] = si__Caster_F
  elseif (this < 155629) then
    if (this < 16382) then
      si__Caster_2V[this - 8191] = si__Caster_F
    elseif (this < 81910) then
      if (this < 24573) then
        si__Caster_3V[this - 16382] = si__Caster_F
      elseif (this < 49146) then
        if (this < 32764) then
          si__Caster_4V[this - 24573] = si__Caster_F
        elseif (this < 40955) then
          si__Caster_5V[this - 32764] = si__Caster_F
        else
          si__Caster_6V[this - 40955] = si__Caster_F
        end
      elseif (this < 57337) then
        si__Caster_7V[this - 49146] = si__Caster_F
      elseif (this < 65528) then
        si__Caster_8V[this - 57337] = si__Caster_F
      elseif (this < 73719) then
        si__Caster_9V[this - 65528] = si__Caster_F
      else
        si__Caster_10V[this - 73719] = si__Caster_F
      end
    elseif (this < 90101) then
      si__Caster_11V[this - 81910] = si__Caster_F
    elseif (this < 122865) then
      if (this < 98292) then
        si__Caster_12V[this - 90101] = si__Caster_F
      elseif (this < 106483) then
        si__Caster_13V[this - 98292] = si__Caster_F
      elseif (this < 114674) then
        si__Caster_14V[this - 106483] = si__Caster_F
      else
        si__Caster_15V[this - 114674] = si__Caster_F
      end
    elseif (this < 131056) then
      si__Caster_16V[this - 122865] = si__Caster_F
    elseif (this < 139247) then
      si__Caster_17V[this - 131056] = si__Caster_F
    elseif (this < 147438) then
      si__Caster_18V[this - 139247] = si__Caster_F
    else
      si__Caster_19V[this - 147438] = si__Caster_F
    end
  elseif (this < 163820) then
    si__Caster_20V[this - 155629] = si__Caster_F
  elseif (this < 229348) then
    if (this < 172011) then
      si__Caster_21V[this - 163820] = si__Caster_F
    elseif (this < 196584) then
      if (this < 180202) then
        si__Caster_22V[this - 172011] = si__Caster_F
      elseif (this < 188393) then
        si__Caster_23V[this - 180202] = si__Caster_F
      else
        si__Caster_24V[this - 188393] = si__Caster_F
      end
    elseif (this < 204775) then
      si__Caster_25V[this - 196584] = si__Caster_F
    elseif (this < 212966) then
      si__Caster_26V[this - 204775] = si__Caster_F
    elseif (this < 221157) then
      si__Caster_27V[this - 212966] = si__Caster_F
    else
      si__Caster_28V[this - 221157] = si__Caster_F
    end
  elseif (this < 237539) then
    si__Caster_29V[this - 229348] = si__Caster_F
  elseif (this < 270303) then
    if (this < 245730) then
      si__Caster_30V[this - 237539] = si__Caster_F
    elseif (this < 253921) then
      si__Caster_31V[this - 245730] = si__Caster_F
    elseif (this < 262112) then
      si__Caster_32V[this - 253921] = si__Caster_F
    else
      si__Caster_33V[this - 262112] = si__Caster_F
    end
  elseif (this < 278494) then
    si__Caster_34V[this - 270303] = si__Caster_F
  elseif (this < 286685) then
    si__Caster_35V[this - 278494] = si__Caster_F
  elseif (this < 294876) then
    si__Caster_36V[this - 286685] = si__Caster_F
  else
    si__Caster_37V[this - 294876] = si__Caster_F
  end
  si__Caster_F = this
end

--Generated method caller for Stack.onDestroy
function sc__Stack_onDestroy(this)
  local n = nil
  -- Remove all remaining indexes from the stack.
  while true do
    -- Get the top index.
    n = s__Stack_top[this]
    if n == 0 then
      break
    end
    -- Remove it from the stack.
    s__Stack_top[this] = s__Stack_next[n]
    -- Add it to the list of free indexes.
    s__Stack_next[n] = s__Stack_free
    s__Stack_free = n
  end
end

--Generated allocator of Stack
function s__Stack__allocate()
  local this = si__Stack_F
  if (this ~= 0) then
    si__Stack_F = si__Stack_V[this]
  else
    si__Stack_I = si__Stack_I + 1
    this = si__Stack_I
  end
  if (this > 8190) then
    return 0
  end

  s__Stack_size[this] = 0
  s__Stack_top[this] = 0
  si__Stack_V[this] = -1
  return this
end

--Generated destructor of Stack
function sc__Stack_deallocate(this)
  if this == nil then
    return
  elseif (si__Stack_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__Stack_onDestroy)
  si__Stack_V[this] = si__Stack_F
  si__Stack_F = this
end

--Generated allocator of StringSegments
function s__StringSegments__allocate()
  local this = si__StringSegments_F
  if (this ~= 0) then
    si__StringSegments_F = si__StringSegments_V[this]
  else
    si__StringSegments_I = si__StringSegments_I + 1
    this = si__StringSegments_I
  end
  if (this > 8190) then
    return 0
  end

  si__StringSegments_V[this] = -1
  return this
end

--Generated destructor of StringSegments
function s__StringSegments_deallocate(this)
  if this == nil then
    return
  elseif (si__StringSegments_V[this] ~= -1) then
    return
  end
  si__StringSegments_V[this] = si__StringSegments_F
  si__StringSegments_F = this
end

--Generated method caller for MonsterOrCaster.create
function sc__MonsterOrCaster_create(mobId)
  f__arg_integer1 = mobId
  TriggerEvaluate(st__MonsterOrCaster_create)
  return f__result_integer
end

--Generated method caller for MonsterOrCaster.getId
function sc__MonsterOrCaster_getId(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterOrCaster_getId)
  return f__result_integer
end

--Generated method caller for MonsterOrCaster.killUnit
function sc__MonsterOrCaster_killUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterOrCaster_killUnit)
end

--Generated method caller for MonsterOrCaster.temporarilyDisable
function sc__MonsterOrCaster_temporarilyDisable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__MonsterOrCaster_temporarilyDisable)
end

--Generated method caller for MonsterOrCaster.temporarilyEnable
function sc__MonsterOrCaster_temporarilyEnable(this, enablingTimer)
  f__arg_this = this
  f__arg_timer1 = enablingTimer
  TriggerEvaluate(st__MonsterOrCaster_temporarilyEnable)
end

--Generated method caller for MonsterOrCaster.setBaseColor
function sc__MonsterOrCaster_setBaseColor(this, colorString)
  f__arg_this = this
  f__arg_string1 = colorString
  TriggerEvaluate(st__MonsterOrCaster_setBaseColor)
end

--Generated method caller for MonsterOrCaster.setVertexColor
function sc__MonsterOrCaster_setVertexColor(this, vcRed, vcGreen, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcRed
  f__arg_real2 = vcGreen
  f__arg_real3 = vcBlue
  TriggerEvaluate(st__MonsterOrCaster_setVertexColor)
end

--Generated method caller for MonsterOrCaster.reinitColor
function sc__MonsterOrCaster_reinitColor(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterOrCaster_reinitColor)
end

--Generated method caller for MonsterOrCaster.getUnit
function sc__MonsterOrCaster_getUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterOrCaster_getUnit)
  return f__result_unit
end

--Generated method caller for MonsterOrCaster.copy
function sc__MonsterOrCaster_copy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterOrCaster_copy)
  return f__result_integer
end

--Generated method caller for MonsterOrCaster.getMonsterType
function sc__MonsterOrCaster_getMonsterType(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterOrCaster_getMonsterType)
  return f__result_integer
end

--Generated allocator of MonsterOrCaster
function s__MonsterOrCaster__allocate()
  local this = si__MonsterOrCaster_F
  if (this ~= 0) then
    if (this < 8191) then
      si__MonsterOrCaster_F = si__MonsterOrCaster_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        si__MonsterOrCaster_F = si__MonsterOrCaster_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          si__MonsterOrCaster_F = si__MonsterOrCaster_3V[this - 16382]
        else
          si__MonsterOrCaster_F = si__MonsterOrCaster_4V[this - 24573]
        end
      elseif (this < 40955) then
        si__MonsterOrCaster_F = si__MonsterOrCaster_5V[this - 32764]
      elseif (this < 49146) then
        si__MonsterOrCaster_F = si__MonsterOrCaster_6V[this - 40955]
      else
        si__MonsterOrCaster_F = si__MonsterOrCaster_7V[this - 49146]
      end
    elseif (this < 65528) then
      si__MonsterOrCaster_F = si__MonsterOrCaster_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        si__MonsterOrCaster_F = si__MonsterOrCaster_9V[this - 65528]
      else
        si__MonsterOrCaster_F = si__MonsterOrCaster_10V[this - 73719]
      end
    elseif (this < 90101) then
      si__MonsterOrCaster_F = si__MonsterOrCaster_11V[this - 81910]
    elseif (this < 98292) then
      si__MonsterOrCaster_F = si__MonsterOrCaster_12V[this - 90101]
    else
      si__MonsterOrCaster_F = si__MonsterOrCaster_13V[this - 98292]
    end
  else
    si__MonsterOrCaster_I = si__MonsterOrCaster_I + 1
    this = si__MonsterOrCaster_I
  end
  if (this > 100000) then
    return 0
  end

  if (this < 8191) then
    si__MonsterOrCaster_V[this] = -1
  elseif (this < 57337) then
    if (this < 16382) then
      si__MonsterOrCaster_2V[this - 8191] = -1
    elseif (this < 32764) then
      if (this < 24573) then
        si__MonsterOrCaster_3V[this - 16382] = -1
      else
        si__MonsterOrCaster_4V[this - 24573] = -1
      end
    elseif (this < 40955) then
      si__MonsterOrCaster_5V[this - 32764] = -1
    elseif (this < 49146) then
      si__MonsterOrCaster_6V[this - 40955] = -1
    else
      si__MonsterOrCaster_7V[this - 49146] = -1
    end
  elseif (this < 65528) then
    si__MonsterOrCaster_8V[this - 57337] = -1
  elseif (this < 81910) then
    if (this < 73719) then
      si__MonsterOrCaster_9V[this - 65528] = -1
    else
      si__MonsterOrCaster_10V[this - 73719] = -1
    end
  elseif (this < 90101) then
    si__MonsterOrCaster_11V[this - 81910] = -1
  elseif (this < 98292) then
    si__MonsterOrCaster_12V[this - 90101] = -1
  else
    si__MonsterOrCaster_13V[this - 98292] = -1
  end
  return this
end

--Generated destructor of MonsterOrCaster
function s__MonsterOrCaster_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__MonsterOrCaster_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        used = si__MonsterOrCaster_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          used = si__MonsterOrCaster_3V[this - 16382]
        else
          used = si__MonsterOrCaster_4V[this - 24573]
        end
      elseif (this < 40955) then
        used = si__MonsterOrCaster_5V[this - 32764]
      elseif (this < 49146) then
        used = si__MonsterOrCaster_6V[this - 40955]
      else
        used = si__MonsterOrCaster_7V[this - 49146]
      end
    elseif (this < 65528) then
      used = si__MonsterOrCaster_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        used = si__MonsterOrCaster_9V[this - 65528]
      else
        used = si__MonsterOrCaster_10V[this - 73719]
      end
    elseif (this < 90101) then
      used = si__MonsterOrCaster_11V[this - 81910]
    elseif (this < 98292) then
      used = si__MonsterOrCaster_12V[this - 90101]
    else
      used = si__MonsterOrCaster_13V[this - 98292]
    end
    if (used ~= -1) then
      return
    end
  end
  if (this < 8191) then
    si__MonsterOrCaster_V[this] = si__MonsterOrCaster_F
  elseif (this < 57337) then
    if (this < 16382) then
      si__MonsterOrCaster_2V[this - 8191] = si__MonsterOrCaster_F
    elseif (this < 32764) then
      if (this < 24573) then
        si__MonsterOrCaster_3V[this - 16382] = si__MonsterOrCaster_F
      else
        si__MonsterOrCaster_4V[this - 24573] = si__MonsterOrCaster_F
      end
    elseif (this < 40955) then
      si__MonsterOrCaster_5V[this - 32764] = si__MonsterOrCaster_F
    elseif (this < 49146) then
      si__MonsterOrCaster_6V[this - 40955] = si__MonsterOrCaster_F
    else
      si__MonsterOrCaster_7V[this - 49146] = si__MonsterOrCaster_F
    end
  elseif (this < 65528) then
    si__MonsterOrCaster_8V[this - 57337] = si__MonsterOrCaster_F
  elseif (this < 81910) then
    if (this < 73719) then
      si__MonsterOrCaster_9V[this - 65528] = si__MonsterOrCaster_F
    else
      si__MonsterOrCaster_10V[this - 73719] = si__MonsterOrCaster_F
    end
  elseif (this < 90101) then
    si__MonsterOrCaster_11V[this - 81910] = si__MonsterOrCaster_F
  elseif (this < 98292) then
    si__MonsterOrCaster_12V[this - 90101] = si__MonsterOrCaster_F
  else
    si__MonsterOrCaster_13V[this - 98292] = si__MonsterOrCaster_F
  end
  si__MonsterOrCaster_F = this
end

--Generated method caller for Trigger.onDestroy
function sc__Trigger_onDestroy(this)
  DestroyTrigger(s__Trigger_t[this])
  s__Trigger_t[this] = nil
end

--Generated allocator of Trigger
function s__Trigger__allocate()
  local this = si__Trigger_F
  if (this ~= 0) then
    si__Trigger_F = si__Trigger_V[this]
  else
    si__Trigger_I = si__Trigger_I + 1
    this = si__Trigger_I
  end
  if (this > 8190) then
    return 0
  end

  si__Trigger_V[this] = -1
  return this
end

--Generated destructor of Trigger
function sc__Trigger_deallocate(this)
  if this == nil then
    return
  elseif (si__Trigger_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__Trigger_onDestroy)
  si__Trigger_V[this] = si__Trigger_F
  si__Trigger_F = this
end

--Generated method caller for TriggerArray.onDestroy
function sc__TriggerArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__TriggerArray_onDestroy)
end

--Generated allocator of TriggerArray
function s__TriggerArray__allocate()
  local this = si__TriggerArray_F
  if (this ~= 0) then
    si__TriggerArray_F = si__TriggerArray_V[this]
  else
    si__TriggerArray_I = si__TriggerArray_I + 1
    this = si__TriggerArray_I
  end
  if (this > 39) then
    return 0
  end
  s__TriggerArray_triggers[this] = (this - 1) * 200
  si__TriggerArray_V[this] = -1
  return this
end

--Generated destructor of TriggerArray
function sc__TriggerArray_deallocate(this)
  if this == nil then
    return
  elseif (si__TriggerArray_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__TriggerArray_onDestroy)
  si__TriggerArray_V[this] = si__TriggerArray_F
  si__TriggerArray_F = this
end

--Generated method caller for VisibilityModifier.onDestroy
function sc__VisibilityModifier_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__VisibilityModifier_onDestroy)
end

--Generated allocator of VisibilityModifier
function s__VisibilityModifier__allocate()
  local this = si__VisibilityModifier_F
  if (this ~= 0) then
    si__VisibilityModifier_F = si__VisibilityModifier_V[this]
  else
    si__VisibilityModifier_I = si__VisibilityModifier_I + 1
    this = si__VisibilityModifier_I
  end
  if (this > 5000) then
    return 0
  end

  si__VisibilityModifier_V[this] = -1
  return this
end

--Generated destructor of VisibilityModifier
function sc__VisibilityModifier_deallocate(this)
  if this == nil then
    return
  elseif (si__VisibilityModifier_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__VisibilityModifier_onDestroy)
  si__VisibilityModifier_V[this] = si__VisibilityModifier_F
  si__VisibilityModifier_F = this
end

--Generated method caller for CasterType.onDestroy
function sc__CasterType_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__CasterType_onDestroy)
end

--Generated allocator of CasterType
function s__CasterType__allocate()
  local this = si__CasterType_F
  if (this ~= 0) then
    si__CasterType_F = si__CasterType_V[this]
  else
    si__CasterType_I = si__CasterType_I + 1
    this = si__CasterType_I
  end
  if (this > 8190) then
    return 0
  end

  si__CasterType_V[this] = -1
  return this
end

--Generated destructor of CasterType
function sc__CasterType_deallocate(this)
  if this == nil then
    return
  elseif (si__CasterType_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__CasterType_onDestroy)
  si__CasterType_V[this] = si__CasterType_F
  si__CasterType_F = this
end

--Generated method caller for MakeCasterAction.onDestroy
function sc__MakeCasterAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[11])
end

--Generated method caller for MakeCasterAction.cancel
function sc__MakeCasterAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[11])
  return f__result_boolean
end

--Generated method caller for MakeCasterAction.redo
function sc__MakeCasterAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[11])
  return f__result_boolean
end

--Generated allocator of MakeCasterAction
function s__MakeCasterAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 11
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeDeleteCastersAction.onDestroy
function sc__MakeDeleteCastersAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[12])
end

--Generated method caller for MakeDeleteCastersAction.cancel
function sc__MakeDeleteCastersAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[12])
  return f__result_boolean
end

--Generated method caller for MakeDeleteCastersAction.redo
function sc__MakeDeleteCastersAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[12])
  return f__result_boolean
end

--Generated allocator of MakeDeleteCastersAction
function s__MakeDeleteCastersAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 12
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeDeleteMeteorsAction.onDestroy
function sc__MakeDeleteMeteorsAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[13])
end

--Generated method caller for MakeDeleteMeteorsAction.cancel
function sc__MakeDeleteMeteorsAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[13])
  return f__result_boolean
end

--Generated method caller for MakeDeleteMeteorsAction.redo
function sc__MakeDeleteMeteorsAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[13])
  return f__result_boolean
end

--Generated allocator of MakeDeleteMeteorsAction
function s__MakeDeleteMeteorsAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 13
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeDeleteMonstersAction.onDestroy
function sc__MakeDeleteMonstersAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[14])
end

--Generated method caller for MakeDeleteMonstersAction.cancel
function sc__MakeDeleteMonstersAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[14])
  return f__result_boolean
end

--Generated method caller for MakeDeleteMonstersAction.redo
function sc__MakeDeleteMonstersAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[14])
  return f__result_boolean
end

--Generated allocator of MakeDeleteMonstersAction
function s__MakeDeleteMonstersAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 14
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeLastActions.onDestroy
function sc__MakeLastActions_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeLastActions_onDestroy)
end

--Generated allocator of MakeLastActions
function s__MakeLastActions__allocate()
  local this = si__MakeLastActions_F
  if (this ~= 0) then
    si__MakeLastActions_F = si__MakeLastActions_V[this]
  else
    si__MakeLastActions_I = si__MakeLastActions_I + 1
    this = si__MakeLastActions_I
  end
  if (this > 272) then
    return 0
  end
  s__MakeLastActions_lastActions[this] = (this - 1) * 30
  si__MakeLastActions_V[this] = -1
  return this
end

--Generated destructor of MakeLastActions
function sc__MakeLastActions_deallocate(this)
  if this == nil then
    return
  elseif (si__MakeLastActions_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__MakeLastActions_onDestroy)
  si__MakeLastActions_V[this] = si__MakeLastActions_F
  si__MakeLastActions_F = this
end

--Generated method caller for MakeMeteorAction.getLevel
function sc__MakeMeteorAction_getLevel(this)
  return s__MakeMeteorAction_level[this]
end

--Generated method caller for MakeMeteorAction.onDestroy
function sc__MakeMeteorAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[17])
end

--Generated method caller for MakeMeteorAction.cancel
function sc__MakeMeteorAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[17])
  return f__result_boolean
end

--Generated method caller for MakeMeteorAction.redo
function sc__MakeMeteorAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[17])
  return f__result_boolean
end

--Generated allocator of MakeMeteorAction
function s__MakeMeteorAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 17
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeMonsterAction.getLevel
function sc__MakeMonsterAction_getLevel(this)
  return s__MakeMonsterAction_level[this]
end

--Generated method caller for MakeMonsterAction.onDestroy
function sc__MakeMonsterAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[18])
end

--Generated method caller for MakeMonsterAction.cancel
function sc__MakeMonsterAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[18])
  return f__result_boolean
end

--Generated method caller for MakeMonsterAction.redo
function sc__MakeMonsterAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[18])
  return f__result_boolean
end

--Generated allocator of MakeMonsterAction
function s__MakeMonsterAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 18
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainHeightAction.apply
function sc__MakeTerrainHeightAction_apply(this)
  s__MakeTerrainHeightAction_terrainDeform[this] = TerrainDeformCrater(s__MakeTerrainHeightAction_x[this], s__MakeTerrainHeightAction_y[this], s__MakeTerrainHeightAction_radius[this], -s__MakeTerrainHeightAction_height[this], 0, true)
end

--Generated method caller for MakeTerrainHeightAction.cancel
function sc__MakeTerrainHeightAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[19])
  return f__result_boolean
end

--Generated method caller for MakeTerrainHeightAction.redo
function sc__MakeTerrainHeightAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[19])
  return f__result_boolean
end

--Generated allocator of MakeTerrainHeightAction
function s__MakeTerrainHeightAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 19
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeVisibilityModifierAction.getLevel
function sc__MakeVisibilityModifierAction_getLevel(this)
  return s__MakeVisibilityModifierAction_level[this]
end

--Generated method caller for MakeVisibilityModifierAction.onDestroy
function sc__MakeVisibilityModifierAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[20])
end

--Generated method caller for MakeVisibilityModifierAction.cancel
function sc__MakeVisibilityModifierAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[20])
  return f__result_boolean
end

--Generated method caller for MakeVisibilityModifierAction.redo
function sc__MakeVisibilityModifierAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[20])
  return f__result_boolean
end

--Generated allocator of MakeVisibilityModifierAction
function s__MakeVisibilityModifierAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 20
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MeteorArray.setMeteorNull
function sc__MeteorArray_setMeteorNull(this, arrayId)
  s___MeteorArray_meteors[s__MeteorArray_meteors[this] + arrayId] = 0
end

--Generated method caller for MeteorArray.onDestroy
function sc__MeteorArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MeteorArray_onDestroy)
end

--Generated allocator of MeteorArray
function s__MeteorArray__allocate()
  local this = si__MeteorArray_F
  if (this ~= 0) then
    si__MeteorArray_F = si__MeteorArray_V[this]
  else
    si__MeteorArray_I = si__MeteorArray_I + 1
    this = si__MeteorArray_I
  end
  if (this > 49) then
    return 0
  end
  s__MeteorArray_meteors[this] = (this - 1) * 100
  si__MeteorArray_V[this] = -1
  return this
end

--Generated destructor of MeteorArray
function sc__MeteorArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MeteorArray_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__MeteorArray_onDestroy)
  si__MeteorArray_V[this] = si__MeteorArray_F
  si__MeteorArray_F = this
end

--Generated method caller for MonsterType.onDestroy
function sc__MonsterType_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterType_onDestroy)
end

--Generated allocator of MonsterType
function s__MonsterType__allocate()
  local this = si__MonsterType_F
  if (this ~= 0) then
    si__MonsterType_F = si__MonsterType_V[this]
  else
    si__MonsterType_I = si__MonsterType_I + 1
    this = si__MonsterType_I
  end
  if (this > 8190) then
    return 0
  end

  si__MonsterType_V[this] = -1
  return this
end

--Generated destructor of MonsterType
function sc__MonsterType_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterType_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__MonsterType_onDestroy)
  si__MonsterType_V[this] = si__MonsterType_F
  si__MonsterType_F = this
end

--Generated allocator of SoundUtils___soundhelper
function s__SoundUtils___soundhelper__allocate()
  local this = si__SoundUtils___soundhelper_F
  if (this ~= 0) then
    si__SoundUtils___soundhelper_F = si__SoundUtils___soundhelper_V[this]
  else
    si__SoundUtils___soundhelper_I = si__SoundUtils___soundhelper_I + 1
    this = si__SoundUtils___soundhelper_I
  end
  if (this > 8190) then
    return 0
  end

  s__SoundUtils___soundhelper_fileName[this] = ""
  s__SoundUtils___soundhelper_duration[this] = 0
  s__SoundUtils___soundhelper_looping[this] = false
  s__SoundUtils___soundhelper_is3D[this] = false
  s__SoundUtils___soundhelper_stopwhenoutofrange[this] = false
  s__SoundUtils___soundhelper_fadeInRate[this] = 0
  s__SoundUtils___soundhelper_fadeOutRate[this] = 0
  s__SoundUtils___soundhelper_eaxSetting[this] = ""
  si__SoundUtils___soundhelper_V[this] = -1
  return this
end

--Generated destructor of SoundUtils___soundhelper
function s__SoundUtils___soundhelper_deallocate(this)
  if this == nil then
    return
  elseif (si__SoundUtils___soundhelper_V[this] ~= -1) then
    return
  end
  si__SoundUtils___soundhelper_V[this] = si__SoundUtils___soundhelper_F
  si__SoundUtils___soundhelper_F = this
end

--Generated method caller for SoundUtils___soundrecycler.onDestroy
function sc__SoundUtils___soundrecycler_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__SoundUtils___soundrecycler_onDestroy)
end

--Generated allocator of SoundUtils___soundrecycler
function s__SoundUtils___soundrecycler__allocate()
  local this = si__SoundUtils___soundrecycler_F
  if (this ~= 0) then
    si__SoundUtils___soundrecycler_F = si__SoundUtils___soundrecycler_V[this]
  else
    si__SoundUtils___soundrecycler_I = si__SoundUtils___soundrecycler_I + 1
    this = si__SoundUtils___soundrecycler_I
  end
  if (this > 8190) then
    return 0
  end

  s__SoundUtils___soundrecycler_t[this] = nil
  s__SoundUtils___soundrecycler_s[this] = nil
  s__SoundUtils___soundrecycler_sh[this] = 0
  s__SoundUtils___soundrecycler_stopped[this] = false
  si__SoundUtils___soundrecycler_V[this] = -1
  return this
end

--Generated destructor of SoundUtils___soundrecycler
function sc__SoundUtils___soundrecycler_deallocate(this)
  if this == nil then
    return
  elseif (si__SoundUtils___soundrecycler_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__SoundUtils___soundrecycler_onDestroy)
  si__SoundUtils___soundrecycler_V[this] = si__SoundUtils___soundrecycler_F
  si__SoundUtils___soundrecycler_F = this
end

--Generated method caller for StringArrayForCache.create
function sc__StringArrayForCache_create(category, variableName, avecSeparateur)
  f__arg_string1 = category
  f__arg_string2 = variableName
  f__arg_boolean1 = avecSeparateur
  TriggerEvaluate(st__StringArrayForCache_create)
  return f__result_integer
end

--Generated method caller for StringArrayForCache.push
function sc__StringArrayForCache_push(this, str)
  f__arg_this = this
  f__arg_string1 = str
  TriggerEvaluate(st__StringArrayForCache_push)
end

--Generated method caller for StringArrayForCache.writeInCache
function sc__StringArrayForCache_writeInCache(this)
  f__arg_this = this
  TriggerEvaluate(st__StringArrayForCache_writeInCache)
end

--Generated allocator of StringArrayForCache
function s__StringArrayForCache__allocate()
  local this = si__StringArrayForCache_F
  if (this ~= 0) then
    si__StringArrayForCache_F = si__StringArrayForCache_V[this]
  else
    si__StringArrayForCache_I = si__StringArrayForCache_I + 1
    this = si__StringArrayForCache_I
  end
  if (this > 0) then
    return 0
  end
  s__StringArrayForCache_stringArray[this] = (this - 1) * 8000
  si__StringArrayForCache_V[this] = -1
  return this
end

--Generated destructor of StringArrayForCache
function s__StringArrayForCache_deallocate(this)
  if this == nil then
    return
  elseif (si__StringArrayForCache_V[this] ~= -1) then
    return
  end
  si__StringArrayForCache_V[this] = si__StringArrayForCache_F
  si__StringArrayForCache_F = this
end

--Generated method caller for VisibilityModifierArray.onDestroy
function sc__VisibilityModifierArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__VisibilityModifierArray_onDestroy)
end

--Generated method caller for VisibilityModifierArray.count
function sc__VisibilityModifierArray_count(this)
  f__arg_this = this
  TriggerEvaluate(st__VisibilityModifierArray_count)
  return f__result_integer
end

--Generated method caller for VisibilityModifierArray.get
function sc__VisibilityModifierArray_get(this, visibilityId)
  f__arg_this = this
  f__arg_integer1 = visibilityId
  TriggerEvaluate(st__VisibilityModifierArray_get)
  return f__result_integer
end

--Generated method caller for VisibilityModifierArray.getLastInstanceId
function sc__VisibilityModifierArray_getLastInstanceId(this)
  return s__VisibilityModifierArray_lastInstance[this]
end

--Generated method caller for VisibilityModifierArray.setNull
function sc__VisibilityModifierArray_setNull(this, arrayId)
  f__arg_this = this
  f__arg_integer1 = arrayId
  TriggerEvaluate(st__VisibilityModifierArray_setNull)
end

--Generated allocator of VisibilityModifierArray
function s__VisibilityModifierArray__allocate()
  local this = si__VisibilityModifierArray_F
  if (this ~= 0) then
    si__VisibilityModifierArray_F = si__VisibilityModifierArray_V[this]
  else
    si__VisibilityModifierArray_I = si__VisibilityModifierArray_I + 1
    this = si__VisibilityModifierArray_I
  end
  if (this > 49) then
    return 0
  end
  s__VisibilityModifierArray_vms[this] = (this - 1) * 100
  si__VisibilityModifierArray_V[this] = -1
  return this
end

--Generated destructor of VisibilityModifierArray
function sc__VisibilityModifierArray_deallocate(this)
  if this == nil then
    return
  elseif (si__VisibilityModifierArray_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__VisibilityModifierArray_onDestroy)
  si__VisibilityModifierArray_V[this] = si__VisibilityModifierArray_F
  si__VisibilityModifierArray_F = this
end

--Generated allocator of CasterTypeArray
function s__CasterTypeArray__allocate()
  local this = si__CasterTypeArray_F
  if (this ~= 0) then
    si__CasterTypeArray_F = si__CasterTypeArray_V[this]
  else
    si__CasterTypeArray_I = si__CasterTypeArray_I + 1
    this = si__CasterTypeArray_I
  end
  if (this > 80) then
    return 0
  end
  s__CasterTypeArray_casterTypes[this] = (this - 1) * 100
  si__CasterTypeArray_V[this] = -1
  return this
end

--Generated destructor of CasterTypeArray
function s__CasterTypeArray_deallocate(this)
  if this == nil then
    return
  elseif (si__CasterTypeArray_V[this] ~= -1) then
    return
  end
  si__CasterTypeArray_V[this] = si__CasterTypeArray_F
  si__CasterTypeArray_F = this
end

--Generated method caller for LevelArray.goToLevel
function sc__LevelArray_goToLevel(this, finisher, levelId)
  f__arg_this = this
  f__arg_integer1 = finisher
  f__arg_integer2 = levelId
  TriggerEvaluate(st__LevelArray_goToLevel)
  return f__result_boolean
end

--Generated method caller for LevelArray.goToNextLevel
function sc__LevelArray_goToNextLevel(this, finisher)
  f__arg_this = this
  f__arg_integer1 = finisher
  TriggerEvaluate(st__LevelArray_goToNextLevel)
  return f__result_boolean
end

--Generated method caller for LevelArray.restartTheGame
function sc__LevelArray_restartTheGame(this)
  f__arg_this = this
  TriggerEvaluate(st__LevelArray_restartTheGame)
end

--Generated method caller for LevelArray.new
function sc__LevelArray_new(this)
  f__arg_this = this
  TriggerEvaluate(st__LevelArray_new)
  return f__result_boolean
end

--Generated method caller for LevelArray.destroyLastLevel
function sc__LevelArray_destroyLastLevel(this)
  f__arg_this = this
  TriggerEvaluate(st__LevelArray_destroyLastLevel)
  return f__result_boolean
end

--Generated method caller for LevelArray.count
function sc__LevelArray_count(this)
  return s__LevelArray_lastInstance[this] + 1
end

--Generated method caller for LevelArray.getCurrentLevel
function sc__LevelArray_getCurrentLevel(this)
  return s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]]
end

--Generated method caller for LevelArray.get
function sc__LevelArray_get(this, levelId)
  f__arg_this = this
  f__arg_integer1 = levelId
  TriggerEvaluate(st__LevelArray_get)
  return f__result_integer
end

--Generated method caller for LevelArray.getLevelFromMonsterSpawnArray
function sc__LevelArray_getLevelFromMonsterSpawnArray(this, msa)
  f__arg_this = this
  f__arg_integer1 = msa
  TriggerEvaluate(st__LevelArray_getLevelFromMonsterSpawnArray)
  return f__result_integer
end

--Generated method caller for LevelArray.getLevelFromMeteorArray
function sc__LevelArray_getLevelFromMeteorArray(this, ma)
  f__arg_this = this
  f__arg_integer1 = ma
  TriggerEvaluate(st__LevelArray_getLevelFromMeteorArray)
  return f__result_integer
end

--Generated method caller for LevelArray.getLevelFromVisibilityModifierArray
function sc__LevelArray_getLevelFromVisibilityModifierArray(this, vma)
  f__arg_this = this
  f__arg_integer1 = vma
  TriggerEvaluate(st__LevelArray_getLevelFromVisibilityModifierArray)
  return f__result_integer
end

--Generated method caller for LevelArray.removeMonstersOfType
function sc__LevelArray_removeMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__LevelArray_removeMonstersOfType)
end

--Generated method caller for LevelArray.removeCastersOfType
function sc__LevelArray_removeCastersOfType(this, ct)
  f__arg_this = this
  f__arg_integer1 = ct
  TriggerEvaluate(st__LevelArray_removeCastersOfType)
end

--Generated method caller for LevelArray.getLastLevelId
function sc__LevelArray_getLastLevelId(this)
  return s__LevelArray_lastInstance[this]
end

--Generated method caller for LevelArray.getNbMonsters
function sc__LevelArray_getNbMonsters(this, mode)
  f__arg_this = this
  f__arg_string1 = mode
  TriggerEvaluate(st__LevelArray_getNbMonsters)
  return f__result_integer
end

--Generated allocator of LevelArray
function s__LevelArray__allocate()
  local this = si__LevelArray_F
  if (this ~= 0) then
    si__LevelArray_F = si__LevelArray_V[this]
  else
    si__LevelArray_I = si__LevelArray_I + 1
    this = si__LevelArray_I
  end
  if (this > 162) then
    return 0
  end
  s__LevelArray_levels[this] = (this - 1) * 50
  si__LevelArray_V[this] = -1
  return this
end

--Generated destructor of LevelArray
function s__LevelArray_deallocate(this)
  if this == nil then
    return
  elseif (si__LevelArray_V[this] ~= -1) then
    return
  end
  si__LevelArray_V[this] = si__LevelArray_F
  si__LevelArray_F = this
end

--Generated method caller for ClearMob.getTriggerMob
function sc__ClearMob_getTriggerMob(this)
  return s__ClearMob_triggerMob[this]
end

--Generated method caller for ClearMob.getBlockMobs
function sc__ClearMob_getBlockMobs(this)
  return s__ClearMob_blockMobs[this]
end

--Generated method caller for ClearMob.initialize
function sc__ClearMob_initialize(this)
  f__arg_this = this
  TriggerEvaluate(st__ClearMob_initialize)
end

--Generated method caller for ClearMob.onDestroy
function sc__ClearMob_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__ClearMob_onDestroy)
end

--Generated method caller for ClearMob.isBeingActivated
function sc__ClearMob_isBeingActivated(this)
  return TimerGetRemaining(s__ClearMob_timerActivated[this]) > 0
end

--Generated allocator of ClearMob
function s__ClearMob__allocate()
  local this = si__ClearMob_F
  if (this ~= 0) then
    si__ClearMob_F = si__ClearMob_V[this]
  else
    si__ClearMob_I = si__ClearMob_I + 1
    this = si__ClearMob_I
  end
  if (this > 8000) then
    return 0
  end

  si__ClearMob_V[this] = -1
  return this
end

--Generated destructor of ClearMob
function sc__ClearMob_deallocate(this)
  if this == nil then
    return
  elseif (si__ClearMob_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__ClearMob_onDestroy)
  si__ClearMob_V[this] = si__ClearMob_F
  si__ClearMob_F = this
end

--Generated method caller for TerrainTypeArray.get
function sc__TerrainTypeArray_get(this, label)
  f__arg_this = this
  f__arg_string1 = label
  TriggerEvaluate(st__TerrainTypeArray_get)
  return f__result_integer
end

--Generated method caller for TerrainTypeArray.getTerrainType
function sc__TerrainTypeArray_getTerrainType(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__TerrainTypeArray_getTerrainType)
  return f__result_integer
end

--Generated method caller for TerrainTypeArray.isTerrainTypeIdAlreadyUsed
function sc__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(this, terrainTypeId)
  f__arg_this = this
  f__arg_integer1 = terrainTypeId
  TriggerEvaluate(st__TerrainTypeArray_isTerrainTypeIdAlreadyUsed)
  return f__result_boolean
end

--Generated method caller for TerrainTypeArray.isLabelAlreadyUsed
function sc__TerrainTypeArray_isLabelAlreadyUsed(this, label)
  f__arg_this = this
  f__arg_string1 = label
  TriggerEvaluate(st__TerrainTypeArray_isLabelAlreadyUsed)
  return f__result_boolean
end

--Generated method caller for TerrainTypeArray.newWalk
function sc__TerrainTypeArray_newWalk(this, label, terrainTypeId, walkspeed)
  f__arg_this = this
  f__arg_string1 = label
  f__arg_integer1 = terrainTypeId
  f__arg_real1 = walkspeed
  TriggerEvaluate(st__TerrainTypeArray_newWalk)
  return f__result_integer
end

--Generated method caller for TerrainTypeArray.newDeath
function sc__TerrainTypeArray_newDeath(this, label, terrainTypeId, killingEffectStr, timeToKill, toleranceDist)
  f__arg_this = this
  f__arg_string1 = label
  f__arg_integer1 = terrainTypeId
  f__arg_string2 = killingEffectStr
  f__arg_real1 = timeToKill
  f__arg_real2 = toleranceDist
  TriggerEvaluate(st__TerrainTypeArray_newDeath)
  return f__result_integer
end

--Generated method caller for TerrainTypeArray.newSlide
function sc__TerrainTypeArray_newSlide(this, label, terrainTypeId, slideSpeed, canTurn)
  f__arg_this = this
  f__arg_string1 = label
  f__arg_integer1 = terrainTypeId
  f__arg_real1 = slideSpeed
  f__arg_boolean1 = canTurn
  TriggerEvaluate(st__TerrainTypeArray_newSlide)
  return f__result_integer
end

--Generated method caller for TerrainTypeArray.getWalk
function sc__TerrainTypeArray_getWalk(this, id)
  return s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + id]
end

--Generated method caller for TerrainTypeArray.getDeath
function sc__TerrainTypeArray_getDeath(this, id)
  return s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + id]
end

--Generated method caller for TerrainTypeArray.getSlide
function sc__TerrainTypeArray_getSlide(this, id)
  return s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + id]
end

--Generated method caller for TerrainTypeArray.displayForPlayer
function sc__TerrainTypeArray_displayForPlayer(this, p)
  f__arg_this = this
  f__arg_player1 = p
  TriggerEvaluate(st__TerrainTypeArray_displayForPlayer)
end

--Generated method caller for TerrainTypeArray.saveInCache
function sc__TerrainTypeArray_saveInCache(this)
  f__arg_this = this
  TriggerEvaluate(st__TerrainTypeArray_saveInCache)
end

--Generated method caller for TerrainTypeArray.count
function sc__TerrainTypeArray_count(this)
  return s__TerrainTypeArray_numberOfWalk[this] + s__TerrainTypeArray_numberOfSlide[this] + s__TerrainTypeArray_numberOfDeath[this]
end

--Generated method caller for TerrainTypeArray.getMainTileset
function sc__TerrainTypeArray_getMainTileset(this)
  return s__TerrainTypeArray_mainTileset[this]
end

--Generated allocator of TerrainTypeArray
function s__TerrainTypeArray__allocate()
  local this = si__TerrainTypeArray_F
  if (this ~= 0) then
    si__TerrainTypeArray_F = si__TerrainTypeArray_V[this]
  else
    si__TerrainTypeArray_I = si__TerrainTypeArray_I + 1
    this = si__TerrainTypeArray_I
  end
  if (this > 45) then
    return 0
  end
  s__TerrainTypeArray_ttWalk[this] = (this - 1) * 177
  s__TerrainTypeArray_ttDeath[this] = (this - 1) * 177
  s__TerrainTypeArray_ttSlide[this] = (this - 1) * 177
  si__TerrainTypeArray_V[this] = -1
  return this
end

--Generated destructor of TerrainTypeArray
function s__TerrainTypeArray_deallocate(this)
  if this == nil then
    return
  elseif (si__TerrainTypeArray_V[this] ~= -1) then
    return
  end
  si__TerrainTypeArray_V[this] = si__TerrainTypeArray_F
  si__TerrainTypeArray_F = this
end

--Generated method caller for Monster.getId
function sc__Monster_getId(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_getId[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_getId[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_getId[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_getId[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_getId[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_getId[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_getId[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_getId[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_getId[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_getId[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_getId[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_getId[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_getId[si__Monster_13type[this - 98292]])
  end
  return f__result_integer
end

--Generated method executor for Monster.getId
function sx__Monster_getId(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerExecute(st__Monster_getId[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_getId[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_getId[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_getId[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_getId[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_getId[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_getId[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_getId[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_getId[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_getId[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_getId[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_getId[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_getId[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.createUnit
function sc__Monster_createUnit(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_createUnit[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_createUnit[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_createUnit[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_createUnit[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_createUnit[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_createUnit[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_createUnit[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_createUnit[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_createUnit[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_createUnit[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_createUnit[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_createUnit[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_createUnit[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.createUnit
function sx__Monster_createUnit(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerExecute(st__Monster_createUnit[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_createUnit[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_createUnit[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_createUnit[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_createUnit[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_createUnit[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_createUnit[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_createUnit[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_createUnit[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_createUnit[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_createUnit[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_createUnit[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_createUnit[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.removeUnit
function sc__Monster_removeUnit(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_removeUnit[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_removeUnit[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_removeUnit[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_removeUnit[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_removeUnit[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_removeUnit[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_removeUnit[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_removeUnit[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_removeUnit[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_removeUnit[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_removeUnit[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_removeUnit[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_removeUnit[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.removeUnit
function sx__Monster_removeUnit(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerExecute(st__Monster_removeUnit[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_removeUnit[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_removeUnit[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_removeUnit[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_removeUnit[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_removeUnit[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_removeUnit[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_removeUnit[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_removeUnit[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_removeUnit[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_removeUnit[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_removeUnit[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_removeUnit[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.killUnit
function sc__Monster_killUnit(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_killUnit[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_killUnit[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_killUnit[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_killUnit[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_killUnit[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_killUnit[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_killUnit[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_killUnit[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_killUnit[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_killUnit[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_killUnit[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_killUnit[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_killUnit[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.killUnit
function sx__Monster_killUnit(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerExecute(st__Monster_killUnit[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_killUnit[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_killUnit[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_killUnit[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_killUnit[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_killUnit[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_killUnit[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_killUnit[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_killUnit[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_killUnit[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_killUnit[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_killUnit[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_killUnit[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.getMonsterType
function sc__Monster_getMonsterType(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_getMonsterType[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_getMonsterType[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_getMonsterType[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_getMonsterType[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_getMonsterType[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_getMonsterType[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_getMonsterType[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_getMonsterType[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_getMonsterType[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_getMonsterType[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_getMonsterType[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_getMonsterType[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_getMonsterType[si__Monster_13type[this - 98292]])
  end
  return f__result_integer
end

--Generated method executor for Monster.getMonsterType
function sx__Monster_getMonsterType(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerExecute(st__Monster_getMonsterType[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_getMonsterType[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_getMonsterType[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_getMonsterType[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_getMonsterType[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_getMonsterType[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_getMonsterType[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_getMonsterType[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_getMonsterType[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_getMonsterType[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_getMonsterType[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_getMonsterType[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_getMonsterType[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.setMonsterType
function sc__Monster_setMonsterType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  if (this < 8191) then
    TriggerEvaluate(st__Monster_setMonsterType[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_setMonsterType[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_setMonsterType[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_setMonsterType[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_setMonsterType[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_setMonsterType[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_setMonsterType[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_setMonsterType[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_setMonsterType[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_setMonsterType[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_setMonsterType[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_setMonsterType[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_setMonsterType[si__Monster_13type[this - 98292]])
  end
  return f__result_boolean
end

--Generated method executor for Monster.setMonsterType
function sx__Monster_setMonsterType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  if (this < 8191) then
    TriggerExecute(st__Monster_setMonsterType[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_setMonsterType[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_setMonsterType[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_setMonsterType[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_setMonsterType[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_setMonsterType[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_setMonsterType[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_setMonsterType[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_setMonsterType[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_setMonsterType[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_setMonsterType[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_setMonsterType[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_setMonsterType[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.toString
function sc__Monster_toString(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_toString[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_toString[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_toString[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_toString[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_toString[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_toString[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_toString[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_toString[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_toString[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_toString[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_toString[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_toString[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_toString[si__Monster_13type[this - 98292]])
  end
  return f__result_string
end

--Generated method executor for Monster.toString
function sx__Monster_toString(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerExecute(st__Monster_toString[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_toString[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_toString[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_toString[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_toString[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_toString[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_toString[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_toString[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_toString[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_toString[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_toString[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_toString[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_toString[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.getLife
function sc__Monster_getLife(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_getLife[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_getLife[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_getLife[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_getLife[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_getLife[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_getLife[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_getLife[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_getLife[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_getLife[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_getLife[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_getLife[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_getLife[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_getLife[si__Monster_13type[this - 98292]])
  end
  return f__result_integer
end

--Generated method executor for Monster.getLife
function sx__Monster_getLife(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerExecute(st__Monster_getLife[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_getLife[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_getLife[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_getLife[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_getLife[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_getLife[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_getLife[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_getLife[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_getLife[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_getLife[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_getLife[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_getLife[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_getLife[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.setLife
function sc__Monster_setLife(this, life)
  f__arg_this = this
  f__arg_integer1 = life
  if (this < 8191) then
    TriggerEvaluate(st__Monster_setLife[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_setLife[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_setLife[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_setLife[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_setLife[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_setLife[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_setLife[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_setLife[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_setLife[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_setLife[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_setLife[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_setLife[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_setLife[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.setLife
function sx__Monster_setLife(this, life)
  f__arg_this = this
  f__arg_integer1 = life
  if (this < 8191) then
    TriggerExecute(st__Monster_setLife[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_setLife[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_setLife[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_setLife[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_setLife[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_setLife[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_setLife[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_setLife[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_setLife[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_setLife[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_setLife[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_setLife[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_setLife[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.temporarilyDisable
function sc__Monster_temporarilyDisable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  if (this < 8191) then
    TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_temporarilyDisable[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.temporarilyDisable
function sx__Monster_temporarilyDisable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  if (this < 8191) then
    TriggerExecute(st__Monster_temporarilyDisable[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_temporarilyDisable[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_temporarilyDisable[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_temporarilyDisable[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_temporarilyDisable[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_temporarilyDisable[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_temporarilyDisable[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_temporarilyDisable[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_temporarilyDisable[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_temporarilyDisable[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_temporarilyDisable[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_temporarilyDisable[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_temporarilyDisable[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.temporarilyEnable
function sc__Monster_temporarilyEnable(this, enablingTimer)
  f__arg_this = this
  f__arg_timer1 = enablingTimer
  if (this < 8191) then
    TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_temporarilyEnable[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.temporarilyEnable
function sx__Monster_temporarilyEnable(this, enablingTimer)
  f__arg_this = this
  f__arg_timer1 = enablingTimer
  if (this < 8191) then
    TriggerExecute(st__Monster_temporarilyEnable[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_temporarilyEnable[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_temporarilyEnable[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_temporarilyEnable[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_temporarilyEnable[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_temporarilyEnable[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_temporarilyEnable[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_temporarilyEnable[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_temporarilyEnable[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_temporarilyEnable[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_temporarilyEnable[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_temporarilyEnable[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_temporarilyEnable[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.setBaseColor
function sc__Monster_setBaseColor(this, colorString)
  f__arg_this = this
  f__arg_string1 = colorString
  if (this < 8191) then
    TriggerEvaluate(st__Monster_setBaseColor[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_setBaseColor[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_setBaseColor[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_setBaseColor[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_setBaseColor[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_setBaseColor[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_setBaseColor[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_setBaseColor[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_setBaseColor[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_setBaseColor[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_setBaseColor[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_setBaseColor[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_setBaseColor[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.setBaseColor
function sx__Monster_setBaseColor(this, colorString)
  f__arg_this = this
  f__arg_string1 = colorString
  if (this < 8191) then
    TriggerExecute(st__Monster_setBaseColor[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_setBaseColor[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_setBaseColor[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_setBaseColor[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_setBaseColor[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_setBaseColor[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_setBaseColor[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_setBaseColor[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_setBaseColor[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_setBaseColor[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_setBaseColor[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_setBaseColor[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_setBaseColor[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.setVertexColor
function sc__Monster_setVertexColor(this, vcRed, vcGreen, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcRed
  f__arg_real2 = vcGreen
  f__arg_real3 = vcBlue
  if (this < 8191) then
    TriggerEvaluate(st__Monster_setVertexColor[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_setVertexColor[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_setVertexColor[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_setVertexColor[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_setVertexColor[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_setVertexColor[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_setVertexColor[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_setVertexColor[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_setVertexColor[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_setVertexColor[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_setVertexColor[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_setVertexColor[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_setVertexColor[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.setVertexColor
function sx__Monster_setVertexColor(this, vcRed, vcGreen, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcRed
  f__arg_real2 = vcGreen
  f__arg_real3 = vcBlue
  if (this < 8191) then
    TriggerExecute(st__Monster_setVertexColor[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_setVertexColor[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_setVertexColor[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_setVertexColor[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_setVertexColor[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_setVertexColor[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_setVertexColor[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_setVertexColor[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_setVertexColor[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_setVertexColor[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_setVertexColor[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_setVertexColor[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_setVertexColor[si__Monster_13type[this - 98292]])
  end
end

--Generated method caller for Monster.reinitColor
function sc__Monster_reinitColor(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_reinitColor[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_reinitColor[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_reinitColor[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_reinitColor[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_reinitColor[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_reinitColor[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_reinitColor[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_reinitColor[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_reinitColor[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_reinitColor[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_reinitColor[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_reinitColor[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_reinitColor[si__Monster_13type[this - 98292]])
  end
end

--Generated method executor for Monster.reinitColor
function sx__Monster_reinitColor(this)
  f__arg_this = this
  if (this < 8191) then
    TriggerExecute(st__Monster_reinitColor[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerExecute(st__Monster_reinitColor[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerExecute(st__Monster_reinitColor[si__Monster_3type[this - 16382]])
      else
        TriggerExecute(st__Monster_reinitColor[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerExecute(st__Monster_reinitColor[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerExecute(st__Monster_reinitColor[si__Monster_6type[this - 40955]])
    else
      TriggerExecute(st__Monster_reinitColor[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerExecute(st__Monster_reinitColor[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerExecute(st__Monster_reinitColor[si__Monster_9type[this - 65528]])
    else
      TriggerExecute(st__Monster_reinitColor[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerExecute(st__Monster_reinitColor[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerExecute(st__Monster_reinitColor[si__Monster_12type[this - 90101]])
  else
    TriggerExecute(st__Monster_reinitColor[si__Monster_13type[this - 98292]])
  end
end
--Generated destructor of Monster
function sc__Monster_deallocate(this)
  local used = nil
  if this == nil then
    return
  else
    if (this < 8191) then
      used = si__Monster_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        used = si__Monster_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          used = si__Monster_3V[this - 16382]
        else
          used = si__Monster_4V[this - 24573]
        end
      elseif (this < 40955) then
        used = si__Monster_5V[this - 32764]
      elseif (this < 49146) then
        used = si__Monster_6V[this - 40955]
      else
        used = si__Monster_7V[this - 49146]
      end
    elseif (this < 65528) then
      used = si__Monster_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        used = si__Monster_9V[this - 65528]
      else
        used = si__Monster_10V[this - 73719]
      end
    elseif (this < 90101) then
      used = si__Monster_11V[this - 81910]
    elseif (this < 98292) then
      used = si__Monster_12V[this - 90101]
    else
      used = si__Monster_13V[this - 98292]
    end
    if (used ~= -1) then
      return
    end
  end
  f__arg_this = this
  if (this < 8191) then
    TriggerEvaluate(st__Monster_onDestroy[si__Monster_type[this]])
  elseif (this < 57337) then
    if (this < 16382) then
      TriggerEvaluate(st__Monster_onDestroy[si__Monster_2type[this - 8191]])
    elseif (this < 32764) then
      if (this < 24573) then
        TriggerEvaluate(st__Monster_onDestroy[si__Monster_3type[this - 16382]])
      else
        TriggerEvaluate(st__Monster_onDestroy[si__Monster_4type[this - 24573]])
      end
    elseif (this < 40955) then
      TriggerEvaluate(st__Monster_onDestroy[si__Monster_5type[this - 32764]])
    elseif (this < 49146) then
      TriggerEvaluate(st__Monster_onDestroy[si__Monster_6type[this - 40955]])
    else
      TriggerEvaluate(st__Monster_onDestroy[si__Monster_7type[this - 49146]])
    end
  elseif (this < 65528) then
    TriggerEvaluate(st__Monster_onDestroy[si__Monster_8type[this - 57337]])
  elseif (this < 81910) then
    if (this < 73719) then
      TriggerEvaluate(st__Monster_onDestroy[si__Monster_9type[this - 65528]])
    else
      TriggerEvaluate(st__Monster_onDestroy[si__Monster_10type[this - 73719]])
    end
  elseif (this < 90101) then
    TriggerEvaluate(st__Monster_onDestroy[si__Monster_11type[this - 81910]])
  elseif (this < 98292) then
    TriggerEvaluate(st__Monster_onDestroy[si__Monster_12type[this - 90101]])
  else
    TriggerEvaluate(st__Monster_onDestroy[si__Monster_13type[this - 98292]])
  end
  if (this < 8191) then
    si__Monster_V[this] = si__Monster_F
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2V[this - 8191] = si__Monster_F
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3V[this - 16382] = si__Monster_F
      else
        si__Monster_4V[this - 24573] = si__Monster_F
      end
    elseif (this < 40955) then
      si__Monster_5V[this - 32764] = si__Monster_F
    elseif (this < 49146) then
      si__Monster_6V[this - 40955] = si__Monster_F
    else
      si__Monster_7V[this - 49146] = si__Monster_F
    end
  elseif (this < 65528) then
    si__Monster_8V[this - 57337] = si__Monster_F
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9V[this - 65528] = si__Monster_F
    else
      si__Monster_10V[this - 73719] = si__Monster_F
    end
  elseif (this < 90101) then
    si__Monster_11V[this - 81910] = si__Monster_F
  elseif (this < 98292) then
    si__Monster_12V[this - 90101] = si__Monster_F
  else
    si__Monster_13V[this - 98292] = si__Monster_F
  end
  si__Monster_F = this
end

--Generated method caller for Make.cancelLastAction
function sc__Make_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[si__Make_type[this]])
  return f__result_boolean
end

--Generated method executor for Make.cancelLastAction
function sx__Make_cancelLastAction(this)
  f__arg_this = this
  TriggerExecute(st__Make_cancelLastAction[si__Make_type[this]])
end

--Generated method caller for Make.redoLastAction
function sc__Make_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[si__Make_type[this]])
  return f__result_boolean
end

--Generated method executor for Make.redoLastAction
function sx__Make_redoLastAction(this)
  f__arg_this = this
  TriggerExecute(st__Make_redoLastAction[si__Make_type[this]])
end
--Generated destructor of Make
function sc__Make_deallocate(this)
  if this == nil then
    return
  elseif (si__Make_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__Make_onDestroy[si__Make_type[this]])
  si__Make_V[this] = si__Make_F
  si__Make_F = this
end

--Generated method caller for Level.activate
function sc__Level_activate(this, activ)
  f__arg_this = this
  f__arg_boolean1 = activ
  TriggerEvaluate(st__Level_activate)
end

--Generated method caller for Level.getStart
function sc__Level_getStart(this)
  return s__Level_start[this]
end

--Generated method caller for Level.getStartRandomX
function sc__Level_getStartRandomX(this)
  f__arg_this = this
  TriggerEvaluate(st__Level_getStartRandomX)
  return f__result_real
end

--Generated method caller for Level.getStartRandomY
function sc__Level_getStartRandomY(this)
  f__arg_this = this
  TriggerEvaluate(st__Level_getStartRandomY)
  return f__result_real
end

--Generated method caller for Level.newStart
function sc__Level_newStart(this, x1, y1, x2, y2)
  f__arg_this = this
  f__arg_real1 = x1
  f__arg_real2 = y1
  f__arg_real3 = x2
  f__arg_real4 = y2
  TriggerEvaluate(st__Level_newStart)
end

--Generated method caller for Level.newEnd
function sc__Level_newEnd(this, x1, y1, x2, y2)
  f__arg_this = this
  f__arg_real1 = x1
  f__arg_real2 = y1
  f__arg_real3 = x2
  f__arg_real4 = y2
  TriggerEvaluate(st__Level_newEnd)
end

--Generated method caller for Level.getEnd
function sc__Level_getEnd(this)
  return s__Level_end[this]
end

--Generated method caller for Level.getNbMonsters
function sc__Level_getNbMonsters(this, mode)
  f__arg_this = this
  f__arg_string1 = mode
  TriggerEvaluate(st__Level_getNbMonsters)
  return f__result_integer
end

--Generated method caller for Level.onDestroy
function sc__Level_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Level_onDestroy)
end

--Generated method caller for Level.recreateMonstersOfType
function sc__Level_recreateMonstersOfType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__Level_recreateMonstersOfType)
end

--Generated method caller for Level.refreshCastersOfType
function sc__Level_refreshCastersOfType(this, ct)
  f__arg_this = this
  f__arg_integer1 = ct
  TriggerEvaluate(st__Level_refreshCastersOfType)
end

--Generated method caller for Level.getId
function sc__Level_getId(this)
  f__arg_this = this
  TriggerEvaluate(st__Level_getId)
  return f__result_integer
end

--Generated method caller for Level.setNbLivesEarned
function sc__Level_setNbLivesEarned(this, nbLives)
  f__arg_this = this
  f__arg_integer1 = nbLives
  TriggerEvaluate(st__Level_setNbLivesEarned)
  return f__result_boolean
end

--Generated method caller for Level.getNbLives
function sc__Level_getNbLives(this)
  return s__Level_livesEarnedAtBeginning[this]
end

--Generated method caller for Level.newVisibilityModifier
function sc__Level_newVisibilityModifier(this, x1, y1, x2, y2)
  f__arg_this = this
  f__arg_real1 = x1
  f__arg_real2 = y1
  f__arg_real3 = x2
  f__arg_real4 = y2
  TriggerEvaluate(st__Level_newVisibilityModifier)
  return f__result_integer
end

--Generated method caller for Level.newVisibilityModifierFromExisting
function sc__Level_newVisibilityModifierFromExisting(this, vm)
  f__arg_this = this
  f__arg_integer1 = vm
  TriggerEvaluate(st__Level_newVisibilityModifierFromExisting)
  return f__result_integer
end

--Generated method caller for Level.removeVisibilities
function sc__Level_removeVisibilities(this)
  f__arg_this = this
  TriggerEvaluate(st__Level_removeVisibilities)
end

--Generated method caller for Level.activateVisibilities
function sc__Level_activateVisibilities(this, activate)
  f__arg_this = this
  f__arg_boolean1 = activate
  TriggerEvaluate(st__Level_activateVisibilities)
end

--Generated method caller for Level.setStartMessage
function sc__Level_setStartMessage(this, str)
  f__arg_this = this
  f__arg_string1 = str
  TriggerEvaluate(st__Level_setStartMessage)
end

--Generated method caller for Level.getStartMessage
function sc__Level_getStartMessage(this)
  return s__Level_startMessage[this]
end

--Generated allocator of Level
function s__Level__allocate()
  local this = si__Level_F
  if (this ~= 0) then
    si__Level_F = si__Level_V[this]
  else
    si__Level_I = si__Level_I + 1
    this = si__Level_I
  end
  if (this > 8190) then
    return 0
  end

  si__Level_V[this] = -1
  return this
end

--Generated destructor of Level
function sc__Level_deallocate(this)
  if this == nil then
    return
  elseif (si__Level_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__Level_onDestroy)
  si__Level_V[this] = si__Level_F
  si__Level_F = this
end

--Generated method caller for Lives.getLeaderboard
function sc__Lives_getLeaderboard(this)
  return s__Lives_lb[this]
end

--Generated method caller for Lives.onDestroy
function sc__Lives_onDestroy(this)
  DestroyLeaderboard(s__Lives_lb[this])
  s__Lives_lb[this] = nil
end

--Generated allocator of Lives
function s__Lives__allocate()
  local this = si__Lives_F
  if (this ~= 0) then
    si__Lives_F = si__Lives_V[this]
  else
    si__Lives_I = si__Lives_I + 1
    this = si__Lives_I
  end
  if (this > 8190) then
    return 0
  end

  si__Lives_V[this] = -1
  return this
end

--Generated destructor of Lives
function sc__Lives_deallocate(this)
  if this == nil then
    return
  elseif (si__Lives_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__Lives_onDestroy)
  si__Lives_V[this] = si__Lives_F
  si__Lives_F = this
end

--Generated method caller for RectInterface.toString
function sc__RectInterface_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__RectInterface_toString[si__RectInterface_type[this]])
  return f__result_string
end

--Generated method executor for RectInterface.toString
function sx__RectInterface_toString(this)
  f__arg_this = this
  TriggerExecute(st__RectInterface_toString[si__RectInterface_type[this]])
end
--Generated destructor of RectInterface
function sc__RectInterface_deallocate(this)
  if this == nil then
    return
  elseif (si__RectInterface_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__RectInterface_onDestroy[si__RectInterface_type[this]])
  si__RectInterface_V[this] = si__RectInterface_F
  si__RectInterface_F = this
end

--Generated method caller for EscaperArray.get
function sc__EscaperArray_get(this, id)
  return s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id]
end

--Generated method caller for EscaperArray.nullify
function sc__EscaperArray_nullify(this, id)
  s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id] = 0
end

--Generated allocator of EscaperArray
function s__EscaperArray__allocate()
  local this = si__EscaperArray_F
  if (this ~= 0) then
    si__EscaperArray_F = si__EscaperArray_V[this]
  else
    si__EscaperArray_I = si__EscaperArray_I + 1
    this = si__EscaperArray_I
  end
  if (this > 681) then
    return 0
  end
  s__EscaperArray_escapers[this] = (this - 1) * 12
  si__EscaperArray_V[this] = -1
  return this
end

--Generated destructor of EscaperArray
function s__EscaperArray_deallocate(this)
  if this == nil then
    return
  elseif (si__EscaperArray_V[this] ~= -1) then
    return
  end
  si__EscaperArray_V[this] = si__EscaperArray_F
  si__EscaperArray_F = this
end

--Generated allocator of MonsterTypeArray
function s__MonsterTypeArray__allocate()
  local this = si__MonsterTypeArray_F
  if (this ~= 0) then
    si__MonsterTypeArray_F = si__MonsterTypeArray_V[this]
  else
    si__MonsterTypeArray_I = si__MonsterTypeArray_I + 1
    this = si__MonsterTypeArray_I
  end
  if (this > 7) then
    return 0
  end
  s__MonsterTypeArray_monsterTypes[this] = (this - 1) * 1000
  si__MonsterTypeArray_V[this] = -1
  return this
end

--Generated destructor of MonsterTypeArray
function s__MonsterTypeArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterTypeArray_V[this] ~= -1) then
    return
  end
  si__MonsterTypeArray_V[this] = si__MonsterTypeArray_F
  si__MonsterTypeArray_F = this
end

--Generated method caller for Escaper.onDestroy
function sc__Escaper_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Escaper_onDestroy)
end

--Generated method caller for Escaper.enableSlide
function sc__Escaper_enableSlide(this, doEnable)
  f__arg_this = this
  f__arg_boolean1 = doEnable
  TriggerEvaluate(st__Escaper_enableSlide)
  return f__result_boolean
end

--Generated method caller for Escaper.enableCheckTerrain
function sc__Escaper_enableCheckTerrain(this, doEnable)
  f__arg_this = this
  f__arg_boolean1 = doEnable
  TriggerEvaluate(st__Escaper_enableCheckTerrain)
  return f__result_boolean
end

--Generated method caller for Escaper.isSliding
function sc__Escaper_isSliding(this)
  return IsTriggerEnabled(s__Escaper_slide[this])
end

--Generated method caller for Escaper.doesCheckTerrain
function sc__Escaper_doesCheckTerrain(this)
  return IsTriggerEnabled(s__Escaper_checkTerrain[this])
end

--Generated method caller for Escaper.moveHero
function sc__Escaper_moveHero(this, x, l__y)
  SetUnitX(s__Escaper_hero[this], x)
  SetUnitY(s__Escaper_hero[this], l__y)
end

--Generated method caller for Escaper.moveInvisUnit
function sc__Escaper_moveInvisUnit(this, x, l__y)
  SetUnitX(s__Escaper_invisUnit[this], x)
  SetUnitY(s__Escaper_invisUnit[this], l__y)
end

--Generated method caller for Escaper.getHero
function sc__Escaper_getHero(this)
  return s__Escaper_hero[this]
end

--Generated method caller for Escaper.isAlive
function sc__Escaper_isAlive(this)
  return IsUnitAliveBJ(s__Escaper_hero[this])
end

--Generated method caller for Escaper.kill
function sc__Escaper_kill(this)
  f__arg_this = this
  TriggerEvaluate(st__Escaper_kill)
  return f__result_boolean
end

--Generated method caller for Escaper.pause
function sc__Escaper_pause(this, doPause)
  f__arg_this = this
  f__arg_boolean1 = doPause
  TriggerEvaluate(st__Escaper_pause)
  return f__result_boolean
end

--Generated method caller for Escaper.reverse
function sc__Escaper_reverse(this)
  f__arg_this = this
  TriggerEvaluate(st__Escaper_reverse)
end

--Generated method caller for Escaper.setIsHeroSelectedForPlayer
function sc__Escaper_setIsHeroSelectedForPlayer(this, p, heroSelected)
  f__arg_this = this
  f__arg_player1 = p
  f__arg_boolean1 = heroSelected
  TriggerEvaluate(st__Escaper_setIsHeroSelectedForPlayer)
end

--Generated method caller for Escaper.destroyTerrainKillEffect
function sc__Escaper_destroyTerrainKillEffect(this)
  DestroyEffect(s__Escaper_terrainKillEffect[this])
  s__Escaper_terrainKillEffect[this] = nil
end

--Generated method caller for Escaper.getLastTerrainType
function sc__Escaper_getLastTerrainType(this)
  return s__Escaper_lastTerrainType[this]
end

--Generated method caller for Escaper.setLastTerrainType
function sc__Escaper_setLastTerrainType(this, terrainType)
  s__Escaper_lastTerrainType[this] = terrainType
end

--Generated method caller for Escaper.setSlideSpeed
function sc__Escaper_setSlideSpeed(this, slideSpeed)
  s__Escaper_slideSpeed[this] = slideSpeed
end

--Generated method caller for Escaper.setWalkSpeed
function sc__Escaper_setWalkSpeed(this, walkSpeed)
  s__Escaper_walkSpeed[this] = walkSpeed
  SetUnitMoveSpeed(s__Escaper_hero[this], walkSpeed)
end

--Generated method caller for Escaper.getSlideSpeed
function sc__Escaper_getSlideSpeed(this)
  return s__Escaper_slideSpeed[this]
end

--Generated method caller for Escaper.getRealSlideSpeed
function sc__Escaper_getRealSlideSpeed(this)
  return s__Escaper_slideSpeed[this] / SLIDE_PERIOD
end

--Generated method caller for Escaper.getWalkSpeed
function sc__Escaper_getWalkSpeed(this)
  return s__Escaper_walkSpeed[this]
end

--Generated method caller for Escaper.isAbsoluteSlideSpeed
function sc__Escaper_isAbsoluteSlideSpeed(this)
  return s__Escaper_slideSpeedAbsolute[this]
end

--Generated method caller for Escaper.isAbsoluteWalkSpeed
function sc__Escaper_isAbsoluteWalkSpeed(this)
  return s__Escaper_walkSpeedAbsolute[this]
end

--Generated method caller for Escaper.isGodModeOn
function sc__Escaper_isGodModeOn(this)
  return s__Escaper_godMode[this]
end

--Generated method caller for Escaper.setBaseColorDisco
function sc__Escaper_setBaseColorDisco(this, baseColorId)
  f__arg_this = this
  f__arg_integer1 = baseColorId
  TriggerEvaluate(st__Escaper_setBaseColorDisco)
  return f__result_boolean
end

--Generated method caller for Escaper.getBaseColor
function sc__Escaper_getBaseColor(this)
  return s__Escaper_baseColorId[this]
end

--Generated method caller for Escaper.setVcRed
function sc__Escaper_setVcRed(this, vcRed)
  f__arg_this = this
  f__arg_real1 = vcRed
  TriggerEvaluate(st__Escaper_setVcRed)
  return f__result_boolean
end

--Generated method caller for Escaper.setVcGreen
function sc__Escaper_setVcGreen(this, vcGreen)
  f__arg_this = this
  f__arg_real1 = vcGreen
  TriggerEvaluate(st__Escaper_setVcGreen)
  return f__result_boolean
end

--Generated method caller for Escaper.setVcBlue
function sc__Escaper_setVcBlue(this, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcBlue
  TriggerEvaluate(st__Escaper_setVcBlue)
  return f__result_boolean
end

--Generated method caller for Escaper.setVcTransparency
function sc__Escaper_setVcTransparency(this, vcTransparency)
  f__arg_this = this
  f__arg_real1 = vcTransparency
  TriggerEvaluate(st__Escaper_setVcTransparency)
  return f__result_boolean
end

--Generated method caller for Escaper.getVcRed
function sc__Escaper_getVcRed(this)
  return s__Escaper_vcRed[this]
end

--Generated method caller for Escaper.getVcGreen
function sc__Escaper_getVcGreen(this)
  return s__Escaper_vcGreen[this]
end

--Generated method caller for Escaper.getVcBlue
function sc__Escaper_getVcBlue(this)
  return s__Escaper_vcBlue[this]
end

--Generated method caller for Escaper.getVcTransparency
function sc__Escaper_getVcTransparency(this)
  return s__Escaper_vcTransparency[this]
end

--Generated method caller for Escaper.getPlayer
function sc__Escaper_getPlayer(this)
  return s__Escaper_p[this]
end

--Generated method caller for Escaper.getMakingLevel
function sc__Escaper_getMakingLevel(this)
  f__arg_this = this
  TriggerEvaluate(st__Escaper_getMakingLevel)
  return f__result_integer
end

--Generated method caller for Escaper.destroyMake
function sc__Escaper_destroyMake(this)
  f__arg_this = this
  TriggerEvaluate(st__Escaper_destroyMake)
  return f__result_boolean
end

--Generated method caller for Escaper.destroyAllSavedActions
function sc__Escaper_destroyAllSavedActions(this)
  f__arg_this = this
  TriggerEvaluate(st__Escaper_destroyAllSavedActions)
end

--Generated method caller for Escaper.getLastZ
function sc__Escaper_getLastZ(this)
  return s__Escaper_lastZ[this]
end

--Generated method caller for Escaper.setLastZ
function sc__Escaper_setLastZ(this, lastZ)
  s__Escaper_lastZ[this] = lastZ
end

--Generated method caller for Escaper.getOldDiffZ
function sc__Escaper_getOldDiffZ(this)
  return s__Escaper_oldDiffZ[this]
end

--Generated method caller for Escaper.setOldDiffZ
function sc__Escaper_setOldDiffZ(this, oldDiffZ)
  s__Escaper_oldDiffZ[this] = oldDiffZ
end

--Generated method caller for Escaper.getSpeedZ
function sc__Escaper_getSpeedZ(this)
  return s__Escaper_speedZ[this]
end

--Generated method caller for Escaper.setSpeedZ
function sc__Escaper_setSpeedZ(this, speedZ)
  s__Escaper_speedZ[this] = speedZ
end

--Generated method caller for Escaper.setCoopInvul
function sc__Escaper_setCoopInvul(this, invul)
  s__Escaper_coopInvul[this] = invul
end

--Generated method caller for Escaper.refreshCerclePosition
function sc__Escaper_refreshCerclePosition(this)
  f__arg_this = this
  TriggerEvaluate(st__Escaper_refreshCerclePosition)
end

--Generated allocator of Escaper
function s__Escaper__allocate()
  local this = si__Escaper_F
  if (this ~= 0) then
    si__Escaper_F = si__Escaper_V[this]
  else
    si__Escaper_I = si__Escaper_I + 1
    this = si__Escaper_I
  end
  if (this > 8190) then
    return 0
  end

  si__Escaper_V[this] = -1
  return this
end

--Generated destructor of Escaper
function sc__Escaper_deallocate(this)
  if this == nil then
    return
  elseif (si__Escaper_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__Escaper_onDestroy)
  si__Escaper_V[this] = si__Escaper_F
  si__Escaper_F = this
end

--Generated method caller for KillingTimers.onDestroy
function sc__KillingTimers_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__KillingTimers_onDestroy)
end

--Generated allocator of KillingTimers
function s__KillingTimers__allocate()
  local this = si__KillingTimers_F
  if (this ~= 0) then
    si__KillingTimers_F = si__KillingTimers_V[this]
  else
    si__KillingTimers_I = si__KillingTimers_I + 1
    this = si__KillingTimers_I
  end
  if (this > 681) then
    return 0
  end
  s__KillingTimers_timers[this] = (this - 1) * 12
  si__KillingTimers_V[this] = -1
  return this
end

--Generated destructor of KillingTimers
function sc__KillingTimers_deallocate(this)
  if this == nil then
    return
  elseif (si__KillingTimers_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__KillingTimers_onDestroy)
  si__KillingTimers_V[this] = si__KillingTimers_F
  si__KillingTimers_F = this
end

--Generated method caller for MonsterSpawnArray.get
function sc__MonsterSpawnArray_get(this, arrayId)
  f__arg_this = this
  f__arg_integer1 = arrayId
  TriggerEvaluate(st__MonsterSpawnArray_get)
  return f__result_integer
end

--Generated method caller for MonsterSpawnArray.getLastInstanceId
function sc__MonsterSpawnArray_getLastInstanceId(this)
  return s__MonsterSpawnArray_lastInstance[this]
end

--Generated method caller for MonsterSpawnArray.count
function sc__MonsterSpawnArray_count(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSpawnArray_count)
  return f__result_integer
end

--Generated method caller for MonsterSpawnArray.onDestroy
function sc__MonsterSpawnArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSpawnArray_onDestroy)
end

--Generated method caller for MonsterSpawnArray.setMonsterSpawnNull
function sc__MonsterSpawnArray_setMonsterSpawnNull(this, monsterSpawnArrayId)
  s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + monsterSpawnArrayId] = 0
end

--Generated allocator of MonsterSpawnArray
function s__MonsterSpawnArray__allocate()
  local this = si__MonsterSpawnArray_F
  if (this ~= 0) then
    si__MonsterSpawnArray_F = si__MonsterSpawnArray_V[this]
  else
    si__MonsterSpawnArray_I = si__MonsterSpawnArray_I + 1
    this = si__MonsterSpawnArray_I
  end
  if (this > 49) then
    return 0
  end
  s__MonsterSpawnArray_monsterSpawns[this] = (this - 1) * 100
  si__MonsterSpawnArray_V[this] = -1
  return this
end

--Generated destructor of MonsterSpawnArray
function sc__MonsterSpawnArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterSpawnArray_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__MonsterSpawnArray_onDestroy)
  si__MonsterSpawnArray_V[this] = si__MonsterSpawnArray_F
  si__MonsterSpawnArray_F = this
end

--Generated method caller for EscaperEffectArray.onDestroy
function sc__EscaperEffectArray_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__EscaperEffectArray_onDestroy)
end

--Generated allocator of EscaperEffectArray
function s__EscaperEffectArray__allocate()
  local this = si__EscaperEffectArray_F
  if (this ~= 0) then
    si__EscaperEffectArray_F = si__EscaperEffectArray_V[this]
  else
    si__EscaperEffectArray_I = si__EscaperEffectArray_I + 1
    this = si__EscaperEffectArray_I
  end
  if (this > 11) then
    return 0
  end
  s__EscaperEffectArray_efs[this] = (this - 1) * 20
  si__EscaperEffectArray_V[this] = -1
  return this
end

--Generated destructor of EscaperEffectArray
function sc__EscaperEffectArray_deallocate(this)
  if this == nil then
    return
  elseif (si__EscaperEffectArray_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__EscaperEffectArray_onDestroy)
  si__EscaperEffectArray_V[this] = si__EscaperEffectArray_F
  si__EscaperEffectArray_F = this
end

--Generated method caller for TerrainType.getTerrainTypeId
function sc__TerrainType_getTerrainTypeId(this)
  return s__TerrainType_terrainTypeId[this]
end

--Generated method caller for TerrainType.getKind
function sc__TerrainType_getKind(this)
  return s__TerrainType_kind[this]
end

--Generated method caller for TerrainType.onDestroy
function sc__TerrainType_onDestroy(this)
  s__TerrainType_label[this] = nil
  s__TerrainType_theAlias[this] = nil
  s__TerrainType_kind[this] = nil
  s__TerrainType_terrainTypeId[this] = 0
end

--Generated allocator of TerrainType
function s__TerrainType__allocate()
  local this = si__TerrainType_F
  if (this ~= 0) then
    si__TerrainType_F = si__TerrainType_V[this]
  else
    si__TerrainType_I = si__TerrainType_I + 1
    this = si__TerrainType_I
  end
  if (this > 8190) then
    return 0
  end

  si__TerrainType_type[this] = 35
  si__TerrainType_V[this] = -1
  return this
end

--Generated destructor of TerrainType
function sc__TerrainType_deallocate(this)
  if this == nil then
    return
  elseif (si__TerrainType_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__TerrainType_onDestroy[si__TerrainType_type[this]])
  si__TerrainType_V[this] = si__TerrainType_F
  si__TerrainType_F = this
end

--Generated method caller for MonsterSpawn.onDestroy
function sc__MonsterSpawn_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSpawn_onDestroy)
end

--Generated method caller for MonsterSpawn.startMobMovement
function sc__MonsterSpawn_startMobMovement(this, mobUnit)
  f__arg_this = this
  f__arg_unit1 = mobUnit
  TriggerEvaluate(st__MonsterSpawn_startMobMovement)
end

--Generated method caller for MonsterSpawn.createMob
function sc__MonsterSpawn_createMob(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSpawn_createMob)
  return f__result_unit
end

--Generated method caller for MonsterSpawn.toString
function sc__MonsterSpawn_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterSpawn_toString)
  return f__result_string
end

--Generated allocator of MonsterSpawn
function s__MonsterSpawn__allocate()
  local this = si__MonsterSpawn_F
  if (this ~= 0) then
    si__MonsterSpawn_F = si__MonsterSpawn_V[this]
  else
    si__MonsterSpawn_I = si__MonsterSpawn_I + 1
    this = si__MonsterSpawn_I
  end
  if (this > 5000) then
    return 0
  end

  si__MonsterSpawn_V[this] = -1
  return this
end

--Generated destructor of MonsterSpawn
function sc__MonsterSpawn_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterSpawn_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__MonsterSpawn_onDestroy)
  si__MonsterSpawn_V[this] = si__MonsterSpawn_F
  si__MonsterSpawn_F = this
end

--Generated method caller for MakeTerrainVerticalSymmetryAction.applySymmetry
function sc__MakeTerrainVerticalSymmetryAction_applySymmetry(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeTerrainVerticalSymmetryAction_applySymmetry)
end

--Generated method caller for MakeTerrainVerticalSymmetryAction.cancel
function sc__MakeTerrainVerticalSymmetryAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[41])
  return f__result_boolean
end

--Generated method caller for MakeTerrainVerticalSymmetryAction.redo
function sc__MakeTerrainVerticalSymmetryAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[41])
  return f__result_boolean
end

--Generated allocator of MakeTerrainVerticalSymmetryAction
function s__MakeTerrainVerticalSymmetryAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 41
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainHorizontalSymmetryAction.applySymmetry
function sc__MakeTerrainHorizontalSymmetryAction_applySymmetry(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeTerrainHorizontalSymmetryAction_applySymmetry)
end

--Generated method caller for MakeTerrainHorizontalSymmetryAction.cancel
function sc__MakeTerrainHorizontalSymmetryAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[40])
  return f__result_boolean
end

--Generated method caller for MakeTerrainHorizontalSymmetryAction.redo
function sc__MakeTerrainHorizontalSymmetryAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[40])
  return f__result_boolean
end

--Generated allocator of MakeTerrainHorizontalSymmetryAction
function s__MakeTerrainHorizontalSymmetryAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 40
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainCreateAction.onDestroy
function sc__MakeTerrainCreateAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[39])
end

--Generated method caller for MakeTerrainCreateAction.cancel
function sc__MakeTerrainCreateAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[39])
  return f__result_boolean
end

--Generated method caller for MakeTerrainCreateAction.redo
function sc__MakeTerrainCreateAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[39])
  return f__result_boolean
end

--Generated allocator of MakeTerrainCreateAction
function s__MakeTerrainCreateAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 39
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainCopyPasteAction.onDestroy
function sc__MakeTerrainCopyPasteAction_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_onDestroy[38])
end

--Generated method caller for MakeTerrainCopyPasteAction.cancel
function sc__MakeTerrainCopyPasteAction_cancel(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_cancel[38])
  return f__result_boolean
end

--Generated method caller for MakeTerrainCopyPasteAction.redo
function sc__MakeTerrainCopyPasteAction_redo(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeAction_redo[38])
  return f__result_boolean
end

--Generated allocator of MakeTerrainCopyPasteAction
function s__MakeTerrainCopyPasteAction__allocate()
  local kthis = nil
  local this = si__MakeAction_F
  if (this ~= 0) then
    si__MakeAction_F = si__MakeAction_V[this]
  else
    si__MakeAction_I = si__MakeAction_I + 1
    this = si__MakeAction_I
  end
  if (this > 8190) then
    return 0
  end

  si__MakeAction_type[this] = 38
  kthis = this

  si__MakeAction_V[this] = -1
  return this
end


--Generated method caller for EscaperEffect.onDestroy
function sc__EscaperEffect_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__EscaperEffect_onDestroy)
end

--Generated allocator of EscaperEffect
function s__EscaperEffect__allocate()
  local this = si__EscaperEffect_F
  if (this ~= 0) then
    si__EscaperEffect_F = si__EscaperEffect_V[this]
  else
    si__EscaperEffect_I = si__EscaperEffect_I + 1
    this = si__EscaperEffect_I
  end
  if (this > 8190) then
    return 0
  end

  si__EscaperEffect_V[this] = -1
  return this
end

--Generated destructor of EscaperEffect
function sc__EscaperEffect_deallocate(this)
  if this == nil then
    return
  elseif (si__EscaperEffect_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__EscaperEffect_onDestroy)
  si__EscaperEffect_V[this] = si__EscaperEffect_F
  si__EscaperEffect_F = this
end

--Generated method caller for CasterShot.create
function sc__CasterShot_create(monsterType, Xdep, Ydep, angle, speed, portee)
  f__arg_integer1 = monsterType
  f__arg_real1 = Xdep
  f__arg_real2 = Ydep
  f__arg_real3 = angle
  f__arg_real4 = speed
  f__arg_real5 = portee
  TriggerEvaluate(st__CasterShot_create)
  return f__result_integer
end

--Generated method caller for CasterShot.onDestroy
function sc__CasterShot_onDestroy(this)
  RemoveUnit(s__CasterShot_unite[this])
  s__CasterShot_unite[this] = nil
  DestroyTrigger(s__CasterShot_trig[this])
  s__CasterShot_trig[this] = nil
end

--Generated allocator of CasterShot
function s__CasterShot__allocate()
  local this = si__CasterShot_F
  if (this ~= 0) then
    si__CasterShot_F = si__CasterShot_V[this]
  else
    si__CasterShot_I = si__CasterShot_I + 1
    this = si__CasterShot_I
  end
  if (this > 8190) then
    return 0
  end

  si__CasterShot_V[this] = -1
  return this
end

--Generated destructor of CasterShot
function sc__CasterShot_deallocate(this)
  if this == nil then
    return
  elseif (si__CasterShot_V[this] ~= -1) then
    return
  end
  f__arg_this = this
  TriggerEvaluate(st__CasterShot_onDestroy)
  si__CasterShot_V[this] = si__CasterShot_F
  si__CasterShot_F = this
end

--Generated method caller for MakeDeleteClearMob.create
function sc__MakeDeleteClearMob_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeDeleteClearMob_create)
  return f__result_integer
end

--Generated method caller for MakeDeleteClearMob.onDestroy
function sc__MakeDeleteClearMob_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeDeleteClearMob.clickMade
function sc__MakeDeleteClearMob_clickMade(this, monsterOrCasterId)
  f__arg_this = this
  f__arg_integer1 = monsterOrCasterId
  TriggerEvaluate(st__MakeDeleteClearMob_clickMade)
end

--Generated method caller for MakeDeleteClearMob.cancelLastAction
function sc__MakeDeleteClearMob_cancelLastAction(this)
  return false
end

--Generated method caller for MakeDeleteClearMob.redoLastAction
function sc__MakeDeleteClearMob_redoLastAction(this)
  return false
end

--Generated allocator of MakeDeleteClearMob
function s__MakeDeleteClearMob__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 106
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for TerrainTypeSlide.getSlideSpeed
function sc__TerrainTypeSlide_getSlideSpeed(this)
  return s__TerrainTypeSlide_slideSpeed[this]
end

--Generated method caller for TerrainTypeSlide.getCanTurn
function sc__TerrainTypeSlide_getCanTurn(this)
  return s__TerrainTypeSlide_canTurn[this]
end

--Generated allocator of TerrainTypeSlide
function s__TerrainTypeSlide__allocate()
  local this = s__TerrainType__allocate()
  local kthis = nil
  if (this == 0) then
    return 0
  end
  si__TerrainType_type[this] = 43
  kthis = this

  return this
end


--Generated method caller for TerrainTypeWalk.getWalkSpeed
function sc__TerrainTypeWalk_getWalkSpeed(this)
  return s__TerrainTypeWalk_walkSpeed[this]
end

--Generated allocator of TerrainTypeWalk
function s__TerrainTypeWalk__allocate()
  local this = s__TerrainType__allocate()
  local kthis = nil
  if (this == 0) then
    return 0
  end
  si__TerrainType_type[this] = 44
  kthis = this

  return this
end


--Generated method caller for TerrainTypeDeath.onDestroy
function sc__TerrainTypeDeath_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__TerrainType_onDestroy[52])
end

--Generated method caller for TerrainTypeDeath.getKillingEffectStr
function sc__TerrainTypeDeath_getKillingEffectStr(this)
  return s__TerrainTypeDeath_killingEffectStr[this]
end

--Generated method caller for TerrainTypeDeath.getTimeToKill
function sc__TerrainTypeDeath_getTimeToKill(this)
  return s__TerrainTypeDeath_timeToKill[this]
end

--Generated method caller for TerrainTypeDeath.killEscaper
function sc__TerrainTypeDeath_killEscaper(this, escaper)
  f__arg_this = this
  f__arg_integer1 = escaper
  TriggerEvaluate(st__TerrainTypeDeath_killEscaper)
end

--Generated method caller for TerrainTypeDeath.getTimer
function sc__TerrainTypeDeath_getTimer(this, escaperId)
  f__arg_this = this
  f__arg_integer1 = escaperId
  TriggerEvaluate(st__TerrainTypeDeath_getTimer)
  return f__result_timer
end

--Generated method caller for TerrainTypeDeath.getToleranceDist
function sc__TerrainTypeDeath_getToleranceDist(this)
  return s__TerrainTypeDeath_toleranceDist[this]
end

--Generated allocator of TerrainTypeDeath
function s__TerrainTypeDeath__allocate()
  local this = s__TerrainType__allocate()
  local kthis = nil
  if (this == 0) then
    return 0
  end
  si__TerrainType_type[this] = 52
  kthis = this

  return this
end


--Generated method caller for Start.onDestroy
function sc__Start_onDestroy(this)
  RemoveRect(s__RectInterface_r[this])
  s__RectInterface_r[this] = nil
end

--Generated method caller for Start.getRandomX
function sc__Start_getRandomX(this)
  return GetRandomReal(s__RectInterface_minX[this], s__RectInterface_maxX[this])
end

--Generated method caller for Start.getRandomY
function sc__Start_getRandomY(this)
  return GetRandomReal(s__RectInterface_minY[this], s__RectInterface_maxY[this])
end

--Generated method caller for Start.toString
function sc__Start_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__RectInterface_toString[56])
  return f__result_string
end

--Generated allocator of Start
function s__Start__allocate()
  local kthis = nil
  local this = si__RectInterface_F
  if (this ~= 0) then
    si__RectInterface_F = si__RectInterface_V[this]
  else
    si__RectInterface_I = si__RectInterface_I + 1
    this = si__RectInterface_I
  end
  if (this > 8190) then
    return 0
  end

  si__RectInterface_type[this] = 56
  kthis = this

  si__RectInterface_V[this] = -1
  return this
end


--Generated method caller for End.onDestroy
function sc__End_onDestroy(this)
  RemoveRect(s__RectInterface_r[this])
  s__RectInterface_r[this] = nil
  DestroyTrigger(s__End_endReaching[this])
  s__End_endReaching[this] = nil
end

--Generated method caller for End.toString
function sc__End_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__RectInterface_toString[57])
  return f__result_string
end

--Generated allocator of End
function s__End__allocate()
  local kthis = nil
  local this = si__RectInterface_F
  if (this ~= 0) then
    si__RectInterface_F = si__RectInterface_V[this]
  else
    si__RectInterface_I = si__RectInterface_I + 1
    this = si__RectInterface_I
  end
  if (this > 8190) then
    return 0
  end

  si__RectInterface_type[this] = 57
  kthis = this

  si__RectInterface_V[this] = -1
  return this
end


--Generated method caller for MakeCaster.getCasterType
function sc__MakeCaster_getCasterType(this)
  return s__MakeCaster_casterType[this]
end

--Generated method caller for MakeCaster.getAngle
function sc__MakeCaster_getAngle(this)
  return s__MakeCaster_angle[this]
end

--Generated method caller for MakeCaster.create
function sc__MakeCaster_create(maker, casterType, angle)
  f__arg_unit1 = maker
  f__arg_integer1 = casterType
  f__arg_real1 = angle
  TriggerEvaluate(st__MakeCaster_create)
  return f__result_integer
end

--Generated method caller for MakeCaster.onDestroy
function sc__MakeCaster_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeCaster.cancelLastAction
function sc__MakeCaster_cancelLastAction(this)
  return false
end

--Generated method caller for MakeCaster.redoLastAction
function sc__MakeCaster_redoLastAction(this)
  return false
end

--Generated allocator of MakeCaster
function s__MakeCaster__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 68
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeDeleteCasters.isLastLocSavedUsed
function sc__MakeDeleteCasters_isLastLocSavedUsed(this)
  return s__MakeDeleteCasters_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeDeleteCasters.create
function sc__MakeDeleteCasters_create(maker, mode)
  f__arg_unit1 = maker
  f__arg_string1 = mode
  TriggerEvaluate(st__MakeDeleteCasters_create)
  return f__result_integer
end

--Generated method caller for MakeDeleteCasters.onDestroy
function sc__MakeDeleteCasters_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteCasters_unitLastClic[this])
  s__MakeDeleteCasters_unitLastClic[this] = nil
end

--Generated method caller for MakeDeleteCasters.saveLoc
function sc__MakeDeleteCasters_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeDeleteCasters_saveLoc)
end

--Generated method caller for MakeDeleteCasters.unsaveLocDefinitely
function sc__MakeDeleteCasters_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeDeleteCasters_unsaveLocDefinitely)
end

--Generated method caller for MakeDeleteCasters.cancelLastAction
function sc__MakeDeleteCasters_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[69])
  return f__result_boolean
end

--Generated method caller for MakeDeleteCasters.redoLastAction
function sc__MakeDeleteCasters_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[69])
  return f__result_boolean
end

--Generated method caller for MakeDeleteCasters.getMode
function sc__MakeDeleteCasters_getMode(this)
  return s__MakeDeleteCasters_mode[this]
end

--Generated allocator of MakeDeleteCasters
function s__MakeDeleteCasters__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 69
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeDeleteMeteors.isLastLocSavedUsed
function sc__MakeDeleteMeteors_isLastLocSavedUsed(this)
  return s__MakeDeleteMeteors_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeDeleteMeteors.create
function sc__MakeDeleteMeteors_create(maker, mode)
  f__arg_unit1 = maker
  f__arg_string1 = mode
  TriggerEvaluate(st__MakeDeleteMeteors_create)
  return f__result_integer
end

--Generated method caller for MakeDeleteMeteors.onDestroy
function sc__MakeDeleteMeteors_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteMeteors_unitLastClic[this])
  s__MakeDeleteMeteors_unitLastClic[this] = nil
end

--Generated method caller for MakeDeleteMeteors.saveLoc
function sc__MakeDeleteMeteors_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeDeleteMeteors_saveLoc)
end

--Generated method caller for MakeDeleteMeteors.unsaveLocDefinitely
function sc__MakeDeleteMeteors_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeDeleteMeteors_unsaveLocDefinitely)
end

--Generated method caller for MakeDeleteMeteors.cancelLastAction
function sc__MakeDeleteMeteors_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[70])
  return f__result_boolean
end

--Generated method caller for MakeDeleteMeteors.redoLastAction
function sc__MakeDeleteMeteors_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[70])
  return f__result_boolean
end

--Generated method caller for MakeDeleteMeteors.getMode
function sc__MakeDeleteMeteors_getMode(this)
  return s__MakeDeleteMeteors_mode[this]
end

--Generated allocator of MakeDeleteMeteors
function s__MakeDeleteMeteors__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 70
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeDeleteMonsters.isLastLocSavedUsed
function sc__MakeDeleteMonsters_isLastLocSavedUsed(this)
  return s__MakeDeleteMonsters_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeDeleteMonsters.create
function sc__MakeDeleteMonsters_create(maker, mode)
  f__arg_unit1 = maker
  f__arg_string1 = mode
  TriggerEvaluate(st__MakeDeleteMonsters_create)
  return f__result_integer
end

--Generated method caller for MakeDeleteMonsters.onDestroy
function sc__MakeDeleteMonsters_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteMonsters_unitLastClic[this])
  s__MakeDeleteMonsters_unitLastClic[this] = nil
end

--Generated method caller for MakeDeleteMonsters.saveLoc
function sc__MakeDeleteMonsters_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeDeleteMonsters_saveLoc)
end

--Generated method caller for MakeDeleteMonsters.unsaveLocDefinitely
function sc__MakeDeleteMonsters_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeDeleteMonsters_unsaveLocDefinitely)
end

--Generated method caller for MakeDeleteMonsters.cancelLastAction
function sc__MakeDeleteMonsters_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[71])
  return f__result_boolean
end

--Generated method caller for MakeDeleteMonsters.redoLastAction
function sc__MakeDeleteMonsters_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[71])
  return f__result_boolean
end

--Generated method caller for MakeDeleteMonsters.getMode
function sc__MakeDeleteMonsters_getMode(this)
  return s__MakeDeleteMonsters_mode[this]
end

--Generated allocator of MakeDeleteMonsters
function s__MakeDeleteMonsters__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 71
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeEnd.create
function sc__MakeEnd_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeEnd_create)
  return f__result_integer
end

--Generated method caller for MakeEnd.onDestroy
function sc__MakeEnd_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeEnd_unitLastClic[this])
  s__MakeEnd_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeEnd.saveLoc
function sc__MakeEnd_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeEnd_saveLoc)
end

--Generated method caller for MakeEnd.isLastLocSavedUsed
function sc__MakeEnd_isLastLocSavedUsed(this)
  return s__MakeEnd_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeEnd.cancelLastAction
function sc__MakeEnd_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[72])
  return f__result_boolean
end

--Generated method caller for MakeEnd.redoLastAction
function sc__MakeEnd_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[72])
  return f__result_boolean
end

--Generated allocator of MakeEnd
function s__MakeEnd__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 72
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeExchangeTerrains.create
function sc__MakeExchangeTerrains_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeExchangeTerrains_create)
  return f__result_integer
end

--Generated method caller for MakeExchangeTerrains.onDestroy
function sc__MakeExchangeTerrains_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeExchangeTerrains_unitLastClic[this])
  s__MakeExchangeTerrains_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeExchangeTerrains.saveLoc
function sc__MakeExchangeTerrains_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeExchangeTerrains_saveLoc)
end

--Generated method caller for MakeExchangeTerrains.unsaveLocDefinitely
function sc__MakeExchangeTerrains_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeExchangeTerrains_unsaveLocDefinitely)
end

--Generated method caller for MakeExchangeTerrains.isLastLocSavedUsed
function sc__MakeExchangeTerrains_isLastLocSavedUsed(this)
  return s__MakeExchangeTerrains_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeExchangeTerrains.cancelLastAction
function sc__MakeExchangeTerrains_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[73])
  return f__result_boolean
end

--Generated method caller for MakeExchangeTerrains.redoLastAction
function sc__MakeExchangeTerrains_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[73])
  return f__result_boolean
end

--Generated allocator of MakeExchangeTerrains
function s__MakeExchangeTerrains__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 73
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeGetTerrainType.create
function sc__MakeGetTerrainType_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeGetTerrainType_create)
  return f__result_integer
end

--Generated method caller for MakeGetTerrainType.onDestroy
function sc__MakeGetTerrainType_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeGetTerrainType.cancelLastAction
function sc__MakeGetTerrainType_cancelLastAction(this)
  return false
end

--Generated method caller for MakeGetTerrainType.redoLastAction
function sc__MakeGetTerrainType_redoLastAction(this)
  return false
end

--Generated allocator of MakeGetTerrainType
function s__MakeGetTerrainType__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 74
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeGetUnitTeleportPeriod.create
function sc__MakeGetUnitTeleportPeriod_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeGetUnitTeleportPeriod_create)
  return f__result_integer
end

--Generated method caller for MakeGetUnitTeleportPeriod.onDestroy
function sc__MakeGetUnitTeleportPeriod_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeGetUnitTeleportPeriod.cancelLastAction
function sc__MakeGetUnitTeleportPeriod_cancelLastAction(this)
  return false
end

--Generated method caller for MakeGetUnitTeleportPeriod.redoLastAction
function sc__MakeGetUnitTeleportPeriod_redoLastAction(this)
  return false
end

--Generated allocator of MakeGetUnitTeleportPeriod
function s__MakeGetUnitTeleportPeriod__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 75
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeMeteor.create
function sc__MakeMeteor_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeMeteor_create)
  return f__result_integer
end

--Generated method caller for MakeMeteor.onDestroy
function sc__MakeMeteor_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeMeteor.cancelLastAction
function sc__MakeMeteor_cancelLastAction(this)
  return false
end

--Generated method caller for MakeMeteor.redoLastAction
function sc__MakeMeteor_redoLastAction(this)
  return false
end

--Generated allocator of MakeMeteor
function s__MakeMeteor__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 76
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeMonsterMultiplePatrols.getMonsterType
function sc__MakeMonsterMultiplePatrols_getMonsterType(this)
  return s__MakeMonsterMultiplePatrols_mt[this]
end

--Generated method caller for MakeMonsterMultiplePatrols.getMode
function sc__MakeMonsterMultiplePatrols_getMode(this)
  return s__MakeMonsterMultiplePatrols_mode[this]
end

--Generated method caller for MakeMonsterMultiplePatrols.getMonster
function sc__MakeMonsterMultiplePatrols_getMonster(this)
  return s__MakeMonsterMultiplePatrols_monster[this]
end

--Generated method caller for MakeMonsterMultiplePatrols.create
function sc__MakeMonsterMultiplePatrols_create(maker, mode, mt)
  f__arg_unit1 = maker
  f__arg_string1 = mode
  f__arg_integer1 = mt
  TriggerEvaluate(st__MakeMonsterMultiplePatrols_create)
  return f__result_integer
end

--Generated method caller for MakeMonsterMultiplePatrols.onDestroy
function sc__MakeMonsterMultiplePatrols_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_onDestroy[77])
end

--Generated method caller for MakeMonsterMultiplePatrols.nextMonster
function sc__MakeMonsterMultiplePatrols_nextMonster(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeMonsterMultiplePatrols_nextMonster)
end

--Generated method caller for MakeMonsterMultiplePatrols.getLocPointeur
function sc__MakeMonsterMultiplePatrols_getLocPointeur(this)
  return s__MakeMonsterMultiplePatrols_locPointeur[this]
end

--Generated method caller for MakeMonsterMultiplePatrols.saveLoc
function sc__MakeMonsterMultiplePatrols_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeMonsterMultiplePatrols_saveLoc)
end

--Generated method caller for MakeMonsterMultiplePatrols.setMonster
function sc__MakeMonsterMultiplePatrols_setMonster(this, monster)
  f__arg_this = this
  f__arg_integer1 = monster
  TriggerEvaluate(st__MakeMonsterMultiplePatrols_setMonster)
end

--Generated method caller for MakeMonsterMultiplePatrols.cancelLastAction
function sc__MakeMonsterMultiplePatrols_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[77])
  return f__result_boolean
end

--Generated method caller for MakeMonsterMultiplePatrols.redoLastAction
function sc__MakeMonsterMultiplePatrols_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[77])
  return f__result_boolean
end

--Generated allocator of MakeMonsterMultiplePatrols
function s__MakeMonsterMultiplePatrols__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 77
  if (si__MakeMonsterMultiplePatrols_arrN == 0) then
    si__MakeMonsterMultiplePatrols_arrI = si__MakeMonsterMultiplePatrols_arrI + 1
    kthis = si__MakeMonsterMultiplePatrols_arrI
    if (kthis > 408) then
      si__Make_V[this] = si__Make_F
      si__Make_F = this
      return 0
    end
  else
    kthis = si__MakeMonsterMultiplePatrols_arrV[si__MakeMonsterMultiplePatrols_arrN]
    si__MakeMonsterMultiplePatrols_arrN = si__MakeMonsterMultiplePatrols_arrN - 1
  end
  si__MakeMonsterMultiplePatrols_arr[this] = kthis
  s__MakeMonsterMultiplePatrols_lastX[this] = (kthis - 1) * 20
  s__MakeMonsterMultiplePatrols_lastY[this] = (kthis - 1) * 20
  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeMonsterNoMove.getMonsterType
function sc__MakeMonsterNoMove_getMonsterType(this)
  return s__MakeMonsterNoMove_mt[this]
end

--Generated method caller for MakeMonsterNoMove.getFacingAngle
function sc__MakeMonsterNoMove_getFacingAngle(this)
  return s__MakeMonsterNoMove_facingAngle[this]
end

--Generated method caller for MakeMonsterNoMove.create
function sc__MakeMonsterNoMove_create(maker, mt, facingAngle)
  f__arg_unit1 = maker
  f__arg_integer1 = mt
  f__arg_real1 = facingAngle
  TriggerEvaluate(st__MakeMonsterNoMove_create)
  return f__result_integer
end

--Generated method caller for MakeMonsterNoMove.onDestroy
function sc__MakeMonsterNoMove_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeMonsterNoMove.cancelLastAction
function sc__MakeMonsterNoMove_cancelLastAction(this)
  return false
end

--Generated method caller for MakeMonsterNoMove.redoLastAction
function sc__MakeMonsterNoMove_redoLastAction(this)
  return false
end

--Generated allocator of MakeMonsterNoMove
function s__MakeMonsterNoMove__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 80
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeMonsterSimplePatrol.getMonsterType
function sc__MakeMonsterSimplePatrol_getMonsterType(this)
  return s__MakeMonsterSimplePatrol_mt[this]
end

--Generated method caller for MakeMonsterSimplePatrol.create
function sc__MakeMonsterSimplePatrol_create(maker, mode, mt)
  f__arg_unit1 = maker
  f__arg_string1 = mode
  f__arg_integer1 = mt
  TriggerEvaluate(st__MakeMonsterSimplePatrol_create)
  return f__result_integer
end

--Generated method caller for MakeMonsterSimplePatrol.onDestroy
function sc__MakeMonsterSimplePatrol_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterSimplePatrol_unitLastClic[this])
  s__MakeMonsterSimplePatrol_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeMonsterSimplePatrol.saveLoc
function sc__MakeMonsterSimplePatrol_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeMonsterSimplePatrol_saveLoc)
end

--Generated method caller for MakeMonsterSimplePatrol.unsaveLoc
function sc__MakeMonsterSimplePatrol_unsaveLoc(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeMonsterSimplePatrol_unsaveLoc)
  return f__result_boolean
end

--Generated method caller for MakeMonsterSimplePatrol.unsaveLocDefinitely
function sc__MakeMonsterSimplePatrol_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeMonsterSimplePatrol_unsaveLocDefinitely)
end

--Generated method caller for MakeMonsterSimplePatrol.isLastLocSavedUsed
function sc__MakeMonsterSimplePatrol_isLastLocSavedUsed(this)
  return s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeMonsterSimplePatrol.cancelLastAction
function sc__MakeMonsterSimplePatrol_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[81])
  return f__result_boolean
end

--Generated method caller for MakeMonsterSimplePatrol.redoLastAction
function sc__MakeMonsterSimplePatrol_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[81])
  return f__result_boolean
end

--Generated method caller for MakeMonsterSimplePatrol.getMode
function sc__MakeMonsterSimplePatrol_getMode(this)
  return s__MakeMonsterSimplePatrol_mode[this]
end

--Generated allocator of MakeMonsterSimplePatrol
function s__MakeMonsterSimplePatrol__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 81
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeMonsterSpawn.create
function sc__MakeMonsterSpawn_create(maker, label, mt, sens, frequence)
  f__arg_unit1 = maker
  f__arg_string1 = label
  f__arg_integer1 = mt
  f__arg_string2 = sens
  f__arg_real1 = frequence
  TriggerEvaluate(st__MakeMonsterSpawn_create)
  return f__result_integer
end

--Generated method caller for MakeMonsterSpawn.onDestroy
function sc__MakeMonsterSpawn_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterSpawn_unitLastClic[this])
  s__MakeMonsterSpawn_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeMonsterSpawn.saveLoc
function sc__MakeMonsterSpawn_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeMonsterSpawn_saveLoc)
end

--Generated method caller for MakeMonsterSpawn.isLastLocSavedUsed
function sc__MakeMonsterSpawn_isLastLocSavedUsed(this)
  return s__MakeMonsterSpawn_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeMonsterSpawn.cancelLastAction
function sc__MakeMonsterSpawn_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[82])
  return f__result_boolean
end

--Generated method caller for MakeMonsterSpawn.redoLastAction
function sc__MakeMonsterSpawn_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[82])
  return f__result_boolean
end

--Generated allocator of MakeMonsterSpawn
function s__MakeMonsterSpawn__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 82
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeMonsterTeleport.getMonsterType
function sc__MakeMonsterTeleport_getMonsterType(this)
  return s__MakeMonsterTeleport_mt[this]
end

--Generated method caller for MakeMonsterTeleport.getPeriod
function sc__MakeMonsterTeleport_getPeriod(this)
  return s__MakeMonsterTeleport_period[this]
end

--Generated method caller for MakeMonsterTeleport.getAngle
function sc__MakeMonsterTeleport_getAngle(this)
  return s__MakeMonsterTeleport_angle[this]
end

--Generated method caller for MakeMonsterTeleport.getMode
function sc__MakeMonsterTeleport_getMode(this)
  return s__MakeMonsterTeleport_mode[this]
end

--Generated method caller for MakeMonsterTeleport.getMonster
function sc__MakeMonsterTeleport_getMonster(this)
  return s__MakeMonsterTeleport_monster[this]
end

--Generated method caller for MakeMonsterTeleport.create
function sc__MakeMonsterTeleport_create(maker, mode, mt, period, angle)
  f__arg_unit1 = maker
  f__arg_string1 = mode
  f__arg_integer1 = mt
  f__arg_real1 = period
  f__arg_real2 = angle
  TriggerEvaluate(st__MakeMonsterTeleport_create)
  return f__result_integer
end

--Generated method caller for MakeMonsterTeleport.onDestroy
function sc__MakeMonsterTeleport_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_onDestroy[83])
end

--Generated method caller for MakeMonsterTeleport.nextMonster
function sc__MakeMonsterTeleport_nextMonster(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeMonsterTeleport_nextMonster)
end

--Generated method caller for MakeMonsterTeleport.addWaitPeriod
function sc__MakeMonsterTeleport_addWaitPeriod(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeMonsterTeleport_addWaitPeriod)
  return f__result_boolean
end

--Generated method caller for MakeMonsterTeleport.addHidePeriod
function sc__MakeMonsterTeleport_addHidePeriod(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeMonsterTeleport_addHidePeriod)
  return f__result_boolean
end

--Generated method caller for MakeMonsterTeleport.getLocPointeur
function sc__MakeMonsterTeleport_getLocPointeur(this)
  return s__MakeMonsterTeleport_locPointeur[this]
end

--Generated method caller for MakeMonsterTeleport.saveLoc
function sc__MakeMonsterTeleport_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeMonsterTeleport_saveLoc)
  return f__result_boolean
end

--Generated method caller for MakeMonsterTeleport.setMonster
function sc__MakeMonsterTeleport_setMonster(this, monster)
  f__arg_this = this
  f__arg_integer1 = monster
  TriggerEvaluate(st__MakeMonsterTeleport_setMonster)
end

--Generated method caller for MakeMonsterTeleport.cancelLastAction
function sc__MakeMonsterTeleport_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[83])
  return f__result_boolean
end

--Generated method caller for MakeMonsterTeleport.redoLastAction
function sc__MakeMonsterTeleport_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[83])
  return f__result_boolean
end

--Generated allocator of MakeMonsterTeleport
function s__MakeMonsterTeleport__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 83
  if (si__MakeMonsterTeleport_arrN == 0) then
    si__MakeMonsterTeleport_arrI = si__MakeMonsterTeleport_arrI + 1
    kthis = si__MakeMonsterTeleport_arrI
    if (kthis > 408) then
      si__Make_V[this] = si__Make_F
      si__Make_F = this
      return 0
    end
  else
    kthis = si__MakeMonsterTeleport_arrV[si__MakeMonsterTeleport_arrN]
    si__MakeMonsterTeleport_arrN = si__MakeMonsterTeleport_arrN - 1
  end
  si__MakeMonsterTeleport_arr[this] = kthis
  s__MakeMonsterTeleport_lastX[this] = (kthis - 1) * 20
  s__MakeMonsterTeleport_lastY[this] = (kthis - 1) * 20
  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeSetUnitMonsterType.getMonsterType
function sc__MakeSetUnitMonsterType_getMonsterType(this)
  return s__MakeSetUnitMonsterType_mt[this]
end

--Generated method caller for MakeSetUnitMonsterType.isLastLocSavedUsed
function sc__MakeSetUnitMonsterType_isLastLocSavedUsed(this)
  return s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeSetUnitMonsterType.create
function sc__MakeSetUnitMonsterType_create(maker, mode, mt)
  f__arg_unit1 = maker
  f__arg_string1 = mode
  f__arg_integer1 = mt
  TriggerEvaluate(st__MakeSetUnitMonsterType_create)
  return f__result_integer
end

--Generated method caller for MakeSetUnitMonsterType.onDestroy
function sc__MakeSetUnitMonsterType_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeSetUnitMonsterType_unitLastClic[this])
  s__MakeSetUnitMonsterType_unitLastClic[this] = nil
end

--Generated method caller for MakeSetUnitMonsterType.saveLoc
function sc__MakeSetUnitMonsterType_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeSetUnitMonsterType_saveLoc)
end

--Generated method caller for MakeSetUnitMonsterType.unsaveLocDefinitely
function sc__MakeSetUnitMonsterType_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeSetUnitMonsterType_unsaveLocDefinitely)
end

--Generated method caller for MakeSetUnitMonsterType.cancelLastAction
function sc__MakeSetUnitMonsterType_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[86])
  return f__result_boolean
end

--Generated method caller for MakeSetUnitMonsterType.redoLastAction
function sc__MakeSetUnitMonsterType_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[86])
  return f__result_boolean
end

--Generated method caller for MakeSetUnitMonsterType.getMode
function sc__MakeSetUnitMonsterType_getMode(this)
  return s__MakeSetUnitMonsterType_mode[this]
end

--Generated allocator of MakeSetUnitMonsterType
function s__MakeSetUnitMonsterType__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 86
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeSetUnitTeleportPeriod.getPeriod
function sc__MakeSetUnitTeleportPeriod_getPeriod(this)
  return s__MakeSetUnitTeleportPeriod_period[this]
end

--Generated method caller for MakeSetUnitTeleportPeriod.isLastLocSavedUsed
function sc__MakeSetUnitTeleportPeriod_isLastLocSavedUsed(this)
  return s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeSetUnitTeleportPeriod.create
function sc__MakeSetUnitTeleportPeriod_create(maker, mode, period)
  f__arg_unit1 = maker
  f__arg_string1 = mode
  f__arg_real1 = period
  TriggerEvaluate(st__MakeSetUnitTeleportPeriod_create)
  return f__result_integer
end

--Generated method caller for MakeSetUnitTeleportPeriod.onDestroy
function sc__MakeSetUnitTeleportPeriod_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeSetUnitTeleportPeriod_unitLastClic[this])
  s__MakeSetUnitTeleportPeriod_unitLastClic[this] = nil
end

--Generated method caller for MakeSetUnitTeleportPeriod.saveLoc
function sc__MakeSetUnitTeleportPeriod_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeSetUnitTeleportPeriod_saveLoc)
end

--Generated method caller for MakeSetUnitTeleportPeriod.unsaveLocDefinitely
function sc__MakeSetUnitTeleportPeriod_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeSetUnitTeleportPeriod_unsaveLocDefinitely)
end

--Generated method caller for MakeSetUnitTeleportPeriod.cancelLastAction
function sc__MakeSetUnitTeleportPeriod_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[87])
  return f__result_boolean
end

--Generated method caller for MakeSetUnitTeleportPeriod.redoLastAction
function sc__MakeSetUnitTeleportPeriod_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[87])
  return f__result_boolean
end

--Generated method caller for MakeSetUnitTeleportPeriod.getMode
function sc__MakeSetUnitTeleportPeriod_getMode(this)
  return s__MakeSetUnitTeleportPeriod_mode[this]
end

--Generated allocator of MakeSetUnitTeleportPeriod
function s__MakeSetUnitTeleportPeriod__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 87
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeStart.create
function sc__MakeStart_create(maker, forNext)
  f__arg_unit1 = maker
  f__arg_boolean1 = forNext
  TriggerEvaluate(st__MakeStart_create)
  return f__result_integer
end

--Generated method caller for MakeStart.onDestroy
function sc__MakeStart_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeStart_unitLastClic[this])
  s__MakeStart_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeStart.saveLoc
function sc__MakeStart_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeStart_saveLoc)
end

--Generated method caller for MakeStart.isLastLocSavedUsed
function sc__MakeStart_isLastLocSavedUsed(this)
  return s__MakeStart_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeStart.cancelLastAction
function sc__MakeStart_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[88])
  return f__result_boolean
end

--Generated method caller for MakeStart.redoLastAction
function sc__MakeStart_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[88])
  return f__result_boolean
end

--Generated method caller for MakeStart.forNext
function sc__MakeStart_forNext(this)
  return s__MakeStart_forNextB[this]
end

--Generated allocator of MakeStart
function s__MakeStart__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 88
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainCopyPaste.create
function sc__MakeTerrainCopyPaste_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeTerrainCopyPaste_create)
  return f__result_integer
end

--Generated method caller for MakeTerrainCopyPaste.onDestroy
function sc__MakeTerrainCopyPaste_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic1[this])
  s__MakeTerrainCopyPaste_unitLastClic1[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic2[this])
  s__MakeTerrainCopyPaste_unitLastClic2[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic3[this])
  s__MakeTerrainCopyPaste_unitLastClic3[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeTerrainCopyPaste.saveLoc
function sc__MakeTerrainCopyPaste_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeTerrainCopyPaste_saveLoc)
end

--Generated method caller for MakeTerrainCopyPaste.cancelLastAction
function sc__MakeTerrainCopyPaste_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[89])
  return f__result_boolean
end

--Generated method caller for MakeTerrainCopyPaste.redoLastAction
function sc__MakeTerrainCopyPaste_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[89])
  return f__result_boolean
end

--Generated allocator of MakeTerrainCopyPaste
function s__MakeTerrainCopyPaste__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 89
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainCreate.isLastLocSavedUsed
function sc__MakeTerrainCreate_isLastLocSavedUsed(this)
  return s__MakeTerrainCreate_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeTerrainCreate.getTerrainType
function sc__MakeTerrainCreate_getTerrainType(this)
  return s__MakeTerrainCreate_terrainType[this]
end

--Generated method caller for MakeTerrainCreate.create
function sc__MakeTerrainCreate_create(maker, terrainType)
  f__arg_unit1 = maker
  f__arg_integer1 = terrainType
  TriggerEvaluate(st__MakeTerrainCreate_create)
  return f__result_integer
end

--Generated method caller for MakeTerrainCreate.onDestroy
function sc__MakeTerrainCreate_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainCreate_unitLastClic[this])
  s__MakeTerrainCreate_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeTerrainCreate.saveLoc
function sc__MakeTerrainCreate_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeTerrainCreate_saveLoc)
end

--Generated method caller for MakeTerrainCreate.unsaveLocDefinitely
function sc__MakeTerrainCreate_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeTerrainCreate_unsaveLocDefinitely)
end

--Generated method caller for MakeTerrainCreate.cancelLastAction
function sc__MakeTerrainCreate_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[90])
  return f__result_boolean
end

--Generated method caller for MakeTerrainCreate.redoLastAction
function sc__MakeTerrainCreate_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[90])
  return f__result_boolean
end

--Generated allocator of MakeTerrainCreate
function s__MakeTerrainCreate__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 90
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainHeight.create
function sc__MakeTerrainHeight_create(maker, radius, height)
  f__arg_unit1 = maker
  f__arg_real1 = radius
  f__arg_real2 = height
  TriggerEvaluate(st__MakeTerrainHeight_create)
  return f__result_integer
end

--Generated method caller for MakeTerrainHeight.getRadius
function sc__MakeTerrainHeight_getRadius(this)
  return s__MakeTerrainHeight_radius[this]
end

--Generated method caller for MakeTerrainHeight.getHeight
function sc__MakeTerrainHeight_getHeight(this)
  return s__MakeTerrainHeight_height[this]
end

--Generated method caller for MakeTerrainHeight.onDestroy
function sc__MakeTerrainHeight_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeTerrainHeight.cancelLastAction
function sc__MakeTerrainHeight_cancelLastAction(this)
  return false
end

--Generated method caller for MakeTerrainHeight.redoLastAction
function sc__MakeTerrainHeight_redoLastAction(this)
  return false
end

--Generated allocator of MakeTerrainHeight
function s__MakeTerrainHeight__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 91
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainHorizontalSymmetry.isLastLocSavedUsed
function sc__MakeTerrainHorizontalSymmetry_isLastLocSavedUsed(this)
  return s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeTerrainHorizontalSymmetry.create
function sc__MakeTerrainHorizontalSymmetry_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeTerrainHorizontalSymmetry_create)
  return f__result_integer
end

--Generated method caller for MakeTerrainHorizontalSymmetry.onDestroy
function sc__MakeTerrainHorizontalSymmetry_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainHorizontalSymmetry_unitLastClic[this])
  s__MakeTerrainHorizontalSymmetry_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeTerrainHorizontalSymmetry.saveLoc
function sc__MakeTerrainHorizontalSymmetry_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeTerrainHorizontalSymmetry_saveLoc)
end

--Generated method caller for MakeTerrainHorizontalSymmetry.unsaveLocDefinitely
function sc__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely)
end

--Generated method caller for MakeTerrainHorizontalSymmetry.cancelLastAction
function sc__MakeTerrainHorizontalSymmetry_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[92])
  return f__result_boolean
end

--Generated method caller for MakeTerrainHorizontalSymmetry.redoLastAction
function sc__MakeTerrainHorizontalSymmetry_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[92])
  return f__result_boolean
end

--Generated allocator of MakeTerrainHorizontalSymmetry
function s__MakeTerrainHorizontalSymmetry__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 92
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeTerrainVerticalSymmetry.isLastLocSavedUsed
function sc__MakeTerrainVerticalSymmetry_isLastLocSavedUsed(this)
  return s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeTerrainVerticalSymmetry.create
function sc__MakeTerrainVerticalSymmetry_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeTerrainVerticalSymmetry_create)
  return f__result_integer
end

--Generated method caller for MakeTerrainVerticalSymmetry.onDestroy
function sc__MakeTerrainVerticalSymmetry_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainVerticalSymmetry_unitLastClic[this])
  s__MakeTerrainVerticalSymmetry_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeTerrainVerticalSymmetry.saveLoc
function sc__MakeTerrainVerticalSymmetry_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeTerrainVerticalSymmetry_saveLoc)
end

--Generated method caller for MakeTerrainVerticalSymmetry.unsaveLocDefinitely
function sc__MakeTerrainVerticalSymmetry_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeTerrainVerticalSymmetry_unsaveLocDefinitely)
end

--Generated method caller for MakeTerrainVerticalSymmetry.cancelLastAction
function sc__MakeTerrainVerticalSymmetry_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[93])
  return f__result_boolean
end

--Generated method caller for MakeTerrainVerticalSymmetry.redoLastAction
function sc__MakeTerrainVerticalSymmetry_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[93])
  return f__result_boolean
end

--Generated allocator of MakeTerrainVerticalSymmetry
function s__MakeTerrainVerticalSymmetry__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 93
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MakeVisibilityModifier.create
function sc__MakeVisibilityModifier_create(maker)
  f__arg_unit1 = maker
  TriggerEvaluate(st__MakeVisibilityModifier_create)
  return f__result_integer
end

--Generated method caller for MakeVisibilityModifier.onDestroy
function sc__MakeVisibilityModifier_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeVisibilityModifier_unitLastClic[this])
  s__MakeVisibilityModifier_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeVisibilityModifier.saveLoc
function sc__MakeVisibilityModifier_saveLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MakeVisibilityModifier_saveLoc)
end

--Generated method caller for MakeVisibilityModifier.unsaveLocDefinitely
function sc__MakeVisibilityModifier_unsaveLocDefinitely(this)
  f__arg_this = this
  TriggerEvaluate(st__MakeVisibilityModifier_unsaveLocDefinitely)
end

--Generated method caller for MakeVisibilityModifier.isLastLocSavedUsed
function sc__MakeVisibilityModifier_isLastLocSavedUsed(this)
  return s__MakeVisibilityModifier_lastLocSavedIsUsed[this]
end

--Generated method caller for MakeVisibilityModifier.cancelLastAction
function sc__MakeVisibilityModifier_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[94])
  return f__result_boolean
end

--Generated method caller for MakeVisibilityModifier.redoLastAction
function sc__MakeVisibilityModifier_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[94])
  return f__result_boolean
end

--Generated allocator of MakeVisibilityModifier
function s__MakeVisibilityModifier__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 94
  kthis = this

  si__Make_V[this] = -1
  return this
end


--Generated method caller for MonsterMultiplePatrols.storeNewLoc
function sc__MonsterMultiplePatrols_storeNewLoc(x, l__y)
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MonsterMultiplePatrols_storeNewLoc)
  return f__result_boolean
end

--Generated method caller for MonsterMultiplePatrols.destroyLocs
function sc__MonsterMultiplePatrols_destroyLocs()
  s__MonsterMultiplePatrols_staticLastLocInd = -1
end

--Generated method caller for MonsterMultiplePatrols.getId
function sc__MonsterMultiplePatrols_getId(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getId[95])
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrols.getCurrentTrigger
function sc__MonsterMultiplePatrols_getCurrentTrigger(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrols_getCurrentTrigger)
  return f__result_trigger
end

--Generated method caller for MonsterMultiplePatrols.removeUnit
function sc__MonsterMultiplePatrols_removeUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_removeUnit[95])
end

--Generated method caller for MonsterMultiplePatrols.killUnit
function sc__MonsterMultiplePatrols_killUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_killUnit[95])
end

--Generated method caller for MonsterMultiplePatrols.onDestroy
function sc__MonsterMultiplePatrols_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_onDestroy[95])
end

--Generated method caller for MonsterMultiplePatrols.nextMove
function sc__MonsterMultiplePatrols_nextMove(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrols_nextMove)
end

--Generated method caller for MonsterMultiplePatrols.createUnit
function sc__MonsterMultiplePatrols_createUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_createUnit[95])
end

--Generated method caller for MonsterMultiplePatrols.getLife
function sc__MonsterMultiplePatrols_getLife(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getLife[95])
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrols.setLife
function sc__MonsterMultiplePatrols_setLife(this, life)
  f__arg_this = this
  f__arg_integer1 = life
  TriggerEvaluate(st__Monster_setLife[95])
end

--Generated method caller for MonsterMultiplePatrols.destroyLastLoc
function sc__MonsterMultiplePatrols_destroyLastLoc(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterMultiplePatrols_destroyLastLoc)
  return f__result_boolean
end

--Generated method caller for MonsterMultiplePatrols.addNewLoc
function sc__MonsterMultiplePatrols_addNewLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MonsterMultiplePatrols_addNewLoc)
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrols.getMonsterType
function sc__MonsterMultiplePatrols_getMonsterType(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getMonsterType[95])
  return f__result_integer
end

--Generated method caller for MonsterMultiplePatrols.setMonsterType
function sc__MonsterMultiplePatrols_setMonsterType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__Monster_setMonsterType[95])
  return f__result_boolean
end

--Generated method caller for MonsterMultiplePatrols.temporarilyDisable
function sc__MonsterMultiplePatrols_temporarilyDisable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Monster_temporarilyDisable[95])
end

--Generated method caller for MonsterMultiplePatrols.temporarilyEnable
function sc__MonsterMultiplePatrols_temporarilyEnable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Monster_temporarilyEnable[95])
end

--Generated method caller for MonsterMultiplePatrols.setBaseColor
function sc__MonsterMultiplePatrols_setBaseColor(this, colorString)
  f__arg_this = this
  f__arg_string1 = colorString
  TriggerEvaluate(st__Monster_setBaseColor[95])
end

--Generated method caller for MonsterMultiplePatrols.setVertexColor
function sc__MonsterMultiplePatrols_setVertexColor(this, vcRed, vcGreen, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcRed
  f__arg_real2 = vcGreen
  f__arg_real3 = vcBlue
  TriggerEvaluate(st__Monster_setVertexColor[95])
end

--Generated method caller for MonsterMultiplePatrols.reinitColor
function sc__MonsterMultiplePatrols_reinitColor(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_reinitColor[95])
end

--Generated method caller for MonsterMultiplePatrols.toString
function sc__MonsterMultiplePatrols_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_toString[95])
  return f__result_string
end

--Generated allocator of MonsterMultiplePatrols
function s__MonsterMultiplePatrols__allocate()
  local kthis = nil
  local this = si__Monster_F
  if (this ~= 0) then
    if (this < 8191) then
      si__Monster_F = si__Monster_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        si__Monster_F = si__Monster_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          si__Monster_F = si__Monster_3V[this - 16382]
        else
          si__Monster_F = si__Monster_4V[this - 24573]
        end
      elseif (this < 40955) then
        si__Monster_F = si__Monster_5V[this - 32764]
      elseif (this < 49146) then
        si__Monster_F = si__Monster_6V[this - 40955]
      else
        si__Monster_F = si__Monster_7V[this - 49146]
      end
    elseif (this < 65528) then
      si__Monster_F = si__Monster_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        si__Monster_F = si__Monster_9V[this - 65528]
      else
        si__Monster_F = si__Monster_10V[this - 73719]
      end
    elseif (this < 90101) then
      si__Monster_F = si__Monster_11V[this - 81910]
    elseif (this < 98292) then
      si__Monster_F = si__Monster_12V[this - 90101]
    else
      si__Monster_F = si__Monster_13V[this - 98292]
    end
  else
    si__Monster_I = si__Monster_I + 1
    this = si__Monster_I
  end
  if (this > 100000) then
    return 0
  end

  if (this < 8191) then
    s__Monster_u[this] = nil
  elseif (this < 57337) then
    if (this < 16382) then
      s__Monster_2u[this - 8191] = nil
    elseif (this < 32764) then
      if (this < 24573) then
        s__Monster_3u[this - 16382] = nil
      else
        s__Monster_4u[this - 24573] = nil
      end
    elseif (this < 40955) then
      s__Monster_5u[this - 32764] = nil
    elseif (this < 49146) then
      s__Monster_6u[this - 40955] = nil
    else
      s__Monster_7u[this - 49146] = nil
    end
  elseif (this < 65528) then
    s__Monster_8u[this - 57337] = nil
  elseif (this < 81910) then
    if (this < 73719) then
      s__Monster_9u[this - 65528] = nil
    else
      s__Monster_10u[this - 73719] = nil
    end
  elseif (this < 90101) then
    s__Monster_11u[this - 81910] = nil
  elseif (this < 98292) then
    s__Monster_12u[this - 90101] = nil
  else
    s__Monster_13u[this - 98292] = nil
  end
  if (this < 8191) then
    si__Monster_type[this] = 95
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2type[this - 8191] = 95
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3type[this - 16382] = 95
      else
        si__Monster_4type[this - 24573] = 95
      end
    elseif (this < 40955) then
      si__Monster_5type[this - 32764] = 95
    elseif (this < 49146) then
      si__Monster_6type[this - 40955] = 95
    else
      si__Monster_7type[this - 49146] = 95
    end
  elseif (this < 65528) then
    si__Monster_8type[this - 57337] = 95
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9type[this - 65528] = 95
    else
      si__Monster_10type[this - 73719] = 95
    end
  elseif (this < 90101) then
    si__Monster_11type[this - 81910] = 95
  elseif (this < 98292) then
    si__Monster_12type[this - 90101] = 95
  else
    si__Monster_13type[this - 98292] = 95
  end
  kthis = this

  if (this < 8191) then
    si__Monster_V[this] = -1
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2V[this - 8191] = -1
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3V[this - 16382] = -1
      else
        si__Monster_4V[this - 24573] = -1
      end
    elseif (this < 40955) then
      si__Monster_5V[this - 32764] = -1
    elseif (this < 49146) then
      si__Monster_6V[this - 40955] = -1
    else
      si__Monster_7V[this - 49146] = -1
    end
  elseif (this < 65528) then
    si__Monster_8V[this - 57337] = -1
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9V[this - 65528] = -1
    else
      si__Monster_10V[this - 73719] = -1
    end
  elseif (this < 90101) then
    si__Monster_11V[this - 81910] = -1
  elseif (this < 98292) then
    si__Monster_12V[this - 90101] = -1
  else
    si__Monster_13V[this - 98292] = -1
  end
  return this
end


--Generated method caller for MonsterNoMove.getId
function sc__MonsterNoMove_getId(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getId[96])
  return f__result_integer
end

--Generated method caller for MonsterNoMove.removeUnit
function sc__MonsterNoMove_removeUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_removeUnit[96])
end

--Generated method caller for MonsterNoMove.killUnit
function sc__MonsterNoMove_killUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_killUnit[96])
end

--Generated method caller for MonsterNoMove.onDestroy
function sc__MonsterNoMove_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_onDestroy[96])
end

--Generated method caller for MonsterNoMove.createUnit
function sc__MonsterNoMove_createUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_createUnit[96])
end

--Generated method caller for MonsterNoMove.getLife
function sc__MonsterNoMove_getLife(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getLife[96])
  return f__result_integer
end

--Generated method caller for MonsterNoMove.setLife
function sc__MonsterNoMove_setLife(this, life)
  f__arg_this = this
  f__arg_integer1 = life
  TriggerEvaluate(st__Monster_setLife[96])
end

--Generated method caller for MonsterNoMove.getMonsterType
function sc__MonsterNoMove_getMonsterType(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getMonsterType[96])
  return f__result_integer
end

--Generated method caller for MonsterNoMove.setMonsterType
function sc__MonsterNoMove_setMonsterType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__Monster_setMonsterType[96])
  return f__result_boolean
end

--Generated method caller for MonsterNoMove.toString
function sc__MonsterNoMove_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_toString[96])
  return f__result_string
end

--Generated method caller for MonsterNoMove.temporarilyDisable
function sc__MonsterNoMove_temporarilyDisable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Monster_temporarilyDisable[96])
end

--Generated method caller for MonsterNoMove.temporarilyEnable
function sc__MonsterNoMove_temporarilyEnable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Monster_temporarilyEnable[96])
end

--Generated method caller for MonsterNoMove.setBaseColor
function sc__MonsterNoMove_setBaseColor(this, colorString)
  f__arg_this = this
  f__arg_string1 = colorString
  TriggerEvaluate(st__Monster_setBaseColor[96])
end

--Generated method caller for MonsterNoMove.setVertexColor
function sc__MonsterNoMove_setVertexColor(this, vcRed, vcGreen, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcRed
  f__arg_real2 = vcGreen
  f__arg_real3 = vcBlue
  TriggerEvaluate(st__Monster_setVertexColor[96])
end

--Generated method caller for MonsterNoMove.reinitColor
function sc__MonsterNoMove_reinitColor(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_reinitColor[96])
end

--Generated allocator of MonsterNoMove
function s__MonsterNoMove__allocate()
  local kthis = nil
  local this = si__Monster_F
  if (this ~= 0) then
    if (this < 8191) then
      si__Monster_F = si__Monster_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        si__Monster_F = si__Monster_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          si__Monster_F = si__Monster_3V[this - 16382]
        else
          si__Monster_F = si__Monster_4V[this - 24573]
        end
      elseif (this < 40955) then
        si__Monster_F = si__Monster_5V[this - 32764]
      elseif (this < 49146) then
        si__Monster_F = si__Monster_6V[this - 40955]
      else
        si__Monster_F = si__Monster_7V[this - 49146]
      end
    elseif (this < 65528) then
      si__Monster_F = si__Monster_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        si__Monster_F = si__Monster_9V[this - 65528]
      else
        si__Monster_F = si__Monster_10V[this - 73719]
      end
    elseif (this < 90101) then
      si__Monster_F = si__Monster_11V[this - 81910]
    elseif (this < 98292) then
      si__Monster_F = si__Monster_12V[this - 90101]
    else
      si__Monster_F = si__Monster_13V[this - 98292]
    end
  else
    si__Monster_I = si__Monster_I + 1
    this = si__Monster_I
  end
  if (this > 100000) then
    return 0
  end

  if (this < 8191) then
    s__Monster_u[this] = nil
  elseif (this < 57337) then
    if (this < 16382) then
      s__Monster_2u[this - 8191] = nil
    elseif (this < 32764) then
      if (this < 24573) then
        s__Monster_3u[this - 16382] = nil
      else
        s__Monster_4u[this - 24573] = nil
      end
    elseif (this < 40955) then
      s__Monster_5u[this - 32764] = nil
    elseif (this < 49146) then
      s__Monster_6u[this - 40955] = nil
    else
      s__Monster_7u[this - 49146] = nil
    end
  elseif (this < 65528) then
    s__Monster_8u[this - 57337] = nil
  elseif (this < 81910) then
    if (this < 73719) then
      s__Monster_9u[this - 65528] = nil
    else
      s__Monster_10u[this - 73719] = nil
    end
  elseif (this < 90101) then
    s__Monster_11u[this - 81910] = nil
  elseif (this < 98292) then
    s__Monster_12u[this - 90101] = nil
  else
    s__Monster_13u[this - 98292] = nil
  end
  if (this < 8191) then
    si__Monster_type[this] = 96
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2type[this - 8191] = 96
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3type[this - 16382] = 96
      else
        si__Monster_4type[this - 24573] = 96
      end
    elseif (this < 40955) then
      si__Monster_5type[this - 32764] = 96
    elseif (this < 49146) then
      si__Monster_6type[this - 40955] = 96
    else
      si__Monster_7type[this - 49146] = 96
    end
  elseif (this < 65528) then
    si__Monster_8type[this - 57337] = 96
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9type[this - 65528] = 96
    else
      si__Monster_10type[this - 73719] = 96
    end
  elseif (this < 90101) then
    si__Monster_11type[this - 81910] = 96
  elseif (this < 98292) then
    si__Monster_12type[this - 90101] = 96
  else
    si__Monster_13type[this - 98292] = 96
  end
  kthis = this

  if (this < 8191) then
    si__Monster_V[this] = -1
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2V[this - 8191] = -1
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3V[this - 16382] = -1
      else
        si__Monster_4V[this - 24573] = -1
      end
    elseif (this < 40955) then
      si__Monster_5V[this - 32764] = -1
    elseif (this < 49146) then
      si__Monster_6V[this - 40955] = -1
    else
      si__Monster_7V[this - 49146] = -1
    end
  elseif (this < 65528) then
    si__Monster_8V[this - 57337] = -1
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9V[this - 65528] = -1
    else
      si__Monster_10V[this - 73719] = -1
    end
  elseif (this < 90101) then
    si__Monster_11V[this - 81910] = -1
  elseif (this < 98292) then
    si__Monster_12V[this - 90101] = -1
  else
    si__Monster_13V[this - 98292] = -1
  end
  return this
end


--Generated method caller for MonsterSimplePatrol.getId
function sc__MonsterSimplePatrol_getId(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getId[98])
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrol.removeUnit
function sc__MonsterSimplePatrol_removeUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_removeUnit[98])
end

--Generated method caller for MonsterSimplePatrol.killUnit
function sc__MonsterSimplePatrol_killUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_killUnit[98])
end

--Generated method caller for MonsterSimplePatrol.onDestroy
function sc__MonsterSimplePatrol_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_onDestroy[98])
end

--Generated method caller for MonsterSimplePatrol.createUnit
function sc__MonsterSimplePatrol_createUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_createUnit[98])
end

--Generated method caller for MonsterSimplePatrol.getLife
function sc__MonsterSimplePatrol_getLife(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getLife[98])
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrol.setLife
function sc__MonsterSimplePatrol_setLife(this, life)
  f__arg_this = this
  f__arg_integer1 = life
  TriggerEvaluate(st__Monster_setLife[98])
end

--Generated method caller for MonsterSimplePatrol.getMonsterType
function sc__MonsterSimplePatrol_getMonsterType(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getMonsterType[98])
  return f__result_integer
end

--Generated method caller for MonsterSimplePatrol.setMonsterType
function sc__MonsterSimplePatrol_setMonsterType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__Monster_setMonsterType[98])
  return f__result_boolean
end

--Generated method caller for MonsterSimplePatrol.temporarilyDisable
function sc__MonsterSimplePatrol_temporarilyDisable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Monster_temporarilyDisable[98])
end

--Generated method caller for MonsterSimplePatrol.temporarilyEnable
function sc__MonsterSimplePatrol_temporarilyEnable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Monster_temporarilyEnable[98])
end

--Generated method caller for MonsterSimplePatrol.setBaseColor
function sc__MonsterSimplePatrol_setBaseColor(this, colorString)
  f__arg_this = this
  f__arg_string1 = colorString
  TriggerEvaluate(st__Monster_setBaseColor[98])
end

--Generated method caller for MonsterSimplePatrol.setVertexColor
function sc__MonsterSimplePatrol_setVertexColor(this, vcRed, vcGreen, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcRed
  f__arg_real2 = vcGreen
  f__arg_real3 = vcBlue
  TriggerEvaluate(st__Monster_setVertexColor[98])
end

--Generated method caller for MonsterSimplePatrol.reinitColor
function sc__MonsterSimplePatrol_reinitColor(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_reinitColor[98])
end

--Generated method caller for MonsterSimplePatrol.toString
function sc__MonsterSimplePatrol_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_toString[98])
  return f__result_string
end

--Generated allocator of MonsterSimplePatrol
function s__MonsterSimplePatrol__allocate()
  local kthis = nil
  local this = si__Monster_F
  if (this ~= 0) then
    if (this < 8191) then
      si__Monster_F = si__Monster_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        si__Monster_F = si__Monster_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          si__Monster_F = si__Monster_3V[this - 16382]
        else
          si__Monster_F = si__Monster_4V[this - 24573]
        end
      elseif (this < 40955) then
        si__Monster_F = si__Monster_5V[this - 32764]
      elseif (this < 49146) then
        si__Monster_F = si__Monster_6V[this - 40955]
      else
        si__Monster_F = si__Monster_7V[this - 49146]
      end
    elseif (this < 65528) then
      si__Monster_F = si__Monster_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        si__Monster_F = si__Monster_9V[this - 65528]
      else
        si__Monster_F = si__Monster_10V[this - 73719]
      end
    elseif (this < 90101) then
      si__Monster_F = si__Monster_11V[this - 81910]
    elseif (this < 98292) then
      si__Monster_F = si__Monster_12V[this - 90101]
    else
      si__Monster_F = si__Monster_13V[this - 98292]
    end
  else
    si__Monster_I = si__Monster_I + 1
    this = si__Monster_I
  end
  if (this > 100000) then
    return 0
  end

  if (this < 8191) then
    s__Monster_u[this] = nil
  elseif (this < 57337) then
    if (this < 16382) then
      s__Monster_2u[this - 8191] = nil
    elseif (this < 32764) then
      if (this < 24573) then
        s__Monster_3u[this - 16382] = nil
      else
        s__Monster_4u[this - 24573] = nil
      end
    elseif (this < 40955) then
      s__Monster_5u[this - 32764] = nil
    elseif (this < 49146) then
      s__Monster_6u[this - 40955] = nil
    else
      s__Monster_7u[this - 49146] = nil
    end
  elseif (this < 65528) then
    s__Monster_8u[this - 57337] = nil
  elseif (this < 81910) then
    if (this < 73719) then
      s__Monster_9u[this - 65528] = nil
    else
      s__Monster_10u[this - 73719] = nil
    end
  elseif (this < 90101) then
    s__Monster_11u[this - 81910] = nil
  elseif (this < 98292) then
    s__Monster_12u[this - 90101] = nil
  else
    s__Monster_13u[this - 98292] = nil
  end
  if (this < 8191) then
    si__Monster_type[this] = 98
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2type[this - 8191] = 98
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3type[this - 16382] = 98
      else
        si__Monster_4type[this - 24573] = 98
      end
    elseif (this < 40955) then
      si__Monster_5type[this - 32764] = 98
    elseif (this < 49146) then
      si__Monster_6type[this - 40955] = 98
    else
      si__Monster_7type[this - 49146] = 98
    end
  elseif (this < 65528) then
    si__Monster_8type[this - 57337] = 98
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9type[this - 65528] = 98
    else
      si__Monster_10type[this - 73719] = 98
    end
  elseif (this < 90101) then
    si__Monster_11type[this - 81910] = 98
  elseif (this < 98292) then
    si__Monster_12type[this - 90101] = 98
  else
    si__Monster_13type[this - 98292] = 98
  end
  kthis = this

  if (this < 8191) then
    si__Monster_V[this] = -1
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2V[this - 8191] = -1
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3V[this - 16382] = -1
      else
        si__Monster_4V[this - 24573] = -1
      end
    elseif (this < 40955) then
      si__Monster_5V[this - 32764] = -1
    elseif (this < 49146) then
      si__Monster_6V[this - 40955] = -1
    else
      si__Monster_7V[this - 49146] = -1
    end
  elseif (this < 65528) then
    si__Monster_8V[this - 57337] = -1
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9V[this - 65528] = -1
    else
      si__Monster_10V[this - 73719] = -1
    end
  elseif (this < 90101) then
    si__Monster_11V[this - 81910] = -1
  elseif (this < 98292) then
    si__Monster_12V[this - 90101] = -1
  else
    si__Monster_13V[this - 98292] = -1
  end
  return this
end


--Generated method caller for MonsterTeleport.storeNewLoc
function sc__MonsterTeleport_storeNewLoc(x, l__y)
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MonsterTeleport_storeNewLoc)
  return f__result_boolean
end

--Generated method caller for MonsterTeleport.destroyLocs
function sc__MonsterTeleport_destroyLocs()
  s__MonsterTeleport_staticLastLocInd = -1
end

--Generated method caller for MonsterTeleport.getId
function sc__MonsterTeleport_getId(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getId[99])
  return f__result_integer
end

--Generated method caller for MonsterTeleport.removeUnit
function sc__MonsterTeleport_removeUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_removeUnit[99])
end

--Generated method caller for MonsterTeleport.killUnit
function sc__MonsterTeleport_killUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_killUnit[99])
end

--Generated method caller for MonsterTeleport.onDestroy
function sc__MonsterTeleport_onDestroy(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_onDestroy[99])
end

--Generated method caller for MonsterTeleport.setPeriod
function sc__MonsterTeleport_setPeriod(this, period)
  f__arg_this = this
  f__arg_real1 = period
  TriggerEvaluate(st__MonsterTeleport_setPeriod)
  return f__result_boolean
end

--Generated method caller for MonsterTeleport.getPeriod
function sc__MonsterTeleport_getPeriod(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleport_getPeriod)
  return f__result_real
end

--Generated method caller for MonsterTeleport.createUnit
function sc__MonsterTeleport_createUnit(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_createUnit[99])
end

--Generated method caller for MonsterTeleport.nextMove
function sc__MonsterTeleport_nextMove(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleport_nextMove)
end

--Generated method caller for MonsterTeleport.getLife
function sc__MonsterTeleport_getLife(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getLife[99])
  return f__result_integer
end

--Generated method caller for MonsterTeleport.setLife
function sc__MonsterTeleport_setLife(this, life)
  f__arg_this = this
  f__arg_integer1 = life
  TriggerEvaluate(st__Monster_setLife[99])
end

--Generated method caller for MonsterTeleport.getX
function sc__MonsterTeleport_getX(this, id)
  f__arg_this = this
  f__arg_integer1 = id
  TriggerEvaluate(st__MonsterTeleport_getX)
  return f__result_real
end

--Generated method caller for MonsterTeleport.getY
function sc__MonsterTeleport_getY(this, id)
  f__arg_this = this
  f__arg_integer1 = id
  TriggerEvaluate(st__MonsterTeleport_getY)
  return f__result_real
end

--Generated method caller for MonsterTeleport.addNewLoc
function sc__MonsterTeleport_addNewLoc(this, x, l__y)
  f__arg_this = this
  f__arg_real1 = x
  f__arg_real2 = l__y
  TriggerEvaluate(st__MonsterTeleport_addNewLoc)
  return f__result_boolean
end

--Generated method caller for MonsterTeleport.destroyLastLoc
function sc__MonsterTeleport_destroyLastLoc(this)
  f__arg_this = this
  TriggerEvaluate(st__MonsterTeleport_destroyLastLoc)
  return f__result_boolean
end

--Generated method caller for MonsterTeleport.getMonsterType
function sc__MonsterTeleport_getMonsterType(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_getMonsterType[99])
  return f__result_integer
end

--Generated method caller for MonsterTeleport.setMonsterType
function sc__MonsterTeleport_setMonsterType(this, mt)
  f__arg_this = this
  f__arg_integer1 = mt
  TriggerEvaluate(st__Monster_setMonsterType[99])
  return f__result_boolean
end

--Generated method caller for MonsterTeleport.temporarilyDisable
function sc__MonsterTeleport_temporarilyDisable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Monster_temporarilyDisable[99])
end

--Generated method caller for MonsterTeleport.temporarilyEnable
function sc__MonsterTeleport_temporarilyEnable(this, disablingTimer)
  f__arg_this = this
  f__arg_timer1 = disablingTimer
  TriggerEvaluate(st__Monster_temporarilyEnable[99])
end

--Generated method caller for MonsterTeleport.setBaseColor
function sc__MonsterTeleport_setBaseColor(this, colorString)
  f__arg_this = this
  f__arg_string1 = colorString
  TriggerEvaluate(st__Monster_setBaseColor[99])
end

--Generated method caller for MonsterTeleport.setVertexColor
function sc__MonsterTeleport_setVertexColor(this, vcRed, vcGreen, vcBlue)
  f__arg_this = this
  f__arg_real1 = vcRed
  f__arg_real2 = vcGreen
  f__arg_real3 = vcBlue
  TriggerEvaluate(st__Monster_setVertexColor[99])
end

--Generated method caller for MonsterTeleport.reinitColor
function sc__MonsterTeleport_reinitColor(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_reinitColor[99])
end

--Generated method caller for MonsterTeleport.toString
function sc__MonsterTeleport_toString(this)
  f__arg_this = this
  TriggerEvaluate(st__Monster_toString[99])
  return f__result_string
end

--Generated allocator of MonsterTeleport
function s__MonsterTeleport__allocate()
  local kthis = nil
  local this = si__Monster_F
  if (this ~= 0) then
    if (this < 8191) then
      si__Monster_F = si__Monster_V[this]
    elseif (this < 57337) then
      if (this < 16382) then
        si__Monster_F = si__Monster_2V[this - 8191]
      elseif (this < 32764) then
        if (this < 24573) then
          si__Monster_F = si__Monster_3V[this - 16382]
        else
          si__Monster_F = si__Monster_4V[this - 24573]
        end
      elseif (this < 40955) then
        si__Monster_F = si__Monster_5V[this - 32764]
      elseif (this < 49146) then
        si__Monster_F = si__Monster_6V[this - 40955]
      else
        si__Monster_F = si__Monster_7V[this - 49146]
      end
    elseif (this < 65528) then
      si__Monster_F = si__Monster_8V[this - 57337]
    elseif (this < 81910) then
      if (this < 73719) then
        si__Monster_F = si__Monster_9V[this - 65528]
      else
        si__Monster_F = si__Monster_10V[this - 73719]
      end
    elseif (this < 90101) then
      si__Monster_F = si__Monster_11V[this - 81910]
    elseif (this < 98292) then
      si__Monster_F = si__Monster_12V[this - 90101]
    else
      si__Monster_F = si__Monster_13V[this - 98292]
    end
  else
    si__Monster_I = si__Monster_I + 1
    this = si__Monster_I
  end
  if (this > 100000) then
    return 0
  end

  if (this < 8191) then
    s__Monster_u[this] = nil
  elseif (this < 57337) then
    if (this < 16382) then
      s__Monster_2u[this - 8191] = nil
    elseif (this < 32764) then
      if (this < 24573) then
        s__Monster_3u[this - 16382] = nil
      else
        s__Monster_4u[this - 24573] = nil
      end
    elseif (this < 40955) then
      s__Monster_5u[this - 32764] = nil
    elseif (this < 49146) then
      s__Monster_6u[this - 40955] = nil
    else
      s__Monster_7u[this - 49146] = nil
    end
  elseif (this < 65528) then
    s__Monster_8u[this - 57337] = nil
  elseif (this < 81910) then
    if (this < 73719) then
      s__Monster_9u[this - 65528] = nil
    else
      s__Monster_10u[this - 73719] = nil
    end
  elseif (this < 90101) then
    s__Monster_11u[this - 81910] = nil
  elseif (this < 98292) then
    s__Monster_12u[this - 90101] = nil
  else
    s__Monster_13u[this - 98292] = nil
  end
  if (this < 8191) then
    si__Monster_type[this] = 99
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2type[this - 8191] = 99
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3type[this - 16382] = 99
      else
        si__Monster_4type[this - 24573] = 99
      end
    elseif (this < 40955) then
      si__Monster_5type[this - 32764] = 99
    elseif (this < 49146) then
      si__Monster_6type[this - 40955] = 99
    else
      si__Monster_7type[this - 49146] = 99
    end
  elseif (this < 65528) then
    si__Monster_8type[this - 57337] = 99
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9type[this - 65528] = 99
    else
      si__Monster_10type[this - 73719] = 99
    end
  elseif (this < 90101) then
    si__Monster_11type[this - 81910] = 99
  elseif (this < 98292) then
    si__Monster_12type[this - 90101] = 99
  else
    si__Monster_13type[this - 98292] = 99
  end
  kthis = this

  if (this < 8191) then
    si__Monster_V[this] = -1
  elseif (this < 57337) then
    if (this < 16382) then
      si__Monster_2V[this - 8191] = -1
    elseif (this < 32764) then
      if (this < 24573) then
        si__Monster_3V[this - 16382] = -1
      else
        si__Monster_4V[this - 24573] = -1
      end
    elseif (this < 40955) then
      si__Monster_5V[this - 32764] = -1
    elseif (this < 49146) then
      si__Monster_6V[this - 40955] = -1
    else
      si__Monster_7V[this - 49146] = -1
    end
  elseif (this < 65528) then
    si__Monster_8V[this - 57337] = -1
  elseif (this < 81910) then
    if (this < 73719) then
      si__Monster_9V[this - 65528] = -1
    else
      si__Monster_10V[this - 73719] = -1
    end
  elseif (this < 90101) then
    si__Monster_11V[this - 81910] = -1
  elseif (this < 98292) then
    si__Monster_12V[this - 90101] = -1
  else
    si__Monster_13V[this - 98292] = -1
  end
  return this
end


--Generated method caller for MakeClearMob.create
function sc__MakeClearMob_create(maker, disableDuration)
  f__arg_unit1 = maker
  f__arg_real1 = disableDuration
  TriggerEvaluate(st__MakeClearMob_create)
  return f__result_integer
end

--Generated method caller for MakeClearMob.onDestroy
function sc__MakeClearMob_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

--Generated method caller for MakeClearMob.clickMade
function sc__MakeClearMob_clickMade(this, monsterOrCasterId)
  f__arg_this = this
  f__arg_integer1 = monsterOrCasterId
  TriggerEvaluate(st__MakeClearMob_clickMade)
end

--Generated method caller for MakeClearMob.cancelLastAction
function sc__MakeClearMob_cancelLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_cancelLastAction[104])
  return f__result_boolean
end

--Generated method caller for MakeClearMob.redoLastAction
function sc__MakeClearMob_redoLastAction(this)
  f__arg_this = this
  TriggerEvaluate(st__Make_redoLastAction[104])
  return f__result_boolean
end

--Generated allocator of MakeClearMob
function s__MakeClearMob__allocate()
  local kthis = nil
  local this = si__Make_F
  if (this ~= 0) then
    si__Make_F = si__Make_V[this]
  else
    si__Make_I = si__Make_I + 1
    this = si__Make_I
  end
  if (this > 8190) then
    return 0
  end

  si__Make_type[this] = 104
  if (si__MakeClearMob_arrN == 0) then
    si__MakeClearMob_arrI = si__MakeClearMob_arrI + 1
    kthis = si__MakeClearMob_arrI
    if (kthis > 15) then
      si__Make_V[this] = si__Make_F
      si__Make_F = this
      return 0
    end
  else
    kthis = si__MakeClearMob_arrV[si__MakeClearMob_arrN]
    si__MakeClearMob_arrN = si__MakeClearMob_arrN - 1
  end
  si__MakeClearMob_arr[this] = kthis
  s__MakeClearMob_clickedMobs[this] = (kthis - 1) * 500
  si__Make_V[this] = -1
  return this
end

function sc___prototype2_execute(i)

  TriggerExecute(st___prototype2[i])
end
function sc___prototype2_evaluate(i)

  TriggerEvaluate(st___prototype2[i])

end
function sc___prototype3_execute(i, a1)
  f__arg_integer1 = a1

  TriggerExecute(st___prototype3[i])
end
function sc___prototype3_evaluate(i, a1)
  f__arg_integer1 = a1

  TriggerEvaluate(st___prototype3[i])

end
function sc___prototype51_execute(i, a1, a2, a3)
  f__arg_sound1 = a1
  f__arg_boolean1 = a2
  f__arg_boolean2 = a3

  TriggerExecute(st___prototype51[i])
end
function sc___prototype51_evaluate(i, a1, a2, a3)
  f__arg_sound1 = a1
  f__arg_boolean1 = a2
  f__arg_boolean2 = a3

  TriggerEvaluate(st___prototype51[i])

end
function h__StopSound(a0, a1, a2)
  --hook: SoundUtils___HookStopSound
  sc___prototype51_evaluate(1, a0, a1, a2)
  StopSound(a0, a1, a2)
end

--library AfkMode:





function AreAllAliveHeroesAfk()
  local someoneAlive = false
  local someoneDead = false
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if ((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))]) ~= nil) then
      -- INLINED!!
      if (IsUnitAliveBJ((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))]))) then
        -- INLINED!!
        someoneAlive = true
        if (not isAfk[i]) then
          return false
        end
      else
        someoneDead = true
      end
    end
    i = i + 1
  end
  return someoneAlive and someoneDead
end


function KillAllHeroesIfAfk()
  local i = 0
  if (AreAllAliveHeroesAfk()) then
    while true do
      if (i > 11) then
        break
      end
      if (IsUnitAliveBJ((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))])) and isAfk[i]) then
        -- INLINED!!
        sc__Escaper_kill((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
        -- INLINED!!
      end
      i = i + 1
    end
  end
end


function KillAllHeroesAfkInFiveSeconds()
  TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
end


function SetAfkMode(playerId)
  if (afkModeTextTags[playerId] ~= nil) then
    DestroyTextTag(afkModeTextTags[playerId])
  end
  afkModeTextTags[playerId] = CreateTextTagUnitBJ(udg_colorCode[playerId] .. "AFK", (s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (playerId)]))]), AfkMode___Z, AfkMode___SIZE, 100, 100, 100, AfkMode___TRANSPARENCY)
  -- INLINED!!
  isAfk[playerId] = true
end


function StopAfk(playerId)
  if (isAfk[playerId]) then
    isAfk[playerId] = false
    DestroyTextTag(afkModeTextTags[playerId])
    afkModeTextTags[playerId] = nil
  end
end



--textmacro instance: AfkModeTimerExpires("0")
function AfkModeTimerExpires_0()
  SetAfkMode(0)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("0")
--textmacro instance: AfkModeTimerExpires("1")
function AfkModeTimerExpires_1()
  SetAfkMode(1)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("1")
--textmacro instance: AfkModeTimerExpires("2")
function AfkModeTimerExpires_2()
  SetAfkMode(2)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("2")
--textmacro instance: AfkModeTimerExpires("3")
function AfkModeTimerExpires_3()
  SetAfkMode(3)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("3")
--textmacro instance: AfkModeTimerExpires("4")
function AfkModeTimerExpires_4()
  SetAfkMode(4)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("4")
--textmacro instance: AfkModeTimerExpires("5")
function AfkModeTimerExpires_5()
  SetAfkMode(5)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("5")
--textmacro instance: AfkModeTimerExpires("6")
function AfkModeTimerExpires_6()
  SetAfkMode(6)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("6")
--textmacro instance: AfkModeTimerExpires("7")
function AfkModeTimerExpires_7()
  SetAfkMode(7)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("7")
--textmacro instance: AfkModeTimerExpires("8")
function AfkModeTimerExpires_8()
  SetAfkMode(8)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("8")
--textmacro instance: AfkModeTimerExpires("9")
function AfkModeTimerExpires_9()
  SetAfkMode(9)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("9")
--textmacro instance: AfkModeTimerExpires("10")
function AfkModeTimerExpires_10()
  SetAfkMode(10)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("10")
--textmacro instance: AfkModeTimerExpires("11")
function AfkModeTimerExpires_11()
  SetAfkMode(11)
  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end
end
--end of: AfkModeTimerExpires("11")


function GetAfkModeTimeExpiresCodeFromId(id)

  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("0")
  if (id == 0) then
    return AfkModeTimerExpires_0
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("0")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("1")
  if (id == 1) then
    return AfkModeTimerExpires_1
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("1")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("2")
  if (id == 2) then
    return AfkModeTimerExpires_2
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("2")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("3")
  if (id == 3) then
    return AfkModeTimerExpires_3
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("3")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("4")
  if (id == 4) then
    return AfkModeTimerExpires_4
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("4")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("5")
  if (id == 5) then
    return AfkModeTimerExpires_5
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("5")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("6")
  if (id == 6) then
    return AfkModeTimerExpires_6
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("6")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("7")
  if (id == 7) then
    return AfkModeTimerExpires_7
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("7")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("8")
  if (id == 8) then
    return AfkModeTimerExpires_8
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("8")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("9")
  if (id == 9) then
    return AfkModeTimerExpires_9
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("9")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("10")
  if (id == 10) then
    return AfkModeTimerExpires_10
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("10")
  --textmacro instance: GetAfkModeTimeExpiresCodeFromId("11")
  if (id == 11) then
    return AfkModeTimerExpires_11
  end
  --end of: GetAfkModeTimeExpiresCodeFromId("11")

  return nil
end


--===========================================================================
function Init_AfkMode()
  local i = 0
  while true do
    if i > 11 then
      break
    end
    afkModeTimers[i] = CreateTimer()
    isAfk[i] = false
    afkModeTextTags[i] = nil
    i = i + 1
  end
end



--library AfkMode ends
--library Ascii:


--Permet de convertir un caractère en son nombre Ascii correspondant.
--@caractere string : Caractère a convertir. Ne doit contenir qu'un seul caractère !
--@return integer : Code Ascii de caractere.
--                  Ou -1, si caractere n'est pas conforme.
function Ascii___CaractereVersAscii(caractere)
  --Le caractère est recherché dans TABLE_ASCII, et son rang est renvoyé.

  local curseurSurTableAscii = 0

  while true do
    if (curseurSurTableAscii >= Ascii___TAILLE_TABLE_ASCII) or (SubString(Ascii___TABLE_ASCII, curseurSurTableAscii, curseurSurTableAscii + 1) == caractere) then
      break
    end
    curseurSurTableAscii = curseurSurTableAscii + 1
  end

  if (curseurSurTableAscii < Ascii___TAILLE_TABLE_ASCII) then
    return curseurSurTableAscii + Ascii___DEBUT_TABLE_ASCII
  end

  --Caractère non reconnue.
  return -1
end

--Permet de convertir un code Ascii en son caractère correspondant.
--@integer source : Code Ascii a convertir. Doit être entre 32 et 126.
--@return string : Caractère correspondant au code Ascii de source.
--                 Ou chaine vide, en cas d'erreur.
function Ascii___AsciiVersCaractere(source)
  --Le caractère de TABLE_ASCII correspondant au rang est renvoyé.
  if (source >= Ascii___DEBUT_TABLE_ASCII) and (source <= (StringLength(Ascii___TABLE_ASCII) - 1 + Ascii___DEBUT_TABLE_ASCII)) then
    return SubString(Ascii___TABLE_ASCII, source - Ascii___DEBUT_TABLE_ASCII, source - (Ascii___DEBUT_TABLE_ASCII - 1))
  end
  --Code Ascii non reconnu.
  return ""
end

function String2Ascii(source)
  --La chaine est parcouru de gauche à droite et convertis en même temps.
  --En cas d'erreur, -1 est renvoyé.

  local resultat = 0
  local resultatIntermediaire = 0
  local curseurSurSource = 0
  local sourceTaille = StringLength(source)

  while true do
    if (curseurSurSource >= sourceTaille) or (resultatIntermediaire == -1) then
      break
    end
    resultatIntermediaire = Ascii___CaractereVersAscii(SubString(source, curseurSurSource, curseurSurSource + 1))
    resultat = resultat * 256 + resultatIntermediaire
    curseurSurSource = curseurSurSource + 1
  end

  if (resultatIntermediaire ~= -1) then
    return resultat
  end

  --Un caractère n'a pas été reconnue dans source.
  return -1
end

function Ascii2String(source)
  --source est divisé successivement par 256 et le reste est utilisé pour retrouver le caractère correspondant.
  --Le résultat est construit en même temps.
  --En cas d'erreur, "" est retourné.

  local resultat = ""
  local resultatIntermediaire = " "
  local modulo = 1

  while true do
    if (resultatIntermediaire == "") or (modulo <= 0) then
      break
    end
    modulo = source - (source // 256) * 256
    resultatIntermediaire = Ascii___AsciiVersCaractere(modulo)
    resultat = resultatIntermediaire .. resultat
    source = source // 256
  end

  if (modulo == 0) then
    return resultat
  end

  --Le code n'a pas été reconnue.
  return ""
end


--library Ascii ends
--library AutoContinueAfterSliding:





function AutoContinueAfterSliding(n)
  local hero = (s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))])
  -- INLINED!!
  --vérification de l'angle
  local angleHero2Target = Atan2(lastClickedY[n] - GetUnitY(hero), lastClickedX[n] - GetUnitX(hero)) * bj_RADTODEG
  local diffAngle = RAbsBJ(angleHero2Target - GetUnitFacing(hero))
  if (diffAngle > AutoContinueAfterSliding__ECART_MAX_ANGLE and diffAngle < 360 - AutoContinueAfterSliding__ECART_MAX_ANGLE) then
    --écart trop grand
    return
  end

  --cas dernier clic : un point
  if (isLastTargetALocation[n]) then
    IssuePointOrder(hero, "move", lastClickedX[n], lastClickedY[n])

    --cas dernier clic : pas un point
  else
    --dernier widget cliqué n'existe pas (donc aucun clic effectué pendant le slide)
    if (lastClickedWidgets[n] == nil) then
      return
    else
      --cible n'a pas bougé
      if (GetWidgetX(lastClickedWidgets[n]) == lastClickedX[n] and GetWidgetY(lastClickedWidgets[n]) == lastClickedY[n]) then
        --ordre clic droit vers cible
        IssueTargetOrder(hero, "smart", lastClickedWidgets[n])
      else
        --bouger vers ancien endroit du widget
        IssuePointOrder(hero, "move", lastClickedX[n], lastClickedY[n])
      end
    end
  end
end


function ClearLastClickSave(n)
  isLastTargetALocation[n] = false
  lastClickedWidgets[n] = nil
end


--===========================================================================
function Init_AutoContinueAfterSliding()
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    udg_autoContinueAfterSliding[i] = true
    i = i + 1
  end
end



--library AutoContinueAfterSliding ends
--library DeplacementHeroHorsDeathPath:




function DeplacementHeroHorsDeathPath(hero)
  local angle = nil
  local angleIdeal = nil
  local x = nil
  local l__y = nil
  local xDecal = nil
  local yDecal = nil
  local xHero = GetUnitX(hero)
  local yHero = GetUnitY(hero)
  local nbPointsNonDeath = nil
  local anglesCumules = nil
  local premierAngleNonDeath = 0
  local dernierAngleNonDeath = 0
  local deuxiemePremierAngleNonDeath = 0
  local deuxiemeDernierAngleNonDeath = 0
  local angleNonDeathTrouveALInstant = false

  --vérification que le héros est sur le terrain qui tue
  if ((s__TerrainType_kind[(sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xHero, yHero))]) ~= "death") then
    -- INLINED!!
    return
  end

  --parcours des angles pour voir où se situent les terrains non death
  angle = 0
  while true do
    if angle >= 360 then
      break
    end
    x = xHero + DeplacementHeroHorsDeathPath___VALEUR_DECALAGE * CosBJ(angle)
    l__y = yHero + DeplacementHeroHorsDeathPath___VALEUR_DECALAGE * SinBJ(angle)
    if ((s__TerrainType_kind[(sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y))]) ~= "death") then
      -- INLINED!!
      if (not angleNonDeathTrouveALInstant) then
        if (dernierAngleNonDeath == 0) then
          --pas encore d'angle non death trouvé
          premierAngleNonDeath = angle
        else
          deuxiemePremierAngleNonDeath = angle
        end
        angleNonDeathTrouveALInstant = true
      end
    else
      if (angleNonDeathTrouveALInstant) then
        --dernierAngleNonDeathTrouvé
        if (dernierAngleNonDeath == 0) then
          dernierAngleNonDeath = angle - DeplacementHeroHorsDeathPath___GRADUATION_ANGLE
        else
          deuxiemeDernierAngleNonDeath = angle - DeplacementHeroHorsDeathPath___GRADUATION_ANGLE
        end
        angleNonDeathTrouveALInstant = false
      end
    end
    angle = angle + DeplacementHeroHorsDeathPath___GRADUATION_ANGLE
  end
  --ajout du dernier angle s'il est non death
  if (angleNonDeathTrouveALInstant) then
    if (dernierAngleNonDeath == 0) then
      dernierAngleNonDeath = angle - DeplacementHeroHorsDeathPath___GRADUATION_ANGLE
    else
      deuxiemeDernierAngleNonDeath = angle - DeplacementHeroHorsDeathPath___GRADUATION_ANGLE
    end
  end

  --calcul de l'angle idéal
  --cas simple où l'ensemble des angles non death ne passe pas par 0
  if (deuxiemePremierAngleNonDeath == 0) then
    --cas aucun angle non death trouvé
    if (dernierAngleNonDeath == 0) then
      return
    end
    angleIdeal = (dernierAngleNonDeath + premierAngleNonDeath) / 2
  else
    --cas où l'ensemble des angles non death passe par 0
    if (premierAngleNonDeath ~= 0 or deuxiemeDernierAngleNonDeath ~= 355) then
      --cas où l'on a deux ensembles d'angles distincts
      if (dernierAngleNonDeath - premierAngleNonDeath > deuxiemeDernierAngleNonDeath - deuxiemePremierAngleNonDeath) then
        --on choisit l'ensemble d'angles le plus large
        angleIdeal = (dernierAngleNonDeath + premierAngleNonDeath) / 2
      else
        angleIdeal = (deuxiemeDernierAngleNonDeath + deuxiemePremierAngleNonDeath) / 2
      end
    else
      --les deux ensembles d'angles se rejoignent
      angleIdeal = ((dernierAngleNonDeath + deuxiemePremierAngleNonDeath) / 2) + 180
    end
  end
  --déplacement du héros
  xDecal = xHero + DeplacementHeroHorsDeathPath___VALEUR_DECALAGE * CosBJ(angleIdeal)
  yDecal = yHero + DeplacementHeroHorsDeathPath___VALEUR_DECALAGE * SinBJ(angleIdeal)
  SetUnitPosition(hero, xDecal, yDecal)
end




--library DeplacementHeroHorsDeathPath ends
--library Disco:


function ApplyRandomColor(n)
  local esc = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)])
  -- INLINED!!
  sc__Escaper_setBaseColorDisco(esc, GetRandomInt(0, 12))
  sc__Escaper_setVcRed(esc, GetRandomPercentageBJ())
  sc__Escaper_setVcGreen(esc, GetRandomPercentageBJ())
  sc__Escaper_setVcBlue(esc, GetRandomPercentageBJ())
  sc__Escaper_setVcTransparency(esc, GetRandomReal(0, 25))
  SetUnitVertexColorBJ((s__Escaper_hero[(esc)]), (s__Escaper_vcRed[(esc)]), (s__Escaper_vcGreen[(esc)]), (s__Escaper_vcBlue[(esc)]), (s__Escaper_vcTransparency[(esc)]))
  -- INLINED!!
end


function Disco_Actions()
  local n = 0
  while true do
    if (s__Escaper_discoTrigger[(s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)])] == GetTriggeringTrigger()) then
      break
    end
    -- INLINED!!
    if (n > 11) then
      return
    end
    n = n + 1
  end
  ApplyRandomColor(n)
end




--library Disco ends
--library FunctionsOnNumbers:



function EstChiffre(str)
  if (str == "0" or str == "1" or str == "2" or str == "3" or str == "4") then
    return true
  end
  if (str == "5" or str == "6" or str == "7" or str == "8" or str == "9") then
    return true
  end
  return false
end

function IsInteger(str)
  local length = StringLength(str)
  local i = nil

  if (SubString(str, 0, 1) == "-") then
    i = 1
  else
    i = 0
  end

  while true do
    if (i >= length) then
      break
    end
    if (not EstChiffre(SubString(str, i, i + 1))) then
      return false
    end
    i = i + 1
  end

  return true
end

function IsPositiveInteger(str)
  return (SubString(str, 0, 1) ~= "-" and IsInteger(str))
end

function IsPercentage(str)
  local n = S2I(str)
  return (IsPositiveInteger(str) and n >= 0 and n <= 100)
end

function PercentageStringOrX2Integer(str)
  if (not IsPercentage(str)) then
    if (str == "x") then
      return GetRandomInt(0, 100)
    end
    return -1
  end
  return S2I(str)
end

function I2HexaString(n)
  if (n < 10) then
    return I2S(n)
  end
  if (n == 10) then
    return "A"
  end
  if (n == 11) then
    return "B"
  end
  if (n == 12) then
    return "C"
  end
  if (n == 13) then
    return "D"
  end
  if (n == 14) then
    return "E"
  end
  if (n == 15) then
    return "F"
  end
  return "0"
end



--library FunctionsOnNumbers ends
--library GameTime:





function Trig_time_of_game_Actions()
  local timeStr = nil
  local hourStr = nil
  local minStr = nil
  local secStr = nil

  --set integers
  if (GameTime__seconds >= 59) then
    GameTime__seconds = 0
    if (GameTime__minuts >= 59) then
      GameTime__minuts = 0
      GameTime__hours = GameTime__hours + 1
    else
      GameTime__minuts = GameTime__minuts + 1
    end
  else
    GameTime__seconds = GameTime__seconds + 1
  end


  --set strings
  hourStr = I2S(GameTime__hours)

  if (GameTime__minuts < 10) then
    minStr = "0" .. I2S(GameTime__minuts)
  else
    minStr = I2S(GameTime__minuts)
  end

  if (GameTime__seconds < 10) then
    secStr = "0" .. I2S(GameTime__seconds)
  else
    secStr = I2S(GameTime__seconds)
  end

  timeStr = "|Cfffed312 Game time :  " .. hourStr .. " h  " .. minStr .. " min  " .. secStr .. " s"
  LeaderboardSetPlayerItemLabelBJ(TIME_PLAYER, (s__Lives_lb[(udg_lives)]), timeStr)
  -- INLINED!!
end



--===========================================================================
function Init_GameTime()
  gg_trg_Time_of_game_trigger = CreateTrigger()
  TriggerAddAction(gg_trg_Time_of_game_trigger, Trig_time_of_game_Actions)
  TriggerRegisterTimerEvent(gg_trg_Time_of_game_trigger, 1, true)
end



--library GameTime ends
--library Gravity:




function SetGravity(newGravity)
  Gravity__gravity = newGravity * SLIDE_PERIOD
end

function GetGravity()
  return Gravity__gravity
end

function GetRealGravity()
  return Gravity__gravity / SLIDE_PERIOD
end


function InitGravity()
  Gravity__gravity = -45 * SLIDE_PERIOD
end



--library Gravity ends
--library ImmolationSkills:




function Init_ImmolationSkills()
  IMMOLATION_SKILLS[1] = 1227894837
  IMMOLATION_SKILLS[2] = 1227895088
  IMMOLATION_SKILLS[3] = 1227895093
  IMMOLATION_SKILLS[4] = 1227895344
  IMMOLATION_SKILLS[5] = 1227895349
  IMMOLATION_SKILLS[6] = 1227895600
  IMMOLATION_SKILLS[7] = 1227895605
  IMMOLATION_SKILLS[8] = 1227895856
  IMMOLATION_SKILLS[9] = 1227895861
  IMMOLATION_SKILLS[10] = 1227896112
  IMMOLATION_SKILLS[11] = 1227896117
  IMMOLATION_SKILLS[12] = 1227896368
  IMMOLATION_SKILLS[13] = 1227896373
  IMMOLATION_SKILLS[14] = 1227896624
  IMMOLATION_SKILLS[15] = 1227896629
  IMMOLATION_SKILLS[16] = 1227896880
  IMMOLATION_SKILLS[17] = 1227896885
  IMMOLATION_SKILLS[18] = 1227897136
  IMMOLATION_SKILLS[19] = 1227897141
  IMMOLATION_SKILLS[20] = 1227960368
  IMMOLATION_SKILLS[21] = 1227960373
  IMMOLATION_SKILLS[22] = 1227960624
  IMMOLATION_SKILLS[23] = 1227960629
  IMMOLATION_SKILLS[24] = 1227960880
  IMMOLATION_SKILLS[25] = 1227960885
  IMMOLATION_SKILLS[26] = 1227961136
  IMMOLATION_SKILLS[27] = 1227961141
  IMMOLATION_SKILLS[28] = 1227961392
  IMMOLATION_SKILLS[29] = 1227961397
  IMMOLATION_SKILLS[30] = 1227961648
  IMMOLATION_SKILLS[31] = 1227961653
  IMMOLATION_SKILLS[32] = 1227961904
  IMMOLATION_SKILLS[33] = 1227961909
  IMMOLATION_SKILLS[34] = 1227962160
  IMMOLATION_SKILLS[35] = 1227962165
  IMMOLATION_SKILLS[36] = 1227962416
  IMMOLATION_SKILLS[37] = 1227962421
  IMMOLATION_SKILLS[38] = 1227962672
  IMMOLATION_SKILLS[39] = 1227962677
  IMMOLATION_SKILLS[40] = 1228025904
  IMMOLATION_SKILLS[41] = 1228025909
  IMMOLATION_SKILLS[42] = 1228026160
  IMMOLATION_SKILLS[43] = 1228026165
  IMMOLATION_SKILLS[44] = 1228026416
  IMMOLATION_SKILLS[45] = 1228026421
  IMMOLATION_SKILLS[46] = 1228026672
  IMMOLATION_SKILLS[47] = 1228026677
  IMMOLATION_SKILLS[48] = 1228026928
  IMMOLATION_SKILLS[49] = 1228026933
  IMMOLATION_SKILLS[50] = 1228027184
  IMMOLATION_SKILLS[51] = 1228027189
  IMMOLATION_SKILLS[52] = 1228027440
  IMMOLATION_SKILLS[53] = 1228027445
  IMMOLATION_SKILLS[54] = 1228027696
  IMMOLATION_SKILLS[55] = 1228027701
  IMMOLATION_SKILLS[56] = 1228027952
  IMMOLATION_SKILLS[57] = 1228027957
  IMMOLATION_SKILLS[58] = 1228028208
  IMMOLATION_SKILLS[59] = 1228028213
  IMMOLATION_SKILLS[60] = 1228091440
  IMMOLATION_SKILLS[61] = 1228091445
  IMMOLATION_SKILLS[62] = 1228091696
  IMMOLATION_SKILLS[63] = 1228091701
  IMMOLATION_SKILLS[64] = 1228091952
  IMMOLATION_SKILLS[65] = 1228091957
  IMMOLATION_SKILLS[66] = 1228092208
  IMMOLATION_SKILLS[67] = 1228092213
  IMMOLATION_SKILLS[68] = 1228092464
  IMMOLATION_SKILLS[69] = 1228092469
  IMMOLATION_SKILLS[70] = 1228092720
  IMMOLATION_SKILLS[71] = 1228092725
  IMMOLATION_SKILLS[72] = 1228092976
  IMMOLATION_SKILLS[73] = 1228092981
  IMMOLATION_SKILLS[74] = 1228093232
  IMMOLATION_SKILLS[75] = 1228093237
  IMMOLATION_SKILLS[76] = 1228093488
  IMMOLATION_SKILLS[77] = 1228093493
  IMMOLATION_SKILLS[78] = 1228093744
  IMMOLATION_SKILLS[79] = 1228093749
  IMMOLATION_SKILLS[80] = 1228156976
end





--library ImmolationSkills ends
--library LevelFunctions:


function IsLevelBeingMade(level)
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
      -- INLINED!!
      if (sc__Escaper_getMakingLevel((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)])) == level) then
        -- INLINED!!
        return true
      end
    end
    i = i + 1
  end
  return (sc__LevelArray_getCurrentLevel(udg_levels) == level)
end



--library LevelFunctions ends
--library MakeAction:





--library MakeAction ends
--library Meteor:






function s__Meteor_getItem(this)
  return s__Meteor_meteor[this]
end

function s__Meteor_create(x, l__y)
  local m = s__Meteor__allocate()
  s__Meteor_x[m] = x
  s__Meteor_y[m] = l__y
  return m
end

function s__Meteor_removeMeteor(this)
  if (s__Meteor_meteor[this] ~= nil) then
    RemoveItem(s__Meteor_meteor[this])
    s__Meteor_meteor[this] = nil
  end
end

function s__Meteor_createMeteor(this)
  if (s__Meteor_meteor[this] ~= nil) then
    s__Meteor_removeMeteor(this)
  end
  s__Meteor_meteor[this] = CreateItem(METEOR_NORMAL, s__Meteor_x[this], s__Meteor_y[this])
  if ((s__TerrainType_kind[(sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, s__Meteor_x[this], s__Meteor_y[this]))]) == "slide") then
    -- INLINED!!
    SetItemDroppable(s__Meteor_meteor[this], false)
  end
  SetItemUserData(s__Meteor_meteor[this], (this))
end

function s__Meteor_onDestroy(this)
  if (s__Meteor_meteor[this] ~= nil) then
    s__Meteor_removeMeteor(this)
    s__Meteor_meteor[this] = nil
  end
  s___MeteorArray_meteors[s__MeteorArray_meteors[(s__Level_meteors[s__Meteor_level[this]])] + (s__Meteor_arrayId[this])] = 0
  -- INLINED!!
end

--Generated destructor of Meteor
function s__Meteor_deallocate(this)
  if this == nil then
    return
  elseif (si__Meteor_V[this] ~= -1) then
    return
  end
  s__Meteor_onDestroy(this)
  si__Meteor_V[this] = si__Meteor_F
  si__Meteor_F = this
end

function s__Meteor_replace(this)
  SetItemPosition(s__Meteor_meteor[this], s__Meteor_x[this], s__Meteor_y[this])
end

function s__Meteor_toString(this)
  return (I2S(R2I(s__Meteor_x[this])) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(s__Meteor_y[this])))
end




--library Meteor ends
--library MonsterOrCasterStack:


function GetEnumMoc()
  return MonsterOrCasterStack__udg_enumMoc
end



function s__MonsterOrCasterStack_create(monsterOrCaster)
  local mocs = nil
  if (monsterOrCaster == 0) then
    return 0
  end
  mocs = s__MonsterOrCasterStack__allocate()
  sg__MonsterOrCasterStack_set_monsterOrCaster(mocs, monsterOrCaster)
  sg__MonsterOrCasterStack_set_nextElement(mocs, 0)
  return mocs
end

function s__MonsterOrCasterStack_addMonsterOrCaster(this, monsterOrCaster)
  local newElement = nil
  if (monsterOrCaster == 0) then
    return false
  end
  newElement = s__MonsterOrCasterStack_create(sg__MonsterOrCasterStack_get_monsterOrCaster(this))
  sg__MonsterOrCasterStack_set_nextElement(newElement, sg__MonsterOrCasterStack_get_nextElement(this))
  sg__MonsterOrCasterStack_set_monsterOrCaster(this, monsterOrCaster)
  sg__MonsterOrCasterStack_set_nextElement(this, newElement)
  return true
end

function s__MonsterOrCasterStack_onDestroy(this)
  s__MonsterOrCaster_deallocate(sg__MonsterOrCasterStack_get_monsterOrCaster(this))
  if (sg__MonsterOrCasterStack_get_nextElement(this) ~= 0) then
    sc__MonsterOrCasterStack_deallocate(sg__MonsterOrCasterStack_get_nextElement(this))
  end
end

--Generated destructor of MonsterOrCasterStack
function s__MonsterOrCasterStack_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterOrCasterStack_V[this] ~= -1) then
    return
  end
  s__MonsterOrCasterStack_onDestroy(this)
  si__MonsterOrCasterStack_V[this] = si__MonsterOrCasterStack_F
  si__MonsterOrCasterStack_F = this
end

function s__MonsterOrCasterStack_executeForAll(this, functionName)
  MonsterOrCasterStack__udg_enumMoc = sg__MonsterOrCasterStack_get_monsterOrCaster(this)
  ExecuteFunc(functionName)
  if (sg__MonsterOrCasterStack_get_nextElement(this) ~= 0) then
    s__MonsterOrCasterStack_executeForAll(sg__MonsterOrCasterStack_get_nextElement(this), functionName)
  end
end

function s__MonsterOrCasterStack_containsMob(this, mobId)
  if (sc__MonsterOrCaster_getId(sg__MonsterOrCasterStack_get_monsterOrCaster(this)) == mobId) then
    return true
  elseif (sg__MonsterOrCasterStack_get_nextElement(this) ~= 0) then
    return s__MonsterOrCasterStack_containsMob(sg__MonsterOrCasterStack_get_nextElement(this), mobId)
  else
    return false
  end
end

function s__MonsterOrCasterStack_getLast(this)
  return sg__MonsterOrCasterStack_get_monsterOrCaster(this)
end

function s__MonsterOrCasterStack_removeLast(this)
  local oldNextElement = sg__MonsterOrCasterStack_get_nextElement(this)
  if (sg__MonsterOrCasterStack_get_monsterOrCaster(this) == 0) then
    return false
  end
  s__MonsterOrCaster_deallocate(sg__MonsterOrCasterStack_get_monsterOrCaster(this))
  if (sg__MonsterOrCasterStack_get_nextElement(this) ~= 0) then
    sg__MonsterOrCasterStack_set_monsterOrCaster(this, sc__MonsterOrCaster_copy((sg__MonsterOrCasterStack_get_monsterOrCaster((sg__MonsterOrCasterStack_get_nextElement(this))))))
    -- INLINED!!
    sg__MonsterOrCasterStack_set_nextElement(this, sg__MonsterOrCasterStack_get_nextElement(sg__MonsterOrCasterStack_get_nextElement(this)))
    sg__MonsterOrCasterStack_set_nextElement(sg__MonsterOrCasterStack_get_nextElement(this), 0)
    s__MonsterOrCasterStack_deallocate(sg__MonsterOrCasterStack_get_nextElement(this))
  else
    sg__MonsterOrCasterStack_set_monsterOrCaster(this, 0)
  end
  return true
end



--library MonsterOrCasterStack ends
--library MonstersClickableSetLife:




function MonstersClickableSetLifeForEach()
  local monsterUnit = GetEnumUnit()
  local currentLife = GetUnitState(monsterUnit, UNIT_STATE_LIFE)
  local monster = (GetUnitUserData(monsterUnit))
  local previousLife = I2R(sc__Monster_getLife(monster))
  local diffLife = RMaxBJ(currentLife, previousLife) - RMinBJ(currentLife, previousLife)
  if (diffLife < 100) then
    SetUnitLifeBJ(GetEnumUnit(), previousLife - 0.5)
  else
    while true do
      if (diffLife <= 0) then
        break
      end
      sc__Monster_setLife(monster, R2I(previousLife) - 10000)
      diffLife = diffLife - 10000
    end
  end
end

function MonstersClickableSetLife_Actions()
  ForGroup(monstersClickable, MonstersClickableSetLifeForEach)
end


--===========================================================================
function Init_MonstersClickableSetLife()
  monstersClickable = CreateGroup()
  trigMonstersClickableSetLife = CreateTrigger()
  TriggerAddAction(trigMonstersClickableSetLife, MonstersClickableSetLife_Actions)
  TriggerRegisterTimerEvent(trigMonstersClickableSetLife, MonstersClickableSetLife__PERIOD, true)
end



--library MonstersClickableSetLife ends
--library SlideTrigger:



--textmacro instance: SlideActions_function("0")
function Slide_0_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (0)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[0] = timeOnSlide[0] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("0")
--textmacro instance: SlideActions_function("1")
function Slide_1_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (1)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[1] = timeOnSlide[1] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("1")
--textmacro instance: SlideActions_function("2")
function Slide_2_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (2)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[2] = timeOnSlide[2] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("2")
--textmacro instance: SlideActions_function("3")
function Slide_3_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (3)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[3] = timeOnSlide[3] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("3")
--textmacro instance: SlideActions_function("4")
function Slide_4_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (4)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[4] = timeOnSlide[4] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("4")
--textmacro instance: SlideActions_function("5")
function Slide_5_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (5)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[5] = timeOnSlide[5] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("5")
--textmacro instance: SlideActions_function("6")
function Slide_6_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (6)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[6] = timeOnSlide[6] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("6")
--textmacro instance: SlideActions_function("7")
function Slide_7_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (7)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[7] = timeOnSlide[7] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("7")
--textmacro instance: SlideActions_function("8")
function Slide_8_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (8)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[8] = timeOnSlide[8] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("8")
--textmacro instance: SlideActions_function("9")
function Slide_9_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (9)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[9] = timeOnSlide[9] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("9")
--textmacro instance: SlideActions_function("10")
function Slide_10_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (10)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[10] = timeOnSlide[10] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("10")
--textmacro instance: SlideActions_function("11")
function Slide_11_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (11)])
  -- INLINED!!

  local angle = Deg2Rad(GetUnitFacing((s__Escaper_hero[(escaper)])))
  -- INLINED!!

  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!

  local newX = GetLocationX(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Cos(angle)
  -- INLINED!!
  local newY = GetLocationY(heroPos) + (s__Escaper_slideSpeed[(escaper)]) * Sin(angle)
  -- INLINED!!

  local z = GetLocationZ(heroPos)
  local diffZ = z - (s__Escaper_lastZ[(escaper)])
  -- INLINED!!
  local height = GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local delta = nil

  if (newX >= MAP_MIN_X and newX <= MAP_MAX_X and newY >= MAP_MIN_Y and newY <= MAP_MAX_Y) then
    sc__Escaper_moveHero(escaper, newX, newY)
  end
  timeOnSlide[11] = timeOnSlide[11] + SLIDE_PERIOD


  --gestion de la hauteur du héros
  if (height > 1) then
    s__Escaper_speedZ[(escaper)] = (((s__Escaper_speedZ[(escaper)]) + (Gravity__gravity)) * 1.0)
    -- INLINED!!
    height = height + (s__Escaper_speedZ[(escaper)]) - diffZ
    -- INLINED!!
    if (height < 0) then
      height = 0
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), height, 0)
    -- INLINED!!
    --coop
    sc__Escaper_refreshCerclePosition(escaper)
  else
    delta = diffZ - (s__Escaper_oldDiffZ[(escaper)])
    -- INLINED!!
    if (delta < (Gravity__gravity)) then
      -- INLINED!!
      s__Escaper_speedZ[(escaper)] = (((s__Escaper_oldDiffZ[(escaper)]) + (Gravity__gravity)) * 1.0)
      -- INLINED!!
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), -diffZ + (s__Escaper_speedZ[(escaper)]), 0)
      -- INLINED!!
      --arrêter de tourner si un clic a été fait juste avant
      if (not CAN_TURN_IN_AIR) then
        SetUnitFacing((s__Escaper_hero[(escaper)]), GetUnitFacing((s__Escaper_hero[(escaper)])))
        -- INLINED!!
      end
    elseif (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      --le héros mort touche le sol, on désactive le slide // INLINED!!
      sc__Escaper_enableSlide(escaper, false)
    end
  end

  s__Escaper_lastZ[(escaper)] = ((z) * 1.0)
  -- INLINED!!
  s__Escaper_oldDiffZ[(escaper)] = ((diffZ) * 1.0)
  -- INLINED!!

  RemoveLocation(heroPos)
  heroPos = nil
end
--end of: SlideActions_function("11")



function GetSlideActions(n)
  --textmacro instance: SlideActions_get("0")
  if (n == 0) then
    return Slide_0_Actions
  end
  --end of: SlideActions_get("0")
  --textmacro instance: SlideActions_get("1")
  if (n == 1) then
    return Slide_1_Actions
  end
  --end of: SlideActions_get("1")
  --textmacro instance: SlideActions_get("2")
  if (n == 2) then
    return Slide_2_Actions
  end
  --end of: SlideActions_get("2")
  --textmacro instance: SlideActions_get("3")
  if (n == 3) then
    return Slide_3_Actions
  end
  --end of: SlideActions_get("3")
  --textmacro instance: SlideActions_get("4")
  if (n == 4) then
    return Slide_4_Actions
  end
  --end of: SlideActions_get("4")
  --textmacro instance: SlideActions_get("5")
  if (n == 5) then
    return Slide_5_Actions
  end
  --end of: SlideActions_get("5")
  --textmacro instance: SlideActions_get("6")
  if (n == 6) then
    return Slide_6_Actions
  end
  --end of: SlideActions_get("6")
  --textmacro instance: SlideActions_get("7")
  if (n == 7) then
    return Slide_7_Actions
  end
  --end of: SlideActions_get("7")
  --textmacro instance: SlideActions_get("8")
  if (n == 8) then
    return Slide_8_Actions
  end
  --end of: SlideActions_get("8")
  --textmacro instance: SlideActions_get("9")
  if (n == 9) then
    return Slide_9_Actions
  end
  --end of: SlideActions_get("9")
  --textmacro instance: SlideActions_get("10")
  if (n == 10) then
    return Slide_10_Actions
  end
  --end of: SlideActions_get("10")
  --textmacro instance: SlideActions_get("11")
  if (n == 11) then
    return Slide_11_Actions
  end
  --end of: SlideActions_get("11")

  return nil
end


function CreateSlideTrigger(playerId)
  local slideTrigger = CreateTrigger()
  DisableTrigger(slideTrigger)
  TriggerAddAction(slideTrigger, GetSlideActions(playerId))
  TriggerRegisterTimerEventPeriodic(slideTrigger, SLIDE_PERIOD)
  return slideTrigger
end



--library SlideTrigger ends
--library Stack:

--*****************************************************************
--*  STACK
--*
--*  written by: Anitarf
--*
--*  This is an efficient implementation of a stack in vJass. Since
--*  it is based on a linked list, I decided to add common list
--*  methods to the data structure so it can function both as
--*  a stack and a simple linked list.
--*
--*  As a linked list, it has less functionality than Ammorth's
--*  LinkedList, but is considerably faster. Note only that most of
--*  the list methods have O(n) time complexity so they may not be
--*  suitable for operations on very large lists, however due to
--*  their simplicity the list would need to be really large for
--*  this to become a problem.
--*
--*  All stack methods are of course O(1) and as fast as possible.
--*  If you just need a stack, this is definitely the best choice.
--*
--*   set s=Stack.create()  - Instanceates a new Stack object.
--*   call s.destroy()      - Destroys the Stack.
--*
--*  Stack syntax:
--*   call s.push(123)      - Pushes the value 123 on the stack.
--*                           A stack may contain multiple
--*                           instances of the same value.
--*   set i=s.peek()        - Reads the top value of the stack
--*                           and stores it to the variable i.
--*   set i=s.pop()         - Removes the top value from the stack
--*                           and stores it to the variable i.
--*   s.peek()==Stack.EMPTY - Checks if the stack is empty.
--*
--*  List syntax:
--*   call s.add(123)       - Adds the value 123 to the list.
--*                           A list may contain multiple
--*                           instances of the same value.
--*   s.size                - The total number of values on the list.
--*   s.contains(123)       - Checks if the value 123 is on the list.
--*   set n=s.count(123)    - Stores the number of times the value
--*                           123 is on the list to the variable n.
--*   call s.remove(123)    - Removes one instance of the value 123
--*                           from the list. Returns false if
--*                           the value was not found on the list.
--*   call s.purge(123)     - Removes all instances of the value 123
--*                           from the list. Returns the number of
--*                           values that were removed.
--*   set i=s.first         - Reads the first value from the list
--*                           and stores it to the variable i.
--*   set i=s.random        - Reads a random value from the list
--*                           and stores it to the variable i.
--*   set s2=s.copy()       - Makes a copy of the list and stores
--*                           it to the variable s2.
--*   call s.enum(Func,b)   - Calls function Func for all values
--*                           on the list. The function must follow
--*                           the Enum function interface.
--*                           b is a boolean value, if it is true
--*                           then the values will be enumerated
--*                           top to bottom, if false then bottom
--*                           to top.
--*****************************************************************

--processed:     function interface Stack_Enum takes integer value returns nothing

-- Use a totally random number here, the more improbable someone uses it, the better.
-- This is the value that is returned by .pop and .peek methods and .first and .random operators when called on an empty stack.

-- End of calibration.


function s__Stack_push(this, i)
  -- Get an index from the list of free indexes.
  local n = s__Stack_free
  s__Stack_free = s__Stack_next[n]
  -- Extend the list of free indexes if needed.
  if s__Stack_free == 0 then
    s__Stack_free = n + 1
  end
  -- Store the value to the index.
  s__Stack_value[n] = i
  -- Add index to the top of the stack.
  s__Stack_next[n] = s__Stack_top[this]
  s__Stack_top[this] = n
  s__Stack_size[this] = s__Stack_size[this] + 1
end
function s__Stack_pop(this)
  -- Get the top index of stack.
  local n = s__Stack_top[this]
  -- Safety check in case a user pops an empty stack.
  if n == 0 then
    return s__Stack_EMPTY
  end
  -- Remove the top index from stack.
  s__Stack_top[this] = s__Stack_next[n]
  s__Stack_size[this] = s__Stack_size[this] - 1
  -- Add the index to the list of free indexes.
  s__Stack_next[n] = s__Stack_free
  s__Stack_free = n
  -- Return the value.
  return s__Stack_value[n]
end
function s__Stack_peek(this)
  -- Read the value of the top index.
  return s__Stack_value[s__Stack_top[this]]
end


function s__Stack_add(this, value)
  s__Stack_push(this, value)
end
function s__Stack_contains(this, value)
  -- Get the first index of the list.
  local i = s__Stack_top[this]
  -- Search through the list.
  while true do
    -- Stop the search when the end of the list is reached.
    if i == 0 then
      break
    end
    -- Stop the search if the value is found.
    if s__Stack_value[i] == value then
      return true
    end
    -- Get the next index of the list.
    i = s__Stack_next[i]
  end
  return false
end
function s__Stack_count(this, value)
  local count = 0
  -- Get the first index of the list.
  local i = s__Stack_top[this]
  -- Search through the list.
  while true do
    -- Stop the search when the end of the list is reached.
    if i == 0 then
      break
    end
    -- Increase the count if the value is found.
    if s__Stack_value[i] == value then
      count = count + 1
    end
    -- Get the next index of the list.
    i = s__Stack_next[i]
  end
  return count
end
function s__Stack__get_first(this)
  return (s__Stack_value[s__Stack_top[(this)]])
  -- INLINED!!
end
function s__Stack__get_random(this)
  local r = GetRandomInt(1, s__Stack_size[this])
  -- Get the first index of the list.
  local i = s__Stack_top[this]
  -- Loop through the list.
  while true do
    -- Stop the loop after a random amount of repeats.
    r = r - 1
    if r == 0 or i == 0 then
      break
    end
    -- Get the next index of the list.
    i = s__Stack_next[i]
  end
  return s__Stack_value[i]
end
function s__Stack_remove(this, value)
  -- Get the first index of the list.
  local i1 = s__Stack_top[this]
  local i2 = nil
  -- Check if the first index holds the value.
  if s__Stack_value[i1] == value then
    s__Stack_pop(this)
    return true
  end
  -- Search through the rest of the list.
  while true do
    i2 = s__Stack_next[i1]
    -- Stop the search when the end of the list is reached.
    if i2 == 0 then
      break
    end
    -- Check if the next index holds the value.
    if s__Stack_value[i2] == value then
      -- Remove the index from the stack.
      s__Stack_next[i1] = s__Stack_next[i2]
      -- Add the removed index to the list of free indexes.
      s__Stack_next[i2] = s__Stack_free
      s__Stack_free = i2
      s__Stack_size[this] = s__Stack_size[this] - 1
      return true
    end
    i1 = i2
  end
  return false
end
function s__Stack_purge(this, value)
  local count = 0
  local i1 = nil
  local i2 = nil
  -- If the first index holds the value, pop it.
  while true do
    -- If the list is empty, return.
    if s__Stack_top[this] == 0 then
      return count
    end
    -- Repeat until the first index doesn't hold the value.
    if s__Stack_value[s__Stack_top[this]] ~= value then
      break
    end
    s__Stack_pop(this)
    count = count + 1
  end
  -- Get the first index of the list.
  i1 = s__Stack_top[this]
  -- Search through the rest of the list.
  while true do
    i2 = s__Stack_next[i1]
    -- Stop the search when the end of the list is reached.
    if i2 == 0 then
      break
    end
    -- Check if the next index holds the value.
    if s__Stack_value[i2] == value then
      -- Remove the index from the stack.
      s__Stack_next[i1] = s__Stack_next[i2]
      -- Add the removed index to the list of free indexes.
      s__Stack_next[i2] = s__Stack_free
      s__Stack_free = i2
      s__Stack_size[this] = s__Stack_size[this] - 1
      count = count + 1
    else
      i1 = i2
    end
  end
  return count
end
function s__Stack_enum(this, f, top2bottom)
  local value = __jarray(0)
  -- Get the first index of the list.
  local i1 = s__Stack_top[this]
  local i2 = 0
  -- Populate the array.
  while true do
    if i1 == 0 then
      break
    end
    value[i2] = s__Stack_value[i1]
    i2 = i2 + 1
    i1 = s__Stack_next[i1]
  end
  -- Call the Enum function for each value in the array.
  i1 = i2 - 1
  while true do
    if i2 == 0 then
      break
    end
    i2 = i2 - 1
    -- Enumerate in which direction?
    if top2bottom then
      sc___prototype3_evaluate(f, value[i1 - i2])
    else
      sc___prototype3_evaluate(f, value[i2])
    end
  end
end
function s__Stack_copy(this)
  local that = s__Stack__allocate()
  -- Get the first index of the list.
  local i1 = s__Stack_top[this]
  local i2 = nil
  -- Add a dummy index to the top of the new list.
  s__Stack_push(that, 0)
  i2 = s__Stack_top[that]
  while true do
    if i1 == 0 then
      break
    end
    -- Get an index from the list of free indexes and add it at the end of the list.
    s__Stack_next[i2] = s__Stack_free
    i2 = s__Stack_next[i2]
    s__Stack_free = s__Stack_next[i2]
    -- Extend the list of free indexes if needed.
    if s__Stack_free == 0 then
      s__Stack_free = i2 + 1
    end
    -- Copy the value to the new index.
    s__Stack_value[i2] = s__Stack_value[i1]
    i1 = s__Stack_next[i1]
  end
  -- End the new list correctly.
  s__Stack_next[i2] = 0
  -- Remove the dummy index.
  s__Stack_pop(that)
  -- Copy the size value to the new list.
  s__Stack_size[that] = s__Stack_size[this]
  return that
end


function s__Stack_onDestroy(this)
  local n = nil
  -- Remove all remaining indexes from the stack.
  while true do
    -- Get the top index.
    n = s__Stack_top[this]
    if n == 0 then
      break
    end
    -- Remove it from the stack.
    s__Stack_top[this] = s__Stack_next[n]
    -- Add it to the list of free indexes.
    s__Stack_next[n] = s__Stack_free
    s__Stack_free = n
  end
end

--Generated destructor of Stack
function s__Stack_deallocate(this)
  if this == nil then
    return
  elseif (si__Stack_V[this] ~= -1) then
    return
  end
  s__Stack_onDestroy(this)
  si__Stack_V[this] = si__Stack_F
  si__Stack_F = this
end
function s__Stack_onInit()
  -- Store the EMPTY value to index 0 to make .peek inline friendly.
  s__Stack_value[0] = s__Stack_EMPTY
end

--library Stack ends
--library StringLib:



function s__StringSegments_calculateCount(this)
  local i = s__StringSegments_pos[this]
  local prev = s__StringSegments_pos[this]

  s__StringSegments_count[this] = 0

  if s__StringSegments_dLen[this] == 0 or s__StringSegments_sLen[this] == 0 then
    return
  end

  -- calculate the count beforehand
  while true do
    if i >= s__StringSegments_sLen[this] then
      if i - prev > 0 then
        s__StringSegments_count[this] = s__StringSegments_count[this] + 1
      end
      if true then
        break
      end
    end

    if SubString(s__StringSegments_s[this], i, i + s__StringSegments_dLen[this]) == s__StringSegments_delim[this] then
      if i - prev > 0 then
        -- a valid token
        s__StringSegments_count[this] = s__StringSegments_count[this] + 1
        i = i + s__StringSegments_dLen[this]
        prev = i
      end
      i = i + s__StringSegments_dLen[this]
      prev = i
    else
      i = i + 1
    end
  end
end

function s__StringSegments_create(s, delim)
  local seg = s__StringSegments__allocate()
  s__StringSegments_s[seg] = s
  s__StringSegments_pos[seg] = 0
  s__StringSegments_sLen[seg] = StringLength(s)
  s__StringSegments_delim[seg] = delim
  s__StringSegments_dLen[seg] = StringLength(delim)

  s__StringSegments_calculateCount(seg)
  return seg
end

function s__StringSegments_countSegments(this)
  return s__StringSegments_count[this]
end

function s__StringSegments_hasMoreSegments(this)
  return s__StringSegments_count[this] > 0
end

function s__StringSegments_nextSegment(this)
  local i = s__StringSegments_pos[this]
  local str = nil

  if s__StringSegments_count[this] <= 0 then
    return STRING_INVALID_SEGMENT
  end

  while true do
    while true do
      str = SubString(s__StringSegments_s[this], i, i + s__StringSegments_dLen[this])
      if str == s__StringSegments_delim[this] then
        break
      end
      if str == "" then
        break
      end
      if str == nil then
        break
      end
      i = i + 1
    end
    if i - s__StringSegments_pos[this] > 0 then
      -- return segment only if it has contents
      str = SubString(s__StringSegments_s[this], s__StringSegments_pos[this], i)
      s__StringSegments_pos[this] = i
      -- don't skip the delimiter right now.
      s__StringSegments_count[this] = s__StringSegments_count[this] - 1
      -- decrement the count

      if true then
        break
      end
    end
    -- continue until valid segments come out
    s__StringSegments_pos[this] = i + s__StringSegments_dLen[this]
    i = s__StringSegments_pos[this]
  end

  return str
end

function s__StringSegments_nextSegmentEx(this, delim)
  s__StringSegments_delim[this] = delim
  s__StringSegments_dLen[this] = StringLength(delim)
  s__StringSegments_calculateCount(this)
  return s__StringSegments_nextSegment(this)
end

function StringTrimLeft(str)
  local s = nil
  local left = nil
  local right = nil

  if str == nil then
    return nil
  end

  left = 0
  right = StringLength(str)

  while true do
    if left >= right then
      break
    end
    s = SubString(str, left, left + 1)
    if s ~= " " and s ~= "\n" and s ~= "\r" and s ~= "\t" then
      break
    end
    left = left + 1
  end

  return SubString(str, left, right)
end

function StringTrimRight(str)
  local s = nil
  local right = nil

  if str == nil then
    return nil
  end

  right = StringLength(str)

  while true do
    if right <= 0 then
      break
    end
    s = SubString(str, right - 1, right)
    if s ~= " " and s ~= "\n" and s ~= "\r" and s ~= "\t" then
      break
    end
    right = right - 1
  end

  return SubString(str, 0, right)
end

function StringTrim(str)
  local s = nil
  local left = nil
  local right = nil

  if str == nil then
    return nil
  end

  left = 0
  right = StringLength(str)

  while true do
    if left >= right then
      break
    end
    s = SubString(str, left, left + 1)
    if s ~= " " and s ~= "\n" and s ~= "\r" and s ~= "\t" then
      break
    end
    left = left + 1
  end

  while true do
    if right <= left then
      break
    end
    s = SubString(str, right - 1, right)
    if s ~= " " and s ~= "\n" and s ~= "\r" and s ~= "\t" then
      break
    end
    right = right - 1
  end

  return SubString(str, left, right)
end

function StringIndexOf(source, toFind, caseSensitive)
  local length = StringLength(source)
  local toFindLen = StringLength(toFind)
  local i = 0

  if not caseSensitive then
    -- case-insensitive search
    source = StringCase(source, true)
    toFind = StringCase(toFind, true)
  end

  while true do
    if i + toFindLen > length then
      break
    end
    if SubString(source, i, i + toFindLen) == toFind then
      return i
    end
    i = i + 1
  end

  return STRING_INDEX_NONE
end

function StringIndexOfReverse(source, toFind, caseSensitive)
  local toFindLen = StringLength(toFind)
  local i = StringLength(source) - toFindLen

  if not caseSensitive then
    -- case-insensitive search
    source = StringCase(source, true)
    toFind = StringCase(toFind, true)
  end

  while true do
    if i < 0 then
      break
    end
    if SubString(source, i, i + toFindLen) == toFind then
      return i
    end
    i = i - 1
  end

  return STRING_INDEX_NONE
end

function StringReplace(source, old, new, caseSensitive)
  local ri = 0
  local li = 0
  local length = StringLength(source)
  local oldLength = StringLength(old)
  local result = ""
  local compare = source

  if not caseSensitive then
    -- case-insensitive search
    old = StringCase(old, true)
    compare = StringCase(source, true)
  end

  while true do
    if ri >= length then
      break
    end
    if SubString(compare, ri, ri + oldLength) == old then
      -- found the match!
      result = result .. SubString(source, li, ri) .. new
      ri = ri + oldLength
      li = ri
    else
      ri = ri + 1
    end
  end

  result = result .. SubString(source, li, length)

  return result
end

function StringHashCS(s)
  local ri = 0
  local li = 0
  local length = StringLength(s)
  local result = ""
  local ss = nil

  while true do
    if ri >= length then
      break
    end
    ss = SubString(s, ri, ri + 1)
    if ss == "\\" then
      result = result .. SubString(s, li, ri) .. "\\\\"

      ri = ri + 1
      li = ri
    elseif StringCase(ss, false) ~= ss then
      -- this is a uppercase character; make it different.
      result = result .. SubString(s, li, ri) .. "\\" .. ss

      ri = ri + 1
      li = ri
    else
      ri = ri + 1
    end
  end

  result = result .. SubString(s, li, length)

  return StringHash(result)
end

function IsStringAscii(s)
  local i = 0
  local len = StringLength(s)

  while true do
    if i >= len then
      break
    end
    -- current implementation of StringHashCS guarantees using StringHash works in this context
    -- since StringHash result is subset of StringHashCS results for characters up to 0x7F.
    if not HaveSavedInteger(StringLib___ht_hash, StringLib___KEY_ASCII, StringHash(SubString(s, i, i + 1))) then
      return false
    end
    i = i + 1
  end
  return true
end

function StringAsciiAt(s, index)
  return LoadInteger(StringLib___ht_hash, StringLib___KEY_ASCII, StringHashCS(SubString(s, index, index + 1)))
end

function StringLengthUtf8(s)
  -- calculates proper length of the string in terms of UTF-8 characters.
  local i = 0
  local len = StringLength(s)
  local actualLen = 0
  local width = nil

  while true do
    if i >= len then
      break
    end
    width = LoadInteger(StringLib___ht_hash, StringLib___KEY_UTF8, StringHash(SubString(s, i, i + 1)))
    if width > 0 then
      actualLen = actualLen + 1
      i = i + width
    else
      return len
    end
  end

  return actualLen
end

function IsStringValidUtf8(s)
  local i = 0
  local len = StringLength(s)
  local width = nil

  if s == nil then
    return false
  end

  while true do
    if i >= len then
      break
    end
    width = LoadInteger(StringLib___ht_hash, StringLib___KEY_UTF8, StringHash(SubString(s, i, i + 1)))
    if width <= 0 then
      return false
    end
    i = i + width
  end

  return true
end

function StringLib___InitAsciiHash()
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1187441752, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1394816653, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1315431429, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 784919188, 4)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 748266476, 5)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1285056042, 6)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1736724759, 7)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -145620903, 8)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 149274451, 9)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1188730162, 10)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1640706678, 11)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 688136737, 12)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1200132991, 13)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -478531815, 14)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -531179111, 15)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 37034828, 16)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -478078515, 17)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1036153450, 18)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1211942047, 19)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1540972262, 20)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1736584905, 21)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1242301218, 22)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 117437270, 23)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1264404286, 24)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1865310487, 25)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1140988821, 26)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 142609959, 27)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1178686164, 28)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 135849431, 29)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1584298261, 30)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1815690774, 31)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1636555145, 32)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1987317120, 33)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 633424007, 34)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 2450395, 35)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 533837621, 36)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -38766579, 37)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 560338319, 38)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1415544861, 39)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -200806104, 40)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -139998735, 41)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -173398357, 42)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1974230908, 43)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 768817686, 44)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 2000040631, 45)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -270641191, 46)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1838906452, 47)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -242600650, 48)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1132341824, 49)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -647782241, 50)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -854572045, 51)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -680649701, 52)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -943650483, 53)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -671760605, 54)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 349230650, 55)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1894922563, 56)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1474492777, 57)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1856883613, 58)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 283059908, 59)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1959921300, 60)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 345613672, 61)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1934701018, 62)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1417475472, 63)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -2038820497, 64)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1146790149, 65)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1384166606, 66)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -725325753, 67)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -584388050, 68)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 412518583, 69)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1345963440, 70)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1284887430, 71)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1583570888, 72)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1237254502, 73)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -481405949, 74)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 486973866, 75)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -505384836, 76)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -2093990458, 77)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 2020834255, 78)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -177844388, 79)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1723470677, 80)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1254020812, 81)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1767232362, 82)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 942926582, 83)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -949618489, 84)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1893189801, 85)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1794448918, 86)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1620990925, 87)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1834526017, 88)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 619915202, 89)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1128511080, 90)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 465101845, 91)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1519517876, 92)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1290016498, 93)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 842508002, 94)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 1860810866, 95)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1597441783, 96)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1587459251, 97)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1676716706, 98)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1559655710, 99)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1663695754, 100)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 597637742, 101)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 789744696, 102)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 558654156, 103)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1626575360, 104)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 635090976, 105)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1613012308, 106)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 636889825, 107)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1692768153, 108)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 722102341, 109)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 695269389, 110)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 804913722, 111)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 849994952, 112)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 824983937, 116)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1023211619, 117)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 942949714, 118)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -541832965, 119)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1449975558, 120)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -34188414, 121)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1960837124, 122)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -344136570, 123)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, 442407315, 124)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -914066048, 125)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1920327611, 126)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_ASCII, -1894364130, 127)
end

function StringLib___InitUtf8Hash()
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1187441752, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1394816653, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1315431429, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 784919188, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 748266476, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1285056042, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1736724759, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -145620903, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 149274451, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1188730162, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1640706678, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 688136737, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1200132991, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -478531815, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -531179111, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 37034828, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -478078515, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1036153450, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1211942047, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1540972262, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1736584905, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1242301218, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 117437270, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1264404286, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1865310487, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1140988821, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 142609959, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1178686164, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 135849431, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1584298261, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1815690774, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1636555145, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1987317120, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 633424007, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 2450395, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 533837621, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -38766579, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 560338319, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1415544861, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -200806104, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -139998735, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -173398357, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1974230908, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 768817686, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 2000040631, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -270641191, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1838906452, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -242600650, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1132341824, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -647782241, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -854572045, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -680649701, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -943650483, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -671760605, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 349230650, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1894922563, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1474492777, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1856883613, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 283059908, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1959921300, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 345613672, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1934701018, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1417475472, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -2038820497, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1146790149, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1384166606, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -725325753, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -584388050, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 412518583, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1345963440, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1284887430, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1583570888, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1237254502, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -481405949, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 486973866, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -505384836, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -2093990458, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 2020834255, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -177844388, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1723470677, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1254020812, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1767232362, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 942926582, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -949618489, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1893189801, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1794448918, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1620990925, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1834526017, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 619915202, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1128511080, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 465101845, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1519517876, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1290016498, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 842508002, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1860810866, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1597441783, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1587459251, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1676716706, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1559655710, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1663695754, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 597637742, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 789744696, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 558654156, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1626575360, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 635090976, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1613012308, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 636889825, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1692768153, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 722102341, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 695269389, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 804913722, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 849994952, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 824983937, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1023211619, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 942949714, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -541832965, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1449975558, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -34188414, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1960837124, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -344136570, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 442407315, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -914066048, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1920327611, 1)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1894364130, 1)

  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -821046842, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1965576605, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 159638553, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1976614787, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 172358365, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1487094743, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 852857962, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1499360152, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 388578373, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -466619119, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -580057007, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -443785825, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -635169143, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1421069964, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1232080964, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1195283317, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1145431583, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1065729488, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 2057488321, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -42326540, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 2092530722, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 701044297, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -2016087502, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 50775334, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1236243595, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 379765120, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1483819556, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 154860577, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1222483548, 2)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 847928083, 2)

  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -643770102, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1697315672, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 152013319, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1048766234, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1817785734, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1772290269, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 224611159, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -941949360, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1964233184, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1853905496, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -2147421637, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1324312884, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -576610362, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1790768057, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -2099350373, 3)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -1266365587, 3)

  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1316854887, 4)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, -2027516833, 4)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 1910426181, 4)
  SaveInteger(StringLib___ht_hash, StringLib___KEY_UTF8, 760701047, 4)
end

function StringLib___Init()
  StringLib___ht_hash = InitHashtable()

  StringLib___InitAsciiHash()
  StringLib___InitUtf8Hash()
end

--library StringLib ends
--library TerrainModifyingTrig:






function Init_TerrainModifyingTrig()
  gg_trg_Terrain_modifying_trig = CreateTrigger()
  DisableTrigger(gg_trg_Terrain_modifying_trig)
  TriggerRegisterTimerEvent(gg_trg_Terrain_modifying_trig, LOW_PERIOD_FOR_WORK, true)
end


function StopEnabledCheckTerrainTriggers()
  local escaper = nil
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)])
    -- INLINED!!
    if (escaper ~= 0) then
      if ((IsTriggerEnabled(s__Escaper_checkTerrain[(escaper)]))) then
        -- INLINED!!
        TerrainModifyingTrig___wasCheckTerrainTriggerOn[i] = true
        sc__Escaper_enableCheckTerrain(escaper, false)
      else
        TerrainModifyingTrig___wasCheckTerrainTriggerOn[i] = false
      end
    end
    i = i + 1
  end
end


function RestartEnabledCheckTerrainTriggers()
  local escaper = nil
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)])
    -- INLINED!!
    if (escaper ~= 0) then
      if (TerrainModifyingTrig___wasCheckTerrainTriggerOn[i]) then
        sc__Escaper_enableCheckTerrain(escaper, true)
      end
    end
    i = i + 1
  end
end




--library TerrainModifyingTrig ends
--library TerrainTypeAsciiConversion:


function TerrainTypeId2TerrainTypeAsciiString(terrainType)

  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ldrt'" )
  if (terrainType == 1281651316) then
    return "'Ldrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ldrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ldro'" )
  if (terrainType == 1281651311) then
    return "'Ldro'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ldro'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ldrg'" )
  if (terrainType == 1281651303) then
    return "'Ldrg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ldrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Lrok'" )
  if (terrainType == 1282568043) then
    return "'Lrok'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Lrok'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Lgrs'" )
  if (terrainType == 1281847923) then
    return "'Lgrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Lgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Lgrd'" )
  if (terrainType == 1281847908) then
    return "'Lgrd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Lgrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Fdrt'" )
  if (terrainType == 1180988020) then
    return "'Fdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Fdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Fdro'" )
  if (terrainType == 1180988015) then
    return "'Fdro'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Fdro'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Fdrg'" )
  if (terrainType == 1180988007) then
    return "'Fdrg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Fdrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Frok'" )
  if (terrainType == 1181904747) then
    return "'Frok'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Frok'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Fgrs'" )
  if (terrainType == 1181184627) then
    return "'Fgrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Fgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Fgrd'" )
  if (terrainType == 1181184612) then
    return "'Fgrd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Fgrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Wdrt'" )
  if (terrainType == 1466200692) then
    return "'Wdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Wdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Wdro'" )
  if (terrainType == 1466200687) then
    return "'Wdro'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Wdro'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Wsng'" )
  if (terrainType == 1467182695) then
    return "'Wsng'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Wsng'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Wrok'" )
  if (terrainType == 1467117419) then
    return "'Wrok'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Wrok'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Wgrs'" )
  if (terrainType == 1466397299) then
    return "'Wgrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Wgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Wsnw'" )
  if (terrainType == 1467182711) then
    return "'Wsnw'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Wsnw'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Bdrt'" )
  if (terrainType == 1113879156) then
    return "'Bdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Bdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Bdrh'" )
  if (terrainType == 1113879144) then
    return "'Bdrh'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Bdrh'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Bdrr'" )
  if (terrainType == 1113879154) then
    return "'Bdrr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Bdrr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Bdrg'" )
  if (terrainType == 1113879143) then
    return "'Bdrg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Bdrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Bdsr'" )
  if (terrainType == 1113879410) then
    return "'Bdsr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Bdsr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Bdsd'" )
  if (terrainType == 1113879396) then
    return "'Bdsd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Bdsd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Bflr'" )
  if (terrainType == 1114008690) then
    return "'Bflr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Bflr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Bgrr'" )
  if (terrainType == 1114075762) then
    return "'Bgrr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Bgrr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Adrt'" )
  if (terrainType == 1097101940) then
    return "'Adrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Adrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Adrd'" )
  if (terrainType == 1097101924) then
    return "'Adrd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Adrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Agrs'" )
  if (terrainType == 1097298547) then
    return "'Agrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Agrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Arck'" )
  if (terrainType == 1098015595) then
    return "'Arck'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Arck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Agrd'" )
  if (terrainType == 1097298532) then
    return "'Agrd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Agrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Avin'" )
  if (terrainType == 1098279278) then
    return "'Avin'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Avin'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Adrg'" )
  if (terrainType == 1097101927) then
    return "'Adrg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Adrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Alvd'" )
  if (terrainType == 1097627236) then
    return "'Alvd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Alvd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Cdrt'" )
  if (terrainType == 1130656372) then
    return "'Cdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Cdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Cdrd'" )
  if (terrainType == 1130656356) then
    return "'Cdrd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Cdrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Cpos'" )
  if (terrainType == 1131442035) then
    return "'Cpos'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Cpos'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Crck'" )
  if (terrainType == 1131570027) then
    return "'Crck'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Crck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Cvin'" )
  if (terrainType == 1131833710) then
    return "'Cvin'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Cvin'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Cgrs'" )
  if (terrainType == 1130852979) then
    return "'Cgrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Cgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Clvg'" )
  if (terrainType == 1131181671) then
    return "'Clvg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Clvg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ndrt'" )
  if (terrainType == 1315205748) then
    return "'Ndrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ndrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ndrd'" )
  if (terrainType == 1315205732) then
    return "'Ndrd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ndrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Nrck'" )
  if (terrainType == 1316119403) then
    return "'Nrck'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Nrck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ngrs'" )
  if (terrainType == 1315402355) then
    return "'Ngrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ngrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Nice'" )
  if (terrainType == 1315529573) then
    return "'Nice'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Nice'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Nsnw'" )
  if (terrainType == 1316187767) then
    return "'Nsnw'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Nsnw'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Nsnr'" )
  if (terrainType == 1316187762) then
    return "'Nsnr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Nsnr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ydrt'" )
  if (terrainType == 1499755124) then
    return "'Ydrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ydrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ydtr'" )
  if (terrainType == 1499755634) then
    return "'Ydtr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ydtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Yblm'" )
  if (terrainType == 1499622509) then
    return "'Yblm'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Yblm'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ybtl'" )
  if (terrainType == 1499624556) then
    return "'Ybtl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ybtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ysqd'" )
  if (terrainType == 1500737892) then
    return "'Ysqd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ysqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Yrtl'" )
  if (terrainType == 1500673132) then
    return "'Yrtl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Yrtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ygsb'" )
  if (terrainType == 1499951970) then
    return "'Ygsb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ygsb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Yhdg'" )
  if (terrainType == 1500013671) then
    return "'Yhdg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Yhdg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ywmb'" )
  if (terrainType == 1500999010) then
    return "'Ywmb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ywmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Vdrt'" )
  if (terrainType == 1449423476) then
    return "'Vdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Vdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Vdrr'" )
  if (terrainType == 1449423474) then
    return "'Vdrr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Vdrr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Vcrp'" )
  if (terrainType == 1449357936) then
    return "'Vcrp'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Vcrp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Vcbp'" )
  if (terrainType == 1449353840) then
    return "'Vcbp'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Vcbp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Vstp'" )
  if (terrainType == 1450407024) then
    return "'Vstp'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Vstp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Vgrs'" )
  if (terrainType == 1449620083) then
    return "'Vgrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Vgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Vrck'" )
  if (terrainType == 1450337131) then
    return "'Vrck'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Vrck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Vgrt'" )
  if (terrainType == 1449620084) then
    return "'Vgrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Vgrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Qdrt'" )
  if (terrainType == 1365537396) then
    return "'Qdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Qdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Qdrr'" )
  if (terrainType == 1365537394) then
    return "'Qdrr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Qdrr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Qcrp'" )
  if (terrainType == 1365471856) then
    return "'Qcrp'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Qcrp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Qcbp'" )
  if (terrainType == 1365467760) then
    return "'Qcbp'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Qcbp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Qstp'" )
  if (terrainType == 1366520944) then
    return "'Qstp'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Qstp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Qgrs'" )
  if (terrainType == 1365734003) then
    return "'Qgrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Qgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Qrck'" )
  if (terrainType == 1366451051) then
    return "'Qrck'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Qrck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Qgrt'" )
  if (terrainType == 1365734004) then
    return "'Qgrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Qgrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xdrt'" )
  if (terrainType == 1482977908) then
    return "'Xdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xdtr'" )
  if (terrainType == 1482978418) then
    return "'Xdtr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xdtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xblm'" )
  if (terrainType == 1482845293) then
    return "'Xblm'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xblm'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xbtl'" )
  if (terrainType == 1482847340) then
    return "'Xbtl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xbtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xsqd'" )
  if (terrainType == 1483960676) then
    return "'Xsqd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xsqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xrtl'" )
  if (terrainType == 1483895916) then
    return "'Xrtl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xrtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xgsb'" )
  if (terrainType == 1483174754) then
    return "'Xgsb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xgsb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xhdg'" )
  if (terrainType == 1483236455) then
    return "'Xhdg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xhdg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Xwmb'" )
  if (terrainType == 1484221794) then
    return "'Xwmb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Xwmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ddrt'" )
  if (terrainType == 1147433588) then
    return "'Ddrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ddrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Dbrk'" )
  if (terrainType == 1147302507) then
    return "'Dbrk'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Dbrk'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Drds'" )
  if (terrainType == 1148347507) then
    return "'Drds'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Drds'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Dlvc'" )
  if (terrainType == 1147958883) then
    return "'Dlvc'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Dlvc'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Dlav'" )
  if (terrainType == 1147953526) then
    return "'Dlav'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Dlav'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ddkr'" )
  if (terrainType == 1147431794) then
    return "'Ddkr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ddkr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Dgrs'" )
  if (terrainType == 1147630195) then
    return "'Dgrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Dgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Dsqd'" )
  if (terrainType == 1148416356) then
    return "'Dsqd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Dsqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Gdrt'" )
  if (terrainType == 1197765236) then
    return "'Gdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Gdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Gbrk'" )
  if (terrainType == 1197634155) then
    return "'Gbrk'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Gbrk'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Grds'" )
  if (terrainType == 1198679155) then
    return "'Grds'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Grds'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Glvc'" )
  if (terrainType == 1198290531) then
    return "'Glvc'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Glvc'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Glav'" )
  if (terrainType == 1198285174) then
    return "'Glav'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Glav'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Gdkr'" )
  if (terrainType == 1197763442) then
    return "'Gdkr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Gdkr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ggrs'" )
  if (terrainType == 1197961843) then
    return "'Ggrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ggrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Gsqd'" )
  if (terrainType == 1198748004) then
    return "'Gsqd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Gsqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Zdrt'" )
  if (terrainType == 1516532340) then
    return "'Zdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Zdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Zdtr'" )
  if (terrainType == 1516532850) then
    return "'Zdtr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Zdtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Zdrg'" )
  if (terrainType == 1516532327) then
    return "'Zdrg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Zdrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Zbks'" )
  if (terrainType == 1516399475) then
    return "'Zbks'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Zbks'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Zsan'" )
  if (terrainType == 1517511022) then
    return "'Zsan'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Zsan'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Zbkl'" )
  if (terrainType == 1516399468) then
    return "'Zbkl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Zbkl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ztil'" )
  if (terrainType == 1517578604) then
    return "'Ztil'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ztil'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Zgrs'" )
  if (terrainType == 1516728947) then
    return "'Zgrs'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Zgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Zvin'" )
  if (terrainType == 1517709678) then
    return "'Zvin'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Zvin'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Idrt'" )
  if (terrainType == 1231319668) then
    return "'Idrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Idrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Idtr'" )
  if (terrainType == 1231320178) then
    return "'Idtr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Idtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Idki'" )
  if (terrainType == 1231317865) then
    return "'Idki'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Idki'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ibkb'" )
  if (terrainType == 1231186786) then
    return "'Ibkb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ibkb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Irbk'" )
  if (terrainType == 1232233067) then
    return "'Irbk'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Irbk'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Itbk'" )
  if (terrainType == 1232364139) then
    return "'Itbk'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Itbk'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Iice'" )
  if (terrainType == 1231643493) then
    return "'Iice'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Iice'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ibsq'" )
  if (terrainType == 1231188849) then
    return "'Ibsq'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ibsq'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Isnw'" )
  if (terrainType == 1232301687) then
    return "'Isnw'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Isnw'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Odrt'" )
  if (terrainType == 1331982964) then
    return "'Odrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Odrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Odtr'" )
  if (terrainType == 1331983474) then
    return "'Odtr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Odtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Osmb'" )
  if (terrainType == 1332964706) then
    return "'Osmb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Osmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ofst'" )
  if (terrainType == 1332114292) then
    return "'Ofst'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ofst'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Olgb'" )
  if (terrainType == 1332504418) then
    return "'Olgb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Olgb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Orok'" )
  if (terrainType == 1332899691) then
    return "'Orok'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Orok'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ofsl'" )
  if (terrainType == 1332114284) then
    return "'Ofsl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ofsl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Oaby'" )
  if (terrainType == 1331782265) then
    return "'Oaby'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Oaby'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Kdrt'" )
  if (terrainType == 1264874100) then
    return "'Kdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Kdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Kfsl'" )
  if (terrainType == 1265005420) then
    return "'Kfsl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Kfsl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Kdts'" )
  if (terrainType == 1264874611) then
    return "'Kdts'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Kdts'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Kfst'" )
  if (terrainType == 1265005428) then
    return "'Kfst'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Kfst'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ksmb'" )
  if (terrainType == 1265855842) then
    return "'Ksmb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ksmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Klgb'" )
  if (terrainType == 1265395554) then
    return "'Klgb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Klgb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Ksqt'" )
  if (terrainType == 1265856884) then
    return "'Ksqt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Ksqt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Kdkt'" )
  if (terrainType == 1264872308) then
    return "'Kdkt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Kdkt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jdrt'" )
  if (terrainType == 1248096884) then
    return "'Jdrt'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jdtr'" )
  if (terrainType == 1248097394) then
    return "'Jdtr'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jdtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jblm'" )
  if (terrainType == 1247964269) then
    return "'Jblm'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jblm'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jbtl'" )
  if (terrainType == 1247966316) then
    return "'Jbtl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jbtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jsqd'" )
  if (terrainType == 1249079652) then
    return "'Jsqd'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jsqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jrtl'" )
  if (terrainType == 1249014892) then
    return "'Jrtl'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jrtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jgsb'" )
  if (terrainType == 1248293730) then
    return "'Jgsb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jgsb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jhdg'" )
  if (terrainType == 1248355431) then
    return "'Jhdg'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jhdg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'Jwmb'" )
  if (terrainType == 1249340770) then
    return "'Jwmb'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'Jwmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cAc2'" )
  if (terrainType == 1665229618) then
    return "'cAc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cAc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cAc1'" )
  if (terrainType == 1665229617) then
    return "'cAc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cAc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cBc2'" )
  if (terrainType == 1665295154) then
    return "'cBc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cBc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cBc1'" )
  if (terrainType == 1665295153) then
    return "'cBc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cBc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cKc1'" )
  if (terrainType == 1665884977) then
    return "'cKc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cKc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cKc2'" )
  if (terrainType == 1665884978) then
    return "'cKc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cKc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cYc2'" )
  if (terrainType == 1666802482) then
    return "'cYc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cYc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cYc1'" )
  if (terrainType == 1666802481) then
    return "'cYc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cYc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cXc2'" )
  if (terrainType == 1666736946) then
    return "'cXc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cXc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cXc1'" )
  if (terrainType == 1666736945) then
    return "'cXc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cXc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cJc2'" )
  if (terrainType == 1665819442) then
    return "'cJc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cJc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cJc1'" )
  if (terrainType == 1665819441) then
    return "'cJc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cJc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cDc2'" )
  if (terrainType == 1665426226) then
    return "'cDc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cDc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cDc1'" )
  if (terrainType == 1665426225) then
    return "'cDc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cDc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cCc2'" )
  if (terrainType == 1665360690) then
    return "'cCc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cCc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cCc1'" )
  if (terrainType == 1665360689) then
    return "'cCc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cCc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cIc2'" )
  if (terrainType == 1665753906) then
    return "'cIc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cIc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cIc1'" )
  if (terrainType == 1665753905) then
    return "'cIc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cIc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cFc2'" )
  if (terrainType == 1665557298) then
    return "'cFc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cFc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cFc1'" )
  if (terrainType == 1665557297) then
    return "'cFc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cFc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cLc2'" )
  if (terrainType == 1665950514) then
    return "'cLc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cLc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cLc1'" )
  if (terrainType == 1665950513) then
    return "'cLc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cLc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cWc2'" )
  if (terrainType == 1666671410) then
    return "'cWc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cWc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cWc1'" )
  if (terrainType == 1666671409) then
    return "'cWc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cWc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cNc2'" )
  if (terrainType == 1666081586) then
    return "'cNc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cNc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cNc1'" )
  if (terrainType == 1666081585) then
    return "'cNc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cNc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cOc1'" )
  if (terrainType == 1666147121) then
    return "'cOc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cOc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cOc2'" )
  if (terrainType == 1666147122) then
    return "'cOc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cOc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cZc2'" )
  if (terrainType == 1666868018) then
    return "'cZc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cZc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cZc1'" )
  if (terrainType == 1666868017) then
    return "'cZc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cZc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cGc2'" )
  if (terrainType == 1665622834) then
    return "'cGc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cGc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cGc1'" )
  if (terrainType == 1665622833) then
    return "'cGc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cGc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cVc2'" )
  if (terrainType == 1666605874) then
    return "'cVc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cVc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cVc1'" )
  if (terrainType == 1666605873) then
    return "'cVc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cVc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cQc2'" )
  if (terrainType == 1666278194) then
    return "'cQc2'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cQc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeAsciiString( "'cQc1'" )
  if (terrainType == 1666278193) then
    return "'cQc1'"
  end
  --end of: TerrainTypeId2TerrainTypeAsciiString( "'cQc1'" )

  return "none"
end


function TerrainTypeAsciiString2TerrainTypeId(terrainTypeAsciiString)

  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ldrt'" )
  if (terrainTypeAsciiString == "'Ldrt'") then
    return 1281651316
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ldrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ldro'" )
  if (terrainTypeAsciiString == "'Ldro'") then
    return 1281651311
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ldro'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ldrg'" )
  if (terrainTypeAsciiString == "'Ldrg'") then
    return 1281651303
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ldrg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Lrok'" )
  if (terrainTypeAsciiString == "'Lrok'") then
    return 1282568043
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Lrok'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Lgrs'" )
  if (terrainTypeAsciiString == "'Lgrs'") then
    return 1281847923
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Lgrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Lgrd'" )
  if (terrainTypeAsciiString == "'Lgrd'") then
    return 1281847908
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Lgrd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Fdrt'" )
  if (terrainTypeAsciiString == "'Fdrt'") then
    return 1180988020
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Fdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Fdro'" )
  if (terrainTypeAsciiString == "'Fdro'") then
    return 1180988015
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Fdro'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Fdrg'" )
  if (terrainTypeAsciiString == "'Fdrg'") then
    return 1180988007
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Fdrg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Frok'" )
  if (terrainTypeAsciiString == "'Frok'") then
    return 1181904747
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Frok'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Fgrs'" )
  if (terrainTypeAsciiString == "'Fgrs'") then
    return 1181184627
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Fgrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Fgrd'" )
  if (terrainTypeAsciiString == "'Fgrd'") then
    return 1181184612
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Fgrd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Wdrt'" )
  if (terrainTypeAsciiString == "'Wdrt'") then
    return 1466200692
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Wdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Wdro'" )
  if (terrainTypeAsciiString == "'Wdro'") then
    return 1466200687
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Wdro'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Wsng'" )
  if (terrainTypeAsciiString == "'Wsng'") then
    return 1467182695
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Wsng'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Wrok'" )
  if (terrainTypeAsciiString == "'Wrok'") then
    return 1467117419
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Wrok'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Wgrs'" )
  if (terrainTypeAsciiString == "'Wgrs'") then
    return 1466397299
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Wgrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Wsnw'" )
  if (terrainTypeAsciiString == "'Wsnw'") then
    return 1467182711
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Wsnw'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Bdrt'" )
  if (terrainTypeAsciiString == "'Bdrt'") then
    return 1113879156
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Bdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Bdrh'" )
  if (terrainTypeAsciiString == "'Bdrh'") then
    return 1113879144
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Bdrh'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Bdrr'" )
  if (terrainTypeAsciiString == "'Bdrr'") then
    return 1113879154
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Bdrr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Bdrg'" )
  if (terrainTypeAsciiString == "'Bdrg'") then
    return 1113879143
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Bdrg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Bdsr'" )
  if (terrainTypeAsciiString == "'Bdsr'") then
    return 1113879410
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Bdsr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Bdsd'" )
  if (terrainTypeAsciiString == "'Bdsd'") then
    return 1113879396
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Bdsd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Bflr'" )
  if (terrainTypeAsciiString == "'Bflr'") then
    return 1114008690
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Bflr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Bgrr'" )
  if (terrainTypeAsciiString == "'Bgrr'") then
    return 1114075762
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Bgrr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Adrt'" )
  if (terrainTypeAsciiString == "'Adrt'") then
    return 1097101940
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Adrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Adrd'" )
  if (terrainTypeAsciiString == "'Adrd'") then
    return 1097101924
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Adrd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Agrs'" )
  if (terrainTypeAsciiString == "'Agrs'") then
    return 1097298547
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Agrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Arck'" )
  if (terrainTypeAsciiString == "'Arck'") then
    return 1098015595
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Arck'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Agrd'" )
  if (terrainTypeAsciiString == "'Agrd'") then
    return 1097298532
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Agrd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Avin'" )
  if (terrainTypeAsciiString == "'Avin'") then
    return 1098279278
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Avin'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Adrg'" )
  if (terrainTypeAsciiString == "'Adrg'") then
    return 1097101927
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Adrg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Alvd'" )
  if (terrainTypeAsciiString == "'Alvd'") then
    return 1097627236
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Alvd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Cdrt'" )
  if (terrainTypeAsciiString == "'Cdrt'") then
    return 1130656372
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Cdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Cdrd'" )
  if (terrainTypeAsciiString == "'Cdrd'") then
    return 1130656356
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Cdrd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Cpos'" )
  if (terrainTypeAsciiString == "'Cpos'") then
    return 1131442035
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Cpos'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Crck'" )
  if (terrainTypeAsciiString == "'Crck'") then
    return 1131570027
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Crck'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Cvin'" )
  if (terrainTypeAsciiString == "'Cvin'") then
    return 1131833710
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Cvin'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Cgrs'" )
  if (terrainTypeAsciiString == "'Cgrs'") then
    return 1130852979
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Cgrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Clvg'" )
  if (terrainTypeAsciiString == "'Clvg'") then
    return 1131181671
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Clvg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ndrt'" )
  if (terrainTypeAsciiString == "'Ndrt'") then
    return 1315205748
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ndrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ndrd'" )
  if (terrainTypeAsciiString == "'Ndrd'") then
    return 1315205732
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ndrd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Nrck'" )
  if (terrainTypeAsciiString == "'Nrck'") then
    return 1316119403
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Nrck'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ngrs'" )
  if (terrainTypeAsciiString == "'Ngrs'") then
    return 1315402355
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ngrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Nice'" )
  if (terrainTypeAsciiString == "'Nice'") then
    return 1315529573
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Nice'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Nsnw'" )
  if (terrainTypeAsciiString == "'Nsnw'") then
    return 1316187767
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Nsnw'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Nsnr'" )
  if (terrainTypeAsciiString == "'Nsnr'") then
    return 1316187762
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Nsnr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ydrt'" )
  if (terrainTypeAsciiString == "'Ydrt'") then
    return 1499755124
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ydrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ydtr'" )
  if (terrainTypeAsciiString == "'Ydtr'") then
    return 1499755634
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ydtr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Yblm'" )
  if (terrainTypeAsciiString == "'Yblm'") then
    return 1499622509
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Yblm'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ybtl'" )
  if (terrainTypeAsciiString == "'Ybtl'") then
    return 1499624556
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ybtl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ysqd'" )
  if (terrainTypeAsciiString == "'Ysqd'") then
    return 1500737892
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ysqd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Yrtl'" )
  if (terrainTypeAsciiString == "'Yrtl'") then
    return 1500673132
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Yrtl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ygsb'" )
  if (terrainTypeAsciiString == "'Ygsb'") then
    return 1499951970
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ygsb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Yhdg'" )
  if (terrainTypeAsciiString == "'Yhdg'") then
    return 1500013671
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Yhdg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ywmb'" )
  if (terrainTypeAsciiString == "'Ywmb'") then
    return 1500999010
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ywmb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Vdrt'" )
  if (terrainTypeAsciiString == "'Vdrt'") then
    return 1449423476
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Vdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Vdrr'" )
  if (terrainTypeAsciiString == "'Vdrr'") then
    return 1449423474
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Vdrr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Vcrp'" )
  if (terrainTypeAsciiString == "'Vcrp'") then
    return 1449357936
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Vcrp'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Vcbp'" )
  if (terrainTypeAsciiString == "'Vcbp'") then
    return 1449353840
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Vcbp'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Vstp'" )
  if (terrainTypeAsciiString == "'Vstp'") then
    return 1450407024
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Vstp'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Vgrs'" )
  if (terrainTypeAsciiString == "'Vgrs'") then
    return 1449620083
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Vgrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Vrck'" )
  if (terrainTypeAsciiString == "'Vrck'") then
    return 1450337131
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Vrck'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Vgrt'" )
  if (terrainTypeAsciiString == "'Vgrt'") then
    return 1449620084
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Vgrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Qdrt'" )
  if (terrainTypeAsciiString == "'Qdrt'") then
    return 1365537396
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Qdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Qdrr'" )
  if (terrainTypeAsciiString == "'Qdrr'") then
    return 1365537394
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Qdrr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Qcrp'" )
  if (terrainTypeAsciiString == "'Qcrp'") then
    return 1365471856
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Qcrp'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Qcbp'" )
  if (terrainTypeAsciiString == "'Qcbp'") then
    return 1365467760
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Qcbp'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Qstp'" )
  if (terrainTypeAsciiString == "'Qstp'") then
    return 1366520944
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Qstp'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Qgrs'" )
  if (terrainTypeAsciiString == "'Qgrs'") then
    return 1365734003
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Qgrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Qrck'" )
  if (terrainTypeAsciiString == "'Qrck'") then
    return 1366451051
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Qrck'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Qgrt'" )
  if (terrainTypeAsciiString == "'Qgrt'") then
    return 1365734004
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Qgrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xdrt'" )
  if (terrainTypeAsciiString == "'Xdrt'") then
    return 1482977908
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xdtr'" )
  if (terrainTypeAsciiString == "'Xdtr'") then
    return 1482978418
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xdtr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xblm'" )
  if (terrainTypeAsciiString == "'Xblm'") then
    return 1482845293
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xblm'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xbtl'" )
  if (terrainTypeAsciiString == "'Xbtl'") then
    return 1482847340
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xbtl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xsqd'" )
  if (terrainTypeAsciiString == "'Xsqd'") then
    return 1483960676
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xsqd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xrtl'" )
  if (terrainTypeAsciiString == "'Xrtl'") then
    return 1483895916
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xrtl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xgsb'" )
  if (terrainTypeAsciiString == "'Xgsb'") then
    return 1483174754
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xgsb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xhdg'" )
  if (terrainTypeAsciiString == "'Xhdg'") then
    return 1483236455
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xhdg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Xwmb'" )
  if (terrainTypeAsciiString == "'Xwmb'") then
    return 1484221794
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Xwmb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ddrt'" )
  if (terrainTypeAsciiString == "'Ddrt'") then
    return 1147433588
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ddrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Dbrk'" )
  if (terrainTypeAsciiString == "'Dbrk'") then
    return 1147302507
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Dbrk'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Drds'" )
  if (terrainTypeAsciiString == "'Drds'") then
    return 1148347507
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Drds'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Dlvc'" )
  if (terrainTypeAsciiString == "'Dlvc'") then
    return 1147958883
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Dlvc'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Dlav'" )
  if (terrainTypeAsciiString == "'Dlav'") then
    return 1147953526
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Dlav'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ddkr'" )
  if (terrainTypeAsciiString == "'Ddkr'") then
    return 1147431794
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ddkr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Dgrs'" )
  if (terrainTypeAsciiString == "'Dgrs'") then
    return 1147630195
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Dgrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Dsqd'" )
  if (terrainTypeAsciiString == "'Dsqd'") then
    return 1148416356
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Dsqd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Gdrt'" )
  if (terrainTypeAsciiString == "'Gdrt'") then
    return 1197765236
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Gdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Gbrk'" )
  if (terrainTypeAsciiString == "'Gbrk'") then
    return 1197634155
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Gbrk'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Grds'" )
  if (terrainTypeAsciiString == "'Grds'") then
    return 1198679155
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Grds'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Glvc'" )
  if (terrainTypeAsciiString == "'Glvc'") then
    return 1198290531
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Glvc'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Glav'" )
  if (terrainTypeAsciiString == "'Glav'") then
    return 1198285174
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Glav'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Gdkr'" )
  if (terrainTypeAsciiString == "'Gdkr'") then
    return 1197763442
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Gdkr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ggrs'" )
  if (terrainTypeAsciiString == "'Ggrs'") then
    return 1197961843
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ggrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Gsqd'" )
  if (terrainTypeAsciiString == "'Gsqd'") then
    return 1198748004
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Gsqd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Zdrt'" )
  if (terrainTypeAsciiString == "'Zdrt'") then
    return 1516532340
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Zdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Zdtr'" )
  if (terrainTypeAsciiString == "'Zdtr'") then
    return 1516532850
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Zdtr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Zdrg'" )
  if (terrainTypeAsciiString == "'Zdrg'") then
    return 1516532327
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Zdrg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Zbks'" )
  if (terrainTypeAsciiString == "'Zbks'") then
    return 1516399475
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Zbks'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Zsan'" )
  if (terrainTypeAsciiString == "'Zsan'") then
    return 1517511022
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Zsan'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Zbkl'" )
  if (terrainTypeAsciiString == "'Zbkl'") then
    return 1516399468
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Zbkl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ztil'" )
  if (terrainTypeAsciiString == "'Ztil'") then
    return 1517578604
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ztil'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Zgrs'" )
  if (terrainTypeAsciiString == "'Zgrs'") then
    return 1516728947
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Zgrs'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Zvin'" )
  if (terrainTypeAsciiString == "'Zvin'") then
    return 1517709678
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Zvin'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Idrt'" )
  if (terrainTypeAsciiString == "'Idrt'") then
    return 1231319668
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Idrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Idtr'" )
  if (terrainTypeAsciiString == "'Idtr'") then
    return 1231320178
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Idtr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Idki'" )
  if (terrainTypeAsciiString == "'Idki'") then
    return 1231317865
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Idki'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ibkb'" )
  if (terrainTypeAsciiString == "'Ibkb'") then
    return 1231186786
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ibkb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Irbk'" )
  if (terrainTypeAsciiString == "'Irbk'") then
    return 1232233067
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Irbk'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Itbk'" )
  if (terrainTypeAsciiString == "'Itbk'") then
    return 1232364139
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Itbk'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Iice'" )
  if (terrainTypeAsciiString == "'Iice'") then
    return 1231643493
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Iice'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ibsq'" )
  if (terrainTypeAsciiString == "'Ibsq'") then
    return 1231188849
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ibsq'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Isnw'" )
  if (terrainTypeAsciiString == "'Isnw'") then
    return 1232301687
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Isnw'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Odrt'" )
  if (terrainTypeAsciiString == "'Odrt'") then
    return 1331982964
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Odrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Odtr'" )
  if (terrainTypeAsciiString == "'Odtr'") then
    return 1331983474
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Odtr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Osmb'" )
  if (terrainTypeAsciiString == "'Osmb'") then
    return 1332964706
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Osmb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ofst'" )
  if (terrainTypeAsciiString == "'Ofst'") then
    return 1332114292
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ofst'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Olgb'" )
  if (terrainTypeAsciiString == "'Olgb'") then
    return 1332504418
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Olgb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Orok'" )
  if (terrainTypeAsciiString == "'Orok'") then
    return 1332899691
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Orok'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ofsl'" )
  if (terrainTypeAsciiString == "'Ofsl'") then
    return 1332114284
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ofsl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Oaby'" )
  if (terrainTypeAsciiString == "'Oaby'") then
    return 1331782265
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Oaby'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Kdrt'" )
  if (terrainTypeAsciiString == "'Kdrt'") then
    return 1264874100
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Kdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Kfsl'" )
  if (terrainTypeAsciiString == "'Kfsl'") then
    return 1265005420
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Kfsl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Kdts'" )
  if (terrainTypeAsciiString == "'Kdts'") then
    return 1264874611
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Kdts'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Kfst'" )
  if (terrainTypeAsciiString == "'Kfst'") then
    return 1265005428
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Kfst'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ksmb'" )
  if (terrainTypeAsciiString == "'Ksmb'") then
    return 1265855842
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ksmb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Klgb'" )
  if (terrainTypeAsciiString == "'Klgb'") then
    return 1265395554
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Klgb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Ksqt'" )
  if (terrainTypeAsciiString == "'Ksqt'") then
    return 1265856884
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Ksqt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Kdkt'" )
  if (terrainTypeAsciiString == "'Kdkt'") then
    return 1264872308
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Kdkt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jdrt'" )
  if (terrainTypeAsciiString == "'Jdrt'") then
    return 1248096884
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jdrt'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jdtr'" )
  if (terrainTypeAsciiString == "'Jdtr'") then
    return 1248097394
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jdtr'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jblm'" )
  if (terrainTypeAsciiString == "'Jblm'") then
    return 1247964269
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jblm'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jbtl'" )
  if (terrainTypeAsciiString == "'Jbtl'") then
    return 1247966316
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jbtl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jsqd'" )
  if (terrainTypeAsciiString == "'Jsqd'") then
    return 1249079652
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jsqd'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jrtl'" )
  if (terrainTypeAsciiString == "'Jrtl'") then
    return 1249014892
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jrtl'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jgsb'" )
  if (terrainTypeAsciiString == "'Jgsb'") then
    return 1248293730
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jgsb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jhdg'" )
  if (terrainTypeAsciiString == "'Jhdg'") then
    return 1248355431
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jhdg'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'Jwmb'" )
  if (terrainTypeAsciiString == "'Jwmb'") then
    return 1249340770
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'Jwmb'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cAc2'" )
  if (terrainTypeAsciiString == "'cAc2'") then
    return 1665229618
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cAc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cAc1'" )
  if (terrainTypeAsciiString == "'cAc1'") then
    return 1665229617
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cAc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cBc2'" )
  if (terrainTypeAsciiString == "'cBc2'") then
    return 1665295154
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cBc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cBc1'" )
  if (terrainTypeAsciiString == "'cBc1'") then
    return 1665295153
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cBc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cKc1'" )
  if (terrainTypeAsciiString == "'cKc1'") then
    return 1665884977
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cKc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cKc2'" )
  if (terrainTypeAsciiString == "'cKc2'") then
    return 1665884978
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cKc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cYc2'" )
  if (terrainTypeAsciiString == "'cYc2'") then
    return 1666802482
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cYc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cYc1'" )
  if (terrainTypeAsciiString == "'cYc1'") then
    return 1666802481
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cYc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cXc2'" )
  if (terrainTypeAsciiString == "'cXc2'") then
    return 1666736946
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cXc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cXc1'" )
  if (terrainTypeAsciiString == "'cXc1'") then
    return 1666736945
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cXc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cJc2'" )
  if (terrainTypeAsciiString == "'cJc2'") then
    return 1665819442
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cJc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cJc1'" )
  if (terrainTypeAsciiString == "'cJc1'") then
    return 1665819441
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cJc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cDc2'" )
  if (terrainTypeAsciiString == "'cDc2'") then
    return 1665426226
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cDc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cDc1'" )
  if (terrainTypeAsciiString == "'cDc1'") then
    return 1665426225
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cDc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cCc2'" )
  if (terrainTypeAsciiString == "'cCc2'") then
    return 1665360690
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cCc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cCc1'" )
  if (terrainTypeAsciiString == "'cCc1'") then
    return 1665360689
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cCc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cIc2'" )
  if (terrainTypeAsciiString == "'cIc2'") then
    return 1665753906
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cIc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cIc1'" )
  if (terrainTypeAsciiString == "'cIc1'") then
    return 1665753905
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cIc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cFc2'" )
  if (terrainTypeAsciiString == "'cFc2'") then
    return 1665557298
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cFc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cFc1'" )
  if (terrainTypeAsciiString == "'cFc1'") then
    return 1665557297
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cFc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cLc2'" )
  if (terrainTypeAsciiString == "'cLc2'") then
    return 1665950514
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cLc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cLc1'" )
  if (terrainTypeAsciiString == "'cLc1'") then
    return 1665950513
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cLc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cWc2'" )
  if (terrainTypeAsciiString == "'cWc2'") then
    return 1666671410
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cWc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cWc1'" )
  if (terrainTypeAsciiString == "'cWc1'") then
    return 1666671409
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cWc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cNc2'" )
  if (terrainTypeAsciiString == "'cNc2'") then
    return 1666081586
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cNc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cNc1'" )
  if (terrainTypeAsciiString == "'cNc1'") then
    return 1666081585
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cNc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cOc1'" )
  if (terrainTypeAsciiString == "'cOc1'") then
    return 1666147121
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cOc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cOc2'" )
  if (terrainTypeAsciiString == "'cOc2'") then
    return 1666147122
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cOc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cZc2'" )
  if (terrainTypeAsciiString == "'cZc2'") then
    return 1666868018
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cZc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cZc1'" )
  if (terrainTypeAsciiString == "'cZc1'") then
    return 1666868017
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cZc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cGc2'" )
  if (terrainTypeAsciiString == "'cGc2'") then
    return 1665622834
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cGc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cGc1'" )
  if (terrainTypeAsciiString == "'cGc1'") then
    return 1665622833
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cGc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cVc2'" )
  if (terrainTypeAsciiString == "'cVc2'") then
    return 1666605874
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cVc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cVc1'" )
  if (terrainTypeAsciiString == "'cVc1'") then
    return 1666605873
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cVc1'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cQc2'" )
  if (terrainTypeAsciiString == "'cQc2'") then
    return 1666278194
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cQc2'" )
  --textmacro instance: TerrainTypeAsciiString2TerrainTypeId( "'cQc1'" )
  if (terrainTypeAsciiString == "'cQc1'") then
    return 1666278193
  end
  --end of: TerrainTypeAsciiString2TerrainTypeId( "'cQc1'" )

  return 0
end




--library TerrainTypeAsciiConversion ends
--library TerrainTypeFunctions:


function TerrainTypeId2TerrainType(terrainTypeId)
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[udg_terrainTypes]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[((s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[(udg_terrainTypes)] + (i)]))]) == terrainTypeId) then
      -- INLINED!!
      return (s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[(udg_terrainTypes)] + (i)])
      -- INLINED!!
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[udg_terrainTypes]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[((s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[(udg_terrainTypes)] + (i)]))]) == terrainTypeId) then
      -- INLINED!!
      return (s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[(udg_terrainTypes)] + (i)])
      -- INLINED!!
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[udg_terrainTypes]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[((s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[(udg_terrainTypes)] + (i)]))]) == terrainTypeId) then
      -- INLINED!!
      return (s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[(udg_terrainTypes)] + (i)])
      -- INLINED!!
    end
    i = i + 1
  end
  return 0
end



function IsTerrainTypeOfKind(terrainTypeId, terrainTypeKind)
  local terrainType = TerrainTypeId2TerrainType(terrainTypeId)
  if (terrainType == 0) then
    return false
  end
  return (terrainTypeKind == (s__TerrainType_kind[(terrainType)]))
  -- INLINED!!
end





--library TerrainTypeFunctions ends
--library TerrainTypeMax:


function TerrainTypeMaxId2TerrainTypeId(maxId)

  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "1", "'Ldrt'" )
  if (maxId == 1) then
    return 1281651316
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "1", "'Ldrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "2", "'Ldro'" )
  if (maxId == 2) then
    return 1281651311
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "2", "'Ldro'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "3", "'Ldrg'" )
  if (maxId == 3) then
    return 1281651303
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "3", "'Ldrg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "4", "'Lrok'" )
  if (maxId == 4) then
    return 1282568043
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "4", "'Lrok'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "5", "'Lgrs'" )
  if (maxId == 5) then
    return 1281847923
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "5", "'Lgrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "6", "'Lgrd'" )
  if (maxId == 6) then
    return 1281847908
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "6", "'Lgrd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "7", "'Fdrt'" )
  if (maxId == 7) then
    return 1180988020
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "7", "'Fdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "8", "'Fdro'" )
  if (maxId == 8) then
    return 1180988015
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "8", "'Fdro'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "9", "'Fdrg'" )
  if (maxId == 9) then
    return 1180988007
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "9", "'Fdrg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "10", "'Frok'" )
  if (maxId == 10) then
    return 1181904747
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "10", "'Frok'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "11", "'Fgrs'" )
  if (maxId == 11) then
    return 1181184627
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "11", "'Fgrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "12", "'Fgrd'" )
  if (maxId == 12) then
    return 1181184612
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "12", "'Fgrd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "13", "'Wdrt'" )
  if (maxId == 13) then
    return 1466200692
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "13", "'Wdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "14", "'Wdro'" )
  if (maxId == 14) then
    return 1466200687
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "14", "'Wdro'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "15", "'Wsng'" )
  if (maxId == 15) then
    return 1467182695
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "15", "'Wsng'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "16", "'Wrok'" )
  if (maxId == 16) then
    return 1467117419
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "16", "'Wrok'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "17", "'Wgrs'" )
  if (maxId == 17) then
    return 1466397299
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "17", "'Wgrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "18", "'Wsnw'" )
  if (maxId == 18) then
    return 1467182711
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "18", "'Wsnw'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "19", "'Bdrt'" )
  if (maxId == 19) then
    return 1113879156
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "19", "'Bdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "20", "'Bdrh'" )
  if (maxId == 20) then
    return 1113879144
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "20", "'Bdrh'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "21", "'Bdrr'" )
  if (maxId == 21) then
    return 1113879154
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "21", "'Bdrr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "22", "'Bdrg'" )
  if (maxId == 22) then
    return 1113879143
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "22", "'Bdrg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "23", "'Bdsr'" )
  if (maxId == 23) then
    return 1113879410
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "23", "'Bdsr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "24", "'Bdsd'" )
  if (maxId == 24) then
    return 1113879396
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "24", "'Bdsd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "25", "'Bflr'" )
  if (maxId == 25) then
    return 1114008690
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "25", "'Bflr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "26", "'Bgrr'" )
  if (maxId == 26) then
    return 1114075762
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "26", "'Bgrr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "27", "'Adrt'" )
  if (maxId == 27) then
    return 1097101940
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "27", "'Adrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "28", "'Adrd'" )
  if (maxId == 28) then
    return 1097101924
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "28", "'Adrd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "29", "'Agrs'" )
  if (maxId == 29) then
    return 1097298547
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "29", "'Agrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "30", "'Arck'" )
  if (maxId == 30) then
    return 1098015595
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "30", "'Arck'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "31", "'Agrd'" )
  if (maxId == 31) then
    return 1097298532
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "31", "'Agrd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "32", "'Avin'" )
  if (maxId == 32) then
    return 1098279278
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "32", "'Avin'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "33", "'Adrg'" )
  if (maxId == 33) then
    return 1097101927
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "33", "'Adrg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "34", "'Alvd'" )
  if (maxId == 34) then
    return 1097627236
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "34", "'Alvd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "35", "'Cdrt'" )
  if (maxId == 35) then
    return 1130656372
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "35", "'Cdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "36", "'Cdrd'" )
  if (maxId == 36) then
    return 1130656356
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "36", "'Cdrd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "37", "'Cpos'" )
  if (maxId == 37) then
    return 1131442035
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "37", "'Cpos'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "38", "'Crck'" )
  if (maxId == 38) then
    return 1131570027
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "38", "'Crck'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "39", "'Cvin'" )
  if (maxId == 39) then
    return 1131833710
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "39", "'Cvin'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "40", "'Cgrs'" )
  if (maxId == 40) then
    return 1130852979
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "40", "'Cgrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "41", "'Clvg'" )
  if (maxId == 41) then
    return 1131181671
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "41", "'Clvg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "42", "'Ndrt'" )
  if (maxId == 42) then
    return 1315205748
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "42", "'Ndrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "43", "'Ndrd'" )
  if (maxId == 43) then
    return 1315205732
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "43", "'Ndrd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "44", "'Nrck'" )
  if (maxId == 44) then
    return 1316119403
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "44", "'Nrck'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "45", "'Ngrs'" )
  if (maxId == 45) then
    return 1315402355
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "45", "'Ngrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "46", "'Nice'" )
  if (maxId == 46) then
    return 1315529573
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "46", "'Nice'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "47", "'Nsnw'" )
  if (maxId == 47) then
    return 1316187767
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "47", "'Nsnw'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "48", "'Nsnr'" )
  if (maxId == 48) then
    return 1316187762
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "48", "'Nsnr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "49", "'Ydrt'" )
  if (maxId == 49) then
    return 1499755124
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "49", "'Ydrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "50", "'Ydtr'" )
  if (maxId == 50) then
    return 1499755634
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "50", "'Ydtr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "51", "'Yblm'" )
  if (maxId == 51) then
    return 1499622509
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "51", "'Yblm'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "52", "'Ybtl'" )
  if (maxId == 52) then
    return 1499624556
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "52", "'Ybtl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "53", "'Ysqd'" )
  if (maxId == 53) then
    return 1500737892
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "53", "'Ysqd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "54", "'Yrtl'" )
  if (maxId == 54) then
    return 1500673132
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "54", "'Yrtl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "55", "'Ygsb'" )
  if (maxId == 55) then
    return 1499951970
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "55", "'Ygsb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "56", "'Yhdg'" )
  if (maxId == 56) then
    return 1500013671
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "56", "'Yhdg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "57", "'Ywmb'" )
  if (maxId == 57) then
    return 1500999010
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "57", "'Ywmb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "58", "'Vdrt'" )
  if (maxId == 58) then
    return 1449423476
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "58", "'Vdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "59", "'Vdrr'" )
  if (maxId == 59) then
    return 1449423474
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "59", "'Vdrr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "60", "'Vcrp'" )
  if (maxId == 60) then
    return 1449357936
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "60", "'Vcrp'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "61", "'Vcbp'" )
  if (maxId == 61) then
    return 1449353840
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "61", "'Vcbp'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "62", "'Vstp'" )
  if (maxId == 62) then
    return 1450407024
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "62", "'Vstp'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "63", "'Vgrs'" )
  if (maxId == 63) then
    return 1449620083
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "63", "'Vgrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "64", "'Vrck'" )
  if (maxId == 64) then
    return 1450337131
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "64", "'Vrck'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "65", "'Vgrt'" )
  if (maxId == 65) then
    return 1449620084
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "65", "'Vgrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "66", "'Qdrt'" )
  if (maxId == 66) then
    return 1365537396
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "66", "'Qdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "67", "'Qdrr'" )
  if (maxId == 67) then
    return 1365537394
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "67", "'Qdrr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "68", "'Qcrp'" )
  if (maxId == 68) then
    return 1365471856
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "68", "'Qcrp'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "69", "'Qcbp'" )
  if (maxId == 69) then
    return 1365467760
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "69", "'Qcbp'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "70", "'Qstp'" )
  if (maxId == 70) then
    return 1366520944
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "70", "'Qstp'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "71", "'Qgrs'" )
  if (maxId == 71) then
    return 1365734003
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "71", "'Qgrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "72", "'Qrck'" )
  if (maxId == 72) then
    return 1366451051
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "72", "'Qrck'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "73", "'Qgrt'" )
  if (maxId == 73) then
    return 1365734004
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "73", "'Qgrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "74", "'Xdrt'" )
  if (maxId == 74) then
    return 1482977908
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "74", "'Xdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "75", "'Xdtr'" )
  if (maxId == 75) then
    return 1482978418
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "75", "'Xdtr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "76", "'Xblm'" )
  if (maxId == 76) then
    return 1482845293
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "76", "'Xblm'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "77", "'Xbtl'" )
  if (maxId == 77) then
    return 1482847340
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "77", "'Xbtl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "78", "'Xsqd'" )
  if (maxId == 78) then
    return 1483960676
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "78", "'Xsqd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "79", "'Xrtl'" )
  if (maxId == 79) then
    return 1483895916
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "79", "'Xrtl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "80", "'Xgsb'" )
  if (maxId == 80) then
    return 1483174754
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "80", "'Xgsb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "81", "'Xhdg'" )
  if (maxId == 81) then
    return 1483236455
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "81", "'Xhdg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "82", "'Xwmb'" )
  if (maxId == 82) then
    return 1484221794
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "82", "'Xwmb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "83", "'Ddrt'" )
  if (maxId == 83) then
    return 1147433588
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "83", "'Ddrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "84", "'Dbrk'" )
  if (maxId == 84) then
    return 1147302507
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "84", "'Dbrk'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "85", "'Drds'" )
  if (maxId == 85) then
    return 1148347507
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "85", "'Drds'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "86", "'Dlvc'" )
  if (maxId == 86) then
    return 1147958883
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "86", "'Dlvc'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "87", "'Dlav'" )
  if (maxId == 87) then
    return 1147953526
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "87", "'Dlav'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "88", "'Ddkr'" )
  if (maxId == 88) then
    return 1147431794
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "88", "'Ddkr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "89", "'Dgrs'" )
  if (maxId == 89) then
    return 1147630195
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "89", "'Dgrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "90", "'Dsqd'" )
  if (maxId == 90) then
    return 1148416356
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "90", "'Dsqd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "91", "'Gdrt'" )
  if (maxId == 91) then
    return 1197765236
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "91", "'Gdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "92", "'Gbrk'" )
  if (maxId == 92) then
    return 1197634155
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "92", "'Gbrk'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "93", "'Grds'" )
  if (maxId == 93) then
    return 1198679155
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "93", "'Grds'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "94", "'Glvc'" )
  if (maxId == 94) then
    return 1198290531
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "94", "'Glvc'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "95", "'Glav'" )
  if (maxId == 95) then
    return 1198285174
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "95", "'Glav'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "96", "'Gdkr'" )
  if (maxId == 96) then
    return 1197763442
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "96", "'Gdkr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "97", "'Ggrs'" )
  if (maxId == 97) then
    return 1197961843
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "97", "'Ggrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "98", "'Gsqd'" )
  if (maxId == 98) then
    return 1198748004
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "98", "'Gsqd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "99", "'Zdrt'" )
  if (maxId == 99) then
    return 1516532340
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "99", "'Zdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "100", "'Zdtr'" )
  if (maxId == 100) then
    return 1516532850
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "100", "'Zdtr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "101", "'Zdrg'" )
  if (maxId == 101) then
    return 1516532327
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "101", "'Zdrg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "102", "'Zbks'" )
  if (maxId == 102) then
    return 1516399475
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "102", "'Zbks'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "103", "'Zsan'" )
  if (maxId == 103) then
    return 1517511022
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "103", "'Zsan'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "104", "'Zbkl'" )
  if (maxId == 104) then
    return 1516399468
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "104", "'Zbkl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "105", "'Ztil'" )
  if (maxId == 105) then
    return 1517578604
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "105", "'Ztil'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "106", "'Zgrs'" )
  if (maxId == 106) then
    return 1516728947
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "106", "'Zgrs'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "107", "'Zvin'" )
  if (maxId == 107) then
    return 1517709678
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "107", "'Zvin'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "108", "'Idrt'" )
  if (maxId == 108) then
    return 1231319668
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "108", "'Idrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "109", "'Idtr'" )
  if (maxId == 109) then
    return 1231320178
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "109", "'Idtr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "110", "'Idki'" )
  if (maxId == 110) then
    return 1231317865
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "110", "'Idki'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "111", "'Ibkb'" )
  if (maxId == 111) then
    return 1231186786
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "111", "'Ibkb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "112", "'Irbk'" )
  if (maxId == 112) then
    return 1232233067
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "112", "'Irbk'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "113", "'Itbk'" )
  if (maxId == 113) then
    return 1232364139
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "113", "'Itbk'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "114", "'Iice'" )
  if (maxId == 114) then
    return 1231643493
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "114", "'Iice'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "115", "'Ibsq'" )
  if (maxId == 115) then
    return 1231188849
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "115", "'Ibsq'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "116", "'Isnw'" )
  if (maxId == 116) then
    return 1232301687
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "116", "'Isnw'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "117", "'Odrt'" )
  if (maxId == 117) then
    return 1331982964
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "117", "'Odrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "118", "'Odtr'" )
  if (maxId == 118) then
    return 1331983474
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "118", "'Odtr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "119", "'Osmb'" )
  if (maxId == 119) then
    return 1332964706
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "119", "'Osmb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "120", "'Ofst'" )
  if (maxId == 120) then
    return 1332114292
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "120", "'Ofst'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "121", "'Olgb'" )
  if (maxId == 121) then
    return 1332504418
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "121", "'Olgb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "122", "'Orok'" )
  if (maxId == 122) then
    return 1332899691
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "122", "'Orok'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "123", "'Ofsl'" )
  if (maxId == 123) then
    return 1332114284
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "123", "'Ofsl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "124", "'Oaby'" )
  if (maxId == 124) then
    return 1331782265
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "124", "'Oaby'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "125", "'Kdrt'" )
  if (maxId == 125) then
    return 1264874100
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "125", "'Kdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "126", "'Kfsl'" )
  if (maxId == 126) then
    return 1265005420
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "126", "'Kfsl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "127", "'Kdts'" )
  if (maxId == 127) then
    return 1264874611
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "127", "'Kdts'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "128", "'Kfst'" )
  if (maxId == 128) then
    return 1265005428
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "128", "'Kfst'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "129", "'Ksmb'" )
  if (maxId == 129) then
    return 1265855842
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "129", "'Ksmb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "130", "'Klgb'" )
  if (maxId == 130) then
    return 1265395554
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "130", "'Klgb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "131", "'Ksqt'" )
  if (maxId == 131) then
    return 1265856884
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "131", "'Ksqt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "132", "'Kdkt'" )
  if (maxId == 132) then
    return 1264872308
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "132", "'Kdkt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "133", "'Jdrt'" )
  if (maxId == 133) then
    return 1248096884
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "133", "'Jdrt'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "134", "'Jdtr'" )
  if (maxId == 134) then
    return 1248097394
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "134", "'Jdtr'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "135", "'Jblm'" )
  if (maxId == 135) then
    return 1247964269
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "135", "'Jblm'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "136", "'Jbtl'" )
  if (maxId == 136) then
    return 1247966316
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "136", "'Jbtl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "137", "'Jsqd'" )
  if (maxId == 137) then
    return 1249079652
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "137", "'Jsqd'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "138", "'Jrtl'" )
  if (maxId == 138) then
    return 1249014892
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "138", "'Jrtl'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "139", "'Jgsb'" )
  if (maxId == 139) then
    return 1248293730
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "139", "'Jgsb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "140", "'Jhdg'" )
  if (maxId == 140) then
    return 1248355431
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "140", "'Jhdg'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "141", "'Jwmb'" )
  if (maxId == 141) then
    return 1249340770
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "141", "'Jwmb'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "142", "'cAc2'" )
  if (maxId == 142) then
    return 1665229618
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "142", "'cAc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "143", "'cAc1'" )
  if (maxId == 143) then
    return 1665229617
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "143", "'cAc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "144", "'cBc2'" )
  if (maxId == 144) then
    return 1665295154
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "144", "'cBc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "145", "'cBc1'" )
  if (maxId == 145) then
    return 1665295153
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "145", "'cBc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "146", "'cKc1'" )
  if (maxId == 146) then
    return 1665884977
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "146", "'cKc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "147", "'cKc2'" )
  if (maxId == 147) then
    return 1665884978
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "147", "'cKc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "148", "'cYc2'" )
  if (maxId == 148) then
    return 1666802482
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "148", "'cYc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "149", "'cYc1'" )
  if (maxId == 149) then
    return 1666802481
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "149", "'cYc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "150", "'cXc2'" )
  if (maxId == 150) then
    return 1666736946
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "150", "'cXc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "151", "'cXc1'" )
  if (maxId == 151) then
    return 1666736945
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "151", "'cXc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "152", "'cJc2'" )
  if (maxId == 152) then
    return 1665819442
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "152", "'cJc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "153", "'cJc1'" )
  if (maxId == 153) then
    return 1665819441
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "153", "'cJc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "154", "'cDc2'" )
  if (maxId == 154) then
    return 1665426226
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "154", "'cDc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "155", "'cDc1'" )
  if (maxId == 155) then
    return 1665426225
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "155", "'cDc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "156", "'cCc2'" )
  if (maxId == 156) then
    return 1665360690
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "156", "'cCc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "157", "'cCc1'" )
  if (maxId == 157) then
    return 1665360689
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "157", "'cCc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "158", "'cIc2'" )
  if (maxId == 158) then
    return 1665753906
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "158", "'cIc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "159", "'cIc1'" )
  if (maxId == 159) then
    return 1665753905
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "159", "'cIc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "160", "'cFc2'" )
  if (maxId == 160) then
    return 1665557298
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "160", "'cFc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "161", "'cFc1'" )
  if (maxId == 161) then
    return 1665557297
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "161", "'cFc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "162", "'cLc2'" )
  if (maxId == 162) then
    return 1665950514
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "162", "'cLc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "163", "'cLc1'" )
  if (maxId == 163) then
    return 1665950513
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "163", "'cLc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "164", "'cWc2'" )
  if (maxId == 164) then
    return 1666671410
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "164", "'cWc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "165", "'cWc1'" )
  if (maxId == 165) then
    return 1666671409
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "165", "'cWc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "166", "'cNc2'" )
  if (maxId == 166) then
    return 1666081586
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "166", "'cNc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "167", "'cNc1'" )
  if (maxId == 167) then
    return 1666081585
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "167", "'cNc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "168", "'cOc1'" )
  if (maxId == 168) then
    return 1666147121
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "168", "'cOc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "169", "'cOc2'" )
  if (maxId == 169) then
    return 1666147122
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "169", "'cOc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "170", "'cZc2'" )
  if (maxId == 170) then
    return 1666868018
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "170", "'cZc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "171", "'cZc1'" )
  if (maxId == 171) then
    return 1666868017
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "171", "'cZc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "172", "'cGc2'" )
  if (maxId == 172) then
    return 1665622834
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "172", "'cGc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "173", "'cGc1'" )
  if (maxId == 173) then
    return 1665622833
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "173", "'cGc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "174", "'cVc2'" )
  if (maxId == 174) then
    return 1666605874
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "174", "'cVc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "175", "'cVc1'" )
  if (maxId == 175) then
    return 1666605873
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "175", "'cVc1'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "176", "'cQc2'" )
  if (maxId == 176) then
    return 1666278194
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "176", "'cQc2'" )
  --textmacro instance: TerrainTypeMaxId2TerrainTypeId( "177", "'cQc1'" )
  if (maxId == 177) then
    return 1666278193
  end
  --end of: TerrainTypeMaxId2TerrainTypeId( "177", "'cQc1'" )

  return 0

end


function TerrainTypeId2TerrainTypeMaxId(terrainTypeId)

  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "1", "'Ldrt'" )
  if (terrainTypeId == 1281651316) then
    return 1
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "1", "'Ldrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "2", "'Ldro'" )
  if (terrainTypeId == 1281651311) then
    return 2
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "2", "'Ldro'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "3", "'Ldrg'" )
  if (terrainTypeId == 1281651303) then
    return 3
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "3", "'Ldrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "4", "'Lrok'" )
  if (terrainTypeId == 1282568043) then
    return 4
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "4", "'Lrok'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "5", "'Lgrs'" )
  if (terrainTypeId == 1281847923) then
    return 5
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "5", "'Lgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "6", "'Lgrd'" )
  if (terrainTypeId == 1281847908) then
    return 6
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "6", "'Lgrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "7", "'Fdrt'" )
  if (terrainTypeId == 1180988020) then
    return 7
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "7", "'Fdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "8", "'Fdro'" )
  if (terrainTypeId == 1180988015) then
    return 8
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "8", "'Fdro'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "9", "'Fdrg'" )
  if (terrainTypeId == 1180988007) then
    return 9
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "9", "'Fdrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "10", "'Frok'" )
  if (terrainTypeId == 1181904747) then
    return 10
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "10", "'Frok'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "11", "'Fgrs'" )
  if (terrainTypeId == 1181184627) then
    return 11
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "11", "'Fgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "12", "'Fgrd'" )
  if (terrainTypeId == 1181184612) then
    return 12
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "12", "'Fgrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "13", "'Wdrt'" )
  if (terrainTypeId == 1466200692) then
    return 13
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "13", "'Wdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "14", "'Wdro'" )
  if (terrainTypeId == 1466200687) then
    return 14
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "14", "'Wdro'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "15", "'Wsng'" )
  if (terrainTypeId == 1467182695) then
    return 15
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "15", "'Wsng'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "16", "'Wrok'" )
  if (terrainTypeId == 1467117419) then
    return 16
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "16", "'Wrok'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "17", "'Wgrs'" )
  if (terrainTypeId == 1466397299) then
    return 17
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "17", "'Wgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "18", "'Wsnw'" )
  if (terrainTypeId == 1467182711) then
    return 18
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "18", "'Wsnw'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "19", "'Bdrt'" )
  if (terrainTypeId == 1113879156) then
    return 19
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "19", "'Bdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "20", "'Bdrh'" )
  if (terrainTypeId == 1113879144) then
    return 20
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "20", "'Bdrh'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "21", "'Bdrr'" )
  if (terrainTypeId == 1113879154) then
    return 21
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "21", "'Bdrr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "22", "'Bdrg'" )
  if (terrainTypeId == 1113879143) then
    return 22
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "22", "'Bdrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "23", "'Bdsr'" )
  if (terrainTypeId == 1113879410) then
    return 23
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "23", "'Bdsr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "24", "'Bdsd'" )
  if (terrainTypeId == 1113879396) then
    return 24
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "24", "'Bdsd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "25", "'Bflr'" )
  if (terrainTypeId == 1114008690) then
    return 25
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "25", "'Bflr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "26", "'Bgrr'" )
  if (terrainTypeId == 1114075762) then
    return 26
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "26", "'Bgrr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "27", "'Adrt'" )
  if (terrainTypeId == 1097101940) then
    return 27
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "27", "'Adrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "28", "'Adrd'" )
  if (terrainTypeId == 1097101924) then
    return 28
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "28", "'Adrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "29", "'Agrs'" )
  if (terrainTypeId == 1097298547) then
    return 29
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "29", "'Agrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "30", "'Arck'" )
  if (terrainTypeId == 1098015595) then
    return 30
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "30", "'Arck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "31", "'Agrd'" )
  if (terrainTypeId == 1097298532) then
    return 31
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "31", "'Agrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "32", "'Avin'" )
  if (terrainTypeId == 1098279278) then
    return 32
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "32", "'Avin'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "33", "'Adrg'" )
  if (terrainTypeId == 1097101927) then
    return 33
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "33", "'Adrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "34", "'Alvd'" )
  if (terrainTypeId == 1097627236) then
    return 34
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "34", "'Alvd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "35", "'Cdrt'" )
  if (terrainTypeId == 1130656372) then
    return 35
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "35", "'Cdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "36", "'Cdrd'" )
  if (terrainTypeId == 1130656356) then
    return 36
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "36", "'Cdrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "37", "'Cpos'" )
  if (terrainTypeId == 1131442035) then
    return 37
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "37", "'Cpos'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "38", "'Crck'" )
  if (terrainTypeId == 1131570027) then
    return 38
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "38", "'Crck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "39", "'Cvin'" )
  if (terrainTypeId == 1131833710) then
    return 39
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "39", "'Cvin'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "40", "'Cgrs'" )
  if (terrainTypeId == 1130852979) then
    return 40
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "40", "'Cgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "41", "'Clvg'" )
  if (terrainTypeId == 1131181671) then
    return 41
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "41", "'Clvg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "42", "'Ndrt'" )
  if (terrainTypeId == 1315205748) then
    return 42
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "42", "'Ndrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "43", "'Ndrd'" )
  if (terrainTypeId == 1315205732) then
    return 43
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "43", "'Ndrd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "44", "'Nrck'" )
  if (terrainTypeId == 1316119403) then
    return 44
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "44", "'Nrck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "45", "'Ngrs'" )
  if (terrainTypeId == 1315402355) then
    return 45
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "45", "'Ngrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "46", "'Nice'" )
  if (terrainTypeId == 1315529573) then
    return 46
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "46", "'Nice'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "47", "'Nsnw'" )
  if (terrainTypeId == 1316187767) then
    return 47
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "47", "'Nsnw'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "48", "'Nsnr'" )
  if (terrainTypeId == 1316187762) then
    return 48
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "48", "'Nsnr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "49", "'Ydrt'" )
  if (terrainTypeId == 1499755124) then
    return 49
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "49", "'Ydrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "50", "'Ydtr'" )
  if (terrainTypeId == 1499755634) then
    return 50
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "50", "'Ydtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "51", "'Yblm'" )
  if (terrainTypeId == 1499622509) then
    return 51
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "51", "'Yblm'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "52", "'Ybtl'" )
  if (terrainTypeId == 1499624556) then
    return 52
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "52", "'Ybtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "53", "'Ysqd'" )
  if (terrainTypeId == 1500737892) then
    return 53
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "53", "'Ysqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "54", "'Yrtl'" )
  if (terrainTypeId == 1500673132) then
    return 54
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "54", "'Yrtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "55", "'Ygsb'" )
  if (terrainTypeId == 1499951970) then
    return 55
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "55", "'Ygsb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "56", "'Yhdg'" )
  if (terrainTypeId == 1500013671) then
    return 56
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "56", "'Yhdg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "57", "'Ywmb'" )
  if (terrainTypeId == 1500999010) then
    return 57
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "57", "'Ywmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "58", "'Vdrt'" )
  if (terrainTypeId == 1449423476) then
    return 58
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "58", "'Vdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "59", "'Vdrr'" )
  if (terrainTypeId == 1449423474) then
    return 59
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "59", "'Vdrr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "60", "'Vcrp'" )
  if (terrainTypeId == 1449357936) then
    return 60
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "60", "'Vcrp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "61", "'Vcbp'" )
  if (terrainTypeId == 1449353840) then
    return 61
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "61", "'Vcbp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "62", "'Vstp'" )
  if (terrainTypeId == 1450407024) then
    return 62
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "62", "'Vstp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "63", "'Vgrs'" )
  if (terrainTypeId == 1449620083) then
    return 63
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "63", "'Vgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "64", "'Vrck'" )
  if (terrainTypeId == 1450337131) then
    return 64
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "64", "'Vrck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "65", "'Vgrt'" )
  if (terrainTypeId == 1449620084) then
    return 65
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "65", "'Vgrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "66", "'Qdrt'" )
  if (terrainTypeId == 1365537396) then
    return 66
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "66", "'Qdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "67", "'Qdrr'" )
  if (terrainTypeId == 1365537394) then
    return 67
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "67", "'Qdrr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "68", "'Qcrp'" )
  if (terrainTypeId == 1365471856) then
    return 68
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "68", "'Qcrp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "69", "'Qcbp'" )
  if (terrainTypeId == 1365467760) then
    return 69
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "69", "'Qcbp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "70", "'Qstp'" )
  if (terrainTypeId == 1366520944) then
    return 70
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "70", "'Qstp'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "71", "'Qgrs'" )
  if (terrainTypeId == 1365734003) then
    return 71
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "71", "'Qgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "72", "'Qrck'" )
  if (terrainTypeId == 1366451051) then
    return 72
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "72", "'Qrck'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "73", "'Qgrt'" )
  if (terrainTypeId == 1365734004) then
    return 73
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "73", "'Qgrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "74", "'Xdrt'" )
  if (terrainTypeId == 1482977908) then
    return 74
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "74", "'Xdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "75", "'Xdtr'" )
  if (terrainTypeId == 1482978418) then
    return 75
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "75", "'Xdtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "76", "'Xblm'" )
  if (terrainTypeId == 1482845293) then
    return 76
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "76", "'Xblm'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "77", "'Xbtl'" )
  if (terrainTypeId == 1482847340) then
    return 77
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "77", "'Xbtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "78", "'Xsqd'" )
  if (terrainTypeId == 1483960676) then
    return 78
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "78", "'Xsqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "79", "'Xrtl'" )
  if (terrainTypeId == 1483895916) then
    return 79
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "79", "'Xrtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "80", "'Xgsb'" )
  if (terrainTypeId == 1483174754) then
    return 80
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "80", "'Xgsb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "81", "'Xhdg'" )
  if (terrainTypeId == 1483236455) then
    return 81
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "81", "'Xhdg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "82", "'Xwmb'" )
  if (terrainTypeId == 1484221794) then
    return 82
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "82", "'Xwmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "83", "'Ddrt'" )
  if (terrainTypeId == 1147433588) then
    return 83
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "83", "'Ddrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "84", "'Dbrk'" )
  if (terrainTypeId == 1147302507) then
    return 84
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "84", "'Dbrk'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "85", "'Drds'" )
  if (terrainTypeId == 1148347507) then
    return 85
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "85", "'Drds'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "86", "'Dlvc'" )
  if (terrainTypeId == 1147958883) then
    return 86
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "86", "'Dlvc'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "87", "'Dlav'" )
  if (terrainTypeId == 1147953526) then
    return 87
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "87", "'Dlav'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "88", "'Ddkr'" )
  if (terrainTypeId == 1147431794) then
    return 88
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "88", "'Ddkr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "89", "'Dgrs'" )
  if (terrainTypeId == 1147630195) then
    return 89
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "89", "'Dgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "90", "'Dsqd'" )
  if (terrainTypeId == 1148416356) then
    return 90
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "90", "'Dsqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "91", "'Gdrt'" )
  if (terrainTypeId == 1197765236) then
    return 91
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "91", "'Gdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "92", "'Gbrk'" )
  if (terrainTypeId == 1197634155) then
    return 92
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "92", "'Gbrk'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "93", "'Grds'" )
  if (terrainTypeId == 1198679155) then
    return 93
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "93", "'Grds'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "94", "'Glvc'" )
  if (terrainTypeId == 1198290531) then
    return 94
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "94", "'Glvc'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "95", "'Glav'" )
  if (terrainTypeId == 1198285174) then
    return 95
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "95", "'Glav'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "96", "'Gdkr'" )
  if (terrainTypeId == 1197763442) then
    return 96
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "96", "'Gdkr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "97", "'Ggrs'" )
  if (terrainTypeId == 1197961843) then
    return 97
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "97", "'Ggrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "98", "'Gsqd'" )
  if (terrainTypeId == 1198748004) then
    return 98
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "98", "'Gsqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "99", "'Zdrt'" )
  if (terrainTypeId == 1516532340) then
    return 99
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "99", "'Zdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "100", "'Zdtr'" )
  if (terrainTypeId == 1516532850) then
    return 100
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "100", "'Zdtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "101", "'Zdrg'" )
  if (terrainTypeId == 1516532327) then
    return 101
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "101", "'Zdrg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "102", "'Zbks'" )
  if (terrainTypeId == 1516399475) then
    return 102
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "102", "'Zbks'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "103", "'Zsan'" )
  if (terrainTypeId == 1517511022) then
    return 103
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "103", "'Zsan'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "104", "'Zbkl'" )
  if (terrainTypeId == 1516399468) then
    return 104
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "104", "'Zbkl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "105", "'Ztil'" )
  if (terrainTypeId == 1517578604) then
    return 105
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "105", "'Ztil'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "106", "'Zgrs'" )
  if (terrainTypeId == 1516728947) then
    return 106
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "106", "'Zgrs'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "107", "'Zvin'" )
  if (terrainTypeId == 1517709678) then
    return 107
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "107", "'Zvin'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "108", "'Idrt'" )
  if (terrainTypeId == 1231319668) then
    return 108
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "108", "'Idrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "109", "'Idtr'" )
  if (terrainTypeId == 1231320178) then
    return 109
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "109", "'Idtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "110", "'Idki'" )
  if (terrainTypeId == 1231317865) then
    return 110
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "110", "'Idki'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "111", "'Ibkb'" )
  if (terrainTypeId == 1231186786) then
    return 111
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "111", "'Ibkb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "112", "'Irbk'" )
  if (terrainTypeId == 1232233067) then
    return 112
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "112", "'Irbk'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "113", "'Itbk'" )
  if (terrainTypeId == 1232364139) then
    return 113
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "113", "'Itbk'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "114", "'Iice'" )
  if (terrainTypeId == 1231643493) then
    return 114
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "114", "'Iice'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "115", "'Ibsq'" )
  if (terrainTypeId == 1231188849) then
    return 115
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "115", "'Ibsq'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "116", "'Isnw'" )
  if (terrainTypeId == 1232301687) then
    return 116
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "116", "'Isnw'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "117", "'Odrt'" )
  if (terrainTypeId == 1331982964) then
    return 117
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "117", "'Odrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "118", "'Odtr'" )
  if (terrainTypeId == 1331983474) then
    return 118
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "118", "'Odtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "119", "'Osmb'" )
  if (terrainTypeId == 1332964706) then
    return 119
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "119", "'Osmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "120", "'Ofst'" )
  if (terrainTypeId == 1332114292) then
    return 120
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "120", "'Ofst'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "121", "'Olgb'" )
  if (terrainTypeId == 1332504418) then
    return 121
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "121", "'Olgb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "122", "'Orok'" )
  if (terrainTypeId == 1332899691) then
    return 122
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "122", "'Orok'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "123", "'Ofsl'" )
  if (terrainTypeId == 1332114284) then
    return 123
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "123", "'Ofsl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "124", "'Oaby'" )
  if (terrainTypeId == 1331782265) then
    return 124
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "124", "'Oaby'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "125", "'Kdrt'" )
  if (terrainTypeId == 1264874100) then
    return 125
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "125", "'Kdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "126", "'Kfsl'" )
  if (terrainTypeId == 1265005420) then
    return 126
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "126", "'Kfsl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "127", "'Kdts'" )
  if (terrainTypeId == 1264874611) then
    return 127
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "127", "'Kdts'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "128", "'Kfst'" )
  if (terrainTypeId == 1265005428) then
    return 128
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "128", "'Kfst'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "129", "'Ksmb'" )
  if (terrainTypeId == 1265855842) then
    return 129
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "129", "'Ksmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "130", "'Klgb'" )
  if (terrainTypeId == 1265395554) then
    return 130
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "130", "'Klgb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "131", "'Ksqt'" )
  if (terrainTypeId == 1265856884) then
    return 131
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "131", "'Ksqt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "132", "'Kdkt'" )
  if (terrainTypeId == 1264872308) then
    return 132
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "132", "'Kdkt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "133", "'Jdrt'" )
  if (terrainTypeId == 1248096884) then
    return 133
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "133", "'Jdrt'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "134", "'Jdtr'" )
  if (terrainTypeId == 1248097394) then
    return 134
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "134", "'Jdtr'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "135", "'Jblm'" )
  if (terrainTypeId == 1247964269) then
    return 135
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "135", "'Jblm'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "136", "'Jbtl'" )
  if (terrainTypeId == 1247966316) then
    return 136
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "136", "'Jbtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "137", "'Jsqd'" )
  if (terrainTypeId == 1249079652) then
    return 137
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "137", "'Jsqd'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "138", "'Jrtl'" )
  if (terrainTypeId == 1249014892) then
    return 138
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "138", "'Jrtl'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "139", "'Jgsb'" )
  if (terrainTypeId == 1248293730) then
    return 139
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "139", "'Jgsb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "140", "'Jhdg'" )
  if (terrainTypeId == 1248355431) then
    return 140
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "140", "'Jhdg'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "141", "'Jwmb'" )
  if (terrainTypeId == 1249340770) then
    return 141
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "141", "'Jwmb'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "142", "'cAc2'" )
  if (terrainTypeId == 1665229618) then
    return 142
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "142", "'cAc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "143", "'cAc1'" )
  if (terrainTypeId == 1665229617) then
    return 143
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "143", "'cAc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "144", "'cBc2'" )
  if (terrainTypeId == 1665295154) then
    return 144
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "144", "'cBc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "145", "'cBc1'" )
  if (terrainTypeId == 1665295153) then
    return 145
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "145", "'cBc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "146", "'cKc1'" )
  if (terrainTypeId == 1665884977) then
    return 146
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "146", "'cKc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "147", "'cKc2'" )
  if (terrainTypeId == 1665884978) then
    return 147
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "147", "'cKc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "148", "'cYc2'" )
  if (terrainTypeId == 1666802482) then
    return 148
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "148", "'cYc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "149", "'cYc1'" )
  if (terrainTypeId == 1666802481) then
    return 149
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "149", "'cYc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "150", "'cXc2'" )
  if (terrainTypeId == 1666736946) then
    return 150
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "150", "'cXc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "151", "'cXc1'" )
  if (terrainTypeId == 1666736945) then
    return 151
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "151", "'cXc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "152", "'cJc2'" )
  if (terrainTypeId == 1665819442) then
    return 152
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "152", "'cJc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "153", "'cJc1'" )
  if (terrainTypeId == 1665819441) then
    return 153
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "153", "'cJc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "154", "'cDc2'" )
  if (terrainTypeId == 1665426226) then
    return 154
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "154", "'cDc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "155", "'cDc1'" )
  if (terrainTypeId == 1665426225) then
    return 155
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "155", "'cDc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "156", "'cCc2'" )
  if (terrainTypeId == 1665360690) then
    return 156
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "156", "'cCc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "157", "'cCc1'" )
  if (terrainTypeId == 1665360689) then
    return 157
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "157", "'cCc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "158", "'cIc2'" )
  if (terrainTypeId == 1665753906) then
    return 158
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "158", "'cIc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "159", "'cIc1'" )
  if (terrainTypeId == 1665753905) then
    return 159
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "159", "'cIc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "160", "'cFc2'" )
  if (terrainTypeId == 1665557298) then
    return 160
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "160", "'cFc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "161", "'cFc1'" )
  if (terrainTypeId == 1665557297) then
    return 161
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "161", "'cFc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "162", "'cLc2'" )
  if (terrainTypeId == 1665950514) then
    return 162
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "162", "'cLc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "163", "'cLc1'" )
  if (terrainTypeId == 1665950513) then
    return 163
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "163", "'cLc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "164", "'cWc2'" )
  if (terrainTypeId == 1666671410) then
    return 164
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "164", "'cWc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "165", "'cWc1'" )
  if (terrainTypeId == 1666671409) then
    return 165
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "165", "'cWc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "166", "'cNc2'" )
  if (terrainTypeId == 1666081586) then
    return 166
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "166", "'cNc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "167", "'cNc1'" )
  if (terrainTypeId == 1666081585) then
    return 167
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "167", "'cNc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "168", "'cOc1'" )
  if (terrainTypeId == 1666147121) then
    return 168
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "168", "'cOc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "169", "'cOc2'" )
  if (terrainTypeId == 1666147122) then
    return 169
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "169", "'cOc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "170", "'cZc2'" )
  if (terrainTypeId == 1666868018) then
    return 170
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "170", "'cZc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "171", "'cZc1'" )
  if (terrainTypeId == 1666868017) then
    return 171
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "171", "'cZc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "172", "'cGc2'" )
  if (terrainTypeId == 1665622834) then
    return 172
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "172", "'cGc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "173", "'cGc1'" )
  if (terrainTypeId == 1665622833) then
    return 173
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "173", "'cGc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "174", "'cVc2'" )
  if (terrainTypeId == 1666605874) then
    return 174
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "174", "'cVc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "175", "'cVc1'" )
  if (terrainTypeId == 1666605873) then
    return 175
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "175", "'cVc1'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "176", "'cQc2'" )
  if (terrainTypeId == 1666278194) then
    return 176
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "176", "'cQc2'" )
  --textmacro instance: TerrainTypeId2TerrainTypeMaxId( "177", "'cQc1'" )
  if (terrainTypeId == 1666278193) then
    return 177
  end
  --end of: TerrainTypeId2TerrainTypeMaxId( "177", "'cQc1'" )

  return 0
end




--library TerrainTypeMax ends
--library Text:





function Text___ForPlayer_timed_withColorCode(p, duration, colorcode, message)
  if (not Text_enabled) then
    return false
  end
  if (duration >= 0) then
    DisplayTimedTextToPlayer(p, Text_posX, Text_posY, duration, colorcode .. message)
  else
    DisplayTextToPlayer(p, Text_posX, Text_posY, colorcode .. message)
  end

  return true
end

function Text___ForAll_timed_withColorCode(duration, colorcode, message)
  local i = nil
  if (not Text_enabled) then
    return false
  end
  i = 0
  while true do
    if (i > 11) then
      break
    end
    Text___ForPlayer_timed_withColorCode(Player(i), duration, colorcode, message)
    i = i + 1
  end

  return true
end


function Text_P_timed(p, duration, message)
  return Text___ForPlayer_timed_withColorCode(p, duration, NORMAL_TEXT_COLORCODE, message)
end

function Text_P(p, message)
  return Text___ForPlayer_timed_withColorCode(p, -1, NORMAL_TEXT_COLORCODE, message)
end

function Text_erP_timed(p, duration, message)
  return Text___ForPlayer_timed_withColorCode(p, duration, ERROR_TEXT_COLORCODE, message)
end

function Text_erP(p, message)
  return Text___ForPlayer_timed_withColorCode(p, -1, ERROR_TEXT_COLORCODE, message)
end

function Text_mkP_timed(p, duration, message)
  return Text___ForPlayer_timed_withColorCode(p, duration, MAKE_TEXT_COLORCODE, message)
end

function Text_mkP(p, message)
  return Text___ForPlayer_timed_withColorCode(p, -1, MAKE_TEXT_COLORCODE, message)
end


function Text_A_timed(duration, message)
  return Text___ForAll_timed_withColorCode(duration, NORMAL_TEXT_COLORCODE, message)
end

function Text_A(message)
  return Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, message)
end

function Text_erA_timed(duration, message)
  return Text___ForAll_timed_withColorCode(duration, ERROR_TEXT_COLORCODE, message)
end

function Text_erA(message)
  return Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, message)
end

function Text_mkA_timed(duration, message)
  return Text___ForAll_timed_withColorCode(duration, MAKE_TEXT_COLORCODE, message)
end

function Text_mkA(message)
  return Text___ForAll_timed_withColorCode(-1, MAKE_TEXT_COLORCODE, message)
end




function DisplayLineToPlayer(p)
  Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (" "))
  -- INLINED!!
end




--library Text ends
--library TimerUtils:
--*********************************************************************
--* TimerUtils (red+blue+orange flavors for 1.24b+) 2.0
--* ----------
--*
--*  To implement it , create a custom text trigger called TimerUtils
--* and paste the contents of this script there.
--*
--*  To copy from a map to another, copy the trigger holding this
--* library to your map.
--*
--* (requires vJass)   More scripts: htt://www.wc3c.net
--*
--* For your timer needs:
--*  * Attaching
--*  * Recycling (with double-free protection)
--*
--* set t=NewTimer()      : Get a timer (alternative to CreateTimer)
--* set t=NewTimerEx(x)   : Get a timer (alternative to CreateTimer), call
--*                            Initialize timer data as x, instead of 0.
--*
--* ReleaseTimer(t)       : Relese a timer (alt to DestroyTimer)
--* SetTimerData(t,2)     : Attach value 2 to timer
--* GetTimerData(t)       : Get the timer's value.
--*                         You can assume a timer's value is 0
--*                         after NewTimer.
--*
--* Multi-flavor:
--*    Set USE_HASH_TABLE to true if you don't want to complicate your life.
--*
--* If you like speed and giberish try learning about the other flavors.
--*
--********************************************************************

--================================================================

--==================================================================================================



--It is dependent on jasshelper's recent inlining optimization in order to perform correctly.
function SetTimerData(t, value)

  -- new blue
  SaveInteger(TimerUtils___ht, 0, GetHandleId(t), value)


















end

function GetTimerData(t)

  -- new blue
  return LoadInteger(TimerUtils___ht, 0, GetHandleId(t))


















end

--==========================================================================================

--==========================================================================================
-- I needed to decide between duplicating code ignoring the "Once and only once" rule
-- and using the ugly textmacros. I guess textmacros won.
--

function NewTimerEx(value)
  if (TimerUtils___tN == 0) then
    if (not TimerUtils___didinit) then
      --This extra if shouldn't represent a major performance drawback
      --because QUANTITY rule is not supposed to be broken every day. 
      TriggerEvaluate(st___prototype2[(1)])
      -- INLINED!!
      TimerUtils___tN = TimerUtils___tN - 1
    else
      --If this happens then the QUANTITY rule has already been broken, try to fix the
      -- issue, else fail.
      s__TimerUtils___tT[0] = CreateTimer()















    end
  else
    TimerUtils___tN = TimerUtils___tN - 1
  end
  SaveInteger(TimerUtils___ht, 0, GetHandleId((s__TimerUtils___tT[TimerUtils___tN])), (value))
  -- INLINED!!
  return s__TimerUtils___tT[TimerUtils___tN]
end

function NewTimer()
  return NewTimerEx(0)
end


--==========================================================================================
function ReleaseTimer(t)
  if (t == nil) then
    return
  end
  if (TimerUtils___tN == TimerUtils___ARRAY_SIZE) then
    --stack is full, the map already has much more troubles than the chance of bug
    DestroyTimer(t)
  else
    PauseTimer(t)
    if ((LoadInteger(TimerUtils___ht, 0, GetHandleId((t)))) == TimerUtils___HELD) then
      -- INLINED!!
      return
    end
    SaveInteger(TimerUtils___ht, 0, GetHandleId((t)), (TimerUtils___HELD))
    -- INLINED!!
    s__TimerUtils___tT[TimerUtils___tN] = t
    TimerUtils___tN = TimerUtils___tN + 1
  end
end

function TimerUtils___init()
  local i = 0
  local o = -1
  local oops = false
  if (TimerUtils___didinit) then
    return
  else
    TimerUtils___didinit = true
  end


  TimerUtils___ht = InitHashtable()
  while true do
    if (i == TimerUtils___QUANTITY) then
      break
    end
    s__TimerUtils___tT[i] = CreateTimer()
    SaveInteger(TimerUtils___ht, 0, GetHandleId((s__TimerUtils___tT[i])), (TimerUtils___HELD))
    -- INLINED!!
    i = i + 1
  end
  TimerUtils___tN = TimerUtils___QUANTITY










































end


--library TimerUtils ends
--library Triggers:




function s__Trigger_onDestroy(this)
  DestroyTrigger(s__Trigger_t[this])
  s__Trigger_t[this] = nil
end

--Generated destructor of Trigger
function s__Trigger_deallocate(this)
  if this == nil then
    return
  elseif (si__Trigger_V[this] ~= -1) then
    return
  end
  s__Trigger_onDestroy(this)
  si__Trigger_V[this] = si__Trigger_F
  si__Trigger_F = this
end

function s__Trigger_create()
  local t = s__Trigger__allocate()
  s__Trigger_t[t] = CreateTrigger()
  return t
end

function s__Trigger_activate(this, activ)
  if (activ) then
    EnableTrigger(s__Trigger_t[this])
  else
    DisableTrigger(s__Trigger_t[this])
  end
end




function s__TriggerArray_create()
  local ta = s__TriggerArray__allocate()
  s__TriggerArray_lastInstance[ta] = -1
  return ta
end

function s__TriggerArray_onDestroy(this)
  local i = 0
  while true do
    if (i > s__TriggerArray_lastInstance[this]) then
      break
    end
    s__Trigger_deallocate(s___TriggerArray_triggers[s__TriggerArray_triggers[this] + i])
    i = i + 1
  end
  s__TriggerArray_lastInstance[this] = -1
end

--Generated destructor of TriggerArray
function s__TriggerArray_deallocate(this)
  if this == nil then
    return
  elseif (si__TriggerArray_V[this] ~= -1) then
    return
  end
  s__TriggerArray_onDestroy(this)
  si__TriggerArray_V[this] = si__TriggerArray_F
  si__TriggerArray_F = this
end

function s__TriggerArray_activate(this, activ)
  local i = 0
  while true do
    if (i > s__TriggerArray_lastInstance[this]) then
      break
    end
    if (s___TriggerArray_triggers[s__TriggerArray_triggers[this] + i] ~= 0) then
      s__Trigger_activate(s___TriggerArray_triggers[s__TriggerArray_triggers[this] + i], activ)
    end
    i = i + 1
  end
end




--library Triggers ends
--library ViewAllHideAll:




function RefreshHideAllVM()
  DestroyFogModifier(udg_hideAll)
  udg_hideAll = CreateFogModifierRect(Player(0), FOG_OF_WAR_MASKED, GetWorldBounds(), true, false)
  FogModifierStart(udg_hideAll)
end


function Init_ViewAllHideAll()
  udg_viewAll = CreateFogModifierRect(Player(0), FOG_OF_WAR_VISIBLE, GetPlayableMapRect(), true, false)
  udg_hideAll = CreateFogModifierRect(Player(0), FOG_OF_WAR_MASKED, GetWorldBounds(), true, false)
  FogModifierStart(udg_hideAll)
end



--library ViewAllHideAll ends
--library VisibilityModifier:



function s__VisibilityModifier_create(x1, y1, x2, y2)
  local vm = s__VisibilityModifier__allocate()
  local visionRect = Rect(x1, y1, x2, y2)
  s__VisibilityModifier_x1[vm] = x1
  s__VisibilityModifier_y1[vm] = y1
  s__VisibilityModifier_x2[vm] = x2
  s__VisibilityModifier_y2[vm] = y2
  s__VisibilityModifier_fm[vm] = CreateFogModifierRect(Player(0), FOG_OF_WAR_VISIBLE, visionRect, true, false)
  RemoveRect(visionRect)
  visionRect = nil
  RefreshHideAllVM()
  return vm
end

function s__VisibilityModifier_onDestroy(this)
  DestroyFogModifier(s__VisibilityModifier_fm[this])
  s__VisibilityModifier_fm[this] = nil
  sc__VisibilityModifierArray_setNull(s__Level_visibilities[s__VisibilityModifier_level[this]], s__VisibilityModifier_arrayId[this])
end

--Generated destructor of VisibilityModifier
function s__VisibilityModifier_deallocate(this)
  if this == nil then
    return
  elseif (si__VisibilityModifier_V[this] ~= -1) then
    return
  end
  s__VisibilityModifier_onDestroy(this)
  si__VisibilityModifier_V[this] = si__VisibilityModifier_F
  si__VisibilityModifier_F = this
end

function s__VisibilityModifier_activate(this, activ)
  if (activ) then
    FogModifierStart(s__VisibilityModifier_fm[this])
  else
    FogModifierStop(s__VisibilityModifier_fm[this])
  end
end

function s__VisibilityModifier_copy(this)
  return s__VisibilityModifier_create(s__VisibilityModifier_x1[this], s__VisibilityModifier_y1[this], s__VisibilityModifier_x2[this], s__VisibilityModifier_y2[this])
end

function s__VisibilityModifier_toString(this)
  local x1 = I2S(R2I(s__VisibilityModifier_x1[this]))
  local y1 = I2S(R2I(s__VisibilityModifier_y1[this]))
  local x2 = I2S(R2I(s__VisibilityModifier_x2[this]))
  local y2 = I2S(R2I(s__VisibilityModifier_y2[this]))
  return (x1 .. CACHE_SEPARATEUR_PARAM .. y1 .. CACHE_SEPARATEUR_PARAM .. x2 .. CACHE_SEPARATEUR_PARAM .. y2)
end





--library VisibilityModifier ends
--library ZLibrary:
--/////////////////////////////////////////////
--/////////////////  A P I  ///////////////////
--/////////////////////////////////////////////
-- function GetSurfaceZ takes real x, real y returns real
--  - Gets terrain Z if specified point is on the ground
--    or water surface Z if specified point is in the water
--/////////////////////////////////////////////
-- function GetTerrainZ takes real x, real y returns real
--  - Gets terrain Z regardless of specified point position
--/////////////////////////////////////////////
-- function GetUnitZ takes unit u returns real
-- function SetUnitZ takes unit u, real z returns nothing
--  - They work perfectly on ground units with
--    pre-added and removed "Crow Form" ability,
--    BUT inaccurately on flying units near and
--    over cliffs due to War3 smooth flying over
--    cliffs system
--/////////////////////////////////////////////
-- function CreateUnitZ takes player p, integer unitid, real x, real y, real z, real face returns unit
--  - The same as "CreateUnit" but with extra parameter Z
--/////////////////////////////////////////////
-- function GetWaterDepth takes real x, real y returns real
--  - gets water depth in specified point
--    (returns 0 if no water else positive real number)
--/////////////////////////////////////////////
-- function GetWaterType takes real x, real y returns integer
--  - returns WATER_TYPE_NONE, WATER_TYPE_SHALLOW or WATER_TYPE_DEEP
--/////////////////////////////////////////////
--///////////  C O N S T A N T S  /////////////
--/////////////////////////////////////////////
--/////////////////////////////////////////////
--////////////////  C O D E  //////////////////
--/////////////////////////////////////////////

function GetSurfaceZ(x, l__y)
  MoveLocation(ZLibrary___p, x, l__y)
  return GetLocationZ(ZLibrary___p)
end

function GetTerrainZ(x, l__y)
  local z = nil
  local d = CreateDestructable(ZLibrary___PLATFORM, x, l__y, 0.0, 10.0, 0)
  MoveLocation(ZLibrary___p, x, l__y)
  z = GetLocationZ(ZLibrary___p) - ZLibrary___PLATFORM_HEIGHT
  RemoveDestructable(d)
  d = nil
  return z
end

function GetUnitZ(u)
  if IsUnitType(u, UNIT_TYPE_FLYING) then
    return GetSurfaceZ(GetUnitX(u), GetUnitY(u)) + GetUnitFlyHeight(u)
  end
  return GetTerrainZ(GetUnitX(u), GetUnitY(u)) + GetUnitFlyHeight(u)
end

function SetUnitZ(u, z)
  if IsUnitType(u, UNIT_TYPE_FLYING) then
    SetUnitFlyHeight(u, z - GetSurfaceZ(GetUnitX(u), GetUnitY(u)), 0.0)
  else
    SetUnitFlyHeight(u, z - GetTerrainZ(GetUnitX(u), GetUnitY(u)), 0.0)
  end
end

function CreateUnitZ(l__ZLibrary___p, unitid, x, l__y, z, face)
  local u = CreateUnit(l__ZLibrary___p, unitid, x, l__y, face)
  -- Enable setting fly height for ground units

  UnitAddAbility(u, 1097691750)
  -- "Crow Form"
  UnitRemoveAbility(u, 1097691750)

  -- Finally set Z
  SetUnitZ(u, z)
  return u
end

function GetWaterDepth(x, l__y)
  local z = nil
  local d = nil
  MoveLocation(ZLibrary___p, x, l__y)
  z = GetLocationZ(ZLibrary___p)
  d = CreateDestructable(ZLibrary___PLATFORM, x, l__y, 0.0, 10.0, 0)
  z = z + ZLibrary___PLATFORM_HEIGHT - GetLocationZ(ZLibrary___p)
  RemoveDestructable(d)
  d = nil
  if z >= 0.0 then
    -- Small negative results may occur such as -0.0001
    return z
  end
  return 0.0
end

function GetWaterType(x, l__y)
  local d = GetWaterDepth(x, l__y)
  if d == 0.0 then
    return WATER_TYPE_NONE
  elseif d < 52.0 then
    return WATER_TYPE_SHALLOW
  end
  return WATER_TYPE_DEEP
end


--library ZLibrary ends
--library BasicFunctions:





function IsUnitBetweenLocs(u, x1, y1, x2, y2)
  local minX = RMinBJ(x1, x2)
  local maxX = RMaxBJ(x1, x2)
  local minY = RMinBJ(y1, y2)
  local maxY = RMaxBJ(y1, y2)

  local x = GetUnitX(u)
  local l__y = GetUnitY(u)

  return ((minX < x and maxX > x) and (minY < l__y and maxY > l__y))
end

function IsItemBetweenLocs(i, x1, y1, x2, y2)
  local minX = RMinBJ(x1, x2)
  local maxX = RMaxBJ(x1, x2)
  local minY = RMinBJ(y1, y2)
  local maxY = RMaxBJ(y1, y2)

  local x = GetItemX(i)
  local l__y = GetItemY(i)

  return ((minX < x and maxX > x) and (minY < l__y and maxY > l__y))
end


function IsPlayerInGame(p)
  return (GetPlayerController(p) == MAP_CONTROL_USER and GetPlayerSlotState(p) == PLAYER_SLOT_STATE_PLAYING)
end


function SpecialIllidan(hero)
  SetUnitAnimation(hero, "Morph Alternate")
end


function IsIssuedOrder(orderString)
  return (GetIssuedOrderId() == OrderId(orderString))
end

function IsLastOrderPause()
  return GetIssuedOrderId() == 851973
end

function GetLocDist(x1, y1, x2, y2)
  local diffX = x2 - x1
  local diffY = y2 - y1
  return SquareRoot(diffX * diffX + diffY * diffY)
end


function GetCurrentMonsterPlayer()
  if (udg_currentMonsterPlayerId >= 11) then
    udg_currentMonsterPlayerId = 0
  else
    udg_currentMonsterPlayerId = udg_currentMonsterPlayerId + 1
  end
  return Player(udg_currentMonsterPlayerId)
end


function IsUnitInvulnerable(u)
  local life = GetUnitState(u, UNIT_STATE_LIFE)
  local damages = nil
  UnitDamageTarget(u, u, 0.01, false, false, ATTACK_TYPE_CHAOS, DAMAGE_TYPE_UNIVERSAL, WEAPON_TYPE_WHOKNOWS)
  damages = life - GetUnitState(u, UNIT_STATE_LIFE)
  SetUnitState(u, UNIT_STATE_LIFE, life)
  return (damages == 0)
end


function StopUnit(U)
  PauseUnit(U, true)
  IssueImmediateOrder(U, "stop")
  PauseUnit(U, false)
end


function IsHero(U)
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if ((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))]) == U) then
      -- INLINED!!
      return true
    end
    i = i + 1
  end
  return false
end

function ClearTextForPlayer(p)
  if (GetLocalPlayer() == p) then
    ClearTextMessages()
  end
end

function MoveCamExceptForPlayer(p, x, l__y)
  if (GetLocalPlayer() == p) then
    x = GetCameraTargetPositionX()
    l__y = GetCameraTargetPositionY()
  end
  SetCameraPosition(x, l__y)
end


function StringContainsChar(str, char)
  local i = nil
  local length = nil
  if (StringLength(char) ~= 1) then
    return false
  end
  length = StringLength(str)
  i = 1
  while true do
    if (i > length) then
      break
    end
    if (SubStringBJ(str, i, i) == char) then
      return true
    end
    i = i + 1
  end
  return false
end


function IsBoolString(S)
  return (S == "true" or S == "false" or S == "on" or S == "off" or S == "1" or S == "0")
end

function S2B(S)
  return (S == "true" or S == "on" or S == "1")
end

function B2S(b)
  if (b) then
    return "true"
  end
  return "false"
end

function IsOnGround(slider)
  return GetUnitFlyHeight(slider) < 1
end

function IsNearBounds(x, l__y)
  return l__y >= MAP_MAX_Y - LARGEUR_CASE * 2 or x >= MAP_MAX_X - LARGEUR_CASE * 2 or x <= MAP_MIN_X + LARGEUR_CASE * 2 or l__y <= MAP_MIN_Y + LARGEUR_CASE * 2
end

function tileset2tilesetChar(tileset)
  if (tileset == "auto") then
    return "auto"
  elseif (tileset == "A" or tileset == "a" or tileset == "Ashenvale") then
    return "A"
  elseif (tileset == "B" or tileset == "b" or tileset == "Barrens") then
    return "B"
  elseif (tileset == "C" or tileset == "c" or tileset == "Felwood") then
    return "C"
  elseif (tileset == "D" or tileset == "d" or tileset == "Dungeon") then
    return "D"
  elseif (tileset == "F" or tileset == "f" or tileset == "Lordaeron Fall") then
    return "F"
  elseif (tileset == "G" or tileset == "g" or tileset == "Underground") then
    return "G"
  elseif (tileset == "L" or tileset == "l" or tileset == "Lordaeron Summer") then
    return "L"
  elseif (tileset == "N" or tileset == "n" or tileset == "Northrend") then
    return "N"
  elseif (tileset == "Q" or tileset == "q" or tileset == "Village Fall") then
    return "Q"
  elseif (tileset == "V" or tileset == "v" or tileset == "Village") then
    return "V"
  elseif (tileset == "W" or tileset == "w" or tileset == "Lordaeron Winter") then
    return "W"
  elseif (tileset == "X" or tileset == "x" or tileset == "Dalaran") then
    return "X"
  elseif (tileset == "Y" or tileset == "y" or tileset == "Cityscape") then
    return "Y"
  elseif (tileset == "Z" or tileset == "z" or tileset == "Sunken Ruins") then
    return "Z"
  elseif (tileset == "I" or tileset == "i" or tileset == "Icecrown") then
    return "I"
  elseif (tileset == "J" or tileset == "j" or tileset == "Dalaran Ruins") then
    return "J"
  elseif (tileset == "O" or tileset == "o" or tileset == "Outland") then
    return "O"
  elseif (tileset == "K" or tileset == "k" or tileset == "Black Citadel") then
    return "K"
  end

  return ""
end

function tileset2tilesetString(tileset)
  if (tileset == "auto") then
    return "auto"
  elseif (tileset == "A" or tileset == "a" or tileset == "Ashenvale") then
    return "Ashenvale"
  elseif (tileset == "B" or tileset == "b" or tileset == "Barrens") then
    return "Barrens"
  elseif (tileset == "C" or tileset == "c" or tileset == "Felwood") then
    return "Felwood"
  elseif (tileset == "D" or tileset == "d" or tileset == "Dungeon") then
    return "Dungeon"
  elseif (tileset == "F" or tileset == "f" or tileset == "Lordaeron Fall") then
    return "Lordaeron Fall"
  elseif (tileset == "G" or tileset == "g" or tileset == "Underground") then
    return "Underground"
  elseif (tileset == "L" or tileset == "l" or tileset == "Lordaeron Summer") then
    return "Lordaeron Summer"
  elseif (tileset == "N" or tileset == "n" or tileset == "Northrend") then
    return "Northrend"
  elseif (tileset == "Q" or tileset == "q" or tileset == "Village Fall") then
    return "Village Fall"
  elseif (tileset == "V" or tileset == "v" or tileset == "Village") then
    return "Village"
  elseif (tileset == "W" or tileset == "w" or tileset == "Lordaeron Winter") then
    return "Lordaeron Winter"
  elseif (tileset == "X" or tileset == "x" or tileset == "Dalaran") then
    return "Dalaran"
  elseif (tileset == "Y" or tileset == "y" or tileset == "Cityscape") then
    return "Cityscape"
  elseif (tileset == "Z" or tileset == "z" or tileset == "Sunken Ruins") then
    return "Sunken Ruins"
  elseif (tileset == "I" or tileset == "i" or tileset == "Icecrown") then
    return "Icecrown"
  elseif (tileset == "J" or tileset == "j" or tileset == "Dalaran Ruins") then
    return "Dalaran Ruins"
  elseif (tileset == "O" or tileset == "o" or tileset == "Outland") then
    return "Outland"
  elseif (tileset == "K" or tileset == "k" or tileset == "Black Citadel") then
    return "Black Citadel"
  end

  return ""
end




--library BasicFunctions ends
--library CasterType:





function s__CasterType_create(label, casterMonsterType, projectileMonsterType, range, projectileSpeed, loadTime, animation)
  local ct = nil
  if (range <= 0 or projectileSpeed <= 0) then
    return 0
  end
  ct = s__CasterType__allocate()
  s__CasterType_label[ct] = label
  s__CasterType_casterMonsterType[ct] = casterMonsterType
  s__CasterType_projectileMonsterType[ct] = projectileMonsterType
  s__CasterType_range[ct] = range
  s__CasterType_projectileSpeed[ct] = projectileSpeed
  s__CasterType_loadTime[ct] = loadTime
  s__CasterType_animation[ct] = animation
  return ct
end


function s__CasterType_setLabel(this, label)
  s__CasterType_label[this] = label
end

function s__CasterType_setAlias(this, theAlias)
  s__CasterType_theAlias[this] = theAlias
  return this
end

function s__CasterType_refresh(this)
  local levelsMaking = __jarray(0)
  local escaper = nil
  local i = nil
  local j = nil
  local levelAlreadyChecked = nil
  local nbLevelsMaking = 0
  local currentLevel = sc__LevelArray_getCurrentLevel(udg_levels)
  sc__Level_refreshCastersOfType(currentLevel, this)
  i = 0
  while true do
    if (i > 11) then
      break
    end
    escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)])
    -- INLINED!!
    if (escaper ~= 0) then
      if (sc__Escaper_getMakingLevel(escaper) ~= currentLevel) then
        levelAlreadyChecked = false
        j = 0
        while true do
          if (j >= nbLevelsMaking) then
            break
          end
          if (sc__Escaper_getMakingLevel(escaper) == levelsMaking[j]) then
            levelAlreadyChecked = true
          end
          j = j + 1
        end
        if (not levelAlreadyChecked) then
          levelsMaking[nbLevelsMaking] = sc__Escaper_getMakingLevel(escaper)
          nbLevelsMaking = nbLevelsMaking + 1
        end
      end
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= nbLevelsMaking) then
      break
    end
    sc__Level_refreshCastersOfType(levelsMaking[i], this)
    i = i + 1
  end
end

function s__CasterType_onDestroy(this)
  sc__LevelArray_removeCastersOfType(udg_levels, this)
end

--Generated destructor of CasterType
function s__CasterType_deallocate(this)
  if this == nil then
    return
  elseif (si__CasterType_V[this] ~= -1) then
    return
  end
  sc__LevelArray_removeCastersOfType(udg_levels, (this))
  -- INLINED!!
  si__CasterType_V[this] = si__CasterType_F
  si__CasterType_F = this
end

function s__CasterType_getCasterMonsterType(this)
  return s__CasterType_casterMonsterType[this]
end

function s__CasterType_setCasterMonsterType(this, newCasterMonsterType)
  s__CasterType_casterMonsterType[this] = newCasterMonsterType
  s__CasterType_refresh(this)
end

function s__CasterType_getProjectileMonsterType(this)
  return s__CasterType_projectileMonsterType[this]
end

function s__CasterType_setProjectileMonsterType(this, newProjectileMonsterType)
  s__CasterType_projectileMonsterType[this] = newProjectileMonsterType
end

function s__CasterType_getRange(this)
  return s__CasterType_range[this]
end

function s__CasterType_setRange(this, newRange)
  if (newRange <= 0) then
    return false
  end
  s__CasterType_range[this] = newRange
  return true
end

function s__CasterType_getProjectileSpeed(this)
  return s__CasterType_projectileSpeed[this]
end

function s__CasterType_setProjectileSpeed(this, newSpeed)
  if (newSpeed <= 0) then
    return false
  end
  s__CasterType_projectileSpeed[this] = newSpeed
  return true
end

function s__CasterType_getLoadTime(this)
  return s__CasterType_loadTime[this]
end

function s__CasterType_setLoadTime(this, loadTime)
  if (loadTime < MIN_CASTER_LOAD_TIME) then
    return false
  end
  s__CasterType_loadTime[this] = loadTime
  return true
end

function s__CasterType_getAnimation(this)
  return s__CasterType_animation[this]
end

function s__CasterType_setAnimation(this, animation)
  s__CasterType_animation[this] = animation
end

function s__CasterType_displayForPlayer(this, p)
  local space = "   "
  local display = udg_colorCode[TEAL] .. s__CasterType_label[this] .. " " .. s__CasterType_theAlias[this] .. " : "
  display = display .. s__MonsterType_label[s__CasterType_casterMonsterType[this]] .. space .. s__MonsterType_label[s__CasterType_projectileMonsterType[this]] .. space .. "range: " .. R2S(s__CasterType_range[this]) .. space
  display = display .. "projectileSpeed: " .. R2S(s__CasterType_projectileSpeed[this]) .. space .. "loadTime: " .. R2S(s__CasterType_loadTime[this]) .. space .. s__CasterType_animation[this]
  Text___ForPlayer_timed_withColorCode((p), ((TERRAIN_DATA_DISPLAY_TIME) * 1.0), NORMAL_TEXT_COLORCODE, (display))
  -- INLINED!!
end

function s__CasterType_toString(this)
  local str = s__CasterType_label[this] .. CACHE_SEPARATEUR_PARAM .. s__CasterType_theAlias[this] .. CACHE_SEPARATEUR_PARAM
  str = str .. s__MonsterType_label[s__CasterType_casterMonsterType[this]] .. CACHE_SEPARATEUR_PARAM .. s__MonsterType_label[s__CasterType_projectileMonsterType[this]] .. CACHE_SEPARATEUR_PARAM
  str = str .. R2S(s__CasterType_range[this]) .. CACHE_SEPARATEUR_PARAM .. R2S(s__CasterType_projectileSpeed[this]) .. CACHE_SEPARATEUR_PARAM .. R2S(s__CasterType_loadTime[this]) .. CACHE_SEPARATEUR_PARAM .. s__CasterType_animation[this]
  return str
end



--library CasterType ends
--library DecodeString:


function DecodeString___DecodeChar(char)

  --textmacro instance: DecodeChar("A", "Z")
  if (char == "A") then
    return "Z"
  end
  --end of: DecodeChar("A", "Z")
  --textmacro instance: DecodeChar("B", "A")
  if (char == "B") then
    return "A"
  end
  --end of: DecodeChar("B", "A")
  --textmacro instance: DecodeChar("C", "B")
  if (char == "C") then
    return "B"
  end
  --end of: DecodeChar("C", "B")
  --textmacro instance: DecodeChar("D", "C")
  if (char == "D") then
    return "C"
  end
  --end of: DecodeChar("D", "C")
  --textmacro instance: DecodeChar("E", "D")
  if (char == "E") then
    return "D"
  end
  --end of: DecodeChar("E", "D")
  --textmacro instance: DecodeChar("F", "E")
  if (char == "F") then
    return "E"
  end
  --end of: DecodeChar("F", "E")
  --textmacro instance: DecodeChar("G", "F")
  if (char == "G") then
    return "F"
  end
  --end of: DecodeChar("G", "F")
  --textmacro instance: DecodeChar("H", "G")
  if (char == "H") then
    return "G"
  end
  --end of: DecodeChar("H", "G")
  --textmacro instance: DecodeChar("I", "H")
  if (char == "I") then
    return "H"
  end
  --end of: DecodeChar("I", "H")
  --textmacro instance: DecodeChar("J", "I")
  if (char == "J") then
    return "I"
  end
  --end of: DecodeChar("J", "I")
  --textmacro instance: DecodeChar("K", "J")
  if (char == "K") then
    return "J"
  end
  --end of: DecodeChar("K", "J")
  --textmacro instance: DecodeChar("L", "K")
  if (char == "L") then
    return "K"
  end
  --end of: DecodeChar("L", "K")
  --textmacro instance: DecodeChar("M", "L")
  if (char == "M") then
    return "L"
  end
  --end of: DecodeChar("M", "L")
  --textmacro instance: DecodeChar("N", "M")
  if (char == "N") then
    return "M"
  end
  --end of: DecodeChar("N", "M")
  --textmacro instance: DecodeChar("O", "N")
  if (char == "O") then
    return "N"
  end
  --end of: DecodeChar("O", "N")
  --textmacro instance: DecodeChar("P", "O")
  if (char == "P") then
    return "O"
  end
  --end of: DecodeChar("P", "O")
  --textmacro instance: DecodeChar("Q", "P")
  if (char == "Q") then
    return "P"
  end
  --end of: DecodeChar("Q", "P")
  --textmacro instance: DecodeChar("R", "Q")
  if (char == "R") then
    return "Q"
  end
  --end of: DecodeChar("R", "Q")
  --textmacro instance: DecodeChar("S", "R")
  if (char == "S") then
    return "R"
  end
  --end of: DecodeChar("S", "R")
  --textmacro instance: DecodeChar("T", "S")
  if (char == "T") then
    return "S"
  end
  --end of: DecodeChar("T", "S")
  --textmacro instance: DecodeChar("U", "T")
  if (char == "U") then
    return "T"
  end
  --end of: DecodeChar("U", "T")
  --textmacro instance: DecodeChar("V", "U")
  if (char == "V") then
    return "U"
  end
  --end of: DecodeChar("V", "U")
  --textmacro instance: DecodeChar("W", "V")
  if (char == "W") then
    return "V"
  end
  --end of: DecodeChar("W", "V")
  --textmacro instance: DecodeChar("X", "W")
  if (char == "X") then
    return "W"
  end
  --end of: DecodeChar("X", "W")
  --textmacro instance: DecodeChar("Y", "X")
  if (char == "Y") then
    return "X"
  end
  --end of: DecodeChar("Y", "X")
  --textmacro instance: DecodeChar("Z", "Y")
  if (char == "Z") then
    return "Y"
  end
  --end of: DecodeChar("Z", "Y")

  --textmacro instance: DecodeChar("a", "z")
  if (char == "a") then
    return "z"
  end
  --end of: DecodeChar("a", "z")
  --textmacro instance: DecodeChar("b", "a")
  if (char == "b") then
    return "a"
  end
  --end of: DecodeChar("b", "a")
  --textmacro instance: DecodeChar("c", "b")
  if (char == "c") then
    return "b"
  end
  --end of: DecodeChar("c", "b")
  --textmacro instance: DecodeChar("d", "c")
  if (char == "d") then
    return "c"
  end
  --end of: DecodeChar("d", "c")
  --textmacro instance: DecodeChar("e", "d")
  if (char == "e") then
    return "d"
  end
  --end of: DecodeChar("e", "d")
  --textmacro instance: DecodeChar("f", "e")
  if (char == "f") then
    return "e"
  end
  --end of: DecodeChar("f", "e")
  --textmacro instance: DecodeChar("g", "f")
  if (char == "g") then
    return "f"
  end
  --end of: DecodeChar("g", "f")
  --textmacro instance: DecodeChar("h", "g")
  if (char == "h") then
    return "g"
  end
  --end of: DecodeChar("h", "g")
  --textmacro instance: DecodeChar("i", "h")
  if (char == "i") then
    return "h"
  end
  --end of: DecodeChar("i", "h")
  --textmacro instance: DecodeChar("j", "i")
  if (char == "j") then
    return "i"
  end
  --end of: DecodeChar("j", "i")
  --textmacro instance: DecodeChar("k", "j")
  if (char == "k") then
    return "j"
  end
  --end of: DecodeChar("k", "j")
  --textmacro instance: DecodeChar("l", "k")
  if (char == "l") then
    return "k"
  end
  --end of: DecodeChar("l", "k")
  --textmacro instance: DecodeChar("m", "l")
  if (char == "m") then
    return "l"
  end
  --end of: DecodeChar("m", "l")
  --textmacro instance: DecodeChar("n", "m")
  if (char == "n") then
    return "m"
  end
  --end of: DecodeChar("n", "m")
  --textmacro instance: DecodeChar("o", "n")
  if (char == "o") then
    return "n"
  end
  --end of: DecodeChar("o", "n")
  --textmacro instance: DecodeChar("p", "o")
  if (char == "p") then
    return "o"
  end
  --end of: DecodeChar("p", "o")
  --textmacro instance: DecodeChar("q", "p")
  if (char == "q") then
    return "p"
  end
  --end of: DecodeChar("q", "p")
  --textmacro instance: DecodeChar("r", "q")
  if (char == "r") then
    return "q"
  end
  --end of: DecodeChar("r", "q")
  --textmacro instance: DecodeChar("s", "r")
  if (char == "s") then
    return "r"
  end
  --end of: DecodeChar("s", "r")
  --textmacro instance: DecodeChar("t", "s")
  if (char == "t") then
    return "s"
  end
  --end of: DecodeChar("t", "s")
  --textmacro instance: DecodeChar("u", "t")
  if (char == "u") then
    return "t"
  end
  --end of: DecodeChar("u", "t")
  --textmacro instance: DecodeChar("v", "u")
  if (char == "v") then
    return "u"
  end
  --end of: DecodeChar("v", "u")
  --textmacro instance: DecodeChar("w", "v")
  if (char == "w") then
    return "v"
  end
  --end of: DecodeChar("w", "v")
  --textmacro instance: DecodeChar("x", "w")
  if (char == "x") then
    return "w"
  end
  --end of: DecodeChar("x", "w")
  --textmacro instance: DecodeChar("y", "x")
  if (char == "y") then
    return "x"
  end
  --end of: DecodeChar("y", "x")
  --textmacro instance: DecodeChar("z", "y")
  if (char == "z") then
    return "y"
  end
  --end of: DecodeChar("z", "y")

  return char
end


function DecodeString(strIn)
  local strOut = ""
  local i = 1
  while true do
    if (i > StringLength(strIn)) then
      break
    end
    strOut = strOut .. DecodeString___DecodeChar(SubStringBJ(strIn, i, i))
    i = i + 1
  end
  --call Text_A("strIn : " + strIn + ", strOut : " + strOut)
  return strOut
end





--library DecodeString ends
--library EscaperFunctions:



function ColorInfo(escaperToGetInfo, playerToDisplay)
  local baseColor = (s__Escaper_baseColorId[(escaperToGetInfo)])
  -- INLINED!!
  local red = I2S(R2I((s__Escaper_vcRed[(escaperToGetInfo)])))
  -- INLINED!!
  local green = I2S(R2I((s__Escaper_vcGreen[(escaperToGetInfo)])))
  -- INLINED!!
  local blue = I2S(R2I((s__Escaper_vcBlue[(escaperToGetInfo)])))
  -- INLINED!!
  local transparency = I2S(R2I((s__Escaper_vcTransparency[(escaperToGetInfo)])))
  -- INLINED!!
  Text___ForPlayer_timed_withColorCode((playerToDisplay), -1, NORMAL_TEXT_COLORCODE, ("Base color : " .. udg_colorCode[baseColor] .. udg_baseColorString[baseColor]))
  -- INLINED!!
  Text___ForPlayer_timed_withColorCode((playerToDisplay), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[0] .. "red     :  " .. red .. "  %"))
  -- INLINED!!
  Text___ForPlayer_timed_withColorCode((playerToDisplay), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[6] .. "green :  " .. green .. "  %"))
  -- INLINED!!
  Text___ForPlayer_timed_withColorCode((playerToDisplay), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[1] .. "blue   :  " .. blue .. "  %"))
  -- INLINED!!
  Text___ForPlayer_timed_withColorCode((playerToDisplay), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[8] .. "transparency : " .. transparency .. "  %"))
  -- INLINED!!
end


function Hero2Escaper(hero)
  if (GetUnitTypeId(hero) == HERO_TYPE_ID) then
    return (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (GetUnitUserData(hero))])
    -- INLINED!!
  end
  return 0
end




--library EscaperFunctions ends
--library MakeCasterAction:




function s__MakeCasterAction_getLevel(this)
  return s__MakeCasterAction_level[this]
end

function s__MakeCasterAction_create(level, caster)
  local a = nil
  if (caster == 0 or sg__Caster_get_casterUnit(caster) == nil) then
    return 0
  end
  a = s__MakeCasterAction__allocate()
  s__MakeAction_isActionMadeB[a] = true
  s__MakeCasterAction_caster[a] = caster
  s__MakeCasterAction_level[a] = level
  return a
end

function s__MakeCasterAction_onDestroy(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    --si le caster a été supprimé
    sc__Caster_deallocate(s__MakeCasterAction_caster[this])
  end
end

function s__MakeCasterAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  sc__Caster_disable(s__MakeCasterAction_caster[this])
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("caster creation cancelled"))
  -- INLINED!!
  return true
end

function s__MakeCasterAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  sc__Caster_enable(s__MakeCasterAction_caster[this])
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor creation redone"))
  -- INLINED!!
  return true
end





--library MakeCasterAction ends
--library MakeDeleteCastersAction:




function s__MakeDeleteCastersAction_onInit()
  s__MakeDeleteCastersAction_suppressions = InitHashtable()
  s__MakeDeleteCastersAction_suppressionLastId = -1
end

function s__MakeDeleteCastersAction_newSuppression(suppression)
  local i = nil
  local suppressionId = s__MakeDeleteCastersAction_suppressionLastId + 1
  s__MakeDeleteCastersAction_suppressionLastId = suppressionId
  i = 0
  while true do
    if (not HaveSavedInteger(suppression, 0, i)) then
      break
    end
    SaveInteger(s__MakeDeleteCastersAction_suppressions, suppressionId, i, LoadInteger(suppression, 0, i))
    i = i + 1
  end
  return suppressionId
end

function s__MakeDeleteCastersAction_removeSuppression(suppressionId)
  FlushChildHashtable(s__MakeDeleteCastersAction_suppressions, suppressionId)
end



function s__MakeDeleteCastersAction_getLevel(this)
  return s__MakeDeleteCastersAction_level[this]
end

function s__MakeDeleteCastersAction_create(level, suppression)
  local a = nil
  if (suppression == nil) then
    return 0
  end
  a = s__MakeDeleteCastersAction__allocate()
  s__MakeAction_isActionMadeB[a] = true
  s__MakeDeleteCastersAction_suppressionId[a] = s__MakeDeleteCastersAction_newSuppression(suppression)
  s__MakeDeleteCastersAction_level[a] = level
  return a
end

function s__MakeDeleteCastersAction_onDestroy(this)
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    --suppression définitive des casters
    i = 0
    while true do
      if (not HaveSavedInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)) then
        break
      end
      sc__Caster_deallocate((LoadInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)))
      i = i + 1
    end
  end
  FlushChildHashtable(s__MakeDeleteCastersAction_suppressions, (s__MakeDeleteCastersAction_suppressionId[this]))
  -- INLINED!!
end

function s__MakeDeleteCastersAction_cancel(this)
  local i = nil
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  --création des casters supprimées
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)) then
      break
    end
    sc__Caster_enable((LoadInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("caster deleting cancelled"))
  -- INLINED!!
  return true
end

function s__MakeDeleteCastersAction_redo(this)
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  --suppression des casters recréés
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)) then
      break
    end
    sc__Caster_disable((LoadInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("caster deleting redone"))
  -- INLINED!!
  return true
end





--library MakeDeleteCastersAction ends
--library MakeDeleteMeteorsAction:




function s__MakeDeleteMeteorsAction_onInit()
  s__MakeDeleteMeteorsAction_suppressions = InitHashtable()
  s__MakeDeleteMeteorsAction_suppressionLastId = -1
end

function s__MakeDeleteMeteorsAction_newSuppression(suppression)
  local i = nil
  local suppressionId = s__MakeDeleteMeteorsAction_suppressionLastId + 1
  s__MakeDeleteMeteorsAction_suppressionLastId = suppressionId
  i = 0
  while true do
    if (not HaveSavedInteger(suppression, 0, i)) then
      break
    end
    SaveInteger(s__MakeDeleteMeteorsAction_suppressions, suppressionId, i, LoadInteger(suppression, 0, i))
    i = i + 1
  end
  return suppressionId
end

function s__MakeDeleteMeteorsAction_removeSuppression(suppressionId)
  FlushChildHashtable(s__MakeDeleteMeteorsAction_suppressions, suppressionId)
end



function s__MakeDeleteMeteorsAction_getLevel(this)
  return s__MakeDeleteMeteorsAction_level[this]
end

function s__MakeDeleteMeteorsAction_create(level, suppression)
  local a = nil
  if (suppression == nil) then
    return 0
  end
  a = s__MakeDeleteMeteorsAction__allocate()
  s__MakeAction_isActionMadeB[a] = true
  s__MakeDeleteMeteorsAction_suppressionId[a] = s__MakeDeleteMeteorsAction_newSuppression(suppression)
  s__MakeDeleteMeteorsAction_level[a] = level
  return a
end

function s__MakeDeleteMeteorsAction_onDestroy(this)
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    --suppression définitive des météores
    i = 0
    while true do
      if (not HaveSavedInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)) then
        break
      end
      s__Meteor_deallocate((LoadInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)))
      i = i + 1
    end
  end
  FlushChildHashtable(s__MakeDeleteMeteorsAction_suppressions, (s__MakeDeleteMeteorsAction_suppressionId[this]))
  -- INLINED!!
end

function s__MakeDeleteMeteorsAction_cancel(this)
  local i = nil
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  --création des météores supprimées
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)) then
      break
    end
    s__Meteor_createMeteor((LoadInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor deleting cancelled"))
  -- INLINED!!
  return true
end

function s__MakeDeleteMeteorsAction_redo(this)
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  --suppression des météores recréés
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)) then
      break
    end
    s__Meteor_removeMeteor((LoadInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor deleting redone"))
  -- INLINED!!
  return true
end





--library MakeDeleteMeteorsAction ends
--library MakeDeleteMonstersAction:




function s__MakeDeleteMonstersAction_onInit()
  s__MakeDeleteMonstersAction_suppressions = InitHashtable()
  s__MakeDeleteMonstersAction_suppressionLastId = -1
end

function s__MakeDeleteMonstersAction_newSuppression(suppression)
  local i = nil
  local suppressionId = s__MakeDeleteMonstersAction_suppressionLastId + 1
  s__MakeDeleteMonstersAction_suppressionLastId = suppressionId
  i = 0
  while true do
    if (not HaveSavedInteger(suppression, 0, i)) then
      break
    end
    SaveInteger(s__MakeDeleteMonstersAction_suppressions, suppressionId, i, LoadInteger(suppression, 0, i))
    i = i + 1
  end
  return suppressionId
end

function s__MakeDeleteMonstersAction_removeSuppression(suppressionId)
  FlushChildHashtable(s__MakeDeleteMonstersAction_suppressions, suppressionId)
end



function s__MakeDeleteMonstersAction_getLevel(this)
  return s__MakeDeleteMonstersAction_level[this]
end

function s__MakeDeleteMonstersAction_create(level, suppression)
  local a = nil
  if (suppression == nil) then
    return 0
  end
  a = s__MakeDeleteMonstersAction__allocate()
  s__MakeAction_isActionMadeB[a] = true
  s__MakeDeleteMonstersAction_suppressionId[a] = s__MakeDeleteMonstersAction_newSuppression(suppression)
  s__MakeDeleteMonstersAction_level[a] = level
  return a
end

function s__MakeDeleteMonstersAction_onDestroy(this)
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    --suppression définitive des mobs
    i = 0
    while true do
      if (not HaveSavedInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)) then
        break
      end
      sc__Monster_deallocate((LoadInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)))
      i = i + 1
    end
  end
  FlushChildHashtable(s__MakeDeleteMonstersAction_suppressions, (s__MakeDeleteMonstersAction_suppressionId[this]))
  -- INLINED!!
end

function s__MakeDeleteMonstersAction_cancel(this)
  local i = nil
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  --création des monstres supprimés
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)) then
      break
    end
    sc__Monster_createUnit((LoadInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("monster deleting cancelled"))
  -- INLINED!!
  return true
end

function s__MakeDeleteMonstersAction_redo(this)
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  --suppression des monstres recréés
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)) then
      break
    end
    sc__Monster_removeUnit((LoadInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("monster deleting redone"))
  -- INLINED!!
  return true
end





--library MakeDeleteMonstersAction ends
--library MakeLastActions:






function s__MakeLastActions_create(owner)
  local la = s__MakeLastActions__allocate()
  s__MakeLastActions_lastActionId[la] = -1
  s__MakeLastActions_lastActionEffective[la] = -1
  s__MakeLastActions_owner[la] = owner
  return la
end

function s__MakeLastActions_onDestroy(this)
  local i = 0
  while true do
    if (i > s__MakeLastActions_lastActionId[this]) then
      break
    end
    sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
    i = i + 1
  end
end

--Generated destructor of MakeLastActions
function s__MakeLastActions_deallocate(this)
  if this == nil then
    return
  elseif (si__MakeLastActions_V[this] ~= -1) then
    return
  end
  s__MakeLastActions_onDestroy(this)
  si__MakeLastActions_V[this] = si__MakeLastActions_F
  si__MakeLastActions_F = this
end

function s__MakeLastActions_newAction(this, action)
  local i = nil
  if (s__MakeLastActions_lastActionEffective[this] < s__MakeLastActions_lastActionId[this]) then
    --suppression des actions annulées (à l'ajout d'une nouvelle action)
    i = s__MakeLastActions_lastActionEffective[this] + 1
    while true do
      if (i > s__MakeLastActions_lastActionId[this]) then
        break
      end
      sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
      i = i + 1
    end
  end
  if (s__MakeLastActions_lastActionEffective[this] == MakeLastActions__NB_MAX_ACTIONS_SAVED - 1) then
    --suppression de la plus ancienne des actions et décalage de tout le tableau
    sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this]])
    i = 0
    while true do
      if (i == MakeLastActions__NB_MAX_ACTIONS_SAVED - 1) then
        break
      end
      s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i] = s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i + 1]
      i = i + 1
    end
  else
    s__MakeLastActions_lastActionEffective[this] = s__MakeLastActions_lastActionEffective[this] + 1
  end
  --sauvegarde de l'action
  s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + s__MakeLastActions_lastActionEffective[this]] = action
  s__MakeLastActions_lastActionId[this] = s__MakeLastActions_lastActionEffective[this]
  --assignation du "owner" de l'action
  s__MakeAction_owner[action] = s__MakeLastActions_owner[this]
  return action
end

function s__MakeLastActions_cancelLastAction(this)
  if (s__MakeLastActions_lastActionEffective[this] < 0) then
    return false
  end
  if (s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + s__MakeLastActions_lastActionEffective[this]] == 0) then
    --action obsolète
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeLastActions_owner[this])])), -1, ERROR_TEXT_COLORCODE, ("action obsolète"))
    -- INLINED!!
  else
    --annulation de l'action
    if (not sc__MakeAction_cancel(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + s__MakeLastActions_lastActionEffective[this]])) then
      Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("error : action already cancelled for player " .. I2S(GetPlayerId((s__Escaper_p[(s__MakeLastActions_owner[this])])))))
      -- INLINED!!
    end
  end
  s__MakeLastActions_lastActionEffective[this] = s__MakeLastActions_lastActionEffective[this] - 1
  return true
end

function s__MakeLastActions_redoLastAction(this)
  if (s__MakeLastActions_lastActionEffective[this] == s__MakeLastActions_lastActionId[this]) then
    return false
  end
  s__MakeLastActions_lastActionEffective[this] = s__MakeLastActions_lastActionEffective[this] + 1
  if (s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + s__MakeLastActions_lastActionEffective[this]] == 0) then
    --action obsolète
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeLastActions_owner[this])])), -1, ERROR_TEXT_COLORCODE, ("action obsolète"))
    -- INLINED!!
  else
    --réexécution de l'action
    if (not sc__MakeAction_redo(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + s__MakeLastActions_lastActionEffective[this]])) then
      Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("error : action already redone for player " .. I2S(GetPlayerId((s__Escaper_p[(s__MakeLastActions_owner[this])])))))
      -- INLINED!!
    end
  end
  return true
end

function s__MakeLastActions_deleteSpecificActionsForLevel(this, level)
  --actions spécifiques à un niveau :
  --MakeMonsterAction
  --MakeDeleteMonstersAction
  --MakeVisibilityModifierAction
  --MakeMeteorAction
  --MakeDeleteMeteorsAction
  --MakeCasterAction
  --MakeDeleteCastersAction
  --////
  local i = 0
  while true do
    if (i > s__MakeLastActions_lastActionId[this]) then
      break
    end
    if (si__MakeAction_type[s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i]] == si__MakeMonsterAction) then
      if ((s__MakeMonsterAction_level[(((s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])))]) == level) then
        -- INLINED!!
        sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
        s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i] = 0
      end
    elseif (si__MakeAction_type[s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i]] == si__MakeDeleteMonstersAction) then
      if ((s__MakeDeleteMonstersAction_level[(((s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])))]) == level) then
        -- INLINED!!
        sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
        s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i] = 0
      end
    elseif (si__MakeAction_type[s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i]] == si__MakeVisibilityModifierAction) then
      if ((s__MakeVisibilityModifierAction_level[(((s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])))]) == level) then
        -- INLINED!!
        sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
        s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i] = 0
      end
    elseif (si__MakeAction_type[s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i]] == si__MakeMeteorAction) then
      if ((s__MakeMeteorAction_level[(((s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])))]) == level) then
        -- INLINED!!
        sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
        s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i] = 0
      end
    elseif (si__MakeAction_type[s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i]] == si__MakeDeleteMeteorsAction) then
      if ((s__MakeDeleteMeteorsAction_level[(((s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])))]) == level) then
        -- INLINED!!
        sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
        s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i] = 0
      end
    elseif (si__MakeAction_type[s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i]] == si__MakeCasterAction) then
      if ((s__MakeCasterAction_level[(((s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])))]) == level) then
        -- INLINED!!
        sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
        s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i] = 0
      end
    elseif (si__MakeAction_type[s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i]] == si__MakeDeleteCastersAction) then
      if ((s__MakeDeleteCastersAction_level[(((s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])))]) == level) then
        -- INLINED!!
        sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
        s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i] = 0
      end
    end
    i = i + 1
  end
end

function s__MakeLastActions_destroyCancelledActions(this)
  if (s__MakeLastActions_lastActionEffective[this] == s__MakeLastActions_lastActionId[this]) then
    return
  end
  while true do
    if (s__MakeLastActions_lastActionId[this] <= s__MakeLastActions_lastActionEffective[this]) then
      break
    end
    sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + s__MakeLastActions_lastActionId[this]])
    s__MakeLastActions_lastActionId[this] = s__MakeLastActions_lastActionId[this] - 1
  end
end

function s__MakeLastActions_destroyAllActions(this)
  local i = 0
  while true do
    if (i > s__MakeLastActions_lastActionId[this]) then
      break
    end
    sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
    i = i + 1
  end
  s__MakeLastActions_lastActionId[this] = -1
  s__MakeLastActions_lastActionEffective[this] = -1
end




--library MakeLastActions ends
--library MakeMeteorAction:




function s__MakeMeteorAction_getLevel(this)
  return s__MakeMeteorAction_level[this]
end

function s__MakeMeteorAction_create(level, meteor)
  local a = nil
  if (meteor == 0 or (s__Meteor_meteor[(meteor)]) == nil) then
    -- INLINED!!
    return 0
  end
  a = s__MakeMeteorAction__allocate()
  s__MakeAction_isActionMadeB[a] = true
  s__MakeMeteorAction_meteor[a] = meteor
  s__MakeMeteorAction_level[a] = level
  return a
end

function s__MakeMeteorAction_onDestroy(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    --si la météore a été supprimée
    s__Meteor_deallocate(s__MakeMeteorAction_meteor[this])
  end
end

function s__MakeMeteorAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__Meteor_removeMeteor(s__MakeMeteorAction_meteor[this])
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor creation cancelled"))
  -- INLINED!!
  return true
end

function s__MakeMeteorAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__Meteor_createMeteor(s__MakeMeteorAction_meteor[this])
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor creation redone"))
  -- INLINED!!
  return true
end





--library MakeMeteorAction ends
--library MakeMonsterAction:




function s__MakeMonsterAction_getLevel(this)
  return s__MakeMonsterAction_level[this]
end

function s__MakeMonsterAction_create(level, monster)
  local a = nil
  if (monster == 0 or sg__Monster_get_u(monster) == nil) then
    return 0
  end
  a = s__MakeMonsterAction__allocate()
  s__MakeAction_isActionMadeB[a] = true
  s__MakeMonsterAction_monster[a] = monster
  s__MakeMonsterAction_level[a] = level
  return a
end

function s__MakeMonsterAction_onDestroy(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    --si le monstre a été supprimé
    sc__Monster_deallocate(s__MakeMonsterAction_monster[this])
  end
end

function s__MakeMonsterAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  sc__Monster_removeUnit(s__MakeMonsterAction_monster[this])
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("monster creation cancelled"))
  -- INLINED!!
  return true
end

function s__MakeMonsterAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  sc__Monster_createUnit(s__MakeMonsterAction_monster[this])
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("monster creation redone"))
  -- INLINED!!
  return true
end





--library MakeMonsterAction ends
--library MakeTerrainHeightAction:



function s__MakeTerrainHeightAction_create(radius, height, x, l__y)
  local a = s__MakeTerrainHeightAction__allocate()
  s__MakeTerrainHeightAction_radius[a] = radius
  s__MakeTerrainHeightAction_height[a] = height
  s__MakeTerrainHeightAction_x[a] = x
  s__MakeTerrainHeightAction_y[a] = l__y
  sc__MakeTerrainHeightAction_apply(a)
  s__MakeAction_isActionMadeB[a] = true
  return a
end

function s__MakeTerrainHeightAction_apply(this)
  s__MakeTerrainHeightAction_terrainDeform[this] = TerrainDeformCrater(s__MakeTerrainHeightAction_x[this], s__MakeTerrainHeightAction_y[this], s__MakeTerrainHeightAction_radius[this], -s__MakeTerrainHeightAction_height[this], 0, true)
end

function s__MakeTerrainHeightAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  TerrainDeformStop(s__MakeTerrainHeightAction_terrainDeform[this], 0)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain height cancelled"))
  -- INLINED!!
  return true
end

function s__MakeTerrainHeightAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainHeightAction_apply(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain height redone"))
  -- INLINED!!
  return true
end





--library MakeTerrainHeightAction ends
--library MakeVisibilityModifierAction:




function s__MakeVisibilityModifierAction_getLevel(this)
  return s__MakeVisibilityModifierAction_level[this]
end

function s__MakeVisibilityModifierAction_create(level, visibilityModifier)
  local a = nil
  if (visibilityModifier == 0) then
    return 0
  end
  a = s__MakeVisibilityModifierAction__allocate()
  s__MakeAction_isActionMadeB[a] = true
  s__MakeVisibilityModifierAction_level[a] = level
  s__MakeVisibilityModifierAction_visibilityModifierSave[a] = 0
  s__MakeVisibilityModifierAction_visibilityModifierPointeur[a] = visibilityModifier
  return a
end

function s__MakeVisibilityModifierAction_onDestroy(this)
  if (s__MakeVisibilityModifierAction_visibilityModifierSave[this] ~= 0) then
    s__VisibilityModifier_deallocate(s__MakeVisibilityModifierAction_visibilityModifierSave[this])
  end
end

function s__MakeVisibilityModifierAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeVisibilityModifierAction_visibilityModifierSave[this] = s__VisibilityModifier_copy(s__MakeVisibilityModifierAction_visibilityModifierPointeur[this])
  s__VisibilityModifier_deallocate(s__MakeVisibilityModifierAction_visibilityModifierPointeur[this])
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("visibility creation cancelled"))
  -- INLINED!!
  return true
end

function s__MakeVisibilityModifierAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeVisibilityModifierAction_visibilityModifierPointeur[this] = sc__Level_newVisibilityModifierFromExisting(s__MakeVisibilityModifierAction_level[this], s__MakeVisibilityModifierAction_visibilityModifierSave[this])
  if (s__MakeVisibilityModifierAction_visibilityModifierPointeur[this] == 0) then
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, ERROR_TEXT_COLORCODE, ("can't recreate visibility, full for this level"))
    -- INLINED!!
  else
    s__VisibilityModifier_activate(s__MakeVisibilityModifierAction_visibilityModifierPointeur[this], true)
  end
  s__MakeVisibilityModifierAction_visibilityModifierSave[this] = 0
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("visibility creation redone"))
  -- INLINED!!
  return true
end





--library MakeVisibilityModifierAction ends
--library MessageHeroDies:




function MessageHeroDies___GetRandomSoundHeroDies()
  local n = GetRandomInt(0, 3)
  if (n == 0) then
    return gg_snd_heroDies0
  elseif (n == 1) then
    return gg_snd_heroDies1
  elseif (n == 2) then
    return gg_snd_heroDies2
  else
    return gg_snd_heroDies3
  end
end


function MessageHeroDies___GetRandomSoundAllyHeroDies()
  local n = GetRandomInt(0, 3)
  if (n == 0) then
    return gg_snd_allyHeroDies0
  elseif (n == 1) then
    return gg_snd_allyHeroDies1
  elseif (n == 2) then
    return gg_snd_allyHeroDies2
  else
    return gg_snd_allyHeroDies3
  end
end


function MessageHeroDies___SoundEnd()
  MessageHeroDies___isSoundPlaying = false
end


function MessageHeroDies___PlaySoundHeroDies(fallenPlayer)
  if (not MessageHeroDies___isSoundPlaying) then
    if (GetLocalPlayer() == fallenPlayer) then
      StartSound(MessageHeroDies___GetRandomSoundHeroDies())
    else
      StartSound(MessageHeroDies___GetRandomSoundAllyHeroDies())
    end
    MessageHeroDies___isSoundPlaying = true
    TimerStart(MessageHeroDies___timerSonJoue, MessageHeroDies___DUREE_SON, false, MessageHeroDies___SoundEnd)
  end
end




--textmacro instance: DisplayDeathMessagePlayer_function("0")
function MessageHeroDies___DisplayDeathMessagePlayer_0()
  MessageHeroDies___PlaySoundHeroDies(Player(0))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[0] .. GetPlayerName(Player(0)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("0")
--textmacro instance: DisplayDeathMessagePlayer_function("1")
function MessageHeroDies___DisplayDeathMessagePlayer_1()
  MessageHeroDies___PlaySoundHeroDies(Player(1))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[1] .. GetPlayerName(Player(1)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("1")
--textmacro instance: DisplayDeathMessagePlayer_function("2")
function MessageHeroDies___DisplayDeathMessagePlayer_2()
  MessageHeroDies___PlaySoundHeroDies(Player(2))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[2] .. GetPlayerName(Player(2)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("2")
--textmacro instance: DisplayDeathMessagePlayer_function("3")
function MessageHeroDies___DisplayDeathMessagePlayer_3()
  MessageHeroDies___PlaySoundHeroDies(Player(3))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[3] .. GetPlayerName(Player(3)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("3")
--textmacro instance: DisplayDeathMessagePlayer_function("4")
function MessageHeroDies___DisplayDeathMessagePlayer_4()
  MessageHeroDies___PlaySoundHeroDies(Player(4))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[4] .. GetPlayerName(Player(4)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("4")
--textmacro instance: DisplayDeathMessagePlayer_function("5")
function MessageHeroDies___DisplayDeathMessagePlayer_5()
  MessageHeroDies___PlaySoundHeroDies(Player(5))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[5] .. GetPlayerName(Player(5)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("5")
--textmacro instance: DisplayDeathMessagePlayer_function("6")
function MessageHeroDies___DisplayDeathMessagePlayer_6()
  MessageHeroDies___PlaySoundHeroDies(Player(6))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[6] .. GetPlayerName(Player(6)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("6")
--textmacro instance: DisplayDeathMessagePlayer_function("7")
function MessageHeroDies___DisplayDeathMessagePlayer_7()
  MessageHeroDies___PlaySoundHeroDies(Player(7))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[7] .. GetPlayerName(Player(7)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("7")
--textmacro instance: DisplayDeathMessagePlayer_function("8")
function MessageHeroDies___DisplayDeathMessagePlayer_8()
  MessageHeroDies___PlaySoundHeroDies(Player(8))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[8] .. GetPlayerName(Player(8)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("8")
--textmacro instance: DisplayDeathMessagePlayer_function("9")
function MessageHeroDies___DisplayDeathMessagePlayer_9()
  MessageHeroDies___PlaySoundHeroDies(Player(9))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[9] .. GetPlayerName(Player(9)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("9")
--textmacro instance: DisplayDeathMessagePlayer_function("10")
function MessageHeroDies___DisplayDeathMessagePlayer_10()
  MessageHeroDies___PlaySoundHeroDies(Player(10))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[10] .. GetPlayerName(Player(10)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("10")
--textmacro instance: DisplayDeathMessagePlayer_function("11")
function MessageHeroDies___DisplayDeathMessagePlayer_11()
  MessageHeroDies___PlaySoundHeroDies(Player(11))
  Text___ForAll_timed_withColorCode(((MessageHeroDies___MESSAGE_DURATION) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[11] .. GetPlayerName(Player(11)) .. "|r has fallen."))
  -- INLINED!!
  DestroyTimer(GetExpiredTimer())
end
--end of: DisplayDeathMessagePlayer_function("11")


function DisplayDeathMessagePlayer(p)
  local n = GetPlayerId(p)

  --textmacro instance: RunDisplayDeathMessagePlayer("0")
  if (n == 0) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_0)
  end
  --end of: RunDisplayDeathMessagePlayer("0")
  --textmacro instance: RunDisplayDeathMessagePlayer("1")
  if (n == 1) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_1)
  end
  --end of: RunDisplayDeathMessagePlayer("1")
  --textmacro instance: RunDisplayDeathMessagePlayer("2")
  if (n == 2) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_2)
  end
  --end of: RunDisplayDeathMessagePlayer("2")
  --textmacro instance: RunDisplayDeathMessagePlayer("3")
  if (n == 3) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_3)
  end
  --end of: RunDisplayDeathMessagePlayer("3")
  --textmacro instance: RunDisplayDeathMessagePlayer("4")
  if (n == 4) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_4)
  end
  --end of: RunDisplayDeathMessagePlayer("4")
  --textmacro instance: RunDisplayDeathMessagePlayer("5")
  if (n == 5) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_5)
  end
  --end of: RunDisplayDeathMessagePlayer("5")
  --textmacro instance: RunDisplayDeathMessagePlayer("6")
  if (n == 6) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_6)
  end
  --end of: RunDisplayDeathMessagePlayer("6")
  --textmacro instance: RunDisplayDeathMessagePlayer("7")
  if (n == 7) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_7)
  end
  --end of: RunDisplayDeathMessagePlayer("7")
  --textmacro instance: RunDisplayDeathMessagePlayer("8")
  if (n == 8) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_8)
  end
  --end of: RunDisplayDeathMessagePlayer("8")
  --textmacro instance: RunDisplayDeathMessagePlayer("9")
  if (n == 9) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_9)
  end
  --end of: RunDisplayDeathMessagePlayer("9")
  --textmacro instance: RunDisplayDeathMessagePlayer("10")
  if (n == 10) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_10)
  end
  --end of: RunDisplayDeathMessagePlayer("10")
  --textmacro instance: RunDisplayDeathMessagePlayer("11")
  if (n == 11) then
    TimerStart(CreateTimer(), MessageHeroDies___TIME_BETWEEN_DEATH_AND_MESSAGE, false, MessageHeroDies___DisplayDeathMessagePlayer_11)
  end
  --end of: RunDisplayDeathMessagePlayer("11")
end




--library MessageHeroDies ends
--library MeteorArray:





function s__MeteorArray_create()
  local ma = s__MeteorArray__allocate()
  s__MeteorArray_lastInstance[ma] = -1
  return ma
end

function s__MeteorArray_getFirstEmpty(this)
  local i = 0
  while true do
    if (i > s__MeteorArray_lastInstance[this] or s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] == 0) then
      break
    end
    i = i + 1
  end
  return i
end

function s__MeteorArray_get(this, arrayId)
  if (arrayId < 0 or arrayId > s__MeteorArray_lastInstance[this]) then
    return 0
  end
  return s___MeteorArray_meteors[s__MeteorArray_meteors[this] + arrayId]
end

function s__MeteorArray_new(this, x, l__y, createMeteor)
  --local integer n = .getFirstEmpty()
  local n = s__MeteorArray_lastInstance[this] + 1
  if (n >= MeteorArray__MAX_NB_METEORS) then
    return 0
  end
  --if (n > .lastInstance) then
  s__MeteorArray_lastInstance[this] = n
  --endif
  s___MeteorArray_meteors[s__MeteorArray_meteors[this] + n] = s__Meteor_create(x, l__y)
  if (createMeteor) then
    s__Meteor_createMeteor(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + n])
  end
  s__Meteor_level[s___MeteorArray_meteors[s__MeteorArray_meteors[this] + n]] = sc__LevelArray_getLevelFromMeteorArray(udg_levels, this)
  s__Meteor_arrayId[s___MeteorArray_meteors[s__MeteorArray_meteors[this] + n]] = n
  return s___MeteorArray_meteors[s__MeteorArray_meteors[this] + n]
end

function s__MeteorArray_setMeteorNull(this, arrayId)
  s___MeteorArray_meteors[s__MeteorArray_meteors[this] + arrayId] = 0
end

function s__MeteorArray_count(this)
  local n = 0
  local i = 0
  while true do
    if (i > s__MeteorArray_lastInstance[this]) then
      break
    end
    if (s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] ~= 0) then
      n = n + 1
    end
    i = i + 1
  end
  return n
end

function s__MeteorArray_onDestroy(this)
  local i = 0
  while true do
    if (i > s__MeteorArray_lastInstance[this]) then
      break
    end
    if (s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] ~= 0) then
      s__Meteor_deallocate(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i])
    end
    i = i + 1
  end
  s__MeteorArray_lastInstance[this] = -1
end

--Generated destructor of MeteorArray
function s__MeteorArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MeteorArray_V[this] ~= -1) then
    return
  end
  s__MeteorArray_onDestroy(this)
  si__MeteorArray_V[this] = si__MeteorArray_F
  si__MeteorArray_F = this
end

function s__MeteorArray_clearMeteor(this, meteorId)
  local i = 0
  while true do
    if (s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] == (meteorId) or i > s__MeteorArray_lastInstance[this]) then
      break
    end
    i = i + 1
  end
  if (i > s__MeteorArray_lastInstance[this]) then
    return false
  end
  s__Meteor_deallocate(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i])
  s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] = 0
  return true
end

function s__MeteorArray_createMeteors(this)
  local i = 0
  while true do
    if (i > s__MeteorArray_lastInstance[this]) then
      break
    end
    if (s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] ~= 0) then
      s__Meteor_createMeteor(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i])
    end
    i = i + 1
  end
end

function s__MeteorArray_removeMeteors(this)
  local i = 0
  while true do
    if (i > s__MeteorArray_lastInstance[this]) then
      break
    end
    if (s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] ~= 0) then
      s__Meteor_removeMeteor(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i])
    end
    i = i + 1
  end
end

function s__MeteorArray_getMeteorNear(this, x, l__y)
  local xMeteor = nil
  local yMeteor = nil
  local i = 0
  while true do
    if (i > s__MeteorArray_lastInstance[this]) then
      break
    end
    if (s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] ~= 0 and (s__Meteor_meteor[(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i])]) ~= nil) then
      -- INLINED!!
      xMeteor = GetItemX((s__Meteor_meteor[(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i])]))
      -- INLINED!!
      yMeteor = GetItemY((s__Meteor_meteor[(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i])]))
      -- INLINED!!
      if (RAbsBJ(x - xMeteor) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMeteor) < MONSTER_NEAR_DIFF_MAX) then
        return s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i]
      end
    end
    i = i + 1
  end
  return 0
end

function s__MeteorArray_getLastInstanceId(this)
  return s__MeteorArray_lastInstance[this]
end





--library MeteorArray ends
--library MeteorFunctions:





function HeroAddCheatMeteor(hero)
  MeteorFunctions__meteor = UnitAddItemById(hero, METEOR_CHEAT)
  if ((s__TerrainType_kind[(sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, GetUnitX(hero), GetUnitY(hero)))]) == "slide") then
    -- INLINED!!
    SetItemDroppable(MeteorFunctions__meteor, false)
  end
  return MeteorFunctions__meteor
end


function HeroComingToSlide_CheckItem(hero)
  MeteorFunctions__meteor = UnitItemInSlot(hero, 0)
  if (MeteorFunctions__meteor ~= nil) then
    SetItemDroppable(MeteorFunctions__meteor, false)
  end
end


function HeroComingOutFromSlide_CheckItem(hero)
  MeteorFunctions__meteor = UnitItemInSlot(hero, 0)
  if (MeteorFunctions__meteor ~= nil) then
    SetItemDroppable(MeteorFunctions__meteor, true)
  end
end


function ExecuteRightClicOnUnit(hero, u)
  local itemCarried = UnitItemInSlot(hero, 0)
  local itemCarriedType = GetItemTypeId(itemCarried)
  if ((itemCarriedType == METEOR_NORMAL or itemCarriedType == METEOR_CHEAT) and GetWidgetLife(u) > 0) then
    UnitUseItemTarget(hero, itemCarried, u)
  else
    StopUnit(hero)
  end
  itemCarried = nil
end




--library MeteorFunctions ends
--library MonsterType:




function s__MonsterType_setLabel(this, label)
  s__MonsterType_label[this] = label
end

function s__MonsterType_setAlias(this, theAlias)
  s__MonsterType_theAlias[this] = theAlias
  return this
end

function s__MonsterType_create(label, unitTypeId, scale, immolationRadius, speed, isClickable)
  local mt = nil
  local testMonster = nil
  if (speed <= 0 or speed > MAX_MOVE_SPEED or (scale <= 0 and scale ~= -1) or not ((immolationRadius / 5) == I2R(R2I(immolationRadius / 5))) or immolationRadius < 0 or immolationRadius > 400) then
    return 0
  end
  testMonster = CreateUnit(NEUTRAL_PLAYER, unitTypeId, 0, 0, 0)
  if (testMonster == nil) then
    return 0
  else
    RemoveUnit(testMonster)
    testMonster = nil
  end
  mt = s__MonsterType__allocate()
  s__MonsterType_label[mt] = label
  s__MonsterType_theAlias[mt] = nil
  s__MonsterType_unitTypeId[mt] = unitTypeId
  s__MonsterType_scale[mt] = scale
  s__MonsterType_immolationSkill[mt] = IMMOLATION_SKILLS[R2I(immolationRadius / 5)]
  s__MonsterType_speed[mt] = speed
  s__MonsterType_isClickableB[mt] = isClickable
  s__MonsterType_killingEffectStr[mt] = nil
  s__MonsterType_maxLife[mt] = 10000
  s__MonsterType_height[mt] = -1
  return mt
end

function s__MonsterType_refresh(this)
  local levelsMaking = __jarray(0)
  local escaper = nil
  local i = nil
  local j = nil
  local levelAlreadyChecked = nil
  local nbLevelsMaking = 0
  local currentLevel = sc__LevelArray_getCurrentLevel(udg_levels)
  sc__Level_recreateMonstersOfType(currentLevel, this)
  i = 0
  while true do
    if (i > 11) then
      break
    end
    escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)])
    -- INLINED!!
    if (escaper ~= 0) then
      if (sc__Escaper_getMakingLevel(escaper) ~= currentLevel) then
        levelAlreadyChecked = false
        j = 0
        while true do
          if (j >= nbLevelsMaking) then
            break
          end
          if (sc__Escaper_getMakingLevel(escaper) == levelsMaking[j]) then
            levelAlreadyChecked = true
          end
          j = j + 1
        end
        if (not levelAlreadyChecked) then
          levelsMaking[nbLevelsMaking] = sc__Escaper_getMakingLevel(escaper)
          nbLevelsMaking = nbLevelsMaking + 1
        end
      end
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= nbLevelsMaking) then
      break
    end
    sc__Level_recreateMonstersOfType(levelsMaking[i], this)
    i = i + 1
  end
end

function s__MonsterType_onDestroy(this)
  sc__LevelArray_removeMonstersOfType(udg_levels, this)
end

--Generated destructor of MonsterType
function s__MonsterType_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterType_V[this] ~= -1) then
    return
  end
  sc__LevelArray_removeMonstersOfType(udg_levels, (this))
  -- INLINED!!
  si__MonsterType_V[this] = si__MonsterType_F
  si__MonsterType_F = this
end

function s__MonsterType_getUnitTypeId(this)
  return s__MonsterType_unitTypeId[this]
end

function s__MonsterType_setUnitTypeId(this, unitTypeId)
  local testMonster = CreateUnit(NEUTRAL_PLAYER, unitTypeId, 0, 0, 0)
  if (testMonster == nil) then
    return false
  end
  RemoveUnit(testMonster)
  testMonster = nil
  s__MonsterType_unitTypeId[this] = unitTypeId
  s__MonsterType_refresh(this)
  return true
end

function s__MonsterType_getScale(this)
  return s__MonsterType_scale[this]
end

function s__MonsterType_setScale(this, scale)
  if ((scale <= 0 and scale ~= -1) or scale == s__MonsterType_scale[this]) then
    return false
  end
  s__MonsterType_scale[this] = scale
  s__MonsterType_refresh(this)
  return true
end

function s__MonsterType_getImmolationSkill(this)
  return s__MonsterType_immolationSkill[this]
end

function s__MonsterType_setImmolation(this, immolationRadius)
  if (not ((immolationRadius / 5) == I2R(R2I(immolationRadius / 5))) or immolationRadius < 0 or immolationRadius > 400) then
    return false
  end
  s__MonsterType_immolationSkill[this] = IMMOLATION_SKILLS[R2I(immolationRadius / 5)]
  s__MonsterType_refresh(this)
  return true
end

function s__MonsterType_getUnitMoveSpeed(this)
  return s__MonsterType_speed[this]
end

function s__MonsterType_setUnitMoveSpeed(this, speed)
  if (speed <= 0 or speed > MAX_MOVE_SPEED) then
    return false
  end
  s__MonsterType_speed[this] = speed
  s__MonsterType_refresh(this)
  return true
end

function s__MonsterType_isClickable(this)
  return s__MonsterType_isClickableB[this]
end

function s__MonsterType_setIsClickable(this, isClickable)
  if (s__MonsterType_isClickableB[this] == isClickable) then
    return false
  end
  s__MonsterType_isClickableB[this] = isClickable
  s__MonsterType_refresh(this)
  return true
end

function s__MonsterType_getKillingEffectStr(this)
  return s__MonsterType_killingEffectStr[this]
end

function s__MonsterType_setKillingEffectStr(this, effectStr)
  s__MonsterType_killingEffectStr[this] = effectStr
  return this
end

function s__MonsterType_setNbMeteorsToKill(this, nbMeteorsToKill)
  --nombre de météores qu'il faut pour tuer le monstre, sachant qu'une météore fait 10k de dégât
  if (nbMeteorsToKill < 1 or nbMeteorsToKill > 9) then
    return this
  end
  s__MonsterType_maxLife[this] = nbMeteorsToKill * 10000
  if (s__MonsterType_isClickableB[this]) then
    s__MonsterType_refresh(this)
  end
  return this
end

function s__MonsterType_getMaxLife(this)
  return s__MonsterType_maxLife[this]
end

function s__MonsterType_getHeight(this)
  return s__MonsterType_height[this]
end

function s__MonsterType_setHeight(this, height)
  if (height ~= -1 and height < 0 and height ~= s__MonsterType_height[this]) then
    return false
  end
  s__MonsterType_height[this] = height
  s__MonsterType_refresh(this)
  return true
end

function s__MonsterType_getImmolationRadiusStr(this)
  local immoStr = Ascii2String(s__MonsterType_immolationSkill[this])
  immoStr = SubStringBJ(immoStr, 2, 4)
  return I2S(S2I(immoStr))
end

function s__MonsterType_displayForPlayer(this, p)
  local space = "   "
  local display = udg_colorCode[RED] .. s__MonsterType_label[this] .. " " .. s__MonsterType_theAlias[this] .. " : '"
  local scaleDisplay = nil
  local heightDisplay = nil
  if (s__MonsterType_scale[this] == -1) then
    scaleDisplay = "default"
  else
    scaleDisplay = R2S(s__MonsterType_scale[this])
  end
  if (s__MonsterType_height[this] == -1) then
    heightDisplay = "default"
  else
    heightDisplay = I2S(R2I(s__MonsterType_height[this]))
  end
  display = display .. Ascii2String(s__MonsterType_unitTypeId[this]) .. "'" .. space .. "'" .. Ascii2String(s__MonsterType_immolationSkill[this]) .. "'"
  display = display .. space .. "speed_" .. I2S(R2I(s__MonsterType_speed[this])) .. space .. "scale_" .. scaleDisplay .. space .. "height_" .. heightDisplay
  if (s__MonsterType_isClickableB[this]) then
    display = display .. space .. "clickable" .. space .. I2S(s__MonsterType_maxLife[this] // 10000)
  end
  Text___ForPlayer_timed_withColorCode((p), ((TERRAIN_DATA_DISPLAY_TIME) * 1.0), NORMAL_TEXT_COLORCODE, (display))
  -- INLINED!!
end

function s__MonsterType_displayTotalForPlayer(this, p)
  local space = "   "
  local display = udg_colorCode[RED] .. s__MonsterType_label[this] .. " " .. s__MonsterType_theAlias[this] .. " : '"
  local scaleDisplay = nil
  local heightDisplay = nil
  if (s__MonsterType_scale[this] == -1) then
    scaleDisplay = "default"
  else
    scaleDisplay = R2S(s__MonsterType_scale[this])
  end
  if (s__MonsterType_height[this] == -1) then
    heightDisplay = "default"
  else
    heightDisplay = I2S(R2I(s__MonsterType_height[this]))
  end
  display = display .. Ascii2String(s__MonsterType_unitTypeId[this]) .. "'" .. space .. "'" .. Ascii2String(s__MonsterType_immolationSkill[this]) .. "'"
  display = display .. space .. "speed_" .. I2S(R2I(s__MonsterType_speed[this])) .. space .. "scale_" .. scaleDisplay .. space .. "height_" .. heightDisplay .. space .. s__MonsterType_killingEffectStr[this]
  if (s__MonsterType_isClickableB[this]) then
    display = display .. space .. "clickable" .. space .. I2S(s__MonsterType_maxLife[this] // 10000)
  end
  Text___ForPlayer_timed_withColorCode((p), ((TERRAIN_DATA_DISPLAY_TIME) * 1.0), NORMAL_TEXT_COLORCODE, (display))
  -- INLINED!!
end

function s__MonsterType_toString(this)
  local str = s__MonsterType_label[this] .. CACHE_SEPARATEUR_PARAM .. s__MonsterType_theAlias[this] .. CACHE_SEPARATEUR_PARAM
  str = str .. Ascii2String(s__MonsterType_unitTypeId[this]) .. CACHE_SEPARATEUR_PARAM .. R2S(s__MonsterType_scale[this]) .. CACHE_SEPARATEUR_PARAM
  str = str .. s__MonsterType_getImmolationRadiusStr(this) .. CACHE_SEPARATEUR_PARAM .. R2S(s__MonsterType_speed[this]) .. CACHE_SEPARATEUR_PARAM
  str = str .. B2S(s__MonsterType_isClickableB[this]) .. CACHE_SEPARATEUR_PARAM .. s__MonsterType_killingEffectStr[this] .. CACHE_SEPARATEUR_PARAM
  str = str .. I2S(s__MonsterType_maxLife[this] // 10000) .. CACHE_SEPARATEUR_PARAM .. R2S(s__MonsterType_height[this])
  return str
end



--===========================================================================
function Init_MonsterType()
end




--library MonsterType ends
--library SaveLevels:





--casters
function SaveLevels___SaveCasters_Actions()
  local i = 0
  while true do
    if (i >= SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME) then
      break
    end
    if (SaveLevels___casterId > sc__CasterArray_getLastInstanceId(s__Level_casters[SaveLevels___level])) then
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
      DisableTrigger(GetTriggeringTrigger())
      TriggerExecute(SaveLevels___trg_startSaveNextLevel)
      return
    end
    if (sc__CasterArray_get(s__Level_casters[SaveLevels___level], SaveLevels___casterId) ~= 0) then
      sc__StringArrayForCache_push(stringArrayForCache, sc__Caster_toString(sc__CasterArray_get(s__Level_casters[SaveLevels___level], SaveLevels___casterId)))
    end
    SaveLevels___casterId = SaveLevels___casterId + 1
    i = i + 1
  end
end

function SaveLevels___StartSaveCasters()
  if (sc__CasterArray_count(s__Level_casters[SaveLevels___level]) == 0) then
    TriggerExecute(SaveLevels___trg_startSaveNextLevel)
  else
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "casters", true)
    TriggerClearActions(trigSaveMapInCache)
    TriggerAddAction(trigSaveMapInCache, SaveLevels___SaveCasters_Actions)
    EnableTrigger(trigSaveMapInCache)
    SaveLevels___casterId = 0
  end
end
--/////////////////////////


--monsterSpawns
function SaveLevels___SaveMonsterSpawns_Actions()
  local i = 0
  while true do
    if (i >= SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME) then
      break
    end
    if (SaveLevels___monsterSpawnId > (s__MonsterSpawnArray_lastInstance[(s__Level_monsterSpawns[SaveLevels___level])])) then
      -- INLINED!!
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
      DisableTrigger(GetTriggeringTrigger())
      SaveLevels___StartSaveCasters()
      return
    end
    if (sc__MonsterSpawnArray_get(s__Level_monsterSpawns[SaveLevels___level], SaveLevels___monsterSpawnId) ~= 0) then
      sc__StringArrayForCache_push(stringArrayForCache, sc__MonsterSpawn_toString(sc__MonsterSpawnArray_get(s__Level_monsterSpawns[SaveLevels___level], SaveLevels___monsterSpawnId)))
    end
    SaveLevels___monsterSpawnId = SaveLevels___monsterSpawnId + 1
    i = i + 1
  end
end

function SaveLevels___StartSaveMonsterSpawns()
  if (sc__MonsterSpawnArray_count(s__Level_monsterSpawns[SaveLevels___level]) == 0) then
    SaveLevels___StartSaveCasters()
  else
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "monsterSpawns", true)
    TriggerClearActions(trigSaveMapInCache)
    TriggerAddAction(trigSaveMapInCache, SaveLevels___SaveMonsterSpawns_Actions)
    EnableTrigger(trigSaveMapInCache)
    SaveLevels___monsterSpawnId = 0
  end
end
--/////////////////////////

--meteors
function SaveLevels___SaveMeteors_Actions()
  local i = 0
  while true do
    if (i >= SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME) then
      break
    end
    if (SaveLevels___meteorId > (s__MeteorArray_lastInstance[(s__Level_meteors[SaveLevels___level])])) then
      -- INLINED!!
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
      DisableTrigger(GetTriggeringTrigger())
      SaveLevels___StartSaveMonsterSpawns()
      return
    end
    if (s__MeteorArray_get(s__Level_meteors[SaveLevels___level], SaveLevels___meteorId) ~= 0) then
      sc__StringArrayForCache_push(stringArrayForCache, s__Meteor_toString(s__MeteorArray_get(s__Level_meteors[SaveLevels___level], SaveLevels___meteorId)))
    end
    SaveLevels___meteorId = SaveLevels___meteorId + 1
    i = i + 1
  end
end

function SaveLevels___StartSaveMeteors()
  if (s__MeteorArray_count(s__Level_meteors[SaveLevels___level]) == 0) then
    SaveLevels___StartSaveMonsterSpawns()
  else
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "meteors", true)
    TriggerClearActions(trigSaveMapInCache)
    TriggerAddAction(trigSaveMapInCache, SaveLevels___SaveMeteors_Actions)
    EnableTrigger(trigSaveMapInCache)
    SaveLevels___meteorId = 0
  end
end
--/////////////////////////

--monsters teleport
function SaveLevels___SaveMonstersTeleport_Actions()
  local i = 0
  while true do
    if (i >= SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME) then
      break
    end
    if (SaveLevels___monsterTeleportId > sc__MonsterTeleportArray_getLastInstanceId(s__Level_monstersTeleport[SaveLevels___level])) then
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
      DisableTrigger(GetTriggeringTrigger())
      SaveLevels___StartSaveMeteors()
      return
    end
    if (sc__MonsterTeleportArray_get(s__Level_monstersTeleport[SaveLevels___level], SaveLevels___monsterTeleportId) ~= 0) then
      sc__StringArrayForCache_push(stringArrayForCache, sc__MonsterTeleport_toString(sc__MonsterTeleportArray_get(s__Level_monstersTeleport[SaveLevels___level], SaveLevels___monsterTeleportId)))
    end
    SaveLevels___monsterTeleportId = SaveLevels___monsterTeleportId + 1
    i = i + 1
  end
end

function SaveLevels___StartSaveMonstersTeleport()
  if (sc__MonsterTeleportArray_count(s__Level_monstersTeleport[SaveLevels___level]) == 0) then
    SaveLevels___StartSaveMeteors()
  else
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "monstersTeleport", true)
    TriggerClearActions(trigSaveMapInCache)
    TriggerAddAction(trigSaveMapInCache, SaveLevels___SaveMonstersTeleport_Actions)
    EnableTrigger(trigSaveMapInCache)
    SaveLevels___monsterTeleportId = 0
  end
end
--/////////////////////////

--monsters multiple patrols
function SaveLevels___SaveMonstersMultiplePatrols_Actions()
  local i = 0
  while true do
    if (i >= SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME) then
      break
    end
    if (SaveLevels___monsterMultiplePatrolsId > sc__MonsterMultiplePatrolsArray_getLastInstanceId(s__Level_monstersMultiplePatrols[SaveLevels___level])) then
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
      DisableTrigger(GetTriggeringTrigger())
      SaveLevels___StartSaveMonstersTeleport()
      return
    end
    if (sc__MonsterMultiplePatrolsArray_get(s__Level_monstersMultiplePatrols[SaveLevels___level], SaveLevels___monsterMultiplePatrolsId) ~= 0) then
      sc__StringArrayForCache_push(stringArrayForCache, sc__MonsterMultiplePatrols_toString(sc__MonsterMultiplePatrolsArray_get(s__Level_monstersMultiplePatrols[SaveLevels___level], SaveLevels___monsterMultiplePatrolsId)))
    end
    SaveLevels___monsterMultiplePatrolsId = SaveLevels___monsterMultiplePatrolsId + 1
    i = i + 1
  end
end

function SaveLevels___StartSaveMonstersMultiplePatrols()
  if (sc__MonsterMultiplePatrolsArray_count(s__Level_monstersMultiplePatrols[SaveLevels___level]) == 0) then
    SaveLevels___StartSaveMonstersTeleport()
  else
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "monstersMultiplePatrols", true)
    TriggerClearActions(trigSaveMapInCache)
    TriggerAddAction(trigSaveMapInCache, SaveLevels___SaveMonstersMultiplePatrols_Actions)
    EnableTrigger(trigSaveMapInCache)
    SaveLevels___monsterMultiplePatrolsId = 0
  end
end
--/////////////////////////

--monsters simple patrol
function SaveLevels___SaveMonstersSimplePatrol_Actions()
  local i = 0
  while true do
    if (i >= SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME) then
      break
    end
    if (SaveLevels___monsterSimplePatrolId > sc__MonsterSimplePatrolArray_getLastInstanceId(s__Level_monstersSimplePatrol[SaveLevels___level])) then
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
      DisableTrigger(GetTriggeringTrigger())
      SaveLevels___StartSaveMonstersMultiplePatrols()
      return
    end
    if (sc__MonsterSimplePatrolArray_get(s__Level_monstersSimplePatrol[SaveLevels___level], SaveLevels___monsterSimplePatrolId) ~= 0) then
      sc__StringArrayForCache_push(stringArrayForCache, sc__MonsterSimplePatrol_toString(sc__MonsterSimplePatrolArray_get(s__Level_monstersSimplePatrol[SaveLevels___level], SaveLevels___monsterSimplePatrolId)))
    end
    SaveLevels___monsterSimplePatrolId = SaveLevels___monsterSimplePatrolId + 1
    i = i + 1
  end
end

function SaveLevels___StartSaveMonstersSimplePatrol()
  if (sc__MonsterSimplePatrolArray_count(s__Level_monstersSimplePatrol[SaveLevels___level]) == 0) then
    SaveLevels___StartSaveMonstersMultiplePatrols()
  else
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "monstersSimplePatrol", true)
    TriggerClearActions(trigSaveMapInCache)
    TriggerAddAction(trigSaveMapInCache, SaveLevels___SaveMonstersSimplePatrol_Actions)
    EnableTrigger(trigSaveMapInCache)
    SaveLevels___monsterSimplePatrolId = 0
  end
end
--/////////////////////////

--monsters no move
function SaveLevels___SaveMonstersNoMove_Actions()
  local i = 0
  while true do
    if (i >= SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME) then
      break
    end
    if (SaveLevels___monsterNoMoveId > sc__MonsterNoMoveArray_getLastInstanceId(s__Level_monstersNoMove[SaveLevels___level])) then
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
      DisableTrigger(GetTriggeringTrigger())
      SaveLevels___StartSaveMonstersSimplePatrol()
      return
    end
    if (sc__MonsterNoMoveArray_get(s__Level_monstersNoMove[SaveLevels___level], SaveLevels___monsterNoMoveId) ~= 0) then
      sc__StringArrayForCache_push(stringArrayForCache, sc__MonsterNoMove_toString(sc__MonsterNoMoveArray_get(s__Level_monstersNoMove[SaveLevels___level], SaveLevels___monsterNoMoveId)))
    end
    SaveLevels___monsterNoMoveId = SaveLevels___monsterNoMoveId + 1
    i = i + 1
  end
end

function SaveLevels___StartSaveMonstersNoMove()
  if (sc__MonsterNoMoveArray_count(s__Level_monstersNoMove[SaveLevels___level]) == 0) then
    SaveLevels___StartSaveMonstersSimplePatrol()
  else
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "monstersNoMove", true)
    TriggerClearActions(trigSaveMapInCache)
    TriggerAddAction(trigSaveMapInCache, SaveLevels___SaveMonstersNoMove_Actions)
    EnableTrigger(trigSaveMapInCache)
    SaveLevels___monsterNoMoveId = 0
  end
end
--/////////////////////////

--visibilities
function SaveLevels___SaveVisibilities_Actions()
  local i = 0
  while true do
    if (i >= SaveLevels___NB_ITEM_TO_SAVE_EACH_TIME) then
      break
    end
    if (SaveLevels___visibilityId > (s__VisibilityModifierArray_lastInstance[(s__Level_visibilities[SaveLevels___level])])) then
      -- INLINED!!
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
      DisableTrigger(GetTriggeringTrigger())
      SaveLevels___StartSaveMonstersNoMove()
      return
    end
    if (sc__VisibilityModifierArray_get(s__Level_visibilities[SaveLevels___level], SaveLevels___visibilityId) ~= 0) then
      sc__StringArrayForCache_push(stringArrayForCache, s__VisibilityModifier_toString(sc__VisibilityModifierArray_get(s__Level_visibilities[SaveLevels___level], SaveLevels___visibilityId)))
    end
    SaveLevels___visibilityId = SaveLevels___visibilityId + 1
    i = i + 1
  end
end

function SaveLevels___StartSaveVisibilities()
  if (sc__VisibilityModifierArray_count(s__Level_visibilities[SaveLevels___level]) == 0) then
    SaveLevels___StartSaveMonstersNoMove()
  else
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "visibilities", true)
    TriggerClearActions(trigSaveMapInCache)
    TriggerAddAction(trigSaveMapInCache, SaveLevels___SaveVisibilities_Actions)
    EnableTrigger(trigSaveMapInCache)
    SaveLevels___visibilityId = 0
  end
end
--/////////////////////////




function SaveLevels___EndSaveLevel()
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("all levels saved"))
  -- INLINED!!
  SaveGameCache(saveMap_cache)
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("SAVING MAP FINISHED"))
  -- INLINED!!
end

function SaveLevels___StartSaveLevel()
  SaveLevels___level = sc__LevelArray_get(udg_levels, SaveLevels___levelId)
  if (SaveLevels___level == 0) then
    SaveLevels___EndSaveLevel()
  else
    --start message
    if ((s__Level_startMessage[(SaveLevels___level)]) ~= nil and (s__Level_startMessage[(SaveLevels___level)]) ~= "") then
      -- INLINED!!
      stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "startMessage", false)
      sc__StringArrayForCache_push(stringArrayForCache, StringReplace((s__Level_startMessage[(SaveLevels___level)]), ";", ";;", true))
      -- INLINED!!
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
    end
    --nb lives earned
    stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "nbLives", false)
    sc__StringArrayForCache_push(stringArrayForCache, I2S((s__Level_livesEarnedAtBeginning[(SaveLevels___level)])))
    -- INLINED!!
    sc__StringArrayForCache_writeInCache(stringArrayForCache)
    --start
    if ((s__Level_start[(SaveLevels___level)]) ~= 0) then
      -- INLINED!!
      stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "start", false)
      sc__StringArrayForCache_push(stringArrayForCache, sc__Start_toString((s__Level_start[(SaveLevels___level)])))
      -- INLINED!!
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
    end
    --end
    if ((s__Level_end[(SaveLevels___level)]) ~= 0) then
      -- INLINED!!
      stringArrayForCache = sc__StringArrayForCache_create("level" .. I2S(SaveLevels___levelId), "end", false)
      sc__StringArrayForCache_push(stringArrayForCache, sc__End_toString((s__Level_end[(SaveLevels___level)])))
      -- INLINED!!
      sc__StringArrayForCache_writeInCache(stringArrayForCache)
    end
    --reste :      //visibilities  
    --monstersNoMove  //monstersSimplePatrol  //monstersMultiplePatrols  //meteors  //monsterSpawns
    SaveLevels___StartSaveVisibilities()
  end
end


function StartSaveLevels()
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
      -- INLINED!!
      sc__Escaper_destroyMake((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
      -- INLINED!!
      sc__Escaper_destroyAllSavedActions((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
      -- INLINED!!
    end
    i = i + 1
  end
  SaveLevels___levelId = 0
  SaveLevels___StartSaveLevel()
end




function StartSaveNextLevel_Actions()
  SaveLevels___levelId = SaveLevels___levelId + 1
  SaveLevels___StartSaveLevel()
end

function InitStartSaveNextLevel()
  SaveLevels___trg_startSaveNextLevel = CreateTrigger()
  TriggerAddAction(SaveLevels___trg_startSaveNextLevel, StartSaveNextLevel_Actions)
end





--library SaveLevels ends
--library SaveTerrainConfigInCache:




function SaveTerrainConfig()
  sc__TerrainTypeArray_saveInCache(udg_terrainTypes)
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("terrain configuration saved"))
  -- INLINED!!
end






--library SaveTerrainConfigInCache ends
--library SoundUtils:
--******************************************************************************
--* BY: Rising_Dusk
--* 
--* Sounds are a very picky datatype in WC3. They have many quirks that one must
--* account for in order to use them, and simply using the internal WE Sound
--* Editor isn't enough because the sounds it makes can't be played multiple
--* times at once. 3-D sounds are also very tricky because there are different
--* WC3 sound options that a user can have activated where certain sounds will
--* or will not work. This library attempts to streamline the handling of sounds
--* so that it is less likely to confuse you or cause problems.
--* 
--* The .mp3 format can be used for 3-D sounds, but there is one problem that
--* must be noted. If your computer supports the "Dolby Surround" sound option
--* in WC3 and you have it selected, then .mp3 files will work for 3-D sounds.
--* If you don't, however, they may not work depending on what you do have
--* selected and what is available for your computer. The .wav format works on
--* all possible settings, making them excellent for general use. This library
--* can interface with sounds of either type.
--* 
--* Known issues with sounds that this library resolves:
--*     - A given sound variable can only be played once at a time. In order to
--*       play a sound type multiple times at once, you need multiple variables.
--*     - A sound cannot be played at the same instant that it is created.
--* 
--* The DefineSound function defines a sound type based on some basic parameters
--* the user provides. DefineSoundEx is available if the user wants control over
--* all possible parameters, though they won't have an impact most of the time.
--* The duration parameter for DefineSound and DefineSoundEx is in milliseconds,
--* which is consistent with Blizzard's natives. To get the duration of a given
--* sound, open up the WE's Sound Editor, navigate to your sound, and select
--* "Add as Sound." In doing so, it will show its duration in seconds. Multiply
--* that number by 1000 and use it as the duration argument.
--* 
--* This library returns a sound variable with RunSound that you can change the
--* settings of using the standard JASS sound API. The library assigns default
--* values to the parameters for 2-D and 3-D sounds, that way they will run
--* without any further help.
--* 
--* The library automatically allocates, runs, and recycles a sound when you
--* call RunSound. This library will not automatically recycle looping sounds,
--* so you will need to call ReleaseSound on the looping sound when you want it
--* to end.
--* 
--******************************************************************************
--* 
--*    > function DefineSound takes string fileName, integer duration, ...
--*        boolean looping, boolean is3D returns integer
--* 
--* This function defines a sound type with a short list of parameters. The
--* returned integer serves as a SOUND_TYPE for running this type of sound at
--* any other point in a map.
--* 
--*    > function DefineSoundEx takes string fileName, integer duration, ...
--*        boolean looping, boolean is3D, boolean stopwhenoutofrange, ...
--*        integer fadeInRate, integer fadeOutRate, string eaxSetting ...
--*        returns integer
--* 
--* This function serves an identical purpose to DefineSound, but gives the user
--* full control over the entire list of parameters. Similar to DefineSound, the
--* returned integer serves as a SOUND_TYPE for running this type of sound.
--* 
--*    > function RunSound takes integer soundRef returns sound
--* 
--* This function runs a sound with the parameters held within the soundRef
--* integer argument. The soundRef argument is the returned value of DefineSound
--* or DefineSoundEx.
--* 
--*    > function RunSoundOnUnit takes integer soundRef, unit whichUnit returns sound
--* 
--* The same as RunSound, just this function runs a sound of a given type on a
--* specified unit.
--* 
--*    > function RunSoundAtPoint takes integer soundRef, real x, real y, real z returns sound
--* 
--* The same as RunSound, just this function runs a sound of a given type at a
--* specified point in 3D space.
--* 
--*    > function RunSoundForPlayer takes integer soundRef, player p returns sound
--* 
--* The same as RunSound, just this function runs a sound of a given type only
--* for the specified player.
--* 
--*    > function ReleaseSound takes sound s returns boolean
--* 
--* This function need only be called on looping sounds. If a sound is not
--* looping, it will be released and recycled on its own. This function should
--* be used on looping sounds when you want them to end.
--* 
--* Example usage:
--*     set SOUND_TYPE = DefineSound("Sound\\Path.wav", 300, false, true)
--*     call RunSound(SOUND_TYPE)
--*     call RunSoundOnUnit(SOUND_TYPE, SomeUnit)
--*     call RunSoundAtPoint(SOUND_TYPE, x, y, z)
--*     call RunSoundForPlayer(SOUND_TYPE, Player(5))
--*     call ReleaseSound(SomeLoopingSound)
--* 

--Struct for each sound type
--Stack associated to each struct

--Sound Settings for this sound type

function s__SoundUtils___soundhelper_create(fileName, duration, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, eaxSetting)
  local sh = s__SoundUtils___soundhelper__allocate()
  --Load the parameters so the sound can be created later as necessary
  s__SoundUtils___soundhelper_fileName[sh] = fileName
  s__SoundUtils___soundhelper_duration[sh] = duration
  s__SoundUtils___soundhelper_looping[sh] = looping
  s__SoundUtils___soundhelper_is3D[sh] = is3D
  s__SoundUtils___soundhelper_stopwhenoutofrange[sh] = stopwhenoutofrange
  s__SoundUtils___soundhelper_fadeInRate[sh] = fadeInRate
  s__SoundUtils___soundhelper_fadeOutRate[sh] = fadeOutRate
  s__SoundUtils___soundhelper_eaxSetting[sh] = eaxSetting
  --Create the stack for the struct
  s__SoundUtils___soundhelper_sta[sh] = s__Stack__allocate()
  return sh
end

--Struct for holding data for the sound recycling

function s__SoundUtils___soundrecycler_create(whichSound, soundRef)
  local sr = s__SoundUtils___soundrecycler__allocate()
  s__SoundUtils___soundrecycler_t[sr] = (NewTimerEx(0))
  -- INLINED!!
  s__SoundUtils___soundrecycler_s[sr] = whichSound
  s__SoundUtils___soundrecycler_sh[sr] = soundRef
  SaveInteger(TimerUtils___ht, 0, GetHandleId((s__SoundUtils___soundrecycler_t[sr])), ((sr)))
  -- INLINED!!

  --Hook the value to the soundRef and whichSound
  SaveInteger(SoundUtils___rt, soundRef, GetHandleId(whichSound), (sr))
  return sr
end
function s__SoundUtils___soundrecycler_onDestroy(this)
  RemoveSavedInteger(SoundUtils___rt, s__SoundUtils___soundrecycler_sh[this], GetHandleId(s__SoundUtils___soundrecycler_s[this]))
  ReleaseTimer(s__SoundUtils___soundrecycler_t[this])
end

--Generated destructor of SoundUtils___soundrecycler
function s__SoundUtils___soundrecycler_deallocate(this)
  if this == nil then
    return
  elseif (si__SoundUtils___soundrecycler_V[this] ~= -1) then
    return
  end
  s__SoundUtils___soundrecycler_onDestroy(this)
  si__SoundUtils___soundrecycler_V[this] = si__SoundUtils___soundrecycler_F
  si__SoundUtils___soundrecycler_F = this
end

--******************************************************************************

function SoundUtils___HookStopSound(soundHandle, killWhenDone, fadeOut)
  local id = GetHandleId(soundHandle)
  local soundRef = 0
  local sr = 0
  if HaveSavedInteger(SoundUtils___ht, 0, id) then
    --Sound is from stacks
    soundRef = LoadInteger(SoundUtils___ht, 0, id)
    if HaveSavedInteger(SoundUtils___rt, soundRef, id) then
      --Sound has a recycler
      sr = (LoadInteger(SoundUtils___rt, soundRef, id))
      s__SoundUtils___soundrecycler_stopped[sr] = true
    end
    if killWhenDone then
    end
  end
end

--processed hook: hook StopSound SoundUtils___HookStopSound

function SoundUtils___HookKillSoundWhenDone(soundHandle)
  if HaveSavedInteger(SoundUtils___ht, 0, GetHandleId(soundHandle)) then
    BJDebugMsg("SoundUtils_Warning: (KillSoundWhenDone) Destroying a sound in the stack")
  end
end

--******************************************************************************

function DefineSoundEx(fileName, duration, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, eaxSetting)
  return (s__SoundUtils___soundhelper_create(fileName, duration, looping, is3D, stopwhenoutofrange, fadeInRate, fadeOutRate, eaxSetting))
end
function DefineSound(fileName, duration, looping, is3D)
  return (s__SoundUtils___soundhelper_create((fileName), (duration), (looping), (is3D), (true), (10), (10), ("CombatSoundsEAX")))
  -- INLINED!!
end

function ReleaseSound(s)
  local id = GetHandleId(s)
  local soundRef = 0
  local sh = 0
  local sr = 0

  if s == nil then
    return false
  elseif not HaveSavedInteger(SoundUtils___ht, 0, id) then
    return false
  end

  soundRef = LoadInteger(SoundUtils___ht, 0, id)
  sh = (soundRef)

  h__StopSound(s, false, true)
  --Stop the sound
  s__Stack_push(s__SoundUtils___soundhelper_sta[sh], id)
  --Return it to the stack
  SaveSoundHandle(SoundUtils___st, soundRef, id, s)
  --Save it to hashtable
  if not s__SoundUtils___soundhelper_looping[sh] then
    --soundrecycler only exists for non-looping sounds
    sr = (LoadInteger(SoundUtils___rt, soundRef, id))
    s__SoundUtils___soundrecycler_deallocate(sr)
    --Destroy recycler helper
  end
  return true
end

function SoundUtils___Recycle()
  local sr = ((LoadInteger(TimerUtils___ht, 0, GetHandleId((GetExpiredTimer())))))
  -- INLINED!!
  local sh = (s__SoundUtils___soundrecycler_sh[sr])
  local id = GetHandleId(s__SoundUtils___soundrecycler_s[sr])

  h__StopSound(s__SoundUtils___soundrecycler_s[sr], false, true)
  --Stop the sound
  s__Stack_push(s__SoundUtils___soundhelper_sta[sh], id)
  --Return it to the stack
  SaveSoundHandle(SoundUtils___st, (sh), id, s__SoundUtils___soundrecycler_s[sr])
  --Save it to hashtable
  s__SoundUtils___soundrecycler_deallocate(sr)
  --Destroy recycler helper
end

function SoundUtils___Run()
  local sr = ((LoadInteger(TimerUtils___ht, 0, GetHandleId((GetExpiredTimer())))))
  -- INLINED!!
  local sh = (s__SoundUtils___soundrecycler_sh[sr])

  if not s__SoundUtils___soundrecycler_stopped[sr] then
    StartSound(s__SoundUtils___soundrecycler_s[sr])
    --Play sound here
  end
  if not s__SoundUtils___soundhelper_looping[sh] and not s__SoundUtils___soundrecycler_stopped[sr] then
    TimerStart(s__SoundUtils___soundrecycler_t[sr], s__SoundUtils___soundhelper_duration[sh] * 0.001, false, SoundUtils___Recycle)
  else
    s__SoundUtils___soundrecycler_deallocate(sr)
  end
end

function RunSound(soundRef)
  local s = nil
  local i = 0
  local sh = (soundRef)
  local sr = 0

  if soundRef <= 0 then
    return nil
  end
  --Check if the stack is empty
  if (s__Stack_value[s__Stack_top[(s__SoundUtils___soundhelper_sta[sh])]]) == s__Stack_EMPTY then
    -- INLINED!!
    --Create a new sound for the stack
    s = CreateSound(s__SoundUtils___soundhelper_fileName[sh], s__SoundUtils___soundhelper_looping[sh], s__SoundUtils___soundhelper_is3D[sh], s__SoundUtils___soundhelper_stopwhenoutofrange[sh], s__SoundUtils___soundhelper_fadeInRate[sh], s__SoundUtils___soundhelper_fadeOutRate[sh], s__SoundUtils___soundhelper_eaxSetting[sh])
    --Attach the type to the sound for future reference
    SaveInteger(SoundUtils___ht, 0, GetHandleId(s), (sh))
    SetSoundDuration(s, s__SoundUtils___soundhelper_duration[sh])

    --Stuff that must be performed immediately upon creation of sounds
    SetSoundChannel(s, 5)
    SetSoundVolume(s, 127)
    SetSoundPitch(s, 1)
    if s__SoundUtils___soundhelper_is3D[sh] then
      --These are settings necessary for 3-D sounds to function properly
      --You can change them at will outside of this function
      SetSoundDistances(s, 600, 10000)
      SetSoundDistanceCutoff(s, 3000)
      SetSoundConeAngles(s, 0, 0, 127)
      SetSoundConeOrientation(s, 0, 0, 0)
    end

    --Start sound after a delay because it was created here
    sr = s__SoundUtils___soundrecycler_create(s, soundRef)
    TimerStart(s__SoundUtils___soundrecycler_t[sr], 0.001, false, SoundUtils___Run)
  else
    --Allocate a sound from the stack
    i = s__Stack_pop(s__SoundUtils___soundhelper_sta[sh])
    if not HaveSavedHandle(SoundUtils___st, soundRef, i) then
      return nil
    end
    s = LoadSoundHandle(SoundUtils___st, soundRef, i)
    RemoveSavedInteger(SoundUtils___st, soundRef, i)
    SetSoundVolume(s, 127)
    --Start volume at max

    --Start it here since it wasn't created here
    StartSound(s)
    --Recycle the sound in a timer callback after it's finished if nonlooping
    if not s__SoundUtils___soundhelper_looping[sh] then
      sr = s__SoundUtils___soundrecycler_create(s, soundRef)
      TimerStart(s__SoundUtils___soundrecycler_t[sr], s__SoundUtils___soundhelper_duration[sh] * 0.001, false, SoundUtils___Recycle)
    end
  end
  return s
end

function RunSoundOnUnit(soundRef, whichUnit)
  local s = RunSound(soundRef)
  AttachSoundToUnit(s, whichUnit)
  return s
end

function RunSoundAtPoint(soundRef, x, l__y, z)
  local s = RunSound(soundRef)
  SetSoundPosition(s, x, l__y, z)
  return s
end

function RunSoundForPlayer(soundRef, p)
  local s = RunSound(soundRef)
  if GetLocalPlayer() ~= p then
    SetSoundVolume(s, 0)
  else
    SetSoundVolume(s, 127)
  end
  return s
end

--library SoundUtils ends
--library StringArrayForCache:





function s__StringArrayForCache_create(category, variableName, avecSeparateur)
  local sa = nil
  if (stringArrayForCache ~= 0) then
    s__StringArrayForCache_deallocate(stringArrayForCache)
  end
  sa = s__StringArrayForCache__allocate()
  s__StringArrayForCache_lastStringId[sa] = -1
  s__StringArrayForCache_category[sa] = category
  s__StringArrayForCache_variableName[sa] = variableName
  s__StringArrayForCache_avecSeparateur[sa] = avecSeparateur
  return sa
end

function s__StringArrayForCache_nextString(this)
  s__StringArrayForCache_lastStringId[this] = s__StringArrayForCache_lastStringId[this] + 1
  s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] = ""
end

function s__StringArrayForCache_push(this, str)
  local length = nil
  local nbCharsDispoForCurrentString = nil
  if (s__StringArrayForCache_lastStringId[this] == -1) then
    s__StringArrayForCache_nextString(this)
  else
    if (StringLength(s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]]) == StringArrayForCache___MAX_STRING_LENGTH) then
      s__StringArrayForCache_nextString(this)
    end
    if (s__StringArrayForCache_avecSeparateur[this]) then
      s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] = s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] .. CACHE_SEPARATEUR_ITEM
    end
  end
  nbCharsDispoForCurrentString = StringArrayForCache___MAX_STRING_LENGTH - StringLength(s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]])
  length = StringLength(str)
  while true do
    if (length == 0) then
      break
    end
    if (length > nbCharsDispoForCurrentString) then
      s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] = s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] .. SubStringBJ(str, 1, nbCharsDispoForCurrentString)
      s__StringArrayForCache_nextString(this)
      str = SubStringBJ(str, nbCharsDispoForCurrentString + 1, length)
    else
      s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] = s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] .. str
      str = ""
    end
    nbCharsDispoForCurrentString = StringArrayForCache___MAX_STRING_LENGTH - StringLength(s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]])
    length = StringLength(str)
  end
end

function s__StringArrayForCache_writeInCache(this)
  local i = nil
  if (s__StringArrayForCache_lastStringId[this] > 0) then
    i = 0
    while true do
      if (i > s__StringArrayForCache_lastStringId[this]) then
        break
      end
      StoreString(saveMap_cache, s__StringArrayForCache_category[this], s__StringArrayForCache_variableName[this] .. I2S(i), s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + i])
      --call Text_A(I2S(i) + " : " + .stringArray[i])
      --call Text_A("longueur chaîne : " + I2S(StringLength(.stringArray[i])))
      i = i + 1
    end
  else
    if (s__StringArrayForCache_lastStringId[this] == 0) then
      StoreString(saveMap_cache, s__StringArrayForCache_category[this], s__StringArrayForCache_variableName[this], s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this]])
      Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this]]))
      -- INLINED!!
      Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("longueur chaîne : " .. I2S(StringLength(s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this]]))))
      -- INLINED!!
    end
  end
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (s__StringArrayForCache_category[this] .. ", " .. s__StringArrayForCache_variableName[this] .. " : finish write in cache"))
  -- INLINED!!
end




--library StringArrayForCache ends
--library TerrainTypeGrass:


function TerrainTypeGrassId2MaxId(grassId)

  --textmacro instance: TerrainTypeGrassId2MaxId( "1", "5" )
  if (grassId == 1) then
    return 5
  end
  --end of: TerrainTypeGrassId2MaxId( "1", "5" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "2", "11" )
  if (grassId == 2) then
    return 11
  end
  --end of: TerrainTypeGrassId2MaxId( "2", "11" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "3", "12" )
  if (grassId == 3) then
    return 12
  end
  --end of: TerrainTypeGrassId2MaxId( "3", "12" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "4", "17" )
  if (grassId == 4) then
    return 17
  end
  --end of: TerrainTypeGrassId2MaxId( "4", "17" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "5", "26" )
  if (grassId == 5) then
    return 26
  end
  --end of: TerrainTypeGrassId2MaxId( "5", "26" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "6", "29" )
  if (grassId == 6) then
    return 29
  end
  --end of: TerrainTypeGrassId2MaxId( "6", "29" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "7", "40" )
  if (grassId == 7) then
    return 40
  end
  --end of: TerrainTypeGrassId2MaxId( "7", "40" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "8", "45" )
  if (grassId == 8) then
    return 45
  end
  --end of: TerrainTypeGrassId2MaxId( "8", "45" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "9", "55" )
  if (grassId == 9) then
    return 55
  end
  --end of: TerrainTypeGrassId2MaxId( "9", "55" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "10", "63" )
  if (grassId == 10) then
    return 63
  end
  --end of: TerrainTypeGrassId2MaxId( "10", "63" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "11", "65" )
  if (grassId == 11) then
    return 65
  end
  --end of: TerrainTypeGrassId2MaxId( "11", "65" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "12", "71" )
  if (grassId == 12) then
    return 71
  end
  --end of: TerrainTypeGrassId2MaxId( "12", "71" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "13", "73" )
  if (grassId == 13) then
    return 73
  end
  --end of: TerrainTypeGrassId2MaxId( "13", "73" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "14", "80" )
  if (grassId == 14) then
    return 80
  end
  --end of: TerrainTypeGrassId2MaxId( "14", "80" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "15", "106" )
  if (grassId == 15) then
    return 106
  end
  --end of: TerrainTypeGrassId2MaxId( "15", "106" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "16", "107" )
  if (grassId == 16) then
    return 107
  end
  --end of: TerrainTypeGrassId2MaxId( "16", "107" )
  --textmacro instance: TerrainTypeGrassId2MaxId( "17", "139" )
  if (grassId == 17) then
    return 139
  end
  --end of: TerrainTypeGrassId2MaxId( "17", "139" )

  return 0
end


function TerrainTypeMaxId2GrassId(maxId)

  --textmacro instance: TerrainTypeMaxId2GrassId( "1", "5" )
  if (maxId == 5) then
    return 1
  end
  --end of: TerrainTypeMaxId2GrassId( "1", "5" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "2", "11" )
  if (maxId == 11) then
    return 2
  end
  --end of: TerrainTypeMaxId2GrassId( "2", "11" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "3", "12" )
  if (maxId == 12) then
    return 3
  end
  --end of: TerrainTypeMaxId2GrassId( "3", "12" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "4", "17" )
  if (maxId == 17) then
    return 4
  end
  --end of: TerrainTypeMaxId2GrassId( "4", "17" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "5", "26" )
  if (maxId == 26) then
    return 5
  end
  --end of: TerrainTypeMaxId2GrassId( "5", "26" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "6", "29" )
  if (maxId == 29) then
    return 6
  end
  --end of: TerrainTypeMaxId2GrassId( "6", "29" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "7", "40" )
  if (maxId == 40) then
    return 7
  end
  --end of: TerrainTypeMaxId2GrassId( "7", "40" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "8", "45" )
  if (maxId == 45) then
    return 8
  end
  --end of: TerrainTypeMaxId2GrassId( "8", "45" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "9", "55" )
  if (maxId == 55) then
    return 9
  end
  --end of: TerrainTypeMaxId2GrassId( "9", "55" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "10", "63" )
  if (maxId == 63) then
    return 10
  end
  --end of: TerrainTypeMaxId2GrassId( "10", "63" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "11", "65" )
  if (maxId == 65) then
    return 11
  end
  --end of: TerrainTypeMaxId2GrassId( "11", "65" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "12", "71" )
  if (maxId == 71) then
    return 12
  end
  --end of: TerrainTypeMaxId2GrassId( "12", "71" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "13", "73" )
  if (maxId == 73) then
    return 13
  end
  --end of: TerrainTypeMaxId2GrassId( "13", "73" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "14", "80" )
  if (maxId == 80) then
    return 14
  end
  --end of: TerrainTypeMaxId2GrassId( "14", "80" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "15", "106" )
  if (maxId == 106) then
    return 15
  end
  --end of: TerrainTypeMaxId2GrassId( "15", "106" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "16", "107" )
  if (maxId == 107) then
    return 16
  end
  --end of: TerrainTypeMaxId2GrassId( "16", "107" )
  --textmacro instance: TerrainTypeMaxId2GrassId( "17", "139" )
  if (maxId == 139) then
    return 17
  end
  --end of: TerrainTypeMaxId2GrassId( "17", "139" )

  return 0
end


function TerrainTypeGrassId2TerrainTypeId(grassId)
  return TerrainTypeMaxId2TerrainTypeId(TerrainTypeGrassId2MaxId(grassId))
end




--library TerrainTypeGrass ends
--library VisibilityModifierArray:




function s__VisibilityModifierArray_create()
  local v = s__VisibilityModifierArray__allocate()
  s__VisibilityModifierArray_lastInstance[v] = -1
  return v
end

function s__VisibilityModifierArray_onDestroy(this)
  local i = 0
  while true do
    if (i > s__VisibilityModifierArray_lastInstance[this]) then
      break
    end
    s__VisibilityModifier_deallocate(s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + i])
    i = i + 1
  end
  s__VisibilityModifierArray_lastInstance[this] = -1
end

--Generated destructor of VisibilityModifierArray
function s__VisibilityModifierArray_deallocate(this)
  if this == nil then
    return
  elseif (si__VisibilityModifierArray_V[this] ~= -1) then
    return
  end
  s__VisibilityModifierArray_onDestroy(this)
  si__VisibilityModifierArray_V[this] = si__VisibilityModifierArray_F
  si__VisibilityModifierArray_F = this
end

function s__VisibilityModifierArray_new(this, x1, y1, x2, y2)
  if (s__VisibilityModifierArray_lastInstance[this] >= 99) then
    return 0
  end
  s__VisibilityModifierArray_lastInstance[this] = s__VisibilityModifierArray_lastInstance[this] + 1
  s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + s__VisibilityModifierArray_lastInstance[this]] = s__VisibilityModifier_create(x1, y1, x2, y2)
  s__VisibilityModifier_level[s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + s__VisibilityModifierArray_lastInstance[this]]] = sc__LevelArray_getLevelFromVisibilityModifierArray(udg_levels, this)
  s__VisibilityModifier_arrayId[s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + s__VisibilityModifierArray_lastInstance[this]]] = s__VisibilityModifierArray_lastInstance[this]
  return s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + s__VisibilityModifierArray_lastInstance[this]]
end

function s__VisibilityModifierArray_newFromExisting(this, vm)
  if (s__VisibilityModifierArray_lastInstance[this] >= 199) then
    return 0
  end
  s__VisibilityModifierArray_lastInstance[this] = s__VisibilityModifierArray_lastInstance[this] + 1
  s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + s__VisibilityModifierArray_lastInstance[this]] = vm
  return vm
end

function s__VisibilityModifierArray_count(this)
  local n = 0
  local i = 0
  while true do
    if (i > s__VisibilityModifierArray_lastInstance[this]) then
      break
    end
    if (s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + i] ~= 0) then
      n = n + 1
    end
    i = i + 1
  end
  return n
end

function s__VisibilityModifierArray_get(this, visibilityId)
  if (visibilityId < 0 or visibilityId > s__VisibilityModifierArray_lastInstance[this]) then
    return 0
  end
  return s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + visibilityId]
end

function s__VisibilityModifierArray_getLastInstanceId(this)
  return s__VisibilityModifierArray_lastInstance[this]
end

function s__VisibilityModifierArray_setNull(this, arrayId)
  if (arrayId >= 0 and arrayId <= s__VisibilityModifierArray_lastInstance[this]) then
    s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + arrayId] = 0
  end
end

function s__VisibilityModifierArray_removeAllVisibilityModifiers(this)
  while true do
    if (s__VisibilityModifierArray_lastInstance[this] < 0) then
      break
    end
    s__VisibilityModifier_deallocate(s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + s__VisibilityModifierArray_lastInstance[this]])
    s__VisibilityModifierArray_lastInstance[this] = s__VisibilityModifierArray_lastInstance[this] - 1
  end
end

function s__VisibilityModifierArray_removeLasts(this, numberOfVMToRemove)
  local i = numberOfVMToRemove
  while true do
    if (i <= 0 or s__VisibilityModifierArray_lastInstance[this] < 0) then
      break
    end
    s__VisibilityModifier_deallocate(s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + s__VisibilityModifierArray_lastInstance[this]])
    s__VisibilityModifierArray_lastInstance[this] = s__VisibilityModifierArray_lastInstance[this] - 1
    i = i - 1
  end
  return (i == 0)
end

function s__VisibilityModifierArray_activate(this, activ)
  local i = 0
  while true do
    if (i > s__VisibilityModifierArray_lastInstance[this]) then
      break
    end
    s__VisibilityModifier_activate(s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + i], activ)
    i = i + 1
  end
end





--library VisibilityModifierArray ends
--library Apm:





function Init_Apm()
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    nbClicsOnSlide[i] = 0
    timeOnSlide[i] = 0
    i = i + 1
  end
end



function DisplayApm(playerId)
  local time = timeOnSlide[playerId]
  local clics = nil
  local apm = nil
  if (time > 0) then
    clics = nbClicsOnSlide[playerId]
    apm = R2I(I2R(clics) * 60 / time)
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "clics : " .. I2S(clics) .. ",  time : " .. I2S(R2I(time)) .. ",  apm : " .. I2S(apm)))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "unknown"))
    -- INLINED!!
  end
end


function DisplayApmAll(playerId)
  local clics = nil
  local time = nil
  local apm = nil

  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
      -- INLINED!!
      time = timeOnSlide[i]
      if (time > 0) then
        clics = nbClicsOnSlide[i]
        apm = R2I(I2R(clics) * 60 / time)
        Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[i] .. GetPlayerName(Player(i)) .. ":  clics : " .. I2S(clics) .. ",  time : " .. I2S(R2I(time)) .. ",  apm : " .. I2S(apm)))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[i] .. GetPlayerName(Player(i)) .. ":  unknown"))
        -- INLINED!!
      end
    end
    i = i + 1
  end
end



--library Apm ends
--library CasterFunctions:




function CasterFunctions__CalculerPointsIntersections()
  local decalSurX = 50
  local a = nil
  local b = nil
  local c = nil
  local discriminant = nil
  if (CasterFunctions__sliderSpeed >= 0) then
    CasterFunctions__angleSlider = GetUnitFacing((s__Escaper_hero[(CasterFunctions__escaper)]))
    -- INLINED!!
  else
    CasterFunctions__angleSlider = GetUnitFacing((s__Escaper_hero[(CasterFunctions__escaper)])) + 180
    -- INLINED!!
  end
  CasterFunctions__x2 = CasterFunctions__x1 + decalSurX
  CasterFunctions__y2 = CasterFunctions__y1 + TanBJ(CasterFunctions__angleSlider) * decalSurX
  a = (CasterFunctions__x2 - CasterFunctions__x1) * (CasterFunctions__x2 - CasterFunctions__x1) + (CasterFunctions__y2 - CasterFunctions__y1) * (CasterFunctions__y2 - CasterFunctions__y1)
  b = 2 * ((CasterFunctions__x2 - CasterFunctions__x1) * (CasterFunctions__x1 - CasterFunctions__x3) + (CasterFunctions__y2 - CasterFunctions__y1) * (CasterFunctions__y1 - CasterFunctions__y3))
  c = CasterFunctions__x3 * CasterFunctions__x3 + CasterFunctions__y3 * CasterFunctions__y3 + CasterFunctions__x1 * CasterFunctions__x1 + CasterFunctions__y1 * CasterFunctions__y1 - 2 * (CasterFunctions__x3 * CasterFunctions__x1 + CasterFunctions__y3 * CasterFunctions__y1) - sc__Caster_getRange(CasterFunctions__caster) * sc__Caster_getRange(CasterFunctions__caster)
  discriminant = b * b - 4 * a * c
  if (discriminant < 0) then
    CasterFunctions__k1 = 0
    CasterFunctions__k2 = 0
  else
    CasterFunctions__k1 = (-b + SquareRoot(b * b - 4 * a * c)) / (2 * a)
    CasterFunctions__Xk1 = CasterFunctions__x1 + CasterFunctions__k1 * (CasterFunctions__x2 - CasterFunctions__x1)
    CasterFunctions__Yk1 = CasterFunctions__y1 + CasterFunctions__k1 * (CasterFunctions__y2 - CasterFunctions__y1)
    CasterFunctions__k2 = (-b - SquareRoot(b * b - 4 * a * c)) / (2 * a)
    CasterFunctions__Xk2 = CasterFunctions__x1 + CasterFunctions__k2 * (CasterFunctions__x2 - CasterFunctions__x1)
    CasterFunctions__Yk2 = CasterFunctions__y1 + CasterFunctions__k2 * (CasterFunctions__y2 - CasterFunctions__y1)
  end
end



function CasterFunctions__TrouverTempsIdeal(tempsMax)
  local diffTemps = CasterFunctions__PRECISION_DIFF_POS_HERO / CasterFunctions__sliderSpeed
  local temps = 0
  local xHero = nil
  local yHero = nil
  local xBoule = nil
  local yBoule = nil
  local angleBouleHero = nil
  local distHeroBoule = nil
  local distHeroBouleMin = 99999999999
  local tempsIdeal = 0
  while true do
    if temps >= tempsMax then
      break
    end
    xHero = CasterFunctions__x1 + CasterFunctions__sliderSpeed * CosBJ(CasterFunctions__angleSlider) * temps
    yHero = CasterFunctions__y1 + CasterFunctions__sliderSpeed * SinBJ(CasterFunctions__angleSlider) * temps
    angleBouleHero = Atan2BJ(yHero - CasterFunctions__y3, xHero - CasterFunctions__x3)
    xBoule = CasterFunctions__x3 + sc__Caster_getProjectileSpeed(CasterFunctions__caster) * CosBJ(angleBouleHero) * temps
    yBoule = CasterFunctions__y3 + sc__Caster_getProjectileSpeed(CasterFunctions__caster) * SinBJ(angleBouleHero) * temps
    distHeroBoule = SquareRoot((xHero - xBoule) * (xHero - xBoule) + (yHero - yBoule) * (yHero - yBoule))
    if (distHeroBoule < distHeroBouleMin) then
      distHeroBouleMin = distHeroBoule
      tempsIdeal = temps
    end
    temps = temps + diffTemps
  end
  if (distHeroBouleMin > CasterFunctions__PRECISION_TIR) then
    tempsIdeal = -1
  end
  return tempsIdeal
end


function CasterFunctions__CasterTryToShoot()
  local xHero = nil
  local yHero = nil
  local tempsMax = nil
  local tempsIdeal = nil
  local angleDeTir = nil
  local sensPoint1positif = nil
  local sensPoint2positif = nil
  local tempsPoint1 = nil
  local tempsPoint2 = nil
  local escapersToShoot = __jarray(0)
  local nbRemainingEscapersToShoot = nil
  local i = nil
  local tirOk = false
  local estShootable = nil
  local numEscaper = nil

  --récupération du caster et vérification qu'il existe toujours
  CasterFunctions__caster = (LoadInteger(Caster_casterHashtable, 1, GetHandleId(GetExpiredTimer())))
  if (sg__Caster_get_casterUnit(CasterFunctions__caster) == nil) then
    return
  end

  --détermination des escapers à viser
  i = 0
  while true do
    if (i >= sg__Caster_get_nbEscapersInRange(CasterFunctions__caster)) then
      break
    end
    escapersToShoot[i] = sg___Caster_escapersInRange_get(sg__Caster_get_escapersInRange(CasterFunctions__caster) + i)
    i = i + 1
  end
  nbRemainingEscapersToShoot = sg__Caster_get_nbEscapersInRange(CasterFunctions__caster)

  while true do
    if (tirOk or nbRemainingEscapersToShoot == 0) then
      break
    end
    --choix d'un escaper au hasard
    numEscaper = GetRandomInt(0, nbRemainingEscapersToShoot - 1)
    CasterFunctions__escaper = escapersToShoot[numEscaper]
    --vérification que l'escaper est shootable (vivant et à portée de tir)
    estShootable = false
    if ((IsUnitAliveBJ(s__Escaper_hero[(CasterFunctions__escaper)]))) then
      -- INLINED!!
      CasterFunctions__x1 = GetUnitX((s__Escaper_hero[(CasterFunctions__escaper)]))
      -- INLINED!!
      CasterFunctions__y1 = GetUnitY((s__Escaper_hero[(CasterFunctions__escaper)]))
      -- INLINED!!
      CasterFunctions__x3 = sc__Caster_getX(CasterFunctions__caster)
      CasterFunctions__y3 = sc__Caster_getY(CasterFunctions__caster)
      --vérification que le héros est à portée de tir
      estShootable = SquareRoot((CasterFunctions__x1 - CasterFunctions__x3) * (CasterFunctions__x1 - CasterFunctions__x3) + (CasterFunctions__y1 - CasterFunctions__y3) * (CasterFunctions__y1 - CasterFunctions__y3)) <= sc__Caster_getRange(CasterFunctions__caster)
    end
    if (not estShootable) then
      sc__Caster_escaperOutOfRangeOrDead(CasterFunctions__caster, CasterFunctions__escaper)
      i = numEscaper
      while true do
        if (i == nbRemainingEscapersToShoot - 1) then
          break
        end
        escapersToShoot[i] = escapersToShoot[i + 1]
        i = i + 1
      end
      nbRemainingEscapersToShoot = nbRemainingEscapersToShoot - 1
    else
      --tir si possible
      if ((IsTriggerEnabled(s__Escaper_slide[(CasterFunctions__escaper)]))) then
        -- INLINED!!
        CasterFunctions__sliderSpeed = (s__Escaper_slideSpeed[(CasterFunctions__escaper)] / SLIDE_PERIOD)
        -- INLINED!!
      elseif (GetUnitCurrentOrder((s__Escaper_hero[(CasterFunctions__escaper)])) ~= 0) then
        -- INLINED!!
        CasterFunctions__sliderSpeed = (s__Escaper_walkSpeed[(CasterFunctions__escaper)])
        -- INLINED!!
      else
        CasterFunctions__sliderSpeed = 0
      end
      if (CasterFunctions__sliderSpeed == 0) then
        xHero = CasterFunctions__x1
        yHero = CasterFunctions__y1
        tirOk = true
      else
        CasterFunctions__CalculerPointsIntersections()
        if (CasterFunctions__sliderSpeed < 0) then
          CasterFunctions__sliderSpeed = -CasterFunctions__sliderSpeed
        end
        if (CasterFunctions__k1 == 0 and CasterFunctions__k2 == 0) then
          return
        end
        --sens points
        if (CosBJ(CasterFunctions__angleSlider) ~= 0) then
          sensPoint1positif = (CasterFunctions__Xk1 - CasterFunctions__x1) * CosBJ(CasterFunctions__angleSlider) > 0
          sensPoint2positif = (CasterFunctions__Xk2 - CasterFunctions__x1) * CosBJ(CasterFunctions__angleSlider) > 0
        else
          sensPoint1positif = (CasterFunctions__Yk1 - CasterFunctions__y1) * SinBJ(CasterFunctions__angleSlider) > 0
          sensPoint2positif = (CasterFunctions__Yk2 - CasterFunctions__y1) * SinBJ(CasterFunctions__angleSlider) > 0
        end
        --déterminer lequel des deux points d'intersection est devant le héros
        if (sensPoint1positif == sensPoint2positif) then
          --cas exceptionnel où le point d'intersection le plus proche du héros apparaît être placé après le héros, comme l'autre point
          --calcul du temps pour chaque point pour trouver le plus éloigné qui est le bon
          tempsPoint1 = SquareRoot((CasterFunctions__x1 - CasterFunctions__Xk1) * (CasterFunctions__x1 - CasterFunctions__Xk1) + (CasterFunctions__y1 - CasterFunctions__Yk1) * (CasterFunctions__y1 - CasterFunctions__Yk1)) / CasterFunctions__sliderSpeed
          tempsPoint2 = SquareRoot((CasterFunctions__x1 - CasterFunctions__Xk2) * (CasterFunctions__x1 - CasterFunctions__Xk2) + (CasterFunctions__y1 - CasterFunctions__Yk2) * (CasterFunctions__y1 - CasterFunctions__Yk2)) / CasterFunctions__sliderSpeed
          if (tempsPoint1 > tempsPoint2) then
            CasterFunctions__XintersectionDevantHeros = CasterFunctions__Xk1
            CasterFunctions__YintersectionDevantHeros = CasterFunctions__Yk1
            tempsMax = tempsPoint1
          else
            CasterFunctions__XintersectionDevantHeros = CasterFunctions__Xk2
            CasterFunctions__YintersectionDevantHeros = CasterFunctions__Yk2
            tempsMax = tempsPoint2
          end
        else
          if (sensPoint1positif) then
            CasterFunctions__XintersectionDevantHeros = CasterFunctions__Xk1
            CasterFunctions__YintersectionDevantHeros = CasterFunctions__Yk1
            tempsMax = SquareRoot((CasterFunctions__x1 - CasterFunctions__Xk1) * (CasterFunctions__x1 - CasterFunctions__Xk1) + (CasterFunctions__y1 - CasterFunctions__Yk1) * (CasterFunctions__y1 - CasterFunctions__Yk1)) / CasterFunctions__sliderSpeed
          else
            CasterFunctions__XintersectionDevantHeros = CasterFunctions__Xk2
            CasterFunctions__YintersectionDevantHeros = CasterFunctions__Yk2
            tempsMax = SquareRoot((CasterFunctions__x1 - CasterFunctions__Xk2) * (CasterFunctions__x1 - CasterFunctions__Xk2) + (CasterFunctions__y1 - CasterFunctions__Yk2) * (CasterFunctions__y1 - CasterFunctions__Yk2)) / CasterFunctions__sliderSpeed
          end
        end

        --trouver temps idéal
        if ((GetUnitFlyHeight(((s__Escaper_hero[(CasterFunctions__escaper)]))) < 1)) then
          -- INLINED!!
          tempsIdeal = CasterFunctions__TrouverTempsIdeal(tempsMax)
        else
          tempsIdeal = -1
        end
        if (tempsIdeal ~= -1) then
          xHero = CasterFunctions__x1 + CasterFunctions__sliderSpeed * CosBJ(CasterFunctions__angleSlider) * tempsIdeal
          yHero = CasterFunctions__y1 + CasterFunctions__sliderSpeed * SinBJ(CasterFunctions__angleSlider) * tempsIdeal
          tirOk = true
        end
      end
      if (tirOk) then
        if (sc__Caster_isEnabled(CasterFunctions__caster)) then
          angleDeTir = Atan2BJ(yHero - CasterFunctions__y3, xHero - CasterFunctions__x3)
          SetUnitFacing(sc__Caster_getCasterUnit(CasterFunctions__caster), angleDeTir)
          SetUnitAnimation(sc__Caster_getCasterUnit(CasterFunctions__caster), sc__Caster_getAnimation(CasterFunctions__caster))
          sc__CasterShot_create(sc__Caster_getProjectileMonsterType(CasterFunctions__caster), CasterFunctions__x3, CasterFunctions__y3, angleDeTir, sc__Caster_getProjectileSpeed(CasterFunctions__caster), sc__Caster_getRange(CasterFunctions__caster))
        end
      else
        --on retire l'escaper du pick aléatoire
        i = numEscaper
        while true do
          if (i == nbRemainingEscapersToShoot - 1) then
            break
          end
          escapersToShoot[i] = escapersToShoot[i + 1]
          i = i + 1
        end
        nbRemainingEscapersToShoot = nbRemainingEscapersToShoot - 1
        tirOk = false
      end
    end
    --pas de n = n + 1
  end
  if (tirOk) then
    --on attend que le temps soit écoulé pour un autre tir
    TimerStart(sg__Caster_get_t(CasterFunctions__caster), sc__Caster_getLoadTime(CasterFunctions__caster), false, CasterFunctions__CasterTryToShoot)
    sg__Caster_set_canShoot(CasterFunctions__caster, false)
  elseif (sg__Caster_get_nbEscapersInRange(CasterFunctions__caster) == 0) then
    --plus aucun héros à portée, on stoppe tout
    sg__Caster_set_canShoot(CasterFunctions__caster, true)
  else
    --héros à portée mais impossible de tirer, on attend un peu et on réessaie
    TimerStart(sg__Caster_get_t(CasterFunctions__caster), CasterFunctions__ECART_CHECK, false, CasterFunctions__CasterTryToShoot)
  end
end



function CasterUnitWithinRange_Actions()
  local escaperInRange = Hero2Escaper(GetTriggerUnit())
  if (escaperInRange == 0) then
    return
  end
  CasterFunctions__caster = (LoadInteger(Caster_casterHashtable, 0, GetHandleId(GetTriggeringTrigger())))
  sg___Caster_escapersInRange_set(sg__Caster_get_escapersInRange(CasterFunctions__caster) + sg__Caster_get_nbEscapersInRange(CasterFunctions__caster), escaperInRange)
  sg__Caster_set_nbEscapersInRange(CasterFunctions__caster, sg__Caster_get_nbEscapersInRange(CasterFunctions__caster) + 1)
  if (sg__Caster_get_canShoot(CasterFunctions__caster)) then
    TimerStart(sg__Caster_get_t(CasterFunctions__caster), 0, false, CasterFunctions__CasterTryToShoot)
  end
end







--library CasterFunctions ends
--library CasterTypeArray:



function s__CasterTypeArray_create()
  local ta = s__CasterTypeArray__allocate()
  s__CasterTypeArray_numberOfCasterTypes[ta] = 0
  return ta
end

function s__CasterTypeArray_get(this, label)
  local i = 0
  while true do
    if (i >= s__CasterTypeArray_numberOfCasterTypes[this]) then
      break
    end
    if (s__CasterType_label[s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i]] == label or s__CasterType_theAlias[s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i]] == label) then
      return s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i]
    end
    i = i + 1
  end
  return 0
end

function s__CasterTypeArray_isLabelAlreadyUsed(this, label)
  return (s__CasterTypeArray_get(this, label) ~= 0)
end

function s__CasterTypeArray_new(this, label, casterMonsterType, projectileMonsterType, range, projectileSpeed, loadTime, animation)
  local n = s__CasterTypeArray_numberOfCasterTypes[this]
  if ((s__CasterTypeArray_get((this), (label)) ~= 0)) then
    -- INLINED!!
    return 0
  end
  s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + n] = s__CasterType_create(label, casterMonsterType, projectileMonsterType, range, projectileSpeed, loadTime, animation)
  if (s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + n] ~= 0) then
    s__CasterTypeArray_numberOfCasterTypes[this] = s__CasterTypeArray_numberOfCasterTypes[this] + 1
  end
  return s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + n]
end

function s__CasterTypeArray_remove(this, label)
  local position = nil
  local i = nil
  local ct = s__CasterTypeArray_get(this, label)
  if (ct == 0) then
    return false
  end
  i = 0
  while true do
    if (s__CasterType_label[s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i]] == label or s__CasterType_theAlias[s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i]] == label or i >= s__CasterTypeArray_numberOfCasterTypes[this]) then
      break
    end
    i = i + 1
  end
  if (i < s__CasterTypeArray_numberOfCasterTypes[this]) then
    position = i
    i = i + 1
    while true do
      if (i >= s__CasterTypeArray_numberOfCasterTypes[this]) then
        break
      end
      s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i - 1] = s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i]
      i = i + 1
    end
    s__CasterTypeArray_numberOfCasterTypes[this] = s__CasterTypeArray_numberOfCasterTypes[this] - 1
  end
  s__CasterType_deallocate(ct)
  return true
end

function s__CasterTypeArray_displayForPlayer(this, p)
  local i = 0
  while true do
    if (i >= s__CasterTypeArray_numberOfCasterTypes[this]) then
      break
    end
    s__CasterType_displayForPlayer(s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i], p)
    i = i + 1
  end
  if (s__CasterTypeArray_numberOfCasterTypes[this] == 0) then
    Text___ForPlayer_timed_withColorCode((p), -1, ERROR_TEXT_COLORCODE, ("no caster type saved"))
    -- INLINED!!
  end
end

function s__CasterTypeArray_saveInCache(this)
  local i = nil
  stringArrayForCache = s__StringArrayForCache_create("casterTypes", "casterTypes", true)
  i = 0
  while true do
    if (i >= s__CasterTypeArray_numberOfCasterTypes[this]) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, s__CasterType_toString(s___CasterTypeArray_casterTypes[s__CasterTypeArray_casterTypes[this] + i]))
    i = i + 1
  end
  s__StringArrayForCache_writeInCache(stringArrayForCache)
end



--library CasterTypeArray ends
--library CheckTerrainTrigger:





--textmacro instance: CheckTerrainActions_function("0")
function CheckTerrain_0_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (0)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(0)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(0)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[0] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(0)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[0] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(0)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("0")
--textmacro instance: CheckTerrainActions_function("1")
function CheckTerrain_1_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (1)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(1)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(1)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[1] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(1)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[1] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(1)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("1")
--textmacro instance: CheckTerrainActions_function("2")
function CheckTerrain_2_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (2)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(2)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(2)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[2] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(2)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[2] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(2)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("2")
--textmacro instance: CheckTerrainActions_function("3")
function CheckTerrain_3_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (3)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(3)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(3)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[3] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(3)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[3] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(3)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("3")
--textmacro instance: CheckTerrainActions_function("4")
function CheckTerrain_4_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (4)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(4)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(4)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[4] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(4)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[4] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(4)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("4")
--textmacro instance: CheckTerrainActions_function("5")
function CheckTerrain_5_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (5)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(5)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(5)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[5] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(5)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[5] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(5)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("5")
--textmacro instance: CheckTerrainActions_function("6")
function CheckTerrain_6_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (6)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(6)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(6)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[6] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(6)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[6] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(6)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("6")
--textmacro instance: CheckTerrainActions_function("7")
function CheckTerrain_7_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (7)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(7)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(7)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[7] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(7)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[7] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(7)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("7")
--textmacro instance: CheckTerrainActions_function("8")
function CheckTerrain_8_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (8)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(8)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(8)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[8] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(8)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[8] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(8)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("8")
--textmacro instance: CheckTerrainActions_function("9")
function CheckTerrain_9_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (9)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(9)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(9)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[9] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(9)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[9] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(9)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("9")
--textmacro instance: CheckTerrainActions_function("10")
function CheckTerrain_10_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (10)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(10)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(10)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[10] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(10)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[10] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(10)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("10")
--textmacro instance: CheckTerrainActions_function("11")
function CheckTerrain_11_Actions()
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (11)])
  -- INLINED!!
  local x = GetUnitX((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local l__y = GetUnitY((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local lastTerrainType = (s__Escaper_lastTerrainType[(escaper)])
  -- INLINED!!
  local currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
  local an_effect = nil

  local touchedByDeathTerrain = nil
  local toleranceDist = nil
  local angle = nil
  local xTolerance = nil
  local yTolerance = nil
  local terrainTypeTolerance = nil
  local wasSliding = nil
  local oldSlideSpeed = nil
  local tempRayonTolerance = nil

  local terrainTypeS = nil
  local terrainTypeD = nil
  local terrainTypeW = nil

  sc__Escaper_moveInvisUnit(escaper, x, l__y)

  if ((GetUnitFlyHeight(((s__Escaper_hero[(escaper)]))) < 1)) then
    -- INLINED!!
    if (lastTerrainType == currentTerrainType and (s__TerrainType_kind[(currentTerrainType)]) ~= "death") then
      -- INLINED!!
      return
    end
    s__Escaper_lastTerrainType[(escaper)] = (currentTerrainType)
    -- INLINED!!
    wasSliding = (IsTriggerEnabled(s__Escaper_slide[(escaper)]))
    -- INLINED!!
    oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
    -- INLINED!!

    if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
      -- INLINED!!
      terrainTypeS = ((currentTerrainType))
      sc__Escaper_enableSlide(escaper, true)
      if (not wasSliding) then
        HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        ClearLastClickSave(11)
      end
      if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
        -- INLINED!!
        s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
        -- INLINED!!
        if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
          -- INLINED!!
          if (wasSliding) then
            if (oldSlideSpeed >= 0) then
              sc__Escaper_reverse(escaper)
            end
          else
            sc__Escaper_reverse(escaper)
          end
        else
          if (wasSliding) then
            if (oldSlideSpeed < 0) then
              sc__Escaper_reverse(escaper)
            end
          end
        end
      end
    else
      if ((s__TerrainType_kind[(currentTerrainType)]) == "death") then
        -- INLINED!!
        terrainTypeD = ((currentTerrainType))
        touchedByDeathTerrain = true
        toleranceDist = (s__TerrainTypeDeath_toleranceDist[(terrainTypeD)])
        -- INLINED!!
        if (toleranceDist ~= 0) then
          tempRayonTolerance = CheckTerrainTrigger__INIT_RAYON_TOLERANCE
          while true do
            if (not touchedByDeathTerrain) or tempRayonTolerance > toleranceDist then
              break
            end
            angle = 0
            while true do
              if (not touchedByDeathTerrain) or angle >= 360 then
                break
              end
              xTolerance = x + tempRayonTolerance * CosBJ(angle)
              yTolerance = l__y + tempRayonTolerance * SinBJ(angle)
              terrainTypeTolerance = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xTolerance, yTolerance)
              if ((s__TerrainType_kind[(terrainTypeTolerance)]) ~= "death") then
                -- INLINED!!
                touchedByDeathTerrain = false
              end
              angle = angle + CheckTerrainTrigger__TOLERANCE_ANGLE_DIFF
            end
            tempRayonTolerance = tempRayonTolerance + CheckTerrainTrigger__TOLERANCE_RAYON_DIFF
          end
        end
        if (touchedByDeathTerrain) then
          if ((s__Escaper_godMode[(escaper)])) then
            -- INLINED!!
            an_effect = AddSpecialEffect(GM_TOUCH_DEATH_TERRAIN_EFFECT_STR, x, l__y)
            DestroyEffect(an_effect)
            an_effect = nil
          else
            terrainTypeD = ((currentTerrainType))
            sc__TerrainTypeDeath_killEscaper(terrainTypeD, escaper)
            sc__Escaper_enableSlide(escaper, false)
            --coop
          end
        else
          if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "slide") then
            -- INLINED!!
            terrainTypeS = ((terrainTypeTolerance))
            oldSlideSpeed = (s__Escaper_slideSpeed[(escaper)])
            -- INLINED!!
            sc__Escaper_enableSlide(escaper, true)
            s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
            -- INLINED!!
            if (not wasSliding) then
              HeroComingToSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              ClearLastClickSave(11)
            end
            if (not (s__Escaper_slideSpeedAbsolute[(escaper)])) then
              -- INLINED!!
              s__Escaper_slideSpeed[(escaper)] = (((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)])) * 1.0)
              -- INLINED!!
              if ((s__TerrainTypeSlide_slideSpeed[(terrainTypeS)]) < 0) then
                -- INLINED!!
                if (wasSliding) then
                  if (oldSlideSpeed >= 0) then
                    sc__Escaper_reverse(escaper)
                  end
                else
                  sc__Escaper_reverse(escaper)
                end
              else
                if (wasSliding) then
                  if (oldSlideSpeed < 0) then
                    sc__Escaper_reverse(escaper)
                  end
                end
              end
            end
          else
            --terrain tolerance : walk ou rien du tout
            sc__Escaper_enableSlide(escaper, false)
            if (wasSliding) then
              HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
              -- INLINED!!
              if (oldSlideSpeed < 0) then
                sc__Escaper_reverse(escaper)
              end
              if (udg_autoContinueAfterSliding[11] and oldSlideSpeed >= 0) then
                AutoContinueAfterSliding(11)
              end
            end
            if ((s__TerrainType_kind[(terrainTypeTolerance)]) == "walk") then
              -- INLINED!!
              if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
                -- INLINED!!
                terrainTypeW = ((terrainTypeTolerance))
                sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
                -- INLINED!!
              end
            end
          end
        end
      else
        -- walk ou rien du tout (pseudo walk)
        sc__Escaper_enableSlide(escaper, false)
        if ((s__TerrainType_kind[(lastTerrainType)]) == "slide") then
          -- INLINED!!
          HeroComingOutFromSlide_CheckItem((s__Escaper_hero[(escaper)]))
          -- INLINED!!
          if (oldSlideSpeed < 0) then
            sc__Escaper_reverse(escaper)
          end
          if (udg_autoContinueAfterSliding[11] and oldSlideSpeed >= 0) then
            AutoContinueAfterSliding(11)
          end
        end
        if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
          -- INLINED!!
          if (not (s__Escaper_walkSpeedAbsolute[(escaper)])) then
            -- INLINED!!
            terrainTypeW = ((currentTerrainType))
            sc__Escaper_setWalkSpeed(escaper, (s__TerrainTypeWalk_walkSpeed[(terrainTypeW)]))
            -- INLINED!!
          end
        end
      end
    end
  end
end
--end of: CheckTerrainActions_function("11")



function GetCheckTerrainActions(n)
  --textmacro instance: CheckTerrainActions_get("0")
  if (n == 0) then
    return CheckTerrain_0_Actions
  end
  --end of: CheckTerrainActions_get("0")
  --textmacro instance: CheckTerrainActions_get("1")
  if (n == 1) then
    return CheckTerrain_1_Actions
  end
  --end of: CheckTerrainActions_get("1")
  --textmacro instance: CheckTerrainActions_get("2")
  if (n == 2) then
    return CheckTerrain_2_Actions
  end
  --end of: CheckTerrainActions_get("2")
  --textmacro instance: CheckTerrainActions_get("3")
  if (n == 3) then
    return CheckTerrain_3_Actions
  end
  --end of: CheckTerrainActions_get("3")
  --textmacro instance: CheckTerrainActions_get("4")
  if (n == 4) then
    return CheckTerrain_4_Actions
  end
  --end of: CheckTerrainActions_get("4")
  --textmacro instance: CheckTerrainActions_get("5")
  if (n == 5) then
    return CheckTerrain_5_Actions
  end
  --end of: CheckTerrainActions_get("5")
  --textmacro instance: CheckTerrainActions_get("6")
  if (n == 6) then
    return CheckTerrain_6_Actions
  end
  --end of: CheckTerrainActions_get("6")
  --textmacro instance: CheckTerrainActions_get("7")
  if (n == 7) then
    return CheckTerrain_7_Actions
  end
  --end of: CheckTerrainActions_get("7")
  --textmacro instance: CheckTerrainActions_get("8")
  if (n == 8) then
    return CheckTerrain_8_Actions
  end
  --end of: CheckTerrainActions_get("8")
  --textmacro instance: CheckTerrainActions_get("9")
  if (n == 9) then
    return CheckTerrain_9_Actions
  end
  --end of: CheckTerrainActions_get("9")
  --textmacro instance: CheckTerrainActions_get("10")
  if (n == 10) then
    return CheckTerrain_10_Actions
  end
  --end of: CheckTerrainActions_get("10")
  --textmacro instance: CheckTerrainActions_get("11")
  if (n == 11) then
    return CheckTerrain_11_Actions
  end
  --end of: CheckTerrainActions_get("11")

  return nil
end


function CreateCheckTerrainTrigger(playerId)
  local checkTerrainTrigger = CreateTrigger()
  DisableTrigger(checkTerrainTrigger)
  TriggerAddAction(checkTerrainTrigger, GetCheckTerrainActions(playerId))
  TriggerRegisterTimerEventPeriodic(checkTerrainTrigger, CHECK_TERRAIN_PERIOD)
  return checkTerrainTrigger
end




--library CheckTerrainTrigger ends
--library CommandShortcuts:





function InitShortcutSkills(playerId)
  local hero = (s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (playerId)]))])
  -- INLINED!!


  --textmacro instance: InitShortcut("A")
  if (A_shortcutCommand[playerId] == nil) then
    UnitRemoveAbility(hero, 1396916591)
    UnitAddAbility(hero, 1396916597)
  else
    UnitRemoveAbility(hero, 1396916597)
    UnitAddAbility(hero, 1396916591)
  end
  --end of: InitShortcut("A")
  --textmacro instance: InitShortcut("Z")
  if (Z_shortcutCommand[playerId] == nil) then
    UnitRemoveAbility(hero, 1396922991)
    UnitAddAbility(hero, 1396922997)
  else
    UnitRemoveAbility(hero, 1396922997)
    UnitAddAbility(hero, 1396922991)
  end
  --end of: InitShortcut("Z")
  --textmacro instance: InitShortcut("E")
  if (E_shortcutCommand[playerId] == nil) then
    UnitRemoveAbility(hero, 1396917615)
    UnitAddAbility(hero, 1396917621)
  else
    UnitRemoveAbility(hero, 1396917621)
    UnitAddAbility(hero, 1396917615)
  end
  --end of: InitShortcut("E")
  --textmacro instance: InitShortcut("R")
  if (R_shortcutCommand[playerId] == nil) then
    UnitRemoveAbility(hero, 1396920943)
    UnitAddAbility(hero, 1396920949)
  else
    UnitRemoveAbility(hero, 1396920949)
    UnitAddAbility(hero, 1396920943)
  end
  --end of: InitShortcut("R")
  --textmacro instance: InitShortcut("Q")
  if (Q_shortcutCommand[playerId] == nil) then
    UnitRemoveAbility(hero, 1396920687)
    UnitAddAbility(hero, 1396920693)
  else
    UnitRemoveAbility(hero, 1396920693)
    UnitAddAbility(hero, 1396920687)
  end
  --end of: InitShortcut("Q")
  --textmacro instance: InitShortcut("S")
  if (S_shortcutCommand[playerId] == nil) then
    UnitRemoveAbility(hero, 1396921199)
    UnitAddAbility(hero, 1396921205)
  else
    UnitRemoveAbility(hero, 1396921205)
    UnitAddAbility(hero, 1396921199)
  end
  --end of: InitShortcut("S")
  --textmacro instance: InitShortcut("D")
  if (D_shortcutCommand[playerId] == nil) then
    UnitRemoveAbility(hero, 1396917359)
    UnitAddAbility(hero, 1396917365)
  else
    UnitRemoveAbility(hero, 1396917365)
    UnitAddAbility(hero, 1396917359)
  end
  --end of: InitShortcut("D")
  --textmacro instance: InitShortcut("F")
  if (F_shortcutCommand[playerId] == nil) then
    UnitRemoveAbility(hero, 1396917871)
    UnitAddAbility(hero, 1396917877)
  else
    UnitRemoveAbility(hero, 1396917877)
    UnitAddAbility(hero, 1396917871)
  end
  --end of: InitShortcut("F")

  hero = nil
end



function AssignShortcut(playerId, shortcut, command)
  local hero = (s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (playerId)]))])
  -- INLINED!!
  shortcut = StringCase(shortcut, true)


  --textmacro instance: AssignShortcut("A")
  if (shortcut == "A") then
    if (A_shortcutCommand[playerId] == nil) then
      UnitRemoveAbility(hero, 1396916597)
      UnitAddAbility(hero, 1396916591)
    end
    A_shortcutCommand[playerId] = "-" .. command
    return
  end
  --end of: AssignShortcut("A")
  --textmacro instance: AssignShortcut("Z")
  if (shortcut == "Z") then
    if (Z_shortcutCommand[playerId] == nil) then
      UnitRemoveAbility(hero, 1396922997)
      UnitAddAbility(hero, 1396922991)
    end
    Z_shortcutCommand[playerId] = "-" .. command
    return
  end
  --end of: AssignShortcut("Z")
  --textmacro instance: AssignShortcut("E")
  if (shortcut == "E") then
    if (E_shortcutCommand[playerId] == nil) then
      UnitRemoveAbility(hero, 1396917621)
      UnitAddAbility(hero, 1396917615)
    end
    E_shortcutCommand[playerId] = "-" .. command
    return
  end
  --end of: AssignShortcut("E")
  --textmacro instance: AssignShortcut("R")
  if (shortcut == "R") then
    if (R_shortcutCommand[playerId] == nil) then
      UnitRemoveAbility(hero, 1396920949)
      UnitAddAbility(hero, 1396920943)
    end
    R_shortcutCommand[playerId] = "-" .. command
    return
  end
  --end of: AssignShortcut("R")
  --textmacro instance: AssignShortcut("Q")
  if (shortcut == "Q") then
    if (Q_shortcutCommand[playerId] == nil) then
      UnitRemoveAbility(hero, 1396920693)
      UnitAddAbility(hero, 1396920687)
    end
    Q_shortcutCommand[playerId] = "-" .. command
    return
  end
  --end of: AssignShortcut("Q")
  --textmacro instance: AssignShortcut("S")
  if (shortcut == "S") then
    if (S_shortcutCommand[playerId] == nil) then
      UnitRemoveAbility(hero, 1396921205)
      UnitAddAbility(hero, 1396921199)
    end
    S_shortcutCommand[playerId] = "-" .. command
    return
  end
  --end of: AssignShortcut("S")
  --textmacro instance: AssignShortcut("D")
  if (shortcut == "D") then
    if (D_shortcutCommand[playerId] == nil) then
      UnitRemoveAbility(hero, 1396917365)
      UnitAddAbility(hero, 1396917359)
    end
    D_shortcutCommand[playerId] = "-" .. command
    return
  end
  --end of: AssignShortcut("D")
  --textmacro instance: AssignShortcut("F")
  if (shortcut == "F") then
    if (F_shortcutCommand[playerId] == nil) then
      UnitRemoveAbility(hero, 1396917877)
      UnitAddAbility(hero, 1396917871)
    end
    F_shortcutCommand[playerId] = "-" .. command
    return
  end
  --end of: AssignShortcut("F")

  hero = nil
end


function UnassignShortcut(playerId, shortcut)
  local hero = (s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (playerId)]))])
  -- INLINED!!
  shortcut = StringCase(shortcut, true)


  --textmacro instance: UnassignShortcut("A")
  if (shortcut == "A") then
    if (A_shortcutCommand[playerId] ~= nil) then
      UnitRemoveAbility(hero, 1396916591)
      UnitAddAbility(hero, 1396916597)
      A_shortcutCommand[playerId] = nil
    end
    return
  end
  --end of: UnassignShortcut("A")
  --textmacro instance: UnassignShortcut("Z")
  if (shortcut == "Z") then
    if (Z_shortcutCommand[playerId] ~= nil) then
      UnitRemoveAbility(hero, 1396922991)
      UnitAddAbility(hero, 1396922997)
      Z_shortcutCommand[playerId] = nil
    end
    return
  end
  --end of: UnassignShortcut("Z")
  --textmacro instance: UnassignShortcut("E")
  if (shortcut == "E") then
    if (E_shortcutCommand[playerId] ~= nil) then
      UnitRemoveAbility(hero, 1396917615)
      UnitAddAbility(hero, 1396917621)
      E_shortcutCommand[playerId] = nil
    end
    return
  end
  --end of: UnassignShortcut("E")
  --textmacro instance: UnassignShortcut("R")
  if (shortcut == "R") then
    if (R_shortcutCommand[playerId] ~= nil) then
      UnitRemoveAbility(hero, 1396920943)
      UnitAddAbility(hero, 1396920949)
      R_shortcutCommand[playerId] = nil
    end
    return
  end
  --end of: UnassignShortcut("R")
  --textmacro instance: UnassignShortcut("Q")
  if (shortcut == "Q") then
    if (Q_shortcutCommand[playerId] ~= nil) then
      UnitRemoveAbility(hero, 1396920687)
      UnitAddAbility(hero, 1396920693)
      Q_shortcutCommand[playerId] = nil
    end
    return
  end
  --end of: UnassignShortcut("Q")
  --textmacro instance: UnassignShortcut("S")
  if (shortcut == "S") then
    if (S_shortcutCommand[playerId] ~= nil) then
      UnitRemoveAbility(hero, 1396921199)
      UnitAddAbility(hero, 1396921205)
      S_shortcutCommand[playerId] = nil
    end
    return
  end
  --end of: UnassignShortcut("S")
  --textmacro instance: UnassignShortcut("D")
  if (shortcut == "D") then
    if (D_shortcutCommand[playerId] ~= nil) then
      UnitRemoveAbility(hero, 1396917359)
      UnitAddAbility(hero, 1396917365)
      D_shortcutCommand[playerId] = nil
    end
    return
  end
  --end of: UnassignShortcut("D")
  --textmacro instance: UnassignShortcut("F")
  if (shortcut == "F") then
    if (F_shortcutCommand[playerId] ~= nil) then
      UnitRemoveAbility(hero, 1396917871)
      UnitAddAbility(hero, 1396917877)
      F_shortcutCommand[playerId] = nil
    end
    return
  end
  --end of: UnassignShortcut("F")

  hero = nil
end


function IsShortcut(S)
  S = StringCase(S, true)

  --textmacro instance: IsShortcut("A")
  if (S == "A") then
    return true
  end
  --end of: IsShortcut("A")
  --textmacro instance: IsShortcut("Z")
  if (S == "Z") then
    return true
  end
  --end of: IsShortcut("Z")
  --textmacro instance: IsShortcut("E")
  if (S == "E") then
    return true
  end
  --end of: IsShortcut("E")
  --textmacro instance: IsShortcut("R")
  if (S == "R") then
    return true
  end
  --end of: IsShortcut("R")
  --textmacro instance: IsShortcut("Q")
  if (S == "Q") then
    return true
  end
  --end of: IsShortcut("Q")
  --textmacro instance: IsShortcut("S")
  if (S == "S") then
    return true
  end
  --end of: IsShortcut("S")
  --textmacro instance: IsShortcut("D")
  if (S == "D") then
    return true
  end
  --end of: IsShortcut("D")
  --textmacro instance: IsShortcut("F")
  if (S == "F") then
    return true
  end
  --end of: IsShortcut("F")

  return false
end



function GetStringAssignedFromCommand(command)
  local outputStr = nil
  local spaceFound = false
  local cmdLength = StringLength(command)
  local charId = 3
  while true do
    if (charId >= cmdLength) then
      break
    end
    if (SubStringBJ(command, charId, charId) == " ") then
      if (not spaceFound) then
        spaceFound = true
      else
        outputStr = SubStringBJ(command, charId + 1, cmdLength)
        if (SubStringBJ(outputStr, 1, 1) == "(" and SubStringBJ(outputStr, StringLength(outputStr), StringLength(outputStr)) == ")") then
          outputStr = SubStringBJ(outputStr, 2, StringLength(outputStr) - 1)
        end
        return outputStr
      end
    end
    charId = charId + 1
  end
  return nil
end



function DisplayShortcuts(playerId)
  Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (" "))
  -- INLINED!!
  Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "Your shortcuts:"))
  -- INLINED!!

  --textmacro instance: ShowShortcut("A")
  if (A_shortcutCommand[playerId] == nil) then
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "A: |r" .. udg_colorCode[GREY] .. "none"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "A: |r" .. A_shortcutCommand[playerId]))
    -- INLINED!!
  end
  --end of: ShowShortcut("A")
  --textmacro instance: ShowShortcut("Z")
  if (Z_shortcutCommand[playerId] == nil) then
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "Z: |r" .. udg_colorCode[GREY] .. "none"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "Z: |r" .. Z_shortcutCommand[playerId]))
    -- INLINED!!
  end
  --end of: ShowShortcut("Z")
  --textmacro instance: ShowShortcut("E")
  if (E_shortcutCommand[playerId] == nil) then
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "E: |r" .. udg_colorCode[GREY] .. "none"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "E: |r" .. E_shortcutCommand[playerId]))
    -- INLINED!!
  end
  --end of: ShowShortcut("E")
  --textmacro instance: ShowShortcut("R")
  if (R_shortcutCommand[playerId] == nil) then
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "R: |r" .. udg_colorCode[GREY] .. "none"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "R: |r" .. R_shortcutCommand[playerId]))
    -- INLINED!!
  end
  --end of: ShowShortcut("R")
  --textmacro instance: ShowShortcut("Q")
  if (Q_shortcutCommand[playerId] == nil) then
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "Q: |r" .. udg_colorCode[GREY] .. "none"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "Q: |r" .. Q_shortcutCommand[playerId]))
    -- INLINED!!
  end
  --end of: ShowShortcut("Q")
  --textmacro instance: ShowShortcut("S")
  if (S_shortcutCommand[playerId] == nil) then
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "S: |r" .. udg_colorCode[GREY] .. "none"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "S: |r" .. S_shortcutCommand[playerId]))
    -- INLINED!!
  end
  --end of: ShowShortcut("S")
  --textmacro instance: ShowShortcut("D")
  if (D_shortcutCommand[playerId] == nil) then
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "D: |r" .. udg_colorCode[GREY] .. "none"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "D: |r" .. D_shortcutCommand[playerId]))
    -- INLINED!!
  end
  --end of: ShowShortcut("D")
  --textmacro instance: ShowShortcut("F")
  if (F_shortcutCommand[playerId] == nil) then
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "F: |r" .. udg_colorCode[GREY] .. "none"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((Player(playerId)), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[playerId] .. "F: |r" .. F_shortcutCommand[playerId]))
    -- INLINED!!
  end
  --end of: ShowShortcut("F")
end




--library CommandShortcuts ends
--library Lives:






--leaderboard methods
function s__Lives_display(this, show)
  LeaderboardDisplay(s__Lives_lb[this], show)
end

function s__Lives_refresh(this)
  LeaderboardSetPlayerItemValueBJ(Lives__LIVES_PLAYER, s__Lives_lb[this], s__Lives_nb[this])
end

function s__Lives_getLeaderboard(this)
  return s__Lives_lb[this]
end


--creation methods
function s__Lives_create()
  local l = s__Lives__allocate()
  if (sc__LevelArray_get(udg_levels, 0) ~= 0) then
    s__Lives_nb[l] = (s__Level_livesEarnedAtBeginning[(sc__LevelArray_get(udg_levels, 0))])
    -- INLINED!!
  else
    s__Lives_nb[l] = NB_LIVES_AT_BEGINNING
  end
  s__Lives_lb[l] = CreateLeaderboardBJ(GetPlayersAll(), "")
  LeaderboardAddItemBJ(Player(0), s__Lives_lb[l], "Game time", 0)
  LeaderboardSetPlayerItemStyleBJ(Player(0), s__Lives_lb[l], true, false, false)
  LeaderboardAddItemBJ(Lives__LIVES_PLAYER, s__Lives_lb[l], "Lives :", s__Lives_nb[l])
  LeaderboardDisplay(s__Lives_lb[(l)], (true))
  -- INLINED!!
  return l
end


function s__Lives_onDestroy(this)
  DestroyLeaderboard(s__Lives_lb[this])
  s__Lives_lb[this] = nil
end

--Generated destructor of Lives
function s__Lives_deallocate(this)
  if this == nil then
    return
  elseif (si__Lives_V[this] ~= -1) then
    return
  end
  s__Lives_onDestroy(this)
  si__Lives_V[this] = si__Lives_F
  si__Lives_F = this
end


--lives methods
function s__Lives_get(this)
  return s__Lives_nb[this]
end

function s__Lives_setNb(this, nbLives)
  local wordLives = nil
  if (nbLives < 0) then
    return false
  end
  s__Lives_nb[this] = nbLives
  s__Lives_refresh(this)
  if (nbLives > 1) then
    wordLives = " lives."
  else
    wordLives = " life."
  end
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(Lives__LIVES_PLAYER)] .. "You have now " .. I2S(nbLives) .. wordLives))
  -- INLINED!!
  return true
end

function s__Lives_add(this, n)
  local wordLives = nil
  if (n > 1) then
    wordLives = " lives !"
  else
    wordLives = " life."
  end
  s__Lives_nb[this] = s__Lives_nb[this] + n
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (udg_colorCode[1] .. "You have earned " .. I2S(n) .. wordLives))
  -- INLINED!!
  s__Lives_refresh(this)
end

function s__Lives_loseALife(this)
  s__Lives_nb[this] = s__Lives_nb[this] - 1
  if (s__Lives_nb[this] >= 0) then
    s__Lives_refresh(this)
  end
end





--library Lives ends
--library MonsterTypeArray:



function s__MonsterTypeArray_create()
  local ma = s__MonsterTypeArray__allocate()
  s__MonsterTypeArray_numberOfMonsterTypes[ma] = 0
  return ma
end

function s__MonsterTypeArray_get(this, label)
  local i = 0
  while true do
    if (i >= s__MonsterTypeArray_numberOfMonsterTypes[this]) then
      break
    end
    if (s__MonsterType_label[s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i]] == label or s__MonsterType_theAlias[s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i]] == label) then
      return s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i]
    end
    i = i + 1
  end
  return 0
end

function s__MonsterTypeArray_isLabelAlreadyUsed(this, label)
  return (s__MonsterTypeArray_get(this, label) ~= 0)
end

function s__MonsterTypeArray_new(this, label, unitTypeId, scale, immolationRadius, speed, isClickable)
  local n = s__MonsterTypeArray_numberOfMonsterTypes[this]
  if ((s__MonsterTypeArray_get((this), (label)) ~= 0)) then
    -- INLINED!!
    return 0
  end
  s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + n] = s__MonsterType_create(label, unitTypeId, scale, immolationRadius, speed, isClickable)
  if (s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + n] ~= 0) then
    s__MonsterTypeArray_numberOfMonsterTypes[this] = s__MonsterTypeArray_numberOfMonsterTypes[this] + 1
  end
  return s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + n]
end

function s__MonsterTypeArray_remove(this, label)
  local position = nil
  local i = nil
  local mt = s__MonsterTypeArray_get(this, label)
  if (mt == 0) then
    return false
  end
  i = 0
  while true do
    if (s__MonsterType_label[s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i]] == label or s__MonsterType_theAlias[s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i]] == label or i >= s__MonsterTypeArray_numberOfMonsterTypes[this]) then
      break
    end
    i = i + 1
  end
  if (i < s__MonsterTypeArray_numberOfMonsterTypes[this]) then
    position = i
    i = i + 1
    while true do
      if (i >= s__MonsterTypeArray_numberOfMonsterTypes[this]) then
        break
      end
      s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i - 1] = s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i]
      i = i + 1
    end
    s__MonsterTypeArray_numberOfMonsterTypes[this] = s__MonsterTypeArray_numberOfMonsterTypes[this] - 1
  end
  s__MonsterType_deallocate(mt)
  return true
end

function s__MonsterTypeArray_displayForPlayer(this, p)
  local i = 0
  while true do
    if (i >= s__MonsterTypeArray_numberOfMonsterTypes[this]) then
      break
    end
    s__MonsterType_displayForPlayer(s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i], p)
    i = i + 1
  end
  if (s__MonsterTypeArray_numberOfMonsterTypes[this] == 0) then
    Text___ForPlayer_timed_withColorCode((p), -1, ERROR_TEXT_COLORCODE, ("no monster type saved"))
    -- INLINED!!
  end
end

function s__MonsterTypeArray_monsterUnit2KillEffectStr(this, monsterUnit)
  local moc = sc__MonsterOrCaster_create(GetUnitUserData(monsterUnit))
  local mt = sc__MonsterOrCaster_getMonsterType(moc)
  s__MonsterOrCaster_deallocate(moc)
  return (s__MonsterType_killingEffectStr[(mt)])
  -- INLINED!!
end

function s__MonsterTypeArray_monsterUnit2MonsterType(this, monsterUnit)
  local monsterUnitTypeId = GetUnitTypeId(monsterUnit)
  local i = 0
  while true do
    if (i >= s__MonsterTypeArray_numberOfMonsterTypes[this]) then
      break
    end
    if ((s__MonsterType_unitTypeId[(s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i])]) == monsterUnitTypeId) then
      -- INLINED!!
      return s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i]
    end
    i = i + 1
  end
  return 0
end

function s__MonsterTypeArray_saveInCache(this)
  local i = nil
  stringArrayForCache = s__StringArrayForCache_create("monsterTypes", "monsterTypes", true)
  i = 0
  while true do
    if (i >= s__MonsterTypeArray_numberOfMonsterTypes[this]) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, s__MonsterType_toString(s___MonsterTypeArray_monsterTypes[s__MonsterTypeArray_monsterTypes[this] + i]))
    i = i + 1
  end
  s__StringArrayForCache_writeInCache(stringArrayForCache)
end




--library MonsterTypeArray ends
--library SaveCasterTypes:



function StartSaveCasterTypes()
  s__CasterTypeArray_saveInCache(udg_casterTypes)
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("caster types saved"))
  -- INLINED!!
  StartSaveLevels()
end




--library SaveCasterTypes ends
--library TeleportOnceOnly:




function TeleportOnceOnly_Actions()
  local hero = GetTriggerUnit()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(hero)

  SetUnitX(hero, GetOrderPointX())
  SetUnitY(hero, GetOrderPointY())
  DestroyTrigger(GetTriggeringTrigger())
  hero = nil
end



function ActivateTeleportOnceOnly(hero)
  local playerId = GetUnitUserData(hero)
  DestroyTrigger(TeleportOnceOnly__teleTriggers[playerId])
  TeleportOnceOnly__teleTriggers[playerId] = CreateTrigger()
  TriggerAddAction(TeleportOnceOnly__teleTriggers[playerId], TeleportOnceOnly_Actions)
  TriggerRegisterUnitEvent(TeleportOnceOnly__teleTriggers[playerId], hero, EVENT_UNIT_ISSUED_POINT_ORDER)
end





--library TeleportOnceOnly ends
--library TerrainFunctions:



function IsTerrainAlreadyUsed(terrainType)
  local i = 0
  while true do
    if (udg_used_terrain_types[i] == 0) then
      break
    end
    if (udg_used_terrain_types[i] == terrainType) then
      return true
    end
    i = i + 1
  end
  return false
end


function IsTerrainsLimitNumberReached()
  return (udg_nb_used_terrains == NB_MAX_OF_TERRAINS)
end


function AddNewTerrain(newTerrain)
  if ((udg_nb_used_terrains == NB_MAX_OF_TERRAINS) or IsTerrainAlreadyUsed(newTerrain)) then
    -- INLINED!!
    return false
  end
  udg_used_terrain_types[udg_nb_used_terrains] = newTerrain
  udg_nb_used_terrains = udg_nb_used_terrains + 1
  return true
end

function CanUseTerrain(terrainType)
  if (IsTerrainAlreadyUsed(terrainType)) then
    return true
  end
  return AddNewTerrain(terrainType)
end


function GetRandomTerrain()
  return TerrainTypeMaxId2TerrainTypeId(GetRandomInt(1, NB_TERRAINS_TOTAL))
end


function GetRandomUsedTerrain()
  return udg_used_terrain_types[GetRandomInt(0, udg_nb_used_terrains - 1)]
end


function GetRandomNotUsedTerrain()
  local terrainType = nil
  while true do
    terrainType = (TerrainTypeMaxId2TerrainTypeId(GetRandomInt(1, NB_TERRAINS_TOTAL)))
    -- INLINED!!
    if (not IsTerrainAlreadyUsed(terrainType)) then
      break
    end
  end
  return terrainType
end


function GetTerrainName(terrain)
  if (terrain > NB_TERRAINS_TOTAL) then
    return TERRAIN_TYPE_NAMES[TerrainTypeId2TerrainTypeMaxId(terrain)]
  end
  if (terrain <= 0) then
    return nil
  end
  return TERRAIN_TYPE_NAMES[terrain]
end


function GetTerrainData(terrain)
  --GetTerrainData('Nice') == "46 : Northrend - Glace    'Nice'"
  local str = nil
  local maxId = nil
  local terrainType = nil

  if (terrain > NB_TERRAINS_TOTAL) then
    maxId = TerrainTypeId2TerrainTypeMaxId(terrain)
  else
    if (terrain > 0) then
      maxId = terrain
      terrain = TerrainTypeMaxId2TerrainTypeId(maxId)
    else
      return nil
    end
  end
  str = udg_colorCode[RED] .. TERRAIN_TYPE_DATA[maxId]

  terrainType = TerrainTypeId2TerrainType(terrain)
  if (terrainType ~= 0) then
    if ((s__TerrainType_kind[(terrainType)]) == "slide") then
      -- INLINED!!
      str = str .. COLOR_TERRAIN_SLIDE
    else
      if ((s__TerrainType_kind[(terrainType)]) == "walk") then
        -- INLINED!!
        str = str .. COLOR_TERRAIN_WALK
      else
        str = str .. COLOR_TERRAIN_DEATH
      end
    end
    str = str .. "        " .. s__TerrainType_label[terrainType]
    if (s__TerrainType_theAlias[terrainType] ~= nil) then
      str = str .. "  " .. s__TerrainType_theAlias[terrainType]
    end
  end

  return str
end


function DisplayTerrainDataToPlayer(p, terrain)
  DisplayTimedTextToPlayer(p, 0, 0, TERRAIN_DATA_DISPLAY_TIME, GetTerrainData(terrain))
end






--library TerrainFunctions ends
--library TerrainTypeNamesAndData:






function Init_TerrainTypeNamesAndData()
  local maxId = nil
  local terrain = nil
  local grassId = nil
  local S = nil

  TERRAIN_TYPE_NAMES[1] = "Eté de Lordaeron - Terre"
  TERRAIN_TYPE_NAMES[2] = "Eté de Lordaeron - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[3] = "Eté de Lordaeron - Terre herbeuse"
  TERRAIN_TYPE_NAMES[4] = "Eté de Lordaeron - Rochers"
  TERRAIN_TYPE_NAMES[5] = "Eté de Lordaeron - Herbe"
  TERRAIN_TYPE_NAMES[6] = "Eté de Lordaeron - Herbe sombre"
  TERRAIN_TYPE_NAMES[7] = "Automne de Lordaeron - Terre"
  TERRAIN_TYPE_NAMES[8] = "Automne de Lordaeron - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[9] = "Automne de Lordaeron - Terre herbeuse"
  TERRAIN_TYPE_NAMES[10] = "Automne de Lordaeron - Rochers"
  TERRAIN_TYPE_NAMES[11] = "Automne de Lordaeron - Herbe"
  TERRAIN_TYPE_NAMES[12] = "Automne de Lordaeron - Herbe sombre"
  TERRAIN_TYPE_NAMES[13] = "Hiver de Lordaeron - Terre"
  TERRAIN_TYPE_NAMES[14] = "Hiver de Lordaeron - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[15] = "Hiver de Lordaeron - Terre herbeuse"
  TERRAIN_TYPE_NAMES[16] = "Hiver de Lordaeron - Rochers"
  TERRAIN_TYPE_NAMES[17] = "Hiver de Lordaeron - Herbe"
  TERRAIN_TYPE_NAMES[18] = "Hiver de Lordaeron - Neige"
  TERRAIN_TYPE_NAMES[19] = "Barrens - Terre"
  TERRAIN_TYPE_NAMES[20] = "Barrens - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[21] = "Barrens - Cailloux"
  TERRAIN_TYPE_NAMES[22] = "Barrens - Terre herbeuse"
  TERRAIN_TYPE_NAMES[23] = "Barrens - Désert"
  TERRAIN_TYPE_NAMES[24] = "Barrens - Désert sombre"
  TERRAIN_TYPE_NAMES[25] = "Barrens - Rochers"
  TERRAIN_TYPE_NAMES[26] = "Barrens - Herbe"
  TERRAIN_TYPE_NAMES[27] = "Ashenvale - Terre"
  TERRAIN_TYPE_NAMES[28] = "Ashenvale - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[29] = "Ashenvale - Herbe"
  TERRAIN_TYPE_NAMES[30] = "Ashenvale - Rochers"
  TERRAIN_TYPE_NAMES[31] = "Ashenvale - Touffes d'herbe"
  TERRAIN_TYPE_NAMES[32] = "Ashenvale - Vignes"
  TERRAIN_TYPE_NAMES[33] = "Ashenvale - Terre herbeuse"
  TERRAIN_TYPE_NAMES[34] = "Ashenvale - Feuilles"
  TERRAIN_TYPE_NAMES[35] = "Felwood - Terre"
  TERRAIN_TYPE_NAMES[36] = "Felwood - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[37] = "Felwood - Poison"
  TERRAIN_TYPE_NAMES[38] = "Felwood - Rochers"
  TERRAIN_TYPE_NAMES[39] = "Felwood - Vignes"
  TERRAIN_TYPE_NAMES[40] = "Felwood - Herbe"
  TERRAIN_TYPE_NAMES[41] = "Felwood - Feuilles"
  TERRAIN_TYPE_NAMES[42] = "Northrend - Terre"
  TERRAIN_TYPE_NAMES[43] = "Northrend - Terre sombre"
  TERRAIN_TYPE_NAMES[44] = "Northrend - Rochers"
  TERRAIN_TYPE_NAMES[45] = "Northrend - Herbe"
  TERRAIN_TYPE_NAMES[46] = "Northrend - Glace"
  TERRAIN_TYPE_NAMES[47] = "Northrend - Neige"
  TERRAIN_TYPE_NAMES[48] = "Northrend - Neige rocailleuse"
  TERRAIN_TYPE_NAMES[49] = "Cité - Terre"
  TERRAIN_TYPE_NAMES[50] = "Cité - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[51] = "Cité - Marbre noir"
  TERRAIN_TYPE_NAMES[52] = "Cité - Briques"
  TERRAIN_TYPE_NAMES[53] = "Cité - Dalles carrées"
  TERRAIN_TYPE_NAMES[54] = "Cité - Dalles rondes"
  TERRAIN_TYPE_NAMES[55] = "Cité - Herbe"
  TERRAIN_TYPE_NAMES[56] = "Cité - Jardin"
  TERRAIN_TYPE_NAMES[57] = "Cité - Marbre blanc"
  TERRAIN_TYPE_NAMES[58] = "Village - Terre"
  TERRAIN_TYPE_NAMES[59] = "Village - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[60] = "Village - Champs"
  TERRAIN_TYPE_NAMES[61] = "Village - Chemin caillouteux"
  TERRAIN_TYPE_NAMES[62] = "Village - Chemin pavé"
  TERRAIN_TYPE_NAMES[63] = "Village - Herbe courte"
  TERRAIN_TYPE_NAMES[64] = "Village - Rochers"
  TERRAIN_TYPE_NAMES[65] = "Village - Herbe épaisse"
  TERRAIN_TYPE_NAMES[66] = "Village en automne - Terre"
  TERRAIN_TYPE_NAMES[67] = "Village en automne - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[68] = "Village en automne - Champs"
  TERRAIN_TYPE_NAMES[69] = "Village en automne - Chemin caillouteux"
  TERRAIN_TYPE_NAMES[70] = "Village en automne - Chemin pavé"
  TERRAIN_TYPE_NAMES[71] = "Village en automne - Herbe courte"
  TERRAIN_TYPE_NAMES[72] = "Village en automne - Rochers"
  TERRAIN_TYPE_NAMES[73] = "Village en automne - Herbe épaisse"
  TERRAIN_TYPE_NAMES[74] = "Dalaran - Terre"
  TERRAIN_TYPE_NAMES[75] = "Dalaran - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[76] = "Dalaran - Marbre noir"
  TERRAIN_TYPE_NAMES[77] = "Dalaran - Briques"
  TERRAIN_TYPE_NAMES[78] = "Dalaran - Dalles carrées"
  TERRAIN_TYPE_NAMES[79] = "Dalaran - Dalles rondes"
  TERRAIN_TYPE_NAMES[80] = "Dalaran - Herbe"
  TERRAIN_TYPE_NAMES[81] = "Dalaran - Jardin"
  TERRAIN_TYPE_NAMES[82] = "Dalaran - Marbre blanc"
  TERRAIN_TYPE_NAMES[83] = "Donjon - Terre"
  TERRAIN_TYPE_NAMES[84] = "Donjon - Briques"
  TERRAIN_TYPE_NAMES[85] = "Donjon - Pierres rouges"
  TERRAIN_TYPE_NAMES[86] = "Donjon - Fissures de lave"
  TERRAIN_TYPE_NAMES[87] = "Donjon - Lave"
  TERRAIN_TYPE_NAMES[88] = "Donjon - Rochers noirs"
  TERRAIN_TYPE_NAMES[89] = "Donjon - Pierres grises"
  TERRAIN_TYPE_NAMES[90] = "Donjon - Dalles carrées"
  TERRAIN_TYPE_NAMES[91] = "Souterrain - Terre"
  TERRAIN_TYPE_NAMES[92] = "Souterrain - Briques"
  TERRAIN_TYPE_NAMES[93] = "Souterrain - Pierres rouges"
  TERRAIN_TYPE_NAMES[94] = "Souterrain - Morceaux de glace"
  TERRAIN_TYPE_NAMES[95] = "Souterrain - Glace"
  TERRAIN_TYPE_NAMES[96] = "Souterrain - Rochers noirs"
  TERRAIN_TYPE_NAMES[97] = "Souterrain - Pierres grises"
  TERRAIN_TYPE_NAMES[98] = "Souterrain - Dalles carrées"
  TERRAIN_TYPE_NAMES[99] = "Ruines englouties - Terre"
  TERRAIN_TYPE_NAMES[100] = "Ruines englouties - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[101] = "Ruines englouties - Terre herbeuse"
  TERRAIN_TYPE_NAMES[102] = "Ruines englouties - Petites briques"
  TERRAIN_TYPE_NAMES[103] = "Ruines englouties - Sable"
  TERRAIN_TYPE_NAMES[104] = "Ruines englouties - Grandes briques"
  TERRAIN_TYPE_NAMES[105] = "Ruines englouties - Dalles rondes"
  TERRAIN_TYPE_NAMES[106] = "Ruines englouties - Herbe"
  TERRAIN_TYPE_NAMES[107] = "Ruines englouties - Herbe sombre"
  TERRAIN_TYPE_NAMES[108] = "Glacier d'Icecrown - Terre"
  TERRAIN_TYPE_NAMES[109] = "Glacier d'Icecrown - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[110] = "Glacier d'Icecrown - Glace sombre"
  TERRAIN_TYPE_NAMES[111] = "Glacier d'Icecrown - Briques noires"
  TERRAIN_TYPE_NAMES[112] = "Glacier d'Icecrown - Briques runiques"
  TERRAIN_TYPE_NAMES[113] = "Glacier d'Icecrown - Briques empilées"
  TERRAIN_TYPE_NAMES[114] = "Glacier d'Icecrown - Glace"
  TERRAIN_TYPE_NAMES[115] = "Glacier d'Icecrown - Carrés noirs"
  TERRAIN_TYPE_NAMES[116] = "Glacier d'Icecrown - Neige"
  TERRAIN_TYPE_NAMES[117] = "Terres dévastées - Terre"
  TERRAIN_TYPE_NAMES[118] = "Terres dévastées - Terre claire"
  TERRAIN_TYPE_NAMES[119] = "Terres dévastées - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[120] = "Terres dévastées - Terre craquelée"
  TERRAIN_TYPE_NAMES[121] = "Terres dévastées - Pierres plates"
  TERRAIN_TYPE_NAMES[122] = "Terres dévastées - Rochers"
  TERRAIN_TYPE_NAMES[123] = "Terres dévastées - Pierres plates claires"
  TERRAIN_TYPE_NAMES[124] = "Terres dévastées - Abysse"
  TERRAIN_TYPE_NAMES[125] = "Catacombes - Terre"
  TERRAIN_TYPE_NAMES[126] = "Catacombes - Terre claire"
  TERRAIN_TYPE_NAMES[127] = "Catacombes - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[128] = "Catacombes - Pierres plates"
  TERRAIN_TYPE_NAMES[129] = "Catacombes - Petites briques"
  TERRAIN_TYPE_NAMES[130] = "Catacombes - Grandes briques"
  TERRAIN_TYPE_NAMES[131] = "Catacombes - Dalles carrées"
  TERRAIN_TYPE_NAMES[132] = "Catacombes - Dalles sombres"
  TERRAIN_TYPE_NAMES[133] = "Ruines de Dalaran - Terre"
  TERRAIN_TYPE_NAMES[134] = "Ruines de Dalaran - Terre rocailleuse"
  TERRAIN_TYPE_NAMES[135] = "Ruines de Dalaran - Marbre noir"
  TERRAIN_TYPE_NAMES[136] = "Ruines de Dalaran - Dalles en brique"
  TERRAIN_TYPE_NAMES[137] = "Ruines de Dalaran - Dalles carrées"
  TERRAIN_TYPE_NAMES[138] = "Ruines de Dalaran - Dalles rondes"
  TERRAIN_TYPE_NAMES[139] = "Ruines de Dalaran - Herbe"
  TERRAIN_TYPE_NAMES[140] = "Ruines de Dalaran - Jardin"
  TERRAIN_TYPE_NAMES[141] = "Ruines de Dalaran - Marbre blanc"
  TERRAIN_TYPE_NAMES[142] = "Ashenvale - Falaise"
  TERRAIN_TYPE_NAMES[143] = "Ashenvale - Falaise herbeuse"
  TERRAIN_TYPE_NAMES[144] = "Barrens - Falaise désertique"
  TERRAIN_TYPE_NAMES[145] = "Barrens - Falaise herbeuse"
  TERRAIN_TYPE_NAMES[146] = "Catacombes - Falaise"
  TERRAIN_TYPE_NAMES[147] = "Catacombes - Falaise de tuiles noires"
  TERRAIN_TYPE_NAMES[148] = "Cité - Falaise"
  TERRAIN_TYPE_NAMES[149] = "Cité - Falaise de tuiles carrées"
  TERRAIN_TYPE_NAMES[150] = "Dalaran - Falaise"
  TERRAIN_TYPE_NAMES[151] = "Dalaran - Falaise de tuiles carrées"
  TERRAIN_TYPE_NAMES[152] = "Ruines de Dalaran - Falaise"
  TERRAIN_TYPE_NAMES[153] = "Ruines de Dalaran - Falaise de tuiles carrées"
  TERRAIN_TYPE_NAMES[154] = "Donjon - Falaise"
  TERRAIN_TYPE_NAMES[155] = "Donjon - Falaise de tuiles carrées"
  TERRAIN_TYPE_NAMES[156] = "Felwood - Falaise"
  TERRAIN_TYPE_NAMES[157] = "Felwood - Falaise herbeuse"
  TERRAIN_TYPE_NAMES[158] = "Glacier d'Icecrown - Falaise de briques runiques"
  TERRAIN_TYPE_NAMES[159] = "Glacier d'Icecrown - Falaise enneigée"
  TERRAIN_TYPE_NAMES[160] = "Automne de Lordaeron - Falaise"
  TERRAIN_TYPE_NAMES[161] = "Automne de Lordaeron - Falaise herbeuse"
  TERRAIN_TYPE_NAMES[162] = "Eté de Lordaeron - Falaise"
  TERRAIN_TYPE_NAMES[163] = "Eté de Lordaeron - Falaise herbeuse"
  TERRAIN_TYPE_NAMES[164] = "Hiver de Lordaeron - Falaise herbeuse"
  TERRAIN_TYPE_NAMES[165] = "Hiver de Lordaeron - Falaise enneigée"
  TERRAIN_TYPE_NAMES[166] = "Northrend - Falaise"
  TERRAIN_TYPE_NAMES[167] = "Northrend - Falaise enneigée"
  TERRAIN_TYPE_NAMES[168] = "Terres dévastées - Falaise abyssale"
  TERRAIN_TYPE_NAMES[169] = "Terres dévastées - Falaise ardue"
  TERRAIN_TYPE_NAMES[170] = "Ruines englouties - Falaise"
  TERRAIN_TYPE_NAMES[171] = "Ruines englouties - Falaise de tuiles larges"
  TERRAIN_TYPE_NAMES[172] = "Souterrain - Falaise"
  TERRAIN_TYPE_NAMES[173] = "Souterrain - Falaise de tuiles carrées"
  TERRAIN_TYPE_NAMES[174] = "Village - Falaise"
  TERRAIN_TYPE_NAMES[175] = "Village - Falaise d'herbe épaisse"
  TERRAIN_TYPE_NAMES[176] = "Village en automne - Falaise"
  TERRAIN_TYPE_NAMES[177] = "Village en automne - Falaise d'herbe épaisse"


  maxId = 1
  while true do
    if (maxId > NB_TERRAINS_TOTAL) then
      break
    end
    terrain = TerrainTypeMaxId2TerrainTypeId(maxId)
    S = TERRAIN_TYPE_NAMES[maxId] .. " :    " .. I2S(maxId) .. "    " .. TerrainTypeId2TerrainTypeAsciiString(terrain)
    grassId = TerrainTypeMaxId2GrassId(maxId)
    if (grassId ~= 0) then
      S = S .. "    g" .. I2S(grassId)
    end
    TERRAIN_TYPE_DATA[maxId] = S
    maxId = maxId + 1
  end
end





--library TerrainTypeNamesAndData ends
--library EscaperEffectFunctions:


function String2BodyPartStr(S)
  if (S == "leftHand" or S == "lh") then
    return "hand left"
  end
  if (S == "rightHand" or S == "rh") then
    return "hand right"
  end
  if (S == "leftFoot" or S == "lf") then
    return "foot left"
  end
  if (S == "rightFoot" or S == "rf") then
    return "foot right"
  end
  if (S == "overhead" or S == "oh") then
    return "overhead"
  end
  if (S == "head" or S == "h") then
    return "head"
  end
  if (S == "origin" or S == "o") then
    return "origin"
  end
  if (S == "chest" or S == "c") then
    return "chest"
  end
  return nil
end


function IsBodyPartStr(s)
  return String2BodyPartStr(s) ~= nil
end


function String2EffectStr(str)
  if (str == "light" or str == "l") then
    return "Abilities\\Weapons\\FarseerMissile\\FarseerMissile.mdl"
  end
  if (str == "fire" or str == "f") then
    return "Abilities\\Spells\\Items\\AIfb\\AIfbTarget.mdl"
  end
  if (str == "ice" or str == "i") then
    return "Abilities\\Spells\\Items\\AIob\\AIobTarget.mdl"
  end
  if (str == "corruption" or str == "c") then
    return "Abilities\\Spells\\Items\\OrbCorruption\\OrbCorruption.mdl"
  end
  if (str == "poison" or str == "p") then
    return "Abilities\\Spells\\Items\\OrbVenom\\OrbVenom.mdl"
  end
  if (str == "slow" or str == "s") then
    return "Abilities\\Spells\\Items\\OrbSlow\\OrbSlow.mdl"
  end
  return nil
end


function IsEffectStr(str)
  return String2EffectStr(str) ~= nil
end




--library EscaperEffectFunctions ends
--library ModifyTerrainFunctions:




function GetNbCaseBetween(minX, minY, maxX, maxY)
  return (R2I((maxX - minX) / LARGEUR_CASE) * R2I((maxY - minY) / LARGEUR_CASE))
end


function ChangeTerrainType(x, l__y, terrainTypeId)
  SetTerrainType(x, l__y, terrainTypeId, -1, 1, 0)
end


function ChangeTerrainBetween(terrainType, x1, y1, x2, y2)
  local minX = RMinBJ(x1, x2)
  local minY = RMinBJ(y1, y2)
  local maxX = RMaxBJ(x1, x2)
  local maxY = RMaxBJ(y1, y2)

  local r = nil
  local x = nil
  local l__y = nil

  --call Text.A( "nbCases == " + I2S( GetNbCaseBetween( minX, minY, maxX, maxY ) ) )
  --call Text.A( "changing terrain to : " + TerrainTypeId2TerrainTypeAsciiString( terrainType ) )

  if (GetNbCaseBetween(minX, minY, maxX, maxY) > NB_MAX_TILES_MODIFIED) then
    return false
  end
  if (not CanUseTerrain(terrainType)) then
    return false
  end

  x = minX
  l__y = minY

  while true do
    if (l__y > maxY) then
      break
    end
    while true do
      if (x > maxX) then
        break
      end
      SetTerrainType(((x) * 1.0), ((l__y) * 1.0), (terrainType), -1, 1, 0)
      -- INLINED!!
      x = x + LARGEUR_CASE
    end
    x = minX
    l__y = l__y + LARGEUR_CASE
  end

  --call Text.A( "terrain changed to : " + TerrainTypeId2TerrainTypeAsciiString( GetTerrainType( minX, minY ) ) )

  return true
end






--library ModifyTerrainFunctions ends
--library MonsterCreationFunctions:





function MonsterCreationFunctions__UnitAddRemoveLifeAbility(u, lifeAbility)
  UnitAddAbility(u, lifeAbility)
  SetUnitAbilityLevel(u, lifeAbility, 2)
  UnitRemoveAbility(u, lifeAbility)
end

function UnitAddMaxLife(u, lifeToAdd)
  while true do
    if (lifeToAdd <= 0) then
      break
    end
    if (lifeToAdd >= 10000) then
      MonsterCreationFunctions__UnitAddRemoveLifeAbility(u, MonsterCreationFunctions__ABILITY_10000_LIFE)
      lifeToAdd = lifeToAdd - 10000
    else
      if (lifeToAdd >= 1000) then
        MonsterCreationFunctions__UnitAddRemoveLifeAbility(u, MonsterCreationFunctions__ABILITY_1000_LIFE)
        lifeToAdd = lifeToAdd - 1000
      else
        if (lifeToAdd >= 100) then
          MonsterCreationFunctions__UnitAddRemoveLifeAbility(u, MonsterCreationFunctions__ABILITY_100_LIFE)
          lifeToAdd = lifeToAdd - 100
        else
          if (lifeToAdd >= 10) then
            MonsterCreationFunctions__UnitAddRemoveLifeAbility(u, MonsterCreationFunctions__ABILITY_10_LIFE)
            lifeToAdd = lifeToAdd - 10
          else
            MonsterCreationFunctions__UnitAddRemoveLifeAbility(u, MonsterCreationFunctions__ABILITY_1_LIFE)
            lifeToAdd = lifeToAdd - 1
          end
        end
      end
    end
  end
end

function SetUnitMaxLife(u, newMaxLife)
  local maxLife = R2I(GetUnitState(u, UNIT_STATE_MAX_LIFE))
  if (newMaxLife <= maxLife) then
    return false
  end
  UnitAddMaxLife(u, newMaxLife - maxLife)
  return true
end


function NewImmobileMonsterForPlayer(mt, p, x, l__y, angle)
  local scale = nil
  if (angle == -1) then
    MonsterCreationFunctions__monster = CreateUnit(p, (s__MonsterType_unitTypeId[(mt)]), x, l__y, GetRandomDirectionDeg())
    -- INLINED!!
  else
    MonsterCreationFunctions__monster = CreateUnit(p, (s__MonsterType_unitTypeId[(mt)]), x, l__y, angle)
    -- INLINED!!
  end
  --if (IsHeroUnitId(mt.getUnitTypeId())) then
  --    call Text_A("hero")
  --else
  --    call Text_A("pas hero")
  --endif
  SetUnitUseFood(MonsterCreationFunctions__monster, false)
  if ((s__MonsterType_isClickableB[(mt)])) then
    -- INLINED!!
    SetUnitMaxLife(MonsterCreationFunctions__monster, (s__MonsterType_maxLife[(mt)]))
    -- INLINED!!
  else
    UnitAddAbility(MonsterCreationFunctions__monster, 1097625443)
    UnitAddAbility(MonsterCreationFunctions__monster, MonsterCreationFunctions__ABILITY_ANNULER_VISION)
  end
  UnitAddAbility(MonsterCreationFunctions__monster, (s__MonsterType_immolationSkill[(mt)]))
  -- INLINED!!
  scale = (s__MonsterType_scale[(mt)])
  -- INLINED!!
  if (scale ~= -1) then
    SetUnitScale(MonsterCreationFunctions__monster, scale, scale, scale)
  end
  SetUnitMoveSpeed(MonsterCreationFunctions__monster, (s__MonsterType_speed[(mt)]))
  -- INLINED!!
  if (not MOBS_VARIOUS_COLORS) then
    SetUnitColor(MonsterCreationFunctions__monster, ConvertPlayerColor(12))
  end
  UnitRemoveAbility(MonsterCreationFunctions__monster, MonsterCreationFunctions__ATTACK_SKILL)
  UnitRemoveType(MonsterCreationFunctions__monster, UNIT_TYPE_PEON)
  if ((s__MonsterType_height[(mt)]) ~= -1) then
    -- INLINED!!
    UnitAddAbility(MonsterCreationFunctions__monster, MonsterCreationFunctions__ABILITY_FORME_CORBEAU)
    SetUnitFlyHeight(MonsterCreationFunctions__monster, (s__MonsterType_height[(mt)]), 0)
    -- INLINED!!
  end
  return MonsterCreationFunctions__monster
end

function NewImmobileMonster(mt, x, l__y, angle)
  local p = nil
  if ((s__MonsterType_isClickableB[(mt)])) then
    -- INLINED!!
    p = ENNEMY_PLAYER
  else
    p = GetCurrentMonsterPlayer()
  end
  return NewImmobileMonsterForPlayer(mt, p, x, l__y, angle)
end


function NewPatrolMonster(mt, x1, y1, x2, y2)
  local angle = bj_RADTODEG * Atan2(y1 - y2, x1 - x2)
  MonsterCreationFunctions__monster = NewImmobileMonster(mt, x1, y1, angle)
  IssuePointOrder(MonsterCreationFunctions__monster, "patrol", x2, y2)
  return MonsterCreationFunctions__monster
end





--library MonsterCreationFunctions ends
--library SaveMonsterTypes:



function StartSaveMonsterTypes()
  s__MonsterTypeArray_saveInCache(udg_monsterTypes)
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("monster types saved"))
  -- INLINED!!
  StartSaveCasterTypes()
end




--library SaveMonsterTypes ends
--library TerrainType:



function s__TerrainType_setOrderId(this, orderId)
  s__TerrainType_orderId[this] = orderId
  return ((this))
end

function s__TerrainType_getOrderId(this)
  return s__TerrainType_orderId[this]
end

function s__TerrainType_setCliffClassId(this, cliffClassId)
  if (cliffClassId == 1 or cliffClassId == 2) then
    s__TerrainType_cliffClassId[this] = cliffClassId
  end
  return ((this))
end

function s__TerrainType_getCliffClassId(this)
  return s__TerrainType_cliffClassId[this]
end

function s__TerrainType_setType(this, terrainTypeId)
  s__TerrainType_terrainTypeId[this] = terrainTypeId
end

function s__TerrainType_setLabel(this, label)
  s__TerrainType_label[this] = label
end

function s__TerrainType_setAlias(this, theAlias)
  s__TerrainType_theAlias[this] = theAlias
  return ((this))
end

function s__TerrainType_getTerrainTypeId(this)
  return s__TerrainType_terrainTypeId[this]
end

function s__TerrainType_setTerrainTypeId(this, terrainTypeId)
  if (not CanUseTerrain(terrainTypeId)) then
    return false
  end
  s__TerrainType_terrainTypeId[this] = terrainTypeId
  return true
end

function s__TerrainType_getKind(this)
  return s__TerrainType_kind[this]
end

function s__TerrainType_onDestroy(this)
  s__TerrainType_label[this] = nil
  s__TerrainType_theAlias[this] = nil
  s__TerrainType_kind[this] = nil
  s__TerrainType_terrainTypeId[this] = 0
end

function s__TerrainType_displayForPlayer(this, p)
  local order = nil
  local space = "   "
  local slide = nil
  local walk = nil
  local death = nil
  local displayCanTurn = nil
  local display = nil
  if (s__TerrainType_orderId[this] ~= 0) then
    order = " (order " .. I2S(s__TerrainType_orderId[this]) .. ")"
  else
    order = ""
  end
  if (s__TerrainType_kind[this] == "slide") then
    slide = ((this))
    if ((s__TerrainTypeSlide_canTurn[(slide)])) then
      -- INLINED!!
      displayCanTurn = "can turn"
    else
      displayCanTurn = "can't turn"
    end
    display = COLOR_TERRAIN_SLIDE .. s__TerrainType_label[this] .. " " .. s__TerrainType_theAlias[this] .. order .. " : '" .. Ascii2String(s__TerrainType_terrainTypeId[this]) .. "'" .. space
    display = display .. I2S(R2I((s__TerrainTypeSlide_slideSpeed[(slide)]) / SLIDE_PERIOD)) .. space .. displayCanTurn
    -- INLINED!!
  else
    if (s__TerrainType_kind[this] == "walk") then
      walk = ((this))
      display = COLOR_TERRAIN_WALK .. s__TerrainType_label[this] .. " " .. s__TerrainType_theAlias[this] .. order .. " : '" .. Ascii2String(s__TerrainType_terrainTypeId[this]) .. "'" .. space
      display = display .. I2S(R2I((s__TerrainTypeWalk_walkSpeed[(walk)])))
      -- INLINED!!
    else
      if (s__TerrainType_kind[this] == "death") then
        death = ((this))
        display = COLOR_TERRAIN_DEATH .. s__TerrainType_label[this] .. " " .. s__TerrainType_theAlias[this] .. order .. " : '" .. Ascii2String(s__TerrainType_terrainTypeId[this]) .. "'" .. space
        display = display .. R2S((s__TerrainTypeDeath_timeToKill[(death)])) .. space .. (s__TerrainTypeDeath_killingEffectStr[(death)]) .. space .. I2S(R2I((s__TerrainTypeDeath_toleranceDist[(death)])))
        -- INLINED!!
      end
    end
  end
  --display cliff class
  display = display .. space .. "cliff" .. I2S(s__TerrainType_cliffClassId[this])
  Text___ForPlayer_timed_withColorCode((p), ((TERRAIN_DATA_DISPLAY_TIME) * 1.0), NORMAL_TEXT_COLORCODE, (display))
  -- INLINED!!
end

function s__TerrainType_toString(this)
  local slide = nil
  local walk = nil
  local death = nil
  local str = s__TerrainType_label[this] .. CACHE_SEPARATEUR_PARAM .. s__TerrainType_theAlias[this] .. CACHE_SEPARATEUR_PARAM .. I2S(s__TerrainType_orderId[this]) .. CACHE_SEPARATEUR_PARAM
  str = str .. s__TerrainType_kind[this] .. CACHE_SEPARATEUR_PARAM .. Ascii2String(s__TerrainType_terrainTypeId[this]) .. CACHE_SEPARATEUR_PARAM .. I2S(s__TerrainType_cliffClassId[this]) .. CACHE_SEPARATEUR_PARAM
  if (s__TerrainType_kind[this] == "slide") then
    slide = ((this))
    str = str .. I2S(R2I((s__TerrainTypeSlide_slideSpeed[(slide)]) / SLIDE_PERIOD)) .. CACHE_SEPARATEUR_PARAM .. B2S((s__TerrainTypeSlide_canTurn[(slide)]))
    -- INLINED!!
  else
    if (s__TerrainType_kind[this] == "walk") then
      walk = ((this))
      str = str .. I2S(R2I((s__TerrainTypeWalk_walkSpeed[(walk)])))
      -- INLINED!!
    else
      if (s__TerrainType_kind[this] == "death") then
        death = ((this))
        str = str .. (s__TerrainTypeDeath_killingEffectStr[(death)]) .. CACHE_SEPARATEUR_PARAM
        -- INLINED!!
        str = str .. R2S((s__TerrainTypeDeath_timeToKill[(death)])) .. CACHE_SEPARATEUR_PARAM
        -- INLINED!!
        str = str .. R2S((s__TerrainTypeDeath_toleranceDist[(death)]))
        -- INLINED!!
      end
    end
  end
  return str
end



--library TerrainType ends
--library TerrainTypeFromString:



function TerrainTypeString2TerrainTypeId(str)
  if (IsPositiveInteger(str)) then
    return TerrainTypeMaxId2TerrainTypeId(S2I(str))
  end
  if (SubStringBJ(str, 1, 1) == "g" and IsPositiveInteger(SubStringBJ(str, 2, StringLength(str)))) then
    return (TerrainTypeMaxId2TerrainTypeId(TerrainTypeGrassId2MaxId((S2I(SubStringBJ(str, 2, StringLength(str)))))))
    -- INLINED!!
  end
  if (StringLength(str) == 6 and SubStringBJ(str, 1, 1) == "'" and SubStringBJ(str, 6, 6) == "'") then
    return TerrainTypeAsciiString2TerrainTypeId(str)
  end
  if (str == "x") then
    return (TerrainTypeMaxId2TerrainTypeId(GetRandomInt(1, NB_TERRAINS_TOTAL)))
    -- INLINED!!
  end
  if (str == "xnk") then
    return GetRandomNotUsedTerrain()
  end
  if (str == "xak") then
    return (udg_used_terrain_types[GetRandomInt(0, udg_nb_used_terrains - 1)])
    -- INLINED!!
  end
  return 0
end





--library TerrainTypeFromString ends
--library AllTerrainFunctions:


--terrain functions

--function IsTerrainAlreadyUsed takes integer terrainType returns boolean
--function IsTerrainsLimitNumberReached takes nothing returns boolean
--function AddNewTerrain takes integer newTerrain returns boolean
--function GetRandomTerrain takes nothing returns integer
--function GetRandomUsedTerrain takes nothing returns integer
--function GetRandomNotUsedTerrain takes nothing returns integer
--function GetTerrainName takes integer terrain returns string
--function GetTerrainData takes integer terrain returns string
--function DisplayTerrainInfoToPlayer takes player p, real x, real y returns nothing


--conversion

--function TerrainTypeId2TerrainTypeAsciiString takes integer terrainType returns string
--function TerrainTypeAsciiString2TerrainTypeId takes string terrainTypeAsciiString returns integer
--function TerrainTypeMaxId2TerrainTypeId takes integer maxId returns integer
--function TerrainTypeId2TerrainTypeMaxId takes integer terrainTypeId returns integer
--function TerrainTypeGrassId2MaxId takes integer grassId returns integer
--function TerrainTypeMaxId2GrassId takes integer maxId returns integer
--function TerrainTypeGrassId2TerrainTypeId takes integer grassId returns integer
--function TerrainTypeString2Terrain takes string str returns integer





--library AllTerrainFunctions ends
--library CasterShot:





function CasterShot__CasterShot_Actions()
  local shot = (LoadInteger(CasterShot__shotsHashtable, 0, GetHandleId(GetTriggeringTrigger())))
  s__CasterShot_x[shot] = s__CasterShot_x[shot] + s__CasterShot_diffX[shot]
  s__CasterShot_y[shot] = s__CasterShot_y[shot] + s__CasterShot_diffY[shot]
  if (s__CasterShot_x[shot] >= MAP_MIN_X and s__CasterShot_x[shot] <= MAP_MAX_X) then
    SetUnitX(s__CasterShot_unite[shot], s__CasterShot_x[shot])
  end
  if (s__CasterShot_y[shot] >= MAP_MIN_Y and s__CasterShot_y[shot] <= MAP_MAX_Y) then
    SetUnitY(s__CasterShot_unite[shot], s__CasterShot_y[shot])
  end
  s__CasterShot_nbTeleportationsRestantes[shot] = s__CasterShot_nbTeleportationsRestantes[shot] - 1
  if (s__CasterShot_nbTeleportationsRestantes[shot] == 0) then
    sc__CasterShot_deallocate(shot)
  end
end




function s__CasterShot_create(monsterType, Xdep, Ydep, angle, speed, portee)
  local t = s__CasterShot__allocate()
  s__CasterShot_x[t] = Xdep
  s__CasterShot_y[t] = Ydep
  s__CasterShot_diffX[t] = speed * CosBJ(angle) * CasterShot__PERIOD
  s__CasterShot_diffY[t] = speed * SinBJ(angle) * CasterShot__PERIOD
  s__CasterShot_nbTeleportationsRestantes[t] = R2I((portee / speed) / CasterShot__PERIOD)
  s__CasterShot_unite[t] = NewImmobileMonster(monsterType, Xdep, Ydep, angle)
  s__CasterShot_trig[t] = CreateTrigger()
  TriggerRegisterTimerEvent(s__CasterShot_trig[t], CasterShot__PERIOD, true)
  TriggerAddAction(s__CasterShot_trig[t], CasterShot__CasterShot_Actions)
  SaveInteger(CasterShot__shotsHashtable, 0, GetHandleId(s__CasterShot_trig[t]), t)
  return t
end

function s__CasterShot_onDestroy(this)
  RemoveUnit(s__CasterShot_unite[this])
  s__CasterShot_unite[this] = nil
  DestroyTrigger(s__CasterShot_trig[this])
  s__CasterShot_trig[this] = nil
end

--Generated destructor of CasterShot
function s__CasterShot_deallocate(this)
  if this == nil then
    return
  elseif (si__CasterShot_V[this] ~= -1) then
    return
  end
  s__CasterShot_onDestroy(this)
  si__CasterShot_V[this] = si__CasterShot_F
  si__CasterShot_F = this
end


--===========================================================================
function InitCasterShot()
  CasterShot__shotsHashtable = InitHashtable()
end




--library CasterShot ends
--library EscaperEffect:




function s__EscaperEffect_create(efStr, u, bodyPart)
  local e = s__EscaperEffect__allocate()
  s__EscaperEffect_efStr[e] = efStr
  s__EscaperEffect_bodyPart[e] = bodyPart
  s__EscaperEffect_ef[e] = AddSpecialEffectTarget(efStr, u, bodyPart)
  return e
end

function s__EscaperEffect_onDestroy(this)
  if (s__EscaperEffect_ef[this] ~= nil) then
    DestroyEffect(s__EscaperEffect_ef[this])
    s__EscaperEffect_ef[this] = nil
  end
end

--Generated destructor of EscaperEffect
function s__EscaperEffect_deallocate(this)
  if this == nil then
    return
  elseif (si__EscaperEffect_V[this] ~= -1) then
    return
  end
  s__EscaperEffect_onDestroy(this)
  si__EscaperEffect_V[this] = si__EscaperEffect_F
  si__EscaperEffect_F = this
end

function s__EscaperEffect_recreate(this, u)
  s__EscaperEffect_onDestroy(this)
  s__EscaperEffect_ef[this] = AddSpecialEffectTarget(s__EscaperEffect_efStr[this], u, s__EscaperEffect_bodyPart[this])
end

function s__EscaperEffect_remove(this)
  DestroyEffect(s__EscaperEffect_ef[this])
  s__EscaperEffect_ef[this] = nil
end






--library EscaperEffect ends
--library MakeTerrainCopyPasteAction:



function s__MakeTerrainCopyPasteAction_onInit()
  s__MakeTerrainCopyPasteAction_terrainSavesBefore = InitHashtable()
  s__MakeTerrainCopyPasteAction_terrainSavesAfter = InitHashtable()
  s__MakeTerrainCopyPasteAction_terrainSaveLastId = -1
end

function s__MakeTerrainCopyPasteAction_newTerrainSaveId()
  s__MakeTerrainCopyPasteAction_terrainSaveLastId = s__MakeTerrainCopyPasteAction_terrainSaveLastId + 1
  return s__MakeTerrainCopyPasteAction_terrainSaveLastId
end

function s__MakeTerrainCopyPasteAction_removeTerrainSave(terrainSaveId)
  FlushChildHashtable(s__MakeTerrainCopyPasteAction_terrainSavesBefore, terrainSaveId)
  FlushChildHashtable(s__MakeTerrainCopyPasteAction_terrainSavesAfter, terrainSaveId)
end



function s__MakeTerrainCopyPasteAction_create(x1, y1, x2, y2, x3, y3, x4, y4)
  local a = nil
  local xCopy = nil
  local yCopy = nil
  local xPaste = nil
  local yPaste = nil
  local i = nil
  local terrainType = nil
  local terrainTypeId = nil

  local minXcopy = RMinBJ(x1, x2)
  local maxXcopy = RMaxBJ(x1, x2)
  local minYcopy = RMinBJ(y1, y2)
  local maxYcopy = RMaxBJ(y1, y2)

  local diffX = maxXcopy - minXcopy
  local diffY = maxYcopy - minYcopy

  local minXpaste = nil
  local minYpaste = nil
  if (x4 > x3) then
    --direction droite
    minXpaste = x3
  else
    --direction gauche
    minXpaste = x3 - diffX
  end
  if (y4 > y3) then
    --direction haut
    minYpaste = y3
  else
    --direction bas
    minYpaste = y3 - diffY
  end

  if (minXpaste < MAP_MIN_X or minXpaste + diffX > MAP_MAX_X or minYpaste < MAP_MIN_Y or minYpaste + diffY > MAP_MAX_Y) then
    return 0
  end

  a = s__MakeTerrainCopyPasteAction__allocate()
  s__MakeTerrainCopyPasteAction_terrainSaveId[a] = s__MakeTerrainCopyPasteAction_newTerrainSaveId()
  s__MakeTerrainCopyPasteAction_minX[a] = minXpaste
  s__MakeTerrainCopyPasteAction_minY[a] = minYpaste
  s__MakeTerrainCopyPasteAction_maxX[a] = minXpaste + diffX
  s__MakeTerrainCopyPasteAction_maxY[a] = minYpaste + diffY

  i = 0
  xPaste = minXpaste
  yPaste = minYpaste
  xCopy = minXcopy
  yCopy = minYcopy
  while true do
    if (yCopy > maxYcopy) then
      break
    end
    while true do
      if (xCopy > maxXcopy) then
        break
      end
      SaveInteger(s__MakeTerrainCopyPasteAction_terrainSavesBefore, s__MakeTerrainCopyPasteAction_terrainSaveId[a], i, (sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xPaste, yPaste)))
      terrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xCopy, yCopy)
      SaveInteger(s__MakeTerrainCopyPasteAction_terrainSavesAfter, s__MakeTerrainCopyPasteAction_terrainSaveId[a], i, (sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, xCopy, yCopy)))
      if (terrainType ~= 0) then
        terrainTypeId = (s__TerrainType_terrainTypeId[(terrainType)])
        -- INLINED!!
        if (terrainTypeId ~= 0) then
          SetTerrainType(((xPaste) * 1.0), ((yPaste) * 1.0), (terrainTypeId), -1, 1, 0)
          -- INLINED!!
        end
      end
      i = i + 1
      xPaste = xPaste + LARGEUR_CASE
      xCopy = xCopy + LARGEUR_CASE
    end
    xPaste = minXpaste
    xCopy = minXcopy
    yPaste = yPaste + LARGEUR_CASE
    yCopy = yCopy + LARGEUR_CASE
  end

  s__MakeAction_isActionMadeB[a] = true
  return a
end

function s__MakeTerrainCopyPasteAction_onDestroy(this)
  s__MakeTerrainCopyPasteAction_removeTerrainSave(s__MakeTerrainCopyPasteAction_terrainSaveId[this])
end

function s__MakeTerrainCopyPasteAction_terrainModificationCancel(this)
  local terrainType = nil
  local x = nil
  local l__y = nil
  local i = nil

  i = 0
  x = s__MakeTerrainCopyPasteAction_minX[this]
  l__y = s__MakeTerrainCopyPasteAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainCopyPasteAction_maxY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainCopyPasteAction_maxX[this]) then
        break
      end
      terrainType = (LoadInteger(s__MakeTerrainCopyPasteAction_terrainSavesBefore, s__MakeTerrainCopyPasteAction_terrainSaveId[this], i))
      if (terrainType ~= 0 and (s__TerrainType_terrainTypeId[(terrainType)]) ~= 0) then
        -- INLINED!!
        SetTerrainType(((x) * 1.0), ((l__y) * 1.0), ((s__TerrainType_terrainTypeId[(terrainType)])), -1, 1, 0)
        -- INLINED!!
      end
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainCopyPasteAction_minX[this]
    l__y = l__y + LARGEUR_CASE
  end
end

function s__MakeTerrainCopyPasteAction_terrainModificationRedo(this)
  local terrainType = nil
  local x = nil
  local l__y = nil
  local i = nil

  i = 0
  x = s__MakeTerrainCopyPasteAction_minX[this]
  l__y = s__MakeTerrainCopyPasteAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainCopyPasteAction_maxY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainCopyPasteAction_maxX[this]) then
        break
      end
      terrainType = (LoadInteger(s__MakeTerrainCopyPasteAction_terrainSavesAfter, s__MakeTerrainCopyPasteAction_terrainSaveId[this], i))
      if (terrainType ~= 0 and (s__TerrainType_terrainTypeId[(terrainType)]) ~= 0) then
        -- INLINED!!
        SetTerrainType(((x) * 1.0), ((l__y) * 1.0), ((s__TerrainType_terrainTypeId[(terrainType)])), -1, 1, 0)
        -- INLINED!!
      end
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainCopyPasteAction_minX[this]
    l__y = l__y + LARGEUR_CASE
  end
end

function s__MakeTerrainCopyPasteAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainCopyPasteAction_terrainModificationCancel(this)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain copy/paste cancelled"))
  -- INLINED!!
  return true
end

function s__MakeTerrainCopyPasteAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainCopyPasteAction_terrainModificationRedo(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain copy/paste redone"))
  -- INLINED!!
  return true
end





--library MakeTerrainCopyPasteAction ends
--library MakeTerrainCreateAction:



function s__MakeTerrainCreateAction_onInit()
  s__MakeTerrainCreateAction_terrainSaves = InitHashtable()
  s__MakeTerrainCreateAction_terrainSaveLastId = -1
end

function s__MakeTerrainCreateAction_newTerrainSaveId()
  s__MakeTerrainCreateAction_terrainSaveLastId = s__MakeTerrainCreateAction_terrainSaveLastId + 1
  return s__MakeTerrainCreateAction_terrainSaveLastId
end

function s__MakeTerrainCreateAction_removeTerrainSave(terrainSaveId)
  FlushChildHashtable(s__MakeTerrainCreateAction_terrainSaves, terrainSaveId)
end




function s__MakeTerrainCreateAction_create(terrainTypeNew, x1, y1, x2, y2)
  local terrainSave = nil
  local terrainSaveId = nil
  local a = nil
  local x = nil
  local l__y = nil
  local i = nil

  local minX = RMinBJ(x1, x2)
  local maxX = RMaxBJ(x1, x2)
  local minY = RMinBJ(y1, y2)
  local maxY = RMaxBJ(y1, y2)

  if (terrainTypeNew == 0 or (s__TerrainType_terrainTypeId[(terrainTypeNew)]) == 0) then
    -- INLINED!!
    return -1
  end
  if (GetNbCaseBetween(minX, minY, maxX, maxY) > NB_MAX_TILES_MODIFIED) then
    return 0
  end
  a = s__MakeTerrainCreateAction__allocate()
  terrainSave = s__MakeTerrainCreateAction_terrainSaves
  s__MakeTerrainCreateAction_terrainSaveId[a] = s__MakeTerrainCreateAction_newTerrainSaveId()

  i = 0
  x = minX
  l__y = minY
  while true do
    if (l__y > maxY) then
      break
    end
    while true do
      if (x > maxX) then
        break
      end
      SaveInteger(terrainSave, s__MakeTerrainCreateAction_terrainSaveId[a], i, (sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)))
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = minX
    l__y = l__y + LARGEUR_CASE
  end
  terrainSave = nil

  ChangeTerrainBetween((s__TerrainType_terrainTypeId[(terrainTypeNew)]), minX, minY, maxX, maxY)
  -- INLINED!!
  s__MakeTerrainCreateAction_terrainTypeNew[a] = terrainTypeNew
  s__MakeTerrainCreateAction_minX[a] = minX
  s__MakeTerrainCreateAction_maxX[a] = maxX
  s__MakeTerrainCreateAction_minY[a] = minY
  s__MakeTerrainCreateAction_maxY[a] = maxY
  s__MakeAction_isActionMadeB[a] = true
  return a
end

function s__MakeTerrainCreateAction_onDestroy(this)
  FlushChildHashtable(s__MakeTerrainCreateAction_terrainSaves, (s__MakeTerrainCreateAction_terrainSaveId[this]))
  -- INLINED!!
end

function s__MakeTerrainCreateAction_terrainModificationCancel(this)
  local terrainType = nil
  local x = nil
  local l__y = nil
  local i = nil

  i = 0
  x = s__MakeTerrainCreateAction_minX[this]
  l__y = s__MakeTerrainCreateAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainCreateAction_maxY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainCreateAction_maxX[this]) then
        break
      end
      terrainType = (LoadInteger(s__MakeTerrainCreateAction_terrainSaves, s__MakeTerrainCreateAction_terrainSaveId[this], i))
      if (terrainType ~= 0 and (s__TerrainType_terrainTypeId[(terrainType)]) ~= 0) then
        -- INLINED!!
        SetTerrainType(((x) * 1.0), ((l__y) * 1.0), ((s__TerrainType_terrainTypeId[(terrainType)])), -1, 1, 0)
        -- INLINED!!
      end
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainCreateAction_minX[this]
    l__y = l__y + LARGEUR_CASE
  end
end

function s__MakeTerrainCreateAction_terrainModificationRedo(this)
  local terrainTypeId = (s__TerrainType_terrainTypeId[(s__MakeTerrainCreateAction_terrainTypeNew[this])])
  -- INLINED!!
  if (terrainTypeId == 0) then
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, ERROR_TEXT_COLORCODE, ("the terrain type for this action doesn't exist anymore"))
    -- INLINED!!
  else
    ChangeTerrainBetween(terrainTypeId, s__MakeTerrainCreateAction_minX[this], s__MakeTerrainCreateAction_minY[this], s__MakeTerrainCreateAction_maxX[this], s__MakeTerrainCreateAction_maxY[this])
  end
end

function s__MakeTerrainCreateAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainCreateAction_terrainModificationCancel(this)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain creation cancelled"))
  -- INLINED!!
  return true
end

function s__MakeTerrainCreateAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainCreateAction_terrainModificationRedo(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain creation redone"))
  -- INLINED!!
  return true
end





--library MakeTerrainCreateAction ends
--library MakeTerrainHorizontalSymmetryAction:



function s__MakeTerrainHorizontalSymmetryAction_create(x1, y1, x2, y2)
  local a = nil

  local minX = RMinBJ(x1, x2)
  local maxX = RMaxBJ(x1, x2)
  local minY = RMinBJ(y1, y2)
  local maxY = RMaxBJ(y1, y2)

  --pour éviter les ptits décalages
  minX = I2R(R2I(minX / LARGEUR_CASE)) * LARGEUR_CASE
  minY = I2R(R2I(minY / LARGEUR_CASE)) * LARGEUR_CASE
  maxX = I2R(R2I(maxX / LARGEUR_CASE)) * LARGEUR_CASE
  maxY = I2R(R2I(maxY / LARGEUR_CASE)) * LARGEUR_CASE

  if (GetNbCaseBetween(minX, minY, maxX, maxY) > NB_MAX_TILES_MODIFIED) then
    return 0
  end
  a = s__MakeTerrainHorizontalSymmetryAction__allocate()
  s__MakeTerrainHorizontalSymmetryAction_minX[a] = minX
  s__MakeTerrainHorizontalSymmetryAction_minY[a] = minY
  s__MakeTerrainHorizontalSymmetryAction_maxX[a] = maxX
  s__MakeTerrainHorizontalSymmetryAction_maxY[a] = maxY
  sc__MakeTerrainHorizontalSymmetryAction_applySymmetry(a)
  s__MakeAction_isActionMadeB[a] = true
  return a
end

function s__MakeTerrainHorizontalSymmetryAction_applySymmetry(this)
  local i = nil
  local x = nil
  local l__y = nil
  local terrainTypeIds = __jarray(0)

  --sauvegarde du terrain
  i = 0
  x = s__MakeTerrainHorizontalSymmetryAction_minX[this]
  l__y = s__MakeTerrainHorizontalSymmetryAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainHorizontalSymmetryAction_maxY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainHorizontalSymmetryAction_maxX[this]) then
        break
      end
      terrainTypeIds[i] = GetTerrainType(x, l__y)
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainHorizontalSymmetryAction_minX[this]
    l__y = l__y + LARGEUR_CASE
  end

  --application de la symétrie
  i = 0
  x = s__MakeTerrainHorizontalSymmetryAction_maxX[this]
  l__y = s__MakeTerrainHorizontalSymmetryAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainHorizontalSymmetryAction_maxY[this]) then
      break
    end
    while true do
      if (x < s__MakeTerrainHorizontalSymmetryAction_minX[this]) then
        break
      end
      SetTerrainType(((x) * 1.0), ((l__y) * 1.0), (terrainTypeIds[i]), -1, 1, 0)
      -- INLINED!!
      i = i + 1
      x = x - LARGEUR_CASE
    end
    x = s__MakeTerrainHorizontalSymmetryAction_maxX[this]
    l__y = l__y + LARGEUR_CASE
  end
end

function s__MakeTerrainHorizontalSymmetryAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainHorizontalSymmetryAction_applySymmetry(this)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain vertical symmetry cancelled"))
  -- INLINED!!
  return true
end

function s__MakeTerrainHorizontalSymmetryAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainHorizontalSymmetryAction_applySymmetry(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain vertical symmetry redone"))
  -- INLINED!!
  return true
end





--library MakeTerrainHorizontalSymmetryAction ends
--library MakeTerrainVerticalSymmetryAction:



function s__MakeTerrainVerticalSymmetryAction_create(x1, y1, x2, y2)
  local a = nil

  local minX = RMinBJ(x1, x2)
  local maxX = RMaxBJ(x1, x2)
  local minY = RMinBJ(y1, y2)
  local maxY = RMaxBJ(y1, y2)

  --pour éviter les ptits décalages
  minX = I2R(R2I(minX / LARGEUR_CASE)) * LARGEUR_CASE
  minY = I2R(R2I(minY / LARGEUR_CASE)) * LARGEUR_CASE
  maxX = I2R(R2I(maxX / LARGEUR_CASE)) * LARGEUR_CASE
  maxY = I2R(R2I(maxY / LARGEUR_CASE)) * LARGEUR_CASE

  if (GetNbCaseBetween(minX, minY, maxX, maxY) > NB_MAX_TILES_MODIFIED) then
    return 0
  end
  a = s__MakeTerrainVerticalSymmetryAction__allocate()
  s__MakeTerrainVerticalSymmetryAction_minX[a] = minX
  s__MakeTerrainVerticalSymmetryAction_minY[a] = minY
  s__MakeTerrainVerticalSymmetryAction_maxX[a] = maxX
  s__MakeTerrainVerticalSymmetryAction_maxY[a] = maxY
  sc__MakeTerrainVerticalSymmetryAction_applySymmetry(a)
  s__MakeAction_isActionMadeB[a] = true
  return a
end

function s__MakeTerrainVerticalSymmetryAction_applySymmetry(this)
  local i = nil
  local x = nil
  local l__y = nil
  local terrainTypeIds = __jarray(0)

  --sauvegarde du terrain
  i = 0
  x = s__MakeTerrainVerticalSymmetryAction_minX[this]
  l__y = s__MakeTerrainVerticalSymmetryAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainVerticalSymmetryAction_maxY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainVerticalSymmetryAction_maxX[this]) then
        break
      end
      terrainTypeIds[i] = GetTerrainType(x, l__y)
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainVerticalSymmetryAction_minX[this]
    l__y = l__y + LARGEUR_CASE
  end

  --application de la symétrie
  i = 0
  x = s__MakeTerrainVerticalSymmetryAction_minX[this]
  l__y = s__MakeTerrainVerticalSymmetryAction_maxY[this]
  while true do
    if (l__y < s__MakeTerrainVerticalSymmetryAction_minY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainVerticalSymmetryAction_maxX[this]) then
        break
      end
      SetTerrainType(((x) * 1.0), ((l__y) * 1.0), (terrainTypeIds[i]), -1, 1, 0)
      -- INLINED!!
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainVerticalSymmetryAction_minX[this]
    l__y = l__y - LARGEUR_CASE
  end
end

function s__MakeTerrainVerticalSymmetryAction_cancel(this)
  if (not s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainVerticalSymmetryAction_applySymmetry(this)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain vertical symmetry cancelled"))
  -- INLINED!!
  return true
end

function s__MakeTerrainVerticalSymmetryAction_redo(this)
  if (s__MakeAction_isActionMadeB[this]) then
    return false
  end
  s__MakeTerrainVerticalSymmetryAction_applySymmetry(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain vertical symmetry redone"))
  -- INLINED!!
  return true
end





--library MakeTerrainVerticalSymmetryAction ends
--library MonsterSpawn:


function MonsterSpawn__RemoveEnumMonster()
  RemoveUnit(GetEnumUnit())
end


function MonsterSpawn__MonsterStartMovement()
  local mobTimer = GetExpiredTimer()
  local ms = (LoadInteger(MonsterSpawn__ht, 1, GetHandleId(mobTimer)))
  local mobUnit = LoadUnitHandle(MonsterSpawn__ht, 2, GetHandleId(mobTimer))
  sc__MonsterSpawn_startMobMovement(ms, mobUnit)
  UnitAddAbility(mobUnit, 1097625443)
  DestroyTimer(mobTimer)
  mobUnit = nil
  mobTimer = nil
end

function MonsterSpawn__MonsterSpawn_Actions()
  local ms = (LoadInteger(MonsterSpawn__ht, 0, GetHandleId(GetTriggeringTrigger())))
  local mobUnit = sc__MonsterSpawn_createMob(ms)
  local mobTimer = CreateTimer()
  SaveInteger(MonsterSpawn__ht, 1, GetHandleId(mobTimer), (ms))
  SaveUnitHandle(MonsterSpawn__ht, 2, GetHandleId(mobTimer), mobUnit)
  TimerStart(mobTimer, MonsterSpawn__DELAY_BETWEEN_SPAWN_AND_MOVEMENT, false, MonsterSpawn__MonsterStartMovement)
  SetUnitOwner(mobUnit, ENNEMY_PLAYER, false)
  ShowUnit(mobUnit, false)
  UnitRemoveAbility(mobUnit, 1097625443)
  GroupAddUnit(s__MonsterSpawn_monsters[ms], mobUnit)
  mobUnit = nil
  mobTimer = nil
end

function MonsterSpawn__UnspawMonster_Actions()
  local ms = (LoadInteger(MonsterSpawn__ht, 0, GetHandleId(GetTriggeringTrigger())))
  if (IsUnitInGroup(GetTriggerUnit(), s__MonsterSpawn_monsters[ms])) then
    GroupRemoveUnit(s__MonsterSpawn_monsters[ms], GetTriggerUnit())
    RemoveUnit(GetTriggerUnit())
  end
end



function s__MonsterSpawn_onInit()
  MonsterSpawn__ht = InitHashtable()
  --0, tSpawn --> MonsterSpawn
  --0, tUnspawn --> MonsterSpawn
  --1, timer --> MonsterSpawn
  --2, timer --> unité mob
end




function s__MonsterSpawn_getLabel(this)
  return s__MonsterSpawn_label[this]
end


function s__MonsterSpawn_desactivate(this)
  if (s__MonsterSpawn_unspawnReg[this] ~= nil) then
    RemoveRegion(s__MonsterSpawn_unspawnReg[this])
    s__MonsterSpawn_unspawnReg[this] = nil
  end
  if (s__MonsterSpawn_tSpawn[this] ~= nil) then
    DestroyTrigger(s__MonsterSpawn_tSpawn[this])
    s__MonsterSpawn_tSpawn[this] = nil
  end
  if (s__MonsterSpawn_tUnspawn[this] ~= nil) then
    DestroyTrigger(s__MonsterSpawn_tUnspawn[this])
    s__MonsterSpawn_tUnspawn[this] = nil
  end
  if (s__MonsterSpawn_monsters[this] ~= nil) then
    ForGroup(s__MonsterSpawn_monsters[this], MonsterSpawn__RemoveEnumMonster)
    DestroyGroup(s__MonsterSpawn_monsters[this])
    s__MonsterSpawn_monsters[this] = nil
  end
end

function s__MonsterSpawn_createUnspawnReg(this)
  local r = nil
  local x1 = nil
  local y1 = nil
  local x2 = nil
  local y2 = nil
  --leftToRight, upToDown, rightToLeft, downToUp
  if (s__MonsterSpawn_sens[this] == "leftToRight") then
    x1 = s__MonsterSpawn_maxX[this]
    x2 = s__MonsterSpawn_maxX[this]
    y1 = s__MonsterSpawn_minY[this] - MonsterSpawn__DECALAGE_UNSPAWN
    y2 = s__MonsterSpawn_maxY[this] + MonsterSpawn__DECALAGE_UNSPAWN
  elseif (s__MonsterSpawn_sens[this] == "upToDown") then
    x1 = s__MonsterSpawn_minX[this] - MonsterSpawn__DECALAGE_UNSPAWN
    x2 = s__MonsterSpawn_maxX[this] + MonsterSpawn__DECALAGE_UNSPAWN
    y1 = s__MonsterSpawn_minY[this]
    y2 = s__MonsterSpawn_minY[this]
  elseif (s__MonsterSpawn_sens[this] == "rightToLeft") then
    x1 = s__MonsterSpawn_minX[this]
    x2 = s__MonsterSpawn_minX[this]
    y1 = s__MonsterSpawn_minY[this] - MonsterSpawn__DECALAGE_UNSPAWN
    y2 = s__MonsterSpawn_maxY[this] + MonsterSpawn__DECALAGE_UNSPAWN
  else
    --downToUp
    x1 = s__MonsterSpawn_minX[this] - MonsterSpawn__DECALAGE_UNSPAWN
    x2 = s__MonsterSpawn_maxX[this] + MonsterSpawn__DECALAGE_UNSPAWN
    y1 = s__MonsterSpawn_maxY[this]
    y2 = s__MonsterSpawn_maxY[this]
  end
  r = Rect(x1, y1, x2, y2)
  s__MonsterSpawn_unspawnReg[this] = CreateRegion()
  RegionAddRect(s__MonsterSpawn_unspawnReg[this], r)
  RemoveRect(r)
end

function s__MonsterSpawn_activate(this)
  s__MonsterSpawn_monsters[this] = CreateGroup()
  s__MonsterSpawn_tSpawn[this] = CreateTrigger()
  SaveInteger(MonsterSpawn__ht, 0, GetHandleId(s__MonsterSpawn_tSpawn[this]), (this))
  TriggerRegisterTimerEvent(s__MonsterSpawn_tSpawn[this], 1 / s__MonsterSpawn_frequence[this], true)
  TriggerAddAction(s__MonsterSpawn_tSpawn[this], MonsterSpawn__MonsterSpawn_Actions)
  s__MonsterSpawn_createUnspawnReg(this)
  s__MonsterSpawn_tUnspawn[this] = CreateTrigger()
  SaveInteger(MonsterSpawn__ht, 0, GetHandleId(s__MonsterSpawn_tUnspawn[this]), (this))
  TriggerRegisterEnterRegion(s__MonsterSpawn_tUnspawn[this], s__MonsterSpawn_unspawnReg[this], nil)
  TriggerAddAction(s__MonsterSpawn_tUnspawn[this], MonsterSpawn__UnspawMonster_Actions)
end

function s__MonsterSpawn_onDestroy(this)
  s__MonsterSpawn_desactivate(this)
  s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[(s__Level_monsterSpawns[s__MonsterSpawn_level[this]])] + (s__MonsterSpawn_arrayId[this])] = 0
  -- INLINED!!
end

--Generated destructor of MonsterSpawn
function s__MonsterSpawn_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterSpawn_V[this] ~= -1) then
    return
  end
  s__MonsterSpawn_onDestroy(this)
  si__MonsterSpawn_V[this] = si__MonsterSpawn_F
  si__MonsterSpawn_F = this
end

function s__MonsterSpawn_create(label, mt, sens, frequence, x1, y1, x2, y2)
  local ms = s__MonsterSpawn__allocate()
  s__MonsterSpawn_label[ms] = label
  s__MonsterSpawn_mt[ms] = mt
  s__MonsterSpawn_sens[ms] = sens
  s__MonsterSpawn_frequence[ms] = frequence
  s__MonsterSpawn_minX[ms] = RMinBJ(x1, x2)
  s__MonsterSpawn_minY[ms] = RMinBJ(y1, y2)
  s__MonsterSpawn_maxX[ms] = RMaxBJ(x1, x2)
  s__MonsterSpawn_maxY[ms] = RMaxBJ(y1, y2)
  return ms
end

function s__MonsterSpawn_startMobMovement(this, mobUnit)
  local p = nil
  local x1 = nil
  local y1 = nil
  local x2 = nil
  local y2 = nil
  --leftToRight, upToDown, rightToLeft, downToUp
  if (s__MonsterSpawn_sens[this] == "leftToRight") then
    x1 = s__MonsterSpawn_minX[this]
    x2 = s__MonsterSpawn_maxX[this] + MonsterSpawn__DECALAGE_UNSPAWN
    y1 = GetRandomReal(s__MonsterSpawn_minY[this], s__MonsterSpawn_maxY[this])
    y2 = y1
  elseif (s__MonsterSpawn_sens[this] == "upToDown") then
    x1 = GetRandomReal(s__MonsterSpawn_minX[this], s__MonsterSpawn_maxX[this])
    x2 = x1
    y1 = s__MonsterSpawn_maxY[this]
    y2 = s__MonsterSpawn_minY[this] - MonsterSpawn__DECALAGE_UNSPAWN
  elseif (s__MonsterSpawn_sens[this] == "rightToLeft") then
    x1 = s__MonsterSpawn_maxX[this]
    x2 = s__MonsterSpawn_minX[this] - MonsterSpawn__DECALAGE_UNSPAWN
    y1 = GetRandomReal(s__MonsterSpawn_minY[this], s__MonsterSpawn_maxY[this])
    y2 = y1
  else
    --downToUp
    x1 = GetRandomReal(s__MonsterSpawn_minX[this], s__MonsterSpawn_maxX[this])
    x2 = x1
    y1 = s__MonsterSpawn_minY[this]
    y2 = s__MonsterSpawn_maxY[this] + MonsterSpawn__DECALAGE_UNSPAWN
  end
  SetUnitX(mobUnit, x1)
  SetUnitY(mobUnit, y1)
  if ((s__MonsterType_isClickableB[(s__MonsterTypeArray_monsterUnit2MonsterType(udg_monsterTypes, mobUnit))])) then
    -- INLINED!!
    p = ENNEMY_PLAYER
  else
    p = GetCurrentMonsterPlayer()
  end
  SetUnitOwner(mobUnit, p, MOBS_VARIOUS_COLORS)
  ShowUnit(mobUnit, true)
  IssuePointOrder(mobUnit, "move", x2, y2)
end

function s__MonsterSpawn_createMob(this)
  local angle = nil
  --leftToRight, upToDown, rightToLeft, downToUp
  if (s__MonsterSpawn_sens[this] == "leftToRight") then
    angle = 180
  elseif (s__MonsterSpawn_sens[this] == "upToDown") then
    angle = 90
  elseif (s__MonsterSpawn_sens[this] == "rightToLeft") then
    angle = 0
  else
    --downToUp
    angle = -90
  end
  return NewImmobileMonsterForPlayer(s__MonsterSpawn_mt[this], ENNEMY_PLAYER, (s__MonsterSpawn_minX[this] + s__MonsterSpawn_maxX[this]) / 2, (s__MonsterSpawn_minY[this] + s__MonsterSpawn_maxY[this]) / 2, angle)
end

function s__MonsterSpawn_setLabel(this, newLabel)
  s__MonsterSpawn_label[this] = newLabel
end

function s__MonsterSpawn_setMonsterType(this, mt)
  s__MonsterSpawn_mt[this] = mt
end

function s__MonsterSpawn_setSens(this, sens)
  s__MonsterSpawn_sens[this] = sens
  s__MonsterSpawn_desactivate(this)
  s__MonsterSpawn_activate(this)
end

function s__MonsterSpawn_setFrequence(this, frequence)
  s__MonsterSpawn_frequence[this] = frequence
  DestroyTrigger(s__MonsterSpawn_tSpawn[this])
  s__MonsterSpawn_tSpawn[this] = CreateTrigger()
  SaveInteger(MonsterSpawn__ht, 0, GetHandleId(s__MonsterSpawn_tSpawn[this]), (this))
  TriggerRegisterTimerEvent(s__MonsterSpawn_tSpawn[this], 1 / s__MonsterSpawn_frequence[this], true)
  TriggerAddAction(s__MonsterSpawn_tSpawn[this], MonsterSpawn__MonsterSpawn_Actions)
end

function s__MonsterSpawn_displayForPlayer(this, p)
  local display = udg_colorCode[GREY] .. s__MonsterSpawn_label[this] .. " : " .. s__MonsterType_label[s__MonsterSpawn_mt[this]] .. "   " .. s__MonsterSpawn_sens[this] .. "   " .. R2S(s__MonsterSpawn_frequence[this])
  Text___ForPlayer_timed_withColorCode((p), ((TERRAIN_DATA_DISPLAY_TIME) * 1.0), NORMAL_TEXT_COLORCODE, (display))
  -- INLINED!!
end

function s__MonsterSpawn_toString(this)
  local str = s__MonsterSpawn_label[this] .. CACHE_SEPARATEUR_PARAM
  if (s__MonsterType_theAlias[s__MonsterSpawn_mt[this]] ~= nil and s__MonsterType_theAlias[s__MonsterSpawn_mt[this]] ~= "") then
    str = str .. s__MonsterType_theAlias[s__MonsterSpawn_mt[this]] .. CACHE_SEPARATEUR_PARAM
  else
    str = str .. s__MonsterType_label[s__MonsterSpawn_mt[this]] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. s__MonsterSpawn_sens[this] .. CACHE_SEPARATEUR_PARAM .. R2S(s__MonsterSpawn_frequence[this]) .. CACHE_SEPARATEUR_PARAM
  str = str .. I2S(R2I(s__MonsterSpawn_minX[this])) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(s__MonsterSpawn_minY[this])) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(s__MonsterSpawn_maxX[this])) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(s__MonsterSpawn_maxY[this]))
  return str
end




--library MonsterSpawn ends
--library SaveWater:






--save water heights
function SaveWater___SaveWaterHeights_Actions()
  local x = nil
  if (SaveWater___y <= MAP_MAX_Y) then
    x = MAP_MIN_X
    while true do
      if (x > MAP_MAX_X) then
        break
      end
      s__StringArrayForCache_push(stringArrayForCache, I2S(R2I(GetSurfaceZ(x, SaveWater___y))))
      x = x + LARGEUR_CASE
    end
    SaveWater___y = SaveWater___y + LARGEUR_CASE
  else
    DisableTrigger(GetTriggeringTrigger())
    s__StringArrayForCache_writeInCache(stringArrayForCache)
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("water heights saved"))
    -- INLINED!!
    StartSaveMonsterTypes()
  end
end


function StartSaveWaterHeights()
  SaveWater___y = MAP_MIN_Y
  stringArrayForCache = s__StringArrayForCache_create("terrain", "waterHeights", true)
  TriggerClearActions(trigSaveMapInCache)
  TriggerAddAction(trigSaveMapInCache, SaveWater___SaveWaterHeights_Actions)
  EnableTrigger(trigSaveMapInCache)
end



--save water presence



function StartSaveWater()
  StartSaveWaterHeights()


end



--library SaveWater ends
--library TerrainTypeDeathFunctions:




function TerrainKillTimer2Escaper(theTimer)
  local terrainKillTrigger = GetTriggeringTrigger()
  local terrainTypeDeathMaxId = s__TerrainTypeArray_numberOfDeath[udg_terrainTypes] - 1
  local terrainTypeDeathId = nil
  local escaperId = 0

  terrainTypeDeathId = 0
  while true do
    if (terrainTypeDeathId > terrainTypeDeathMaxId) then
      break
    end
    escaperId = 0
    while true do
      if (escaperId > 11) then
        break
      end
      if (theTimer == sc__TerrainTypeDeath_getTimer((s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[(udg_terrainTypes)] + (terrainTypeDeathId)]), escaperId)) then
        -- INLINED!!
        return (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (escaperId)])
        -- INLINED!!
      end
      escaperId = escaperId + 1
    end
    terrainTypeDeathId = terrainTypeDeathId + 1
  end

  return 0
end


function DeathTerrainKillEscaper_Actions()
  local escaper = TerrainKillTimer2Escaper(GetExpiredTimer())
  if (escaper == 0) then
    return
  end
  sc__Escaper_pause(escaper, false)
  sc__Escaper_destroyTerrainKillEffect(escaper)
  if (s__Escaper_currentLevelTouchTerrainDeath[escaper] == sc__LevelArray_getCurrentLevel(udg_levels)) then
    sc__Escaper_kill(escaper)
  else
    if ((IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      -- INLINED!!
      sc__Escaper_enableCheckTerrain(escaper, true)
    end
  end
end



--library TerrainTypeDeathFunctions ends
--library TerrainTypeSlide:




function s__TerrainTypeSlide_create(label, terrainTypeId, slideSpeed, canTurn)
  local tt = nil
  if (not CanUseTerrain(terrainTypeId)) then
    return 0
  end
  tt = s__TerrainTypeSlide__allocate()
  s__TerrainType_label[tt] = label
  s__TerrainType_theAlias[tt] = nil
  s__TerrainType_terrainTypeId[tt] = terrainTypeId
  s__TerrainType_kind[tt] = "slide"
  s__TerrainTypeSlide_slideSpeed[tt] = slideSpeed * SLIDE_PERIOD
  s__TerrainTypeSlide_canTurn[tt] = canTurn
  s__TerrainType_orderId[tt] = 0
  s__TerrainType_cliffClassId[tt] = 1
  return tt
end

function s__TerrainTypeSlide_getSlideSpeed(this)
  return s__TerrainTypeSlide_slideSpeed[this]
end

function s__TerrainTypeSlide_setSlideSpeed(this, slideSpeed)
  s__TerrainTypeSlide_slideSpeed[this] = slideSpeed * SLIDE_PERIOD
end

function s__TerrainTypeSlide_getCanTurn(this)
  return s__TerrainTypeSlide_canTurn[this]
end

function s__TerrainTypeSlide_setCanTurn(this, canTurn)
  if (canTurn == s__TerrainTypeSlide_canTurn[this]) then
    return false
  end
  s__TerrainTypeSlide_canTurn[this] = canTurn
  return true
end





--library TerrainTypeSlide ends
--library TerrainTypeWalk:



function s__TerrainTypeWalk_create(label, terrainTypeId, walkSpeed)
  local tt = nil
  if (not CanUseTerrain(terrainTypeId)) then
    return 0
  end
  tt = s__TerrainTypeWalk__allocate()
  s__TerrainType_label[tt] = label
  s__TerrainType_theAlias[tt] = nil
  s__TerrainType_terrainTypeId[tt] = terrainTypeId
  s__TerrainTypeWalk_walkSpeed[tt] = walkSpeed
  s__TerrainType_kind[tt] = "walk"
  s__TerrainType_orderId[tt] = 0
  s__TerrainType_cliffClassId[tt] = 1
  return tt
end

function s__TerrainTypeWalk_getWalkSpeed(this)
  return s__TerrainTypeWalk_walkSpeed[this]
end

function s__TerrainTypeWalk_setWalkSpeed(this, walkSpeed)
  s__TerrainTypeWalk_walkSpeed[this] = walkSpeed
end






--library TerrainTypeWalk ends
--library ChangeAllTerrains:





function ChangeAllTerrains_Actions()
  local x = nil
  local terrainTypeId = nil
  local done = nil
  local j = nil
  --local integer i = 1
  --loop
  --exitwhen (i > TERRAIN_MODIFYING_NB_LINES_TO_DO)
  x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    terrainTypeId = GetTerrainType(x, y)
    done = false
    j = 0
    while true do
      if (j > ChangeAllTerrains___lastTerrainArrayId or done) then
        break
      end
      if (terrainTypeId == ChangeAllTerrains___oldTerrainTypes[j]) then
        SetTerrainType(((x) * 1.0), ((y) * 1.0), (ChangeAllTerrains___newTerrainTypes[j]), -1, 1, 0)
        -- INLINED!!
        done = true
      end
      j = j + 1
    end
    x = x + LARGEUR_CASE
  end
  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    DisableTrigger(GetTriggeringTrigger())
    RestartEnabledCheckTerrainTriggers()
    terrainModifyWorking = false
    return
  end
  --set i = i + 1
  --endloop
end


function ChangeAllTerrains___StartTerrainModifying()
  y = MAP_MIN_Y
  StopEnabledCheckTerrainTriggers()
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, ChangeAllTerrains_Actions)
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
end


function ChangeAllTerrains___GetRandomTerrain_checked()
  local i = nil
  local rdmTerrain = nil
  local alreadyUsed = nil
  while true do
    if (ChangeAllTerrains___nbNewTerrains >= ChangeAllTerrains___nbNewTerrainsAllowed) then
      rdmTerrain = (udg_used_terrain_types[GetRandomInt(0, udg_nb_used_terrains - 1)])
      -- INLINED!!
    else
      rdmTerrain = (TerrainTypeMaxId2TerrainTypeId(GetRandomInt(1, NB_TERRAINS_TOTAL)))
      -- INLINED!!
    end
    alreadyUsed = false
    i = 0
    while true do
      if (i > ChangeAllTerrains___lastTerrainArrayId or alreadyUsed) then
        break
      end
      alreadyUsed = (ChangeAllTerrains___newTerrainTypes[i] == rdmTerrain)
      i = i + 1
    end
    if (not alreadyUsed) then
      break
    end
  end
  if (not IsTerrainAlreadyUsed(rdmTerrain)) then
    ChangeAllTerrains___nbNewTerrains = ChangeAllTerrains___nbNewTerrains + 1
  end
  return rdmTerrain
end


function ChangeAllTerrains___GetRandomKnownTerrain_checked()
  local i = nil
  local rdmTerrain = nil
  local alreadyUsed = nil
  while true do
    rdmTerrain = (udg_used_terrain_types[GetRandomInt(0, udg_nb_used_terrains - 1)])
    -- INLINED!!
    alreadyUsed = false
    i = 0
    while true do
      if (i > ChangeAllTerrains___lastTerrainArrayId or alreadyUsed) then
        break
      end
      alreadyUsed = (ChangeAllTerrains___newTerrainTypes[i] == rdmTerrain)
      i = i + 1
    end
    if (not alreadyUsed) then
      break
    end
  end
  return rdmTerrain
end


function ChangeAllTerrains___GetRandomNotKnownTerrain_checked()
  local i = nil
  local rdmTerrain = nil
  local alreadyUsed = nil
  while true do
    rdmTerrain = GetRandomNotUsedTerrain()
    alreadyUsed = false
    i = 0
    while true do
      if (i > ChangeAllTerrains___lastTerrainArrayId or alreadyUsed) then
        break
      end
      alreadyUsed = (ChangeAllTerrains___newTerrainTypes[i] == rdmTerrain)
      i = i + 1
    end
    if (not alreadyUsed) then
      break
    end
  end
  return rdmTerrain
end



function ChangeAllTerrains(mode)

  --modes : normal, known, notKnown
  local terrainTypes = __jarray(0)
  local n = nil
  local i = nil

  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return false
  end

  n = 0
  i = 0
  while true do
    terrainTypes[n] = (s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainTypes[n] == 0) then
      break
    end
    ChangeAllTerrains___oldTerrainTypes[n] = (s__TerrainType_terrainTypeId[(terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end
  i = 0
  while true do
    terrainTypes[n] = (s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainTypes[n] == 0) then
      break
    end
    ChangeAllTerrains___oldTerrainTypes[n] = (s__TerrainType_terrainTypeId[(terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end
  i = 0
  while true do
    terrainTypes[n] = (s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainTypes[n] == 0) then
      break
    end
    ChangeAllTerrains___oldTerrainTypes[n] = (s__TerrainType_terrainTypeId[(terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end

  ChangeAllTerrains___lastTerrainArrayId = n - 1
  ChangeAllTerrains___nbNewTerrainsAllowed = NB_MAX_OF_TERRAINS - udg_nb_used_terrains

  if (mode == "normal") then
    ChangeAllTerrains___nbNewTerrains = 0
    i = 0
    while true do
      if (i > ChangeAllTerrains___lastTerrainArrayId) then
        break
      end
      ChangeAllTerrains___newTerrainTypes[i] = ChangeAllTerrains___GetRandomTerrain_checked()
      i = i + 1
    end
  else
    if (mode == "known") then
      i = 0
      while true do
        if (i > ChangeAllTerrains___lastTerrainArrayId) then
          break
        end
        ChangeAllTerrains___newTerrainTypes[i] = ChangeAllTerrains___GetRandomKnownTerrain_checked()
        i = i + 1
      end
    else
      if (mode == "notKnown") then
        ChangeAllTerrains___nbNewTerrains = ChangeAllTerrains___lastTerrainArrayId + 1
        if (ChangeAllTerrains___nbNewTerrains > ChangeAllTerrains___nbNewTerrainsAllowed) then
          return false
        end
        i = 0
        while true do
          if (i > ChangeAllTerrains___lastTerrainArrayId) then
            break
          end
          ChangeAllTerrains___newTerrainTypes[i] = ChangeAllTerrains___GetRandomNotKnownTerrain_checked()
          i = i + 1
        end
      end
    end
  end

  ChangeAllTerrains___StartTerrainModifying()

  i = 0
  while true do
    if (i > ChangeAllTerrains___lastTerrainArrayId) then
      break
    end
    s__TerrainType_setTerrainTypeId(terrainTypes[i], ChangeAllTerrains___newTerrainTypes[i])
    AddNewTerrain(ChangeAllTerrains___newTerrainTypes[i])
    i = i + 1
  end

  --call DisplayTextToForce(GetPlayersAll(), " ")
  --call DisplayTextToForce(GetPlayersAll(), udg_colorCode[TEAL] + "       All terrains changed !")
  --set i = 0
  --loop
  --    exitwhen (i > lastTerrainArrayId)
  --        call Text_A(udg_colorCode[RED] + GetTerrainData(newTerrainTypes[i]))
  --    set i = i + 1
  --endloop

  return true
end





--library ChangeAllTerrains ends
--library ChangeOneTerrain:






function ChangeAppearanceOfOneTerrain_Actions()
  local x = nil
  --local integer i = 1
  --loop
  --exitwhen (i > TERRAIN_MODIFYING_NB_LINES_TO_DO)
  x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    if (GetTerrainType(x, y) == ChangeOneTerrain___oldTerrain) then
      SetTerrainType(((x) * 1.0), ((y) * 1.0), (ChangeOneTerrain___newTerrain), -1, 1, 0)
      -- INLINED!!
    end
    x = x + LARGEUR_CASE
  end
  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    DisableTrigger(GetTriggeringTrigger())
    RestartEnabledCheckTerrainTriggers()
    terrainModifyWorking = false
    return
  end
  --set i = i + 1
  --endloop
end


function ChangeOneTerrain___StartTerrainModifying()
  StopEnabledCheckTerrainTriggers()
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, ChangeAppearanceOfOneTerrain_Actions)
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
end


function ChangeOneTerrain(terrainTypeLabel, newTerrainType)
  local terrainType = nil
  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return nil
  end

  terrainType = sc__TerrainTypeArray_get(udg_terrainTypes, terrainTypeLabel)
  if (terrainType == 0) then
    return nil
  end

  ChangeOneTerrain___oldTerrain = (s__TerrainType_terrainTypeId[(terrainType)])
  -- INLINED!!
  ChangeOneTerrain___newTerrain = TerrainTypeString2TerrainTypeId(newTerrainType)
  if (ChangeOneTerrain___newTerrain == 0) then
    return nil
  end
  if (sc__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(udg_terrainTypes, ChangeOneTerrain___newTerrain)) then
    return nil
  end
  if (not s__TerrainType_setTerrainTypeId(terrainType, ChangeOneTerrain___newTerrain)) then
    return nil
  end

  ChangeOneTerrain___StartTerrainModifying()
  return GetTerrainData(ChangeOneTerrain___newTerrain)
end





--library ChangeOneTerrain ends
--library EscaperEffectArray:




function s__EscaperEffectArray_create()
  local e = s__EscaperEffectArray__allocate()
  s__EscaperEffectArray_lastInstance[e] = -1
  return e
end

function s__EscaperEffectArray_new(this, efStr, u, bodyPart)
  local i = nil
  if (s__EscaperEffectArray_lastInstance[this] >= 19) then
    s__EscaperEffect_deallocate(s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this]])
    i = 0
    while true do
      if (i >= 19) then
        break
      end
      s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + i] = s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + i + 1]
      i = i + 1
    end
  else
    s__EscaperEffectArray_lastInstance[this] = s__EscaperEffectArray_lastInstance[this] + 1
  end
  s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + s__EscaperEffectArray_lastInstance[this]] = s__EscaperEffect_create(efStr, u, bodyPart)
end

function s__EscaperEffectArray_count(this)
  local n = 0
  local i = 0
  while true do
    if (i > s__EscaperEffectArray_lastInstance[this]) then
      break
    end
    if s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + i] ~= 0 then
      n = n + 1
    end
    i = i + 1
  end
  return n
end

function s__EscaperEffectArray_onDestroy(this)
  while true do
    if (s__EscaperEffectArray_lastInstance[this] < 0) then
      break
    end
    s__EscaperEffect_deallocate(s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + s__EscaperEffectArray_lastInstance[this]])
    s__EscaperEffectArray_lastInstance[this] = s__EscaperEffectArray_lastInstance[this] - 1
  end
end

--Generated destructor of EscaperEffectArray
function s__EscaperEffectArray_deallocate(this)
  if this == nil then
    return
  elseif (si__EscaperEffectArray_V[this] ~= -1) then
    return
  end
  s__EscaperEffectArray_onDestroy(this)
  si__EscaperEffectArray_V[this] = si__EscaperEffectArray_F
  si__EscaperEffectArray_F = this
end

function s__EscaperEffectArray_destroyLastEffects(this, numEfToDestroy)
  local i = numEfToDestroy
  while true do
    if (i <= 0 or s__EscaperEffectArray_lastInstance[this] < 0) then
      break
    end
    s__EscaperEffect_deallocate(s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + s__EscaperEffectArray_lastInstance[this]])
    s__EscaperEffectArray_lastInstance[this] = s__EscaperEffectArray_lastInstance[this] - 1
    i = i - 1
  end
end

function s__EscaperEffectArray_hideEffects(this)
  local i = 0
  while true do
    if i > s__EscaperEffectArray_lastInstance[this] then
      break
    end
    s__EscaperEffect_remove(s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + i])
    i = i + 1
  end
end

function s__EscaperEffectArray_showEffects(this, u)
  local i = 0
  while true do
    if (i > s__EscaperEffectArray_lastInstance[this]) then
      break
    end
    s__EscaperEffect_recreate(s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + i], u)
    i = i + 1
  end
end



--library EscaperEffectArray ends
--library ExchangeTerrains:






function ExchangeTerrains_Actions()
  local x = nil
  local terrainType = nil
  --local integer i = 1
  --loop
  --exitwhen (i > TERRAIN_MODIFYING_NB_LINES_TO_DO)
  x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    terrainType = GetTerrainType(x, y)
    if (terrainType == ExchangeTerrains___terrainA) then
      SetTerrainType(((x) * 1.0), ((y) * 1.0), (ExchangeTerrains___terrainB), -1, 1, 0)
      -- INLINED!!
    else
      if (terrainType == ExchangeTerrains___terrainB) then
        SetTerrainType(((x) * 1.0), ((y) * 1.0), (ExchangeTerrains___terrainA), -1, 1, 0)
        -- INLINED!!
      end
    end
    x = x + LARGEUR_CASE
  end
  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    DisableTrigger(GetTriggeringTrigger())
    RestartEnabledCheckTerrainTriggers()
    terrainModifyWorking = false
    return
  end
  --set i = i + 1
  --endloop
end


function ExchangeTerrains___StartTerrainModifying()
  StopEnabledCheckTerrainTriggers()
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, ExchangeTerrains_Actions)
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
end



function ExchangeTerrains(terrainTypeLabelA, terrainTypeLabelB)
  local terrainTypeA = sc__TerrainTypeArray_get(udg_terrainTypes, terrainTypeLabelA)
  local terrainTypeB = sc__TerrainTypeArray_get(udg_terrainTypes, terrainTypeLabelB)
  if (terrainTypeA == terrainTypeB or terrainTypeA == 0 or terrainTypeB == 0) then
    return false
  end
  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return false
  end

  ExchangeTerrains___terrainA = (s__TerrainType_terrainTypeId[(terrainTypeA)])
  -- INLINED!!
  ExchangeTerrains___terrainB = (s__TerrainType_terrainTypeId[(terrainTypeB)])
  -- INLINED!!

  ExchangeTerrains___StartTerrainModifying()

  s__TerrainType_setTerrainTypeId(terrainTypeA, ExchangeTerrains___terrainB)
  s__TerrainType_setTerrainTypeId(terrainTypeB, ExchangeTerrains___terrainA)
  return true
end





--library ExchangeTerrains ends
--library MonsterSpawnArray:



function s__MonsterSpawnArray_create()
  local msa = s__MonsterSpawnArray__allocate()
  s__MonsterSpawnArray_lastInstance[msa] = -1
  return msa
end

function s__MonsterSpawnArray_getFirstEmpty(this)
  local i = 0
  while true do
    if (i > s__MonsterSpawnArray_lastInstance[this] or s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i] == 0) then
      break
    end
    i = i + 1
  end
  return i
end

function s__MonsterSpawnArray_get(this, arrayId)
  if (arrayId < 0 or arrayId > s__MonsterSpawnArray_lastInstance[this]) then
    return 0
  end
  return s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + arrayId]
end

function s__MonsterSpawnArray_getFromLabel(this, label)
  local i = 0
  while true do
    if (i > s__MonsterSpawnArray_lastInstance[this]) then
      break
    end
    if ((s__MonsterSpawn_label[(s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i])]) == label) then
      -- INLINED!!
      return s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i]
    end
    i = i + 1
  end
  return 0
end

function s__MonsterSpawnArray_getLastInstanceId(this)
  return s__MonsterSpawnArray_lastInstance[this]
end

function s__MonsterSpawnArray_new(this, label, mt, sens, frequence, x1, y1, x2, y2, activate)
  --local integer n = .getFirstEmpty()
  local n = s__MonsterSpawnArray_lastInstance[this] + 1
  if (n >= MAX_NB_MONSTERS) then
    return 0
  end
  if (s__MonsterSpawnArray_getFromLabel(this, label) ~= 0) then
    return 0
  end
  --if (n > .lastInstance) then
  s__MonsterSpawnArray_lastInstance[this] = n
  --endif
  s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + n] = s__MonsterSpawn_create(label, mt, sens, frequence, x1, y1, x2, y2)
  if (activate) then
    s__MonsterSpawn_activate(s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + n])
  end
  s__MonsterSpawn_level[s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + n]] = sc__LevelArray_getLevelFromMonsterSpawnArray(udg_levels, this)
  s__MonsterSpawn_arrayId[s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + n]] = n
  return s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + n]
end

function s__MonsterSpawnArray_count(this)
  local n = 0
  local i = 0
  while true do
    if (i > s__MonsterSpawnArray_lastInstance[this]) then
      break
    end
    if (s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i] ~= 0) then
      n = n + 1
    end
    i = i + 1
  end
  return n
end

function s__MonsterSpawnArray_onDestroy(this)
  local i = 0
  while true do
    if (i > s__MonsterSpawnArray_lastInstance[this]) then
      break
    end
    if (s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i] ~= 0) then
      s__MonsterSpawn_deallocate(s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i])
    end
    i = i + 1
  end
  s__MonsterSpawnArray_lastInstance[this] = -1
end

--Generated destructor of MonsterSpawnArray
function s__MonsterSpawnArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterSpawnArray_V[this] ~= -1) then
    return
  end
  s__MonsterSpawnArray_onDestroy(this)
  si__MonsterSpawnArray_V[this] = si__MonsterSpawnArray_F
  si__MonsterSpawnArray_F = this
end

function s__MonsterSpawnArray_setMonsterSpawnNull(this, monsterSpawnArrayId)
  s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + monsterSpawnArrayId] = 0
end

function s__MonsterSpawnArray_clearMonsterSpawn(this, label)
  local ms = s__MonsterSpawnArray_getFromLabel(this, label)
  if (ms ~= 0) then
    s__MonsterSpawn_deallocate(ms)
    ms = 0
    return true
  else
    return false
  end
end

function s__MonsterSpawnArray_setMonsterType(this, label, mt)
  local ms = s__MonsterSpawnArray_getFromLabel(this, label)
  if (ms == 0) then
    return false
  end
  s__MonsterSpawn_mt[(ms)] = (mt)
  -- INLINED!!
  return true
end

function s__MonsterSpawnArray_setSens(this, label, sens)
  local ms = s__MonsterSpawnArray_getFromLabel(this, label)
  if (ms == 0) then
    return false
  end
  s__MonsterSpawn_setSens(ms, sens)
  return true
end

function s__MonsterSpawnArray_setFrequence(this, label, frequence)
  local ms = s__MonsterSpawnArray_getFromLabel(this, label)
  if (ms == 0) then
    return false
  end
  s__MonsterSpawn_setFrequence(ms, frequence)
  return true
end

function s__MonsterSpawnArray_activate(this)
  local i = 0
  while true do
    if i > s__MonsterSpawnArray_lastInstance[this] then
      break
    end
    if (s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i] ~= 0) then
      s__MonsterSpawn_activate(s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i])
    end
    i = i + 1
  end
end

function s__MonsterSpawnArray_desactivate(this)
  local i = 0
  while true do
    if i > s__MonsterSpawnArray_lastInstance[this] then
      break
    end
    if (s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i] ~= 0) then
      s__MonsterSpawn_desactivate(s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i])
    end
    i = i + 1
  end
end

function s__MonsterSpawnArray_displayForPlayer(this, p)
  local nbMs = 0
  local i = 0
  while true do
    if (i > s__MonsterSpawnArray_lastInstance[this]) then
      break
    end
    if (s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i] ~= 0) then
      s__MonsterSpawn_displayForPlayer(s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i], p)
      nbMs = nbMs + 1
    end
    i = i + 1
  end
  if (nbMs == 0) then
    Text___ForPlayer_timed_withColorCode((p), -1, ERROR_TEXT_COLORCODE, ("no monster spawn for this level"))
    -- INLINED!!
  end
end

function s__MonsterSpawnArray_changeLabel(this, oldLabel, newLabel)
  if (s__MonsterSpawnArray_getFromLabel(this, oldLabel) == 0 or s__MonsterSpawnArray_getFromLabel(this, newLabel) ~= 0) then
    return false
  end
  s__MonsterSpawn_label[(s__MonsterSpawnArray_getFromLabel(this, oldLabel))] = (newLabel)
  -- INLINED!!
  return true
end



--library MonsterSpawnArray ends
--library RandomizeTerrains:







function RandomizeTerrains_Actions()
  local x = nil
  local terrainTypeId = nil
  local done = nil
  local j = nil
  local i = 1
  --loop
  --exitwhen (i > TERRAIN_MODIFYING_NB_LINES_TO_DO)
  x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    terrainTypeId = GetTerrainType(x, y)
    done = false
    j = 0
    while true do
      if (j > RandomizeTerrains___lastTerrainArrayId or done) then
        break
      end
      if (terrainTypeId == RandomizeTerrains___oldTerrainTypes[j]) then
        SetTerrainType(((x) * 1.0), ((y) * 1.0), (RandomizeTerrains___newTerrainTypes[j]), -1, 1, 0)
        -- INLINED!!
        done = true
      end
      j = j + 1
    end
    x = x + LARGEUR_CASE
  end
  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    DisableTrigger(GetTriggeringTrigger())
    RestartEnabledCheckTerrainTriggers()
    terrainModifyWorking = false
    return
  end
  --set i = i + 1
  --endloop
end


function RandomizeTerrains___StartTerrainModifying()
  StopEnabledCheckTerrainTriggers()
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, RandomizeTerrains_Actions)
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
end


function RandomizeTerrains()
  local i = nil
  local n = nil
  local isTaken = __jarray(false)
  local terrainTypes = __jarray(0)

  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return
  end

  n = 0
  i = 0
  while true do
    terrainTypes[n] = (s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainTypes[n] == 0) then
      break
    end
    RandomizeTerrains___oldTerrainTypes[n] = (s__TerrainType_terrainTypeId[(terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end
  i = 0
  while true do
    terrainTypes[n] = (s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainTypes[n] == 0) then
      break
    end
    RandomizeTerrains___oldTerrainTypes[n] = (s__TerrainType_terrainTypeId[(terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end
  i = 0
  while true do
    terrainTypes[n] = (s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainTypes[n] == 0) then
      break
    end
    RandomizeTerrains___oldTerrainTypes[n] = (s__TerrainType_terrainTypeId[(terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end

  RandomizeTerrains___lastTerrainArrayId = n - 1

  i = 0
  while true do
    if (i > RandomizeTerrains___lastTerrainArrayId) then
      break
    end
    isTaken[i] = false
    i = i + 1
  end

  i = 0
  while true do
    if (i > RandomizeTerrains___lastTerrainArrayId) then
      break
    end
    while true do
      n = GetRandomInt(0, RandomizeTerrains___lastTerrainArrayId)
      if (not isTaken[n]) then
        break
      end
    end
    isTaken[n] = true
    RandomizeTerrains___newTerrainTypes[i] = RandomizeTerrains___oldTerrainTypes[n]
    i = i + 1
  end

  RandomizeTerrains___StartTerrainModifying()

  i = 0
  while true do
    if (i > RandomizeTerrains___lastTerrainArrayId) then
      break
    end
    s__TerrainType_setTerrainTypeId(terrainTypes[i], RandomizeTerrains___newTerrainTypes[i])
    i = i + 1
  end
end





--library RandomizeTerrains ends
--library ReinitTerrains:





function ReinitTerrains___SaveTerrainConfig()
  local n = 0
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[udg_terrainTypes]) then
      break
    end
    ReinitTerrains___terrainTypes[n] = (s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    ReinitTerrains___terrainTypeIds[n] = (s__TerrainType_terrainTypeId[(ReinitTerrains___terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[udg_terrainTypes]) then
      break
    end
    ReinitTerrains___terrainTypes[n] = (s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    ReinitTerrains___terrainTypeIds[n] = (s__TerrainType_terrainTypeId[(ReinitTerrains___terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[udg_terrainTypes]) then
      break
    end
    ReinitTerrains___terrainTypes[n] = (s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    ReinitTerrains___terrainTypeIds[n] = (s__TerrainType_terrainTypeId[(ReinitTerrains___terrainTypes[n])])
    -- INLINED!!
    n = n + 1
    i = i + 1
  end
end


function Init_ReinitTerrains()
  local trig = CreateTrigger()
  TriggerAddAction(trig, ReinitTerrains___SaveTerrainConfig)
  TriggerRegisterTimerEvent(trig, 0, false)
  trig = nil
end






function ReinitTerrains_Actions()
  local x = nil
  local terrainTypeId = nil
  local done = nil
  local j = nil
  --local integer i = 1
  --loop
  --exitwhen (i > TERRAIN_MODIFYING_NB_LINES_TO_DO)
  x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    terrainTypeId = GetTerrainType(x, y)
    done = false
    j = 0
    while true do
      if (ReinitTerrains___terrainTypes[j] == 0 or done) then
        break
      end
      if (terrainTypeId == ReinitTerrains___terrainTypeIdsToReplace[j]) then
        SetTerrainType(((x) * 1.0), ((y) * 1.0), (ReinitTerrains___terrainTypeIds[j]), -1, 1, 0)
        -- INLINED!!
        done = true
      end
      j = j + 1
    end
    x = x + LARGEUR_CASE
  end
  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    DisableTrigger(GetTriggeringTrigger())
    RestartEnabledCheckTerrainTriggers()
    terrainModifyWorking = false
    Text___ForAll_timed_withColorCode(-1, MAKE_TEXT_COLORCODE, ("Terrains reinitialized"))
    -- INLINED!!
    return
  end
  --set i = i + 1
  --endloop
end


function ReinitTerrains___StartTerrainModifying()
  StopEnabledCheckTerrainTriggers()
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, ReinitTerrains_Actions)
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
end


function ReinitTerrains()
  local i = nil

  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return
  end

  i = 0
  while true do
    if (ReinitTerrains___terrainTypes[i] == 0) then
      break
    end
    ReinitTerrains___terrainTypeIdsToReplace[i] = (s__TerrainType_terrainTypeId[(ReinitTerrains___terrainTypes[i])])
    -- INLINED!!
    s__TerrainType_setTerrainTypeId(ReinitTerrains___terrainTypes[i], ReinitTerrains___terrainTypeIds[i])
    i = i + 1
  end
  ReinitTerrains___StartTerrainModifying()
end





--library ReinitTerrains ends
--library ReinitTerrainsPositions:





--save terrain at init



function ReinitTerrainsPositions___SaveTerrain_Actions()
  local terrainType = nil
  local x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    terrainType = GetTerrainType(x, y)
    --mise à jour used terrain (-ut)
    AddNewTerrain(terrainType)
    --changer variations
    SetTerrainType(((x) * 1.0), ((y) * 1.0), (terrainType), -1, 1, 0)
    -- INLINED!!
    --sauvegarde du terrain
    sg__ReinitTerrainsPositions___TERRAIN_SAVE_set(ReinitTerrainsPositions___terrainSave_id, TerrainTypeId2TerrainType(terrainType))
    ReinitTerrainsPositions___terrainSave_id = ReinitTerrainsPositions___terrainSave_id + 1
    x = x + LARGEUR_CASE
  end

  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    terrainModifyWorking = false
    DisableTrigger(GetTriggeringTrigger())
    return
  end
end


function ReinitTerrainsPositions___StartSaveTerrain()
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, ReinitTerrainsPositions___SaveTerrain_Actions)
  ReinitTerrainsPositions___terrainSave_id = 0
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
  DestroyTrigger(GetTriggeringTrigger())
end


function Init_Reinit_terrains_position_Change_variations_and_ut_at_beginning()
  local trig = CreateTrigger()
  TriggerAddAction(trig, ReinitTerrainsPositions___StartSaveTerrain)
  TriggerRegisterTimerEvent(trig, 0, false)
  trig = nil
end



--=========================================================================


--reinitTerrainPositions


function ReinitTerrainsPosition_Actions()
  local x = nil
  --local integer i = 1
  --loop
  --exitwhen (i > TERRAIN_MODIFYING_NB_LINES_TO_DO)
  x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    if (sg__ReinitTerrainsPositions___TERRAIN_SAVE_get(ReinitTerrainsPositions___terrainSave_id) ~= 0 and (s__TerrainType_terrainTypeId[(sg__ReinitTerrainsPositions___TERRAIN_SAVE_get(ReinitTerrainsPositions___terrainSave_id))]) ~= 0) then
      -- INLINED!!
      SetTerrainType(((x) * 1.0), ((y) * 1.0), ((s__TerrainType_terrainTypeId[(sg__ReinitTerrainsPositions___TERRAIN_SAVE_get(ReinitTerrainsPositions___terrainSave_id))])), -1, 1, 0)
      -- INLINED!!
    end
    ReinitTerrainsPositions___terrainSave_id = ReinitTerrainsPositions___terrainSave_id + 1
    x = x + LARGEUR_CASE
  end
  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    Text___ForAll_timed_withColorCode(-1, MAKE_TEXT_COLORCODE, ("Terrains position reinitialized !"))
    -- INLINED!!
    DisableTrigger(GetTriggeringTrigger())
    terrainModifyWorking = false
    RestartEnabledCheckTerrainTriggers()
    return
  end
  --set i = i + 1
  --endloop
end



function ReinitTerrainsPositions___StartTerrainModifying()
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, ReinitTerrainsPosition_Actions)
  ReinitTerrainsPositions___terrainSave_id = 0
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
  StopEnabledCheckTerrainTriggers()
end





function ReinitTerrainsPosition()
  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return
  end
  ReinitTerrainsPositions___StartTerrainModifying()
end







--library ReinitTerrainsPositions ends
--library SaveLoadTerrainWithName:





--save terrain


function SaveLoadTerrainWithName___SaveTerrain_Actions()
  local x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    --call Text_A("avant")
    SaveInteger(SaveLoadTerrainWithName___terrainSaves, SaveLoadTerrainWithName___saveNameInt, SaveLoadTerrainWithName___terrainSave_id, (sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, y)))
    --call Text_A("après")
    SaveLoadTerrainWithName___terrainSave_id = SaveLoadTerrainWithName___terrainSave_id + 1
    x = x + LARGEUR_CASE
  end

  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    terrainModifyWorking = false
    DisableTrigger(GetTriggeringTrigger())
    Text___ForAll_timed_withColorCode(-1, MAKE_TEXT_COLORCODE, ("Terrain saved"))
    -- INLINED!!
    return
  end
end


function SaveTerrainWithName(saveName)
  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return
  end
  SaveLoadTerrainWithName___saveNameInt = StringHash(saveName)
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, SaveLoadTerrainWithName___SaveTerrain_Actions)
  SaveLoadTerrainWithName___terrainSave_id = 0
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
end


function DeleteTerrainSaveWithName(saveName)
  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return false
  end
  SaveLoadTerrainWithName___saveNameInt = StringHash(saveName)
  if (not HaveSavedInteger(SaveLoadTerrainWithName___terrainSaves, SaveLoadTerrainWithName___saveNameInt, 0)) then
    return false
  end
  FlushChildHashtable(SaveLoadTerrainWithName___terrainSaves, SaveLoadTerrainWithName___saveNameInt)
  return true
end







--load terrain




function SaveLoadTerrainWithName___LoadTerrain_Actions()
  local terrainType = nil
  local x = nil
  --local integer i = 1
  --loop
  --exitwhen (i > TERRAIN_MODIFYING_NB_LINES_TO_DO)
  x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    terrainType = (LoadInteger(SaveLoadTerrainWithName___terrainSaves, SaveLoadTerrainWithName___saveNameInt, SaveLoadTerrainWithName___terrainSave_id))
    if (terrainType ~= 0) then
      SetTerrainType(((x) * 1.0), ((y) * 1.0), ((s__TerrainType_terrainTypeId[(terrainType)])), -1, 1, 0)
      -- INLINED!!
    end
    SaveLoadTerrainWithName___terrainSave_id = SaveLoadTerrainWithName___terrainSave_id + 1
    x = x + LARGEUR_CASE
  end
  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    RestartEnabledCheckTerrainTriggers()
    Text___ForAll_timed_withColorCode(-1, MAKE_TEXT_COLORCODE, ("Terrain loaded"))
    -- INLINED!!
    DisableTrigger(GetTriggeringTrigger())
    terrainModifyWorking = false
    return
  end
  --set i = i + 1
  --endloop
end



function LoadTerrainWithName(saveName)
  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return true
  end
  SaveLoadTerrainWithName___saveNameInt = StringHash(saveName)
  if (not HaveSavedInteger(SaveLoadTerrainWithName___terrainSaves, SaveLoadTerrainWithName___saveNameInt, 0)) then
    return false
  end
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, SaveLoadTerrainWithName___LoadTerrain_Actions)
  SaveLoadTerrainWithName___terrainSave_id = 0
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
  StopEnabledCheckTerrainTriggers()
  return true
end






--library SaveLoadTerrainWithName ends
--library SaveLoadTerrainWithoutName:





--save terrain


function SaveLoadTerrainWithoutName___SaveTerrain_Actions()
  local x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    sg__SaveLoadTerrainWithoutName___terrainSave_set(SaveLoadTerrainWithoutName___terrainSave_id, sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, y))
    SaveLoadTerrainWithoutName___terrainSave_id = SaveLoadTerrainWithoutName___terrainSave_id + 1
    x = x + LARGEUR_CASE
  end

  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    terrainModifyWorking = false
    DisableTrigger(GetTriggeringTrigger())
    Text___ForAll_timed_withColorCode(-1, MAKE_TEXT_COLORCODE, ("Terrain saved"))
    -- INLINED!!
    return
  end
end


function SaveTerrainWithoutName()
  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return
  end
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, SaveLoadTerrainWithoutName___SaveTerrain_Actions)
  SaveLoadTerrainWithoutName___terrainSave_id = 0
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
end






--load terrain




function SaveLoadTerrainWithoutName___LoadTerrain_Actions()
  local x = nil
  --local integer i = 1
  --loop
  --exitwhen (i > TERRAIN_MODIFYING_NB_LINES_TO_DO)
  x = MAP_MIN_X
  while true do
    if (x > MAP_MAX_X) then
      break
    end
    if (sg__SaveLoadTerrainWithoutName___terrainSave_get(SaveLoadTerrainWithoutName___terrainSave_id) ~= 0) then
      SetTerrainType(((x) * 1.0), ((y) * 1.0), ((s__TerrainType_terrainTypeId[(sg__SaveLoadTerrainWithoutName___terrainSave_get(SaveLoadTerrainWithoutName___terrainSave_id))])), -1, 1, 0)
      -- INLINED!!
    end
    SaveLoadTerrainWithoutName___terrainSave_id = SaveLoadTerrainWithoutName___terrainSave_id + 1
    x = x + LARGEUR_CASE
  end
  y = y + LARGEUR_CASE
  if (y > MAP_MAX_Y) then
    RestartEnabledCheckTerrainTriggers()
    Text___ForAll_timed_withColorCode(-1, MAKE_TEXT_COLORCODE, ("Terrain loaded"))
    -- INLINED!!
    DisableTrigger(GetTriggeringTrigger())
    terrainModifyWorking = false
    return
  end
  --set i = i + 1
  --endloop    
end



function LoadTerrainWithoutName()
  if (terrainModifyWorking) then
    Text___ForAll_timed_withColorCode(-1, ERROR_TEXT_COLORCODE, ("can't execute two commands of this type simultaneously !"))
    -- INLINED!!
    return
  end
  TriggerClearActions(gg_trg_Terrain_modifying_trig)
  TriggerAddAction(gg_trg_Terrain_modifying_trig, SaveLoadTerrainWithoutName___LoadTerrain_Actions)
  SaveLoadTerrainWithoutName___terrainSave_id = 0
  y = MAP_MIN_Y
  EnableTrigger(gg_trg_Terrain_modifying_trig)
  terrainModifyWorking = true
  StopEnabledCheckTerrainTriggers()
end





--library SaveLoadTerrainWithoutName ends
--library SaveTerrainRamps:






--save terrain ramps
function SaveTerrainRamps___SaveTerrainRamps_Actions()
  local x = nil
  local currentCliffLevel = nil
  local otherCliffLevel = nil
  local otherCliffLevel2 = nil
  local otherX = nil
  local otherY = nil
  local ramp = nil
  local rampMiddle = nil
  local rampStr = nil
  local walkable = nil
  local walkable2 = nil
  local loc1 = nil
  local loc2 = nil
  local signX = nil
  local signY = nil

  if (SaveTerrainRamps___y <= MAP_MAX_Y) then
    x = MAP_MIN_X
    while true do
      if (x > MAP_MAX_X) then
        break
      end
      ramp = false

      if (not IsNearBounds(x, SaveTerrainRamps___y)) then
        --à cause de l'utilisation préalable de GetTerrainZ, GetTerrainCliffLevel plante sur les bords de la carte
        currentCliffLevel = GetTerrainCliffLevel(x, SaveTerrainRamps___y)
        rampMiddle = false

        if (not ramp) then
          --droite
          otherX = x + LARGEUR_CASE
          otherY = SaveTerrainRamps___y
          if (otherX <= MAP_MAX_X) then
            otherCliffLevel = GetTerrainCliffLevel(otherX, otherY)

            otherX = x + LARGEUR_CASE / 2
            walkable = not IsTerrainPathable(otherX, otherY + SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX, otherY - SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY)
            --can't ça renvoie false, c'est walkable, c'est l'inverse de la logique

            if (currentCliffLevel ~= otherCliffLevel) then
              --il y a une falaise entre les deux ; si c'est walkable malgré tout, c'est qu'il y a une rampe
              if (walkable) then
                ramp = true
              elseif (IAbsBJ(currentCliffLevel - otherCliffLevel) == 1) then
                --il ne peut y avoir de rampe que si la différence de niveau est de 1
                --ce n'est pas walkable, mais il y a peut-être une rampe, de largeur 1
                --si ce n'est pas walkable non plus en bas de la falaise, c'est qu'il y a une rampe
                if (currentCliffLevel > otherCliffLevel) then
                  otherX = x + 3 * LARGEUR_CASE / 2
                else
                  otherX = x - LARGEUR_CASE / 2
                end
                walkable2 = not IsTerrainPathable(otherX, otherY + SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX, otherY - SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY)
                if (not walkable2) then
                  --il y a une rampe à condition que les deux points en bas de la falaise soient au même niveau de falaise et pas à la même hauteur
                  if (currentCliffLevel < otherCliffLevel) then
                    loc1 = Location(x, SaveTerrainRamps___y)
                    loc2 = Location(x - LARGEUR_CASE, SaveTerrainRamps___y)
                  else
                    loc1 = Location(otherX, SaveTerrainRamps___y)
                    loc2 = Location(otherX + LARGEUR_CASE, SaveTerrainRamps___y)
                  end
                  if (GetLocationZ(loc1) ~= GetLocationZ(loc2) and GetTerrainCliffLevelBJ(loc1) == GetTerrainCliffLevelBJ(loc2)) then
                    ramp = true
                  end
                  RemoveLocation(loc1)
                  RemoveLocation(loc2)
                end
              end
              --s'il y a une rampe, on détermine si on est au milieu de la rampe
              if (ramp) then
                if (currentCliffLevel < otherCliffLevel) then
                  rampMiddle = true
                end
              end
            else
              --il n'y a pas de falaise entre les deux ; si ce n'est pas walkable, il y a une rampe de largeur 1 s'il y a une falaise ensuite vers le haut de différence 1
              if (not walkable) then
                otherX = x + LARGEUR_CASE * 2
                otherCliffLevel2 = GetTerrainCliffLevel(otherX, otherY)
                if (otherCliffLevel2 - currentCliffLevel == 1) then
                  --il y a une rampe sauf si les deux points en bas de la falaise sont à la même hauteur
                  loc1 = Location(x, SaveTerrainRamps___y)
                  loc2 = Location(x + LARGEUR_CASE, SaveTerrainRamps___y)
                  if (GetLocationZ(loc1) ~= GetLocationZ(loc2)) then
                    ramp = true
                  end
                  RemoveLocation(loc1)
                  RemoveLocation(loc2)
                end
              else
                --il peut y avoir une rampe s'il y a une falaise juste après, vers le haut et walkable
                otherX = x + LARGEUR_CASE * 2
                if (otherX <= MAP_MAX_X) then
                  otherCliffLevel2 = GetTerrainCliffLevel(otherX, otherY)
                  if (currentCliffLevel < otherCliffLevel2) then
                    otherX = otherX - LARGEUR_CASE / 2
                    walkable2 = not IsTerrainPathable(otherX, otherY + SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX, otherY - SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY)
                    if (walkable2) then
                      ramp = true
                    end
                  end
                end
              end
            end
          end
        end

        if (not ramp) then
          --gauche
          otherX = x - LARGEUR_CASE
          otherY = SaveTerrainRamps___y
          if (otherX >= MAP_MIN_X) then
            otherCliffLevel = GetTerrainCliffLevel(otherX, otherY)

            otherX = x - LARGEUR_CASE / 2
            walkable = not IsTerrainPathable(otherX, otherY + SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX, otherY - SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY)
            --can't ça renvoie false, c'est walkable, c'est l'inverse de la logique

            if (currentCliffLevel ~= otherCliffLevel) then
              --il y a une falaise entre les deux ; si c'est walkable malgré tout, c'est qu'il y a une rampe
              if (walkable) then
                ramp = true
              elseif (IAbsBJ(currentCliffLevel - otherCliffLevel) == 1) then
                --il ne peut y avoir de rampe que si la différence de niveau est de 1
                --ce n'est pas walkable, mais il y a peut-être une rampe, de largeur 1
                --si ce n'est pas walkable non plus en bas de la falaise, c'est qu'il y a une rampe
                if (currentCliffLevel > otherCliffLevel) then
                  otherX = x - 3 * LARGEUR_CASE / 2
                else
                  otherX = x + LARGEUR_CASE / 2
                end
                walkable2 = not IsTerrainPathable(otherX, otherY + SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX, otherY - SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY)
                if (not walkable2) then
                  --il y a une rampe à condition que les deux points en bas de la falaise soient au même niveau de falaise et pas à la même hauteur
                  if (currentCliffLevel < otherCliffLevel) then
                    loc1 = Location(x, SaveTerrainRamps___y)
                    loc2 = Location(x + LARGEUR_CASE, SaveTerrainRamps___y)
                  else
                    loc1 = Location(otherX, SaveTerrainRamps___y)
                    loc2 = Location(otherX - LARGEUR_CASE, SaveTerrainRamps___y)
                  end
                  if (GetLocationZ(loc1) ~= GetLocationZ(loc2) and GetTerrainCliffLevelBJ(loc1) == GetTerrainCliffLevelBJ(loc2)) then
                    ramp = true
                  end
                  RemoveLocation(loc1)
                  RemoveLocation(loc2)
                end
              end
              --s'il y a une rampe, on détermine si on est au milieu de la rampe
              if (ramp) then
                if (currentCliffLevel < otherCliffLevel) then
                  rampMiddle = true
                end
              end
            else
              --il n'y a pas de falaise entre les deux ; si ce n'est pas walkable, il y a une rampe de largeur 1 s'il y a une falaise ensuite vers le haut de différence 1
              if (not walkable) then
                otherX = x - LARGEUR_CASE * 2
                otherCliffLevel2 = GetTerrainCliffLevel(otherX, otherY)
                if (otherCliffLevel2 - currentCliffLevel == 1) then
                  --il y a une rampe sauf si les deux points en bas de la falaise sont à la même hauteur
                  loc1 = Location(x, SaveTerrainRamps___y)
                  loc2 = Location(x - LARGEUR_CASE, SaveTerrainRamps___y)
                  if (GetLocationZ(loc1) ~= GetLocationZ(loc2)) then
                    ramp = true
                  end
                  RemoveLocation(loc1)
                  RemoveLocation(loc2)
                end
              else
                --il peut y avoir une rampe s'il y a une falaise juste après, vers le haut et walkable
                otherX = x - LARGEUR_CASE * 2
                if (otherX >= MAP_MIN_X) then
                  otherCliffLevel2 = GetTerrainCliffLevel(otherX, otherY)
                  if (currentCliffLevel < otherCliffLevel2) then
                    otherX = otherX + LARGEUR_CASE / 2
                    walkable2 = not IsTerrainPathable(otherX, otherY + SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX, otherY - SaveTerrainRamps___DECAL_TEST_PATH, PATHING_TYPE_WALKABILITY)
                    if (walkable2) then
                      ramp = true
                    end
                  end
                end
              end
            end
          end
        end

        if (not ramp) then
          --haut
          otherX = x
          otherY = SaveTerrainRamps___y + LARGEUR_CASE
          if (otherY <= MAP_MAX_Y) then
            otherCliffLevel = GetTerrainCliffLevel(otherX, otherY)

            otherY = SaveTerrainRamps___y + LARGEUR_CASE / 2
            walkable = not IsTerrainPathable(otherX + SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX - SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY)
            --can't ça renvoie false, c'est walkable, c'est l'inverse de la logique

            if (currentCliffLevel ~= otherCliffLevel) then
              --il y a une falaise entre les deux ; si c'est walkable malgré tout, c'est qu'il y a une rampe
              if (walkable) then
                ramp = true
              elseif (IAbsBJ(currentCliffLevel - otherCliffLevel) == 1) then
                --il ne peut y avoir de rampe que si la différence de niveau est de 1
                --ce n'est pas walkable, mais il y a peut-être une rampe, de largeur 1
                --si ce n'est pas walkable non plus en bas de la falaise, c'est qu'il y a une rampe
                if (currentCliffLevel > otherCliffLevel) then
                  otherY = SaveTerrainRamps___y + 3 * LARGEUR_CASE / 2
                else
                  otherY = SaveTerrainRamps___y - LARGEUR_CASE / 2
                end
                walkable2 = not IsTerrainPathable(otherX + SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX - SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY)
                if (not walkable2) then
                  --il y a une rampe à condition que les deux points en bas de la falaise soient au même niveau de falaise et pas à la même hauteur
                  if (currentCliffLevel < otherCliffLevel) then
                    loc1 = Location(x, SaveTerrainRamps___y)
                    loc2 = Location(x, SaveTerrainRamps___y - LARGEUR_CASE)
                  else
                    loc1 = Location(x, otherY)
                    loc2 = Location(x, otherY + LARGEUR_CASE)
                  end
                  if (GetLocationZ(loc1) ~= GetLocationZ(loc2) and GetTerrainCliffLevelBJ(loc1) == GetTerrainCliffLevelBJ(loc2)) then
                    ramp = true
                  end
                  RemoveLocation(loc1)
                  RemoveLocation(loc2)
                end
              end
              --s'il y a une rampe, on détermine si on est au milieu de la rampe
              if (ramp) then
                if (currentCliffLevel < otherCliffLevel) then
                  rampMiddle = true
                end
              end
            else
              --il n'y a pas de falaise entre les deux ; si ce n'est pas walkable, il y a une rampe de largeur 1 s'il y a une falaise ensuite vers le haut de différence 1
              if (not walkable) then
                otherY = SaveTerrainRamps___y + LARGEUR_CASE * 2
                otherCliffLevel2 = GetTerrainCliffLevel(otherX, otherY)
                if (otherCliffLevel2 - currentCliffLevel == 1) then
                  --il y a une rampe sauf si les deux points en bas de la falaise sont à la même hauteur
                  loc1 = Location(x, SaveTerrainRamps___y)
                  loc2 = Location(x, SaveTerrainRamps___y + LARGEUR_CASE)
                  if (GetLocationZ(loc1) ~= GetLocationZ(loc2)) then
                    ramp = true
                  end
                  RemoveLocation(loc1)
                  RemoveLocation(loc2)
                end
              else
                --il peut y avoir une rampe s'il y a une falaise juste après, vers le haut et walkable
                otherY = SaveTerrainRamps___y + LARGEUR_CASE * 2
                if (otherY <= MAP_MAX_Y) then
                  otherCliffLevel2 = GetTerrainCliffLevel(otherX, otherY)
                  if (currentCliffLevel < otherCliffLevel2) then
                    otherY = otherY - LARGEUR_CASE / 2
                    walkable2 = not IsTerrainPathable(otherX + SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX - SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY)
                    if (walkable2) then
                      ramp = true
                    end
                  end
                end
              end
            end
          end
        end

        if (not ramp) then
          --bas
          otherX = x
          otherY = SaveTerrainRamps___y - LARGEUR_CASE
          if (otherY >= MAP_MIN_Y) then
            otherCliffLevel = GetTerrainCliffLevel(otherX, otherY)

            otherY = SaveTerrainRamps___y - LARGEUR_CASE / 2
            walkable = not IsTerrainPathable(otherX + SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX - SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY)

            if (currentCliffLevel ~= otherCliffLevel) then
              --il y a une falaise entre les deux ; si c'est walkable malgré tout, c'est qu'il y a une rampe
              if (walkable) then
                ramp = true
              elseif (IAbsBJ(currentCliffLevel - otherCliffLevel) == 1) then
                --il ne peut y avoir de rampe que si la différence de niveau est de 1
                --ce n'est pas walkable, mais il y a peut-être une rampe, de largeur 1
                --si ce n'est pas walkable non plus en bas de la falaise, c'est qu'il y a une rampe
                if (currentCliffLevel > otherCliffLevel) then
                  otherY = SaveTerrainRamps___y - 3 * LARGEUR_CASE / 2
                else
                  otherY = SaveTerrainRamps___y + LARGEUR_CASE / 2
                end
                walkable2 = not IsTerrainPathable(otherX + SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX - SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY)
                if (not walkable2) then
                  --il y a une rampe à condition que les deux points en bas de la falaise soient au même niveau de falaise et pas à la même hauteur
                  if (currentCliffLevel < otherCliffLevel) then
                    loc1 = Location(x, SaveTerrainRamps___y)
                    loc2 = Location(x, SaveTerrainRamps___y + LARGEUR_CASE)
                  else
                    loc1 = Location(x, otherY)
                    loc2 = Location(x, otherY - LARGEUR_CASE)
                  end
                  if (GetLocationZ(loc1) ~= GetLocationZ(loc2) and GetTerrainCliffLevelBJ(loc1) == GetTerrainCliffLevelBJ(loc2)) then
                    ramp = true
                  end
                  RemoveLocation(loc1)
                  RemoveLocation(loc2)
                end
              end
              --s'il y a une rampe, on détermine si on est au milieu de la rampe
              if (ramp) then
                if (currentCliffLevel < otherCliffLevel) then
                  rampMiddle = true
                end
              end
            else
              --il n'y a pas de falaise entre les deux ; si ce n'est pas walkable, il y a une rampe de largeur 1 s'il y a une falaise ensuite vers le haut de différence 1
              if (not walkable) then
                otherY = SaveTerrainRamps___y - LARGEUR_CASE * 2
                otherCliffLevel2 = GetTerrainCliffLevel(otherX, otherY)
                if (otherCliffLevel2 - currentCliffLevel == 1) then
                  --il y a une rampe sauf si les deux points en bas de la falaise sont à la même hauteur
                  loc1 = Location(x, SaveTerrainRamps___y)
                  loc2 = Location(x, SaveTerrainRamps___y - LARGEUR_CASE)
                  if (GetLocationZ(loc1) ~= GetLocationZ(loc2)) then
                    ramp = true
                  end
                  RemoveLocation(loc1)
                  RemoveLocation(loc2)
                end
              else
                --il peut y avoir une rampe s'il y a une falaise juste après, vers le haut et walkable
                otherY = SaveTerrainRamps___y - LARGEUR_CASE * 2
                if (otherY >= MAP_MIN_Y) then
                  otherCliffLevel2 = GetTerrainCliffLevel(otherX, otherY)
                  if (currentCliffLevel < otherCliffLevel2) then
                    otherY = otherY + LARGEUR_CASE / 2
                    walkable2 = not IsTerrainPathable(otherX + SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY) or not IsTerrainPathable(otherX - SaveTerrainRamps___DECAL_TEST_PATH, otherY, PATHING_TYPE_WALKABILITY)
                    if (walkable2) then
                      ramp = true
                    end
                  end
                end
              end
            end
          end
        end

        --rampes en diagonales
        if (not ramp) then
          signY = -1
          while true do
            if (ramp or signY > 1) then
              break
            end
            signX = -1
            while true do
              if (ramp or signX > 1) then
                break
              end
              otherX = x + LARGEUR_CASE * signX
              otherY = SaveTerrainRamps___y + LARGEUR_CASE * signY
              otherCliffLevel = GetTerrainCliffLevel(otherX, otherY)
              --call BJDebugMsg("signX : " + R2S(signX) + " ; signY : " + R2S(signY) + " ; x : " + R2S(otherX) + " ; y : " + R2S(otherY))
              --on ne prend en compte que si ça monte et que c'est walkable
              if (currentCliffLevel < otherCliffLevel) then
                otherX = x + LARGEUR_CASE * signX // 2
                otherY = SaveTerrainRamps___y + LARGEUR_CASE * signY // 2
                walkable = not IsTerrainPathable(otherX, otherY, PATHING_TYPE_WALKABILITY)
                if (walkable) then
                  ramp = true
                else
                end
              end
              signX = signX + 2
            end
            signY = signY + 2
          end
        end
      end

      if (ramp) then
        --call CreateUnit(Player(0), 'hpea', x, y, 0)
        if (rampMiddle) then
          rampStr = "2"
        else
          rampStr = "1"
        end
      else
        rampStr = "0"
      end

      s__StringArrayForCache_push(stringArrayForCache, rampStr)
      x = x + LARGEUR_CASE
    end
    SaveTerrainRamps___y = SaveTerrainRamps___y + LARGEUR_CASE
    loc1 = nil
    loc2 = nil
  else
    DisableTrigger(GetTriggeringTrigger())
    s__StringArrayForCache_writeInCache(stringArrayForCache)
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("terrain ramps saved"))
    -- INLINED!!
    StartSaveWaterHeights()
    -- INLINED!!
  end
end


function StartSaveTerrainRamps()
  SaveTerrainRamps___y = MAP_MIN_Y
  stringArrayForCache = s__StringArrayForCache_create("terrain", "terrainRamps", false)
  TriggerClearActions(trigSaveMapInCache)
  TriggerAddAction(trigSaveMapInCache, SaveTerrainRamps___SaveTerrainRamps_Actions)
  EnableTrigger(trigSaveMapInCache)
end


--library SaveTerrainRamps ends
--library TerrainTypeDeathKillingTimers:



function s__KillingTimers_onDestroy(this)
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    DestroyTimer(s___KillingTimers_timers[s__KillingTimers_timers[this] + i])
    s___KillingTimers_timers[s__KillingTimers_timers[this] + i] = nil
    i = i + 1
  end
end

--Generated destructor of KillingTimers
function s__KillingTimers_deallocate(this)
  if this == nil then
    return
  elseif (si__KillingTimers_V[this] ~= -1) then
    return
  end
  s__KillingTimers_onDestroy(this)
  si__KillingTimers_V[this] = si__KillingTimers_F
  si__KillingTimers_F = this
end

function s__KillingTimers_create()
  local kt = s__KillingTimers__allocate()
  local i = nil
  i = 0
  while true do
    if (i > 11) then
      break
    end
    --if (udg_escapers.get(i) != 0) then //si l'escaper existe
    --si on laisse le filtre if les escapers apparus après le début (via un -createHero) ne meurent plus avec les terrains
    s___KillingTimers_timers[s__KillingTimers_timers[kt] + i] = CreateTimer()
    --endif
    i = i + 1
  end
  return kt
end

function s__KillingTimers_start(this, timerId, time)
  TimerStart(s___KillingTimers_timers[s__KillingTimers_timers[this] + timerId], time, false, DeathTerrainKillEscaper_Actions)
  s__Escaper_currentLevelTouchTerrainDeath[(s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (timerId)])] = sc__LevelArray_getCurrentLevel(udg_levels)
  -- INLINED!!
end

function s__KillingTimers_get(this, id)
  return s___KillingTimers_timers[s__KillingTimers_timers[this] + id]
end



--library TerrainTypeDeathKillingTimers ends
--library Escaper:














--coop




--item method
function s__Escaper_resetItem(this)
  if (UnitHasItemOfTypeBJ(s__Escaper_hero[this], METEOR_NORMAL)) then
    SetItemDroppable(UnitItemInSlot(s__Escaper_hero[this], 0), true)
    s__Meteor_replace((GetItemUserData(UnitItemInSlot(s__Escaper_hero[this], 0))))
    DestroyEffect(s__Escaper_meteorEffect[this])
    s__Escaper_meteorEffect[this] = nil
    return true
  end
  return false
end

function s__Escaper_addEffectMeteor(this)
  if (s__Escaper_meteorEffect[this] == nil) then
    s__Escaper_meteorEffect[this] = AddSpecialEffectTarget("Abilities\\Weapons\\DemonHunterMissile\\DemonHunterMissile.mdl", s__Escaper_hero[this], "hand right")
  end
end

function s__Escaper_removeEffectMeteor(this)
  if (s__Escaper_meteorEffect[this] ~= nil) then
    DestroyEffect(s__Escaper_meteorEffect[this])
    s__Escaper_meteorEffect[this] = nil
  end
end

--select method
function s__Escaper_selectHero(this)
  SelectUnitAddForPlayer(s__Escaper_hero[this], (s__Escaper_p[(s__Escaper_controler[this])]))
  -- INLINED!!
  sc__Escaper_setIsHeroSelectedForPlayer(this, (s__Escaper_p[(s__Escaper_controler[this])]), true)
  -- INLINED!!
end

--creation method
function s__Escaper_createHero(this, x, l__y, angle)
  if (s__Escaper_hero[this] ~= nil) then
    return false
  end
  s__Escaper_hero[this] = CreateUnit(s__Escaper_p[this], HERO_TYPE_ID, x, l__y, angle)
  SetUnitFlyHeight(s__Escaper_hero[this], 1, 0)
  SetUnitFlyHeight(s__Escaper_hero[this], 0, 0)
  SetUnitUserData(s__Escaper_hero[this], GetPlayerId(s__Escaper_p[this]))
  ShowUnit(s__Escaper_hero[this], false)
  ShowUnit(s__Escaper_hero[this], true)
  UnitRemoveAbility(s__Escaper_hero[this], 1097625443)
  SetUnitMoveSpeed(s__Escaper_hero[this], s__Escaper_walkSpeed[this])
  --voir pour le nom de la fonction
  s__Escaper_selectHero(this)
  if (s__Escaper_baseColorId[this] == 0) then
    SetUnitColor(s__Escaper_hero[this], PLAYER_COLOR_RED)
  else
    SetUnitColor(s__Escaper_hero[this], ConvertPlayerColor(s__Escaper_baseColorId[this]))
  end
  SetUnitVertexColorBJ(s__Escaper_hero[this], s__Escaper_vcRed[this], s__Escaper_vcGreen[this], s__Escaper_vcBlue[this], s__Escaper_vcTransparency[this])
  SetUnitAnimation((s__Escaper_hero[this]), "Morph Alternate")
  -- INLINED!!
  s__Escaper_invisUnit[this] = CreateUnit(NEUTRAL_PLAYER, INVIS_UNIT_TYPE_ID, x, l__y, angle)
  SetUnitUserData(s__Escaper_invisUnit[this], GetPlayerId(s__Escaper_p[this]))
  TriggerRegisterUnitEvent(gg_trg_InvisUnit_is_getting_damage, s__Escaper_invisUnit[this], EVENT_UNIT_DAMAGED)
  s__EscaperEffectArray_showEffects(s__Escaper_effects[this], s__Escaper_hero[this])
  s__Escaper_lastTerrainType[this] = 0
  TimerStart(afkModeTimers[GetPlayerId(s__Escaper_p[this])], timeMinAfk, false, GetAfkModeTimeExpiresCodeFromId(GetPlayerId(s__Escaper_p[this])))
  InitShortcutSkills(GetPlayerId(s__Escaper_p[this]))
  EnableTrigger(s__Escaper_checkTerrain[this])
  return true
end

function s__Escaper_createHeroAtStart(this)
  local x = nil
  local l__y = nil
  local start = (s__Level_start[(sc__LevelArray_getCurrentLevel(udg_levels))])
  -- INLINED!!
  local angle = nil
  if (start == 0) then
    --si le départ du niveau en cours n'existe pas
    start = DEPART_PAR_DEFAUT
    angle = HERO_START_ANGLE
  else
    angle = GetRandomDirectionDeg()
  end
  x = sc__Start_getRandomX(start)
  l__y = sc__Start_getRandomY(start)
  return s__Escaper_createHero(this, x, l__y, angle)
end

function s__Escaper_create(playerId)
  local e = s__Escaper__allocate()
  s__Escaper_p[e] = Player(playerId)
  s__Escaper_walkSpeed[e] = HERO_WALK_SPEED
  s__Escaper_slideSpeed[e] = HERO_SLIDE_SPEED
  s__Escaper_baseColorId[e] = playerId
  s__Escaper_slide[e] = CreateSlideTrigger(playerId)
  s__Escaper_checkTerrain[e] = CreateCheckTerrainTrigger(playerId)
  s__Escaper_cameraField[e] = DEFAULT_CAMERA_FIELD
  SetCameraFieldForPlayer(s__Escaper_p[e], CAMERA_FIELD_TARGET_DISTANCE, I2R(s__Escaper_cameraField[e]), 0)
  s__Escaper_effects[e] = s__EscaperEffectArray_create()
  s__Escaper_vcRed[e] = 100
  s__Escaper_vcGreen[e] = 100
  s__Escaper_vcBlue[e] = 100
  s__Escaper_vcTransparency[e] = 0
  s__Escaper_lastTerrainType[e] = 0
  s__Escaper_makingLevel[e] = 0
  s__Escaper_make[e] = 0
  s__Escaper_makeLastActions[e] = s__MakeLastActions_create(e)
  s__Escaper_godMode[e] = false
  s__Escaper_godModeKills[e] = false
  s__Escaper_walkSpeedAbsolute[e] = false
  s__Escaper_slideSpeedAbsolute[e] = false
  s__Escaper_canTeleportB[e] = false
  s__Escaper_hasAutoreviveB[e] = false
  s__Escaper_canCheatB[e] = false
  s__Escaper_isMaximaxouB[e] = false
  s__Escaper_isTrueMaximaxouB[e] = false
  s__Escaper_discoTrigger[e] = nil
  s__Escaper_controler[e] = e
  s__Escaper_slideLastAngleOrder[e] = -1
  --coop
  s__Escaper_powerCircle[e] = CreateUnit(s__Escaper_p[e], POWER_CIRCLE, 0, 0, 0)
  SetUnitUserData(s__Escaper_powerCircle[e], playerId)
  ShowUnit(s__Escaper_powerCircle[e], false)
  s__Escaper_dummyPowerCircle[e] = CreateUnit(ENNEMY_PLAYER, DUMMY_POWER_CIRCLE, 0, 0, 0)
  SetUnitUserData(s__Escaper_dummyPowerCircle[e], playerId)
  ShowUnit(s__Escaper_dummyPowerCircle[e], false)
  return e
end

function s__Escaper_removeHero(this)
  if (s__Escaper_hero[this] == nil) then
    return
  end
  s__Escaper_resetItem(this)
  if (IsUnitAliveBJ(s__Escaper_hero[this])) then
    KillUnit(s__Escaper_hero[this])
  end
  RemoveUnit(s__Escaper_hero[this])
  s__Escaper_hero[this] = nil
  RemoveUnit(s__Escaper_invisUnit[this])
  s__Escaper_invisUnit[this] = nil
  s__Escaper_lastTerrainType[this] = 0
  sc__Make_deallocate(s__Escaper_make[this])
  s__Escaper_make[this] = 0
  s__EscaperEffectArray_hideEffects(s__Escaper_effects[this])
  DisableTrigger(s__Escaper_checkTerrain[this])
  DisableTrigger(s__Escaper_slide[this])
  --coop
  ShowUnit(s__Escaper_powerCircle[this], false)
  ShowUnit(s__Escaper_dummyPowerCircle[this], false)
end

function s__Escaper_onDestroy(this)
  s__Escaper_removeHero(this)
  DestroyEffect(s__Escaper_terrainKillEffect[this])
  s__Escaper_terrainKillEffect[this] = nil
  s__EscaperEffectArray_deallocate(s__Escaper_effects[this])
  DestroyTrigger(s__Escaper_slide[this])
  s__Escaper_slide[this] = nil
  DestroyTrigger(s__Escaper_checkTerrain[this])
  s__Escaper_checkTerrain[this] = nil
  DestroyTrigger(s__Escaper_discoTrigger[this])
  s__Escaper_discoTrigger[this] = nil
  s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (GetPlayerId(s__Escaper_p[this]))] = 0
  -- INLINED!!
  --coop
  RemoveUnit(s__Escaper_powerCircle[this])
  s__Escaper_powerCircle[this] = nil
  RemoveUnit(s__Escaper_dummyPowerCircle[this])
  s__Escaper_dummyPowerCircle[this] = nil
end

--Generated destructor of Escaper
function s__Escaper_deallocate(this)
  if this == nil then
    return
  elseif (si__Escaper_V[this] ~= -1) then
    return
  end
  s__Escaper_onDestroy(this)
  si__Escaper_V[this] = si__Escaper_F
  si__Escaper_F = this
end

--getId method
function s__Escaper_getId(this)
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if (this == (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)])) then
      -- INLINED!!
      return i
    end
    i = i + 1
  end
  return -1
end

--trigger methods
function s__Escaper_enableSlide(this, doEnable)
  local heroPos = nil
  if (IsTriggerEnabled(s__Escaper_slide[this]) == doEnable) then
    return false
  end
  if (doEnable) then
    EnableTrigger(s__Escaper_slide[this])
    StopUnit(s__Escaper_hero[this])
    heroPos = GetUnitLoc(s__Escaper_hero[this])
    s__Escaper_lastZ[(this)] = ((GetLocationZ(heroPos) + GetUnitFlyHeight(s__Escaper_hero[this])) * 1.0)
    -- INLINED!!
    RemoveLocation(heroPos)
    heroPos = nil
  else
    DisableTrigger(s__Escaper_slide[this])
    s__Escaper_slideLastAngleOrder[this] = -1
  end
  return true
end

function s__Escaper_setSlideLastAngleOrder(this, angle)
  s__Escaper_slideLastAngleOrder[this] = angle
end

function s__Escaper_getSlideLastAngleOrder(this)
  return s__Escaper_slideLastAngleOrder[this]
end

function s__Escaper_enableCheckTerrain(this, doEnable)
  if (IsTriggerEnabled(s__Escaper_checkTerrain[this]) == doEnable) then
    return false
  end
  if (doEnable) then
    EnableTrigger(s__Escaper_checkTerrain[this])
  else
    DisableTrigger(s__Escaper_checkTerrain[this])
  end
  return true
end

function s__Escaper_isSliding(this)
  return IsTriggerEnabled(s__Escaper_slide[this])
end

function s__Escaper_doesCheckTerrain(this)
  return IsTriggerEnabled(s__Escaper_checkTerrain[this])
end


--move methods
function s__Escaper_moveHero(this, x, l__y)
  SetUnitX(s__Escaper_hero[this], x)
  SetUnitY(s__Escaper_hero[this], l__y)
end

function s__Escaper_moveInvisUnit(this, x, l__y)
  SetUnitX(s__Escaper_invisUnit[this], x)
  SetUnitY(s__Escaper_invisUnit[this], l__y)
end


--hero methods
function s__Escaper_getHero(this)
  return s__Escaper_hero[this]
end

function s__Escaper_isAlive(this)
  return IsUnitAliveBJ(s__Escaper_hero[this])
end

function s__Escaper_isPaused(this)
  return IsUnitPaused(s__Escaper_hero[this])
end

function s__Escaper_kill(this)
  if ((IsUnitAliveBJ(s__Escaper_hero[(this)]))) then
    -- INLINED!!
    s__Escaper_resetItem(this)
    KillUnit(s__Escaper_hero[this])
    s__Escaper_lastTerrainType[this] = 0
    ShowUnit(s__Escaper_invisUnit[this], false)
    s__Escaper_enableCheckTerrain(this, false)
    StopAfk(GetPlayerId(s__Escaper_p[this]))
    DisplayDeathMessagePlayer(s__Escaper_p[this])
    s__Escaper_isHeroSelectedB[this] = false
    return true
  end
  return false
end

function s__Escaper_pause(this, doPause)
  if ((IsUnitPaused(s__Escaper_hero[(this)])) == doPause) then
    -- INLINED!!
    return false
  end
  PauseUnit(s__Escaper_hero[this], doPause)
  return true
end

function s__Escaper_specialIllidan(this)
  SetUnitAnimation(s__Escaper_hero[this], "Morph Alternate")
end

function s__Escaper_revive(this, x, l__y)
  if ((IsUnitAliveBJ(s__Escaper_hero[(this)]))) then
    -- INLINED!!
    return false
  end
  ReviveHero(s__Escaper_hero[this], x, l__y, SHOW_REVIVE_EFFECTS)
  SetUnitX(s__Escaper_invisUnit[this], x)
  SetUnitY(s__Escaper_invisUnit[this], l__y)
  ShowUnit(s__Escaper_invisUnit[this], true)
  s__Escaper_enableCheckTerrain(this, true)
  SetUnitAnimation(s__Escaper_hero[(this)], "Morph Alternate")
  -- INLINED!!
  s__Escaper_selectHero(this)
  if (s__Escaper_vcTransparency[this] ~= 0) then
    SetUnitVertexColorBJ(s__Escaper_hero[this], s__Escaper_vcRed[this], s__Escaper_vcGreen[this], s__Escaper_vcBlue[this], s__Escaper_vcTransparency[this])
  end
  TimerStart(afkModeTimers[GetPlayerId(s__Escaper_p[this])], timeMinAfk, false, GetAfkModeTimeExpiresCodeFromId(GetPlayerId(s__Escaper_p[this])))
  s__Escaper_lastZ[this] = 0
  s__Escaper_oldDiffZ[this] = 0
  s__Escaper_speedZ[this] = 0
  --coop
  ShowUnit(s__Escaper_powerCircle[this], false)
  ShowUnit(s__Escaper_dummyPowerCircle[this], false)
  return true
end

function s__Escaper_reviveAtStart(this)
  local x = sc__Level_getStartRandomX(sc__LevelArray_getCurrentLevel(udg_levels))
  local l__y = sc__Level_getStartRandomY(sc__LevelArray_getCurrentLevel(udg_levels))
  return s__Escaper_revive(this, x, l__y)
end


function s__Escaper_turnInstantly(this, angle)
  local lastTerrainType = s__Escaper_lastTerrainType[this]
  local x = GetUnitX(s__Escaper_hero[this])
  local l__y = GetUnitY(s__Escaper_hero[this])
  local meteor = UnitItemInSlot(s__Escaper_hero[this], 0)
  --local player array playersSelectingHero
  --local integer playersSelectingHeroLastId = -1
  --local integer i = 0
  --loop
  --    exitwhen i > 11
  --if (IsUnitSelected(.hero, Player(i))) then
  --           set playersSelectingHeroLastId = playersSelectingHeroLastId + 1
  --           set playersSelectingHero[playersSelectingHeroLastId] = Player(i)
  --endif
  --   set i = i + 1
  --endloop
  RemoveUnit(s__Escaper_hero[this])
  --call .make.destroy()
  --set .make = 0
  --recreate hero
  s__Escaper_hero[this] = CreateUnit(s__Escaper_p[this], HERO_TYPE_ID, x, l__y, angle)
  SetUnitFlyHeight(s__Escaper_hero[this], 1, 0)
  SetUnitFlyHeight(s__Escaper_hero[this], 0, 0)
  SetUnitUserData(s__Escaper_hero[this], GetPlayerId(s__Escaper_p[this]))
  ShowUnit(s__Escaper_hero[this], false)
  ShowUnit(s__Escaper_hero[this], true)
  UnitRemoveAbility(s__Escaper_hero[this], 1097625443)
  SetUnitMoveSpeed(s__Escaper_hero[this], s__Escaper_walkSpeed[this])
  --voir pour le nom de la fonction
  if (s__Escaper_controler[this] ~= this) then
    SetUnitOwner(s__Escaper_hero[this], (s__Escaper_p[(s__Escaper_controler[this])]), false)
    -- INLINED!!
  end
  --set i = 0
  --loop
  --    exitwhen i > playersSelectingHeroLastId
  --        call SelectUnitAddForPlayer(.hero, playersSelectingHero[i])
  --    set i = i + 1
  --endloop
  if (s__Escaper_isHeroSelectedB[this]) then
    SelectUnit(s__Escaper_hero[this], true)
  end
  if (s__Escaper_baseColorId[this] == 0) then
    SetUnitColor(s__Escaper_hero[this], PLAYER_COLOR_RED)
  else
    SetUnitColor(s__Escaper_hero[this], ConvertPlayerColor(s__Escaper_baseColorId[this]))
  end
  SetUnitVertexColorBJ(s__Escaper_hero[this], s__Escaper_vcRed[this], s__Escaper_vcGreen[this], s__Escaper_vcBlue[this], s__Escaper_vcTransparency[this])
  s__EscaperEffectArray_showEffects(s__Escaper_effects[this], s__Escaper_hero[this])
  if (s__Escaper_make[this] ~= 0) then
    s__Make_maker[s__Escaper_make[this]] = s__Escaper_hero[this]
    TriggerRegisterUnitEvent(s__Make_t[s__Escaper_make[this]], s__Escaper_hero[this], EVENT_UNIT_ISSUED_POINT_ORDER)
  end
  --/////////////////////
  s__Escaper_lastTerrainType[this] = lastTerrainType
  SetUnitAnimation((s__Escaper_hero[(this)]), "stand")
  -- INLINED!!
  if (meteor ~= nil) then
    UnitAddItem(s__Escaper_hero[this], meteor)
  end
  InitShortcutSkills(GetPlayerId(s__Escaper_p[this]))
  meteor = nil
end

function s__Escaper_reverse(this)
  local angle = GetUnitFacing(s__Escaper_hero[this]) + 180
  s__Escaper_turnInstantly(this, angle)
  if (s__Escaper_slideLastAngleOrder[this] ~= -1) then
    s__Escaper_slideLastAngleOrder[this] = s__Escaper_slideLastAngleOrder[this] + 180
    SetUnitFacing(s__Escaper_hero[this], s__Escaper_slideLastAngleOrder[this])
  end
end

function s__Escaper_giveHeroControl(this, escaper)
  SetUnitOwner(s__Escaper_hero[this], (s__Escaper_p[(escaper)]), false)
  -- INLINED!!
  s__Escaper_controler[this] = escaper
end

function s__Escaper_resetOwner(this)
  SetUnitOwner(s__Escaper_hero[this], (s__Escaper_p[(this)]), false)
  -- INLINED!!
  s__Escaper_controler[this] = this
end

function s__Escaper_setIsHeroSelectedForPlayer(this, p, heroSelected)
  if (GetLocalPlayer() == p) then
    s__Escaper_isHeroSelectedB[this] = heroSelected
  end
end


--effects methods
function s__Escaper_newEffect(this, efStr, bodyPart)
  s__EscaperEffectArray_new(s__Escaper_effects[this], efStr, s__Escaper_hero[this], bodyPart)
end

function s__Escaper_destroyLastEffects(this, numEfToDestroy)
  s__EscaperEffectArray_destroyLastEffects(s__Escaper_effects[this], numEfToDestroy)
end

function s__Escaper_hideEffects(this)
  s__EscaperEffectArray_hideEffects(s__Escaper_effects[this])
end

function s__Escaper_showEffects(this)
  s__EscaperEffectArray_showEffects(s__Escaper_effects[this], s__Escaper_hero[this])
end


--terrainKill methods
function s__Escaper_destroyTerrainKillEffect(this)
  DestroyEffect(s__Escaper_terrainKillEffect[this])
  s__Escaper_terrainKillEffect[this] = nil
end

function s__Escaper_createTerrainKillEffect(this, killEffectStr)
  if (s__Escaper_terrainKillEffect[this] ~= nil) then
    s__Escaper_destroyTerrainKillEffect(this)
  end
  s__Escaper_terrainKillEffect[this] = AddSpecialEffectTarget(killEffectStr, s__Escaper_hero[this], TERRAIN_KILL_EFFECT_BODY_PART)
end

--lastTerrainType methods
function s__Escaper_getLastTerrainType(this)
  return s__Escaper_lastTerrainType[this]
end

function s__Escaper_setLastTerrainType(this, terrainType)
  s__Escaper_lastTerrainType[this] = terrainType
end

--speed methods
function s__Escaper_setSlideSpeed(this, slideSpeed)
  s__Escaper_slideSpeed[this] = slideSpeed
end

function s__Escaper_setWalkSpeed(this, walkSpeed)
  s__Escaper_walkSpeed[this] = walkSpeed
  SetUnitMoveSpeed(s__Escaper_hero[this], walkSpeed)
end

function s__Escaper_getSlideSpeed(this)
  return s__Escaper_slideSpeed[this]
end

function s__Escaper_getRealSlideSpeed(this)
  return s__Escaper_slideSpeed[this] / SLIDE_PERIOD
end

function s__Escaper_getWalkSpeed(this)
  return s__Escaper_walkSpeed[this]
end

function s__Escaper_isAbsoluteSlideSpeed(this)
  return s__Escaper_slideSpeedAbsolute[this]
end

function s__Escaper_absoluteSlideSpeed(this, slideSpeed)
  s__Escaper_slideSpeedAbsolute[this] = true
  s__Escaper_slideSpeed[this] = slideSpeed
end

function s__Escaper_stopAbsoluteSlideSpeed(this)
  local currentTerrainType = nil
  if (s__Escaper_slideSpeedAbsolute[this]) then
    s__Escaper_slideSpeedAbsolute[this] = false
    if ((IsUnitAliveBJ(s__Escaper_hero[(this)]))) then
      -- INLINED!!
      currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
      if ((s__TerrainType_kind[(currentTerrainType)]) == "slide") then
        -- INLINED!!
        s__Escaper_slideSpeed[(this)] = (((s__TerrainTypeSlide_slideSpeed[(((currentTerrainType)))])) * 1.0)
        -- INLINED!!
      end
    end
  end
end

function s__Escaper_isAbsoluteWalkSpeed(this)
  return s__Escaper_walkSpeedAbsolute[this]
end

function s__Escaper_absoluteWalkSpeed(this, walkSpeed)
  s__Escaper_walkSpeedAbsolute[this] = true
  s__Escaper_setWalkSpeed(this, walkSpeed)
end

function s__Escaper_stopAbsoluteWalkSpeed(this)
  local currentTerrainType = nil
  if (s__Escaper_walkSpeedAbsolute[this]) then
    s__Escaper_walkSpeedAbsolute[this] = false
    if ((IsUnitAliveBJ(s__Escaper_hero[(this)]))) then
      -- INLINED!!
      currentTerrainType = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
      if ((s__TerrainType_kind[(currentTerrainType)]) == "walk") then
        -- INLINED!!
        s__Escaper_setWalkSpeed(this, (s__TerrainTypeWalk_walkSpeed[(((currentTerrainType)))]))
        -- INLINED!!
      end
    end
  end
end

--godMode methods    
function s__Escaper_setGodMode(this, godMode)
  s__Escaper_godMode[this] = godMode
end

function s__Escaper_setGodModeKills(this, godModeKills)
  s__Escaper_godModeKills[this] = godModeKills
end

function s__Escaper_isGodModeOn(this)
  return s__Escaper_godMode[this]
end

function s__Escaper_doesGodModeKills(this)
  return s__Escaper_godModeKills[this]
end

--color methods
function s__Escaper_setBaseColor(this, baseColorId)
  if (baseColorId < 0 or baseColorId > 12) then
    return false
  end
  s__Escaper_baseColorId[this] = baseColorId
  if (s__Escaper_hero[this] ~= nil) then
    if (baseColorId == 0) then
      SetUnitColor(s__Escaper_hero[this], PLAYER_COLOR_RED)
    else
      SetUnitColor(s__Escaper_hero[this], ConvertPlayerColor(baseColorId))
    end
  end
  ColorInfo(this, s__Escaper_p[this])
  return true
end

function s__Escaper_setBaseColorDisco(this, baseColorId)
  if (baseColorId < 0 or baseColorId > 12) then
    return false
  end
  s__Escaper_baseColorId[this] = baseColorId
  if (s__Escaper_hero[this] ~= nil) then
    if (baseColorId == 0) then
      SetUnitColor(s__Escaper_hero[this], PLAYER_COLOR_RED)
    else
      SetUnitColor(s__Escaper_hero[this], ConvertPlayerColor(baseColorId))
    end
  end
  return true
end

function s__Escaper_getBaseColor(this)
  return s__Escaper_baseColorId[this]
end

function s__Escaper_setVcRed(this, vcRed)
  if (vcRed < 0 or vcRed > 100) then
    return false
  end
  s__Escaper_vcRed[this] = vcRed
  return true
end

function s__Escaper_setVcGreen(this, vcGreen)
  if (vcGreen < 0 or vcGreen > 100) then
    return false
  end
  s__Escaper_vcGreen[this] = vcGreen
  return true
end

function s__Escaper_setVcBlue(this, vcBlue)
  if (vcBlue < 0 or vcBlue > 100) then
    return false
  end
  s__Escaper_vcBlue[this] = vcBlue
  return true
end

function s__Escaper_setVcTransparency(this, vcTransparency)
  if (vcTransparency < 0 or vcTransparency > 100) then
    return false
  end
  s__Escaper_vcTransparency[this] = vcTransparency
  return true
end

function s__Escaper_getVcRed(this)
  return s__Escaper_vcRed[this]
end

function s__Escaper_getVcGreen(this)
  return s__Escaper_vcGreen[this]
end

function s__Escaper_getVcBlue(this)
  return s__Escaper_vcBlue[this]
end

function s__Escaper_getVcTransparency(this)
  return s__Escaper_vcTransparency[this]
end

function s__Escaper_refreshVertexColor(this)
  SetUnitVertexColorBJ(s__Escaper_hero[this], s__Escaper_vcRed[this], s__Escaper_vcGreen[this], s__Escaper_vcBlue[this], s__Escaper_vcTransparency[this])
  ColorInfo(this, s__Escaper_p[this])
end

--cheat methods
function s__Escaper_setCanCheat(this, canCheat)
  if (not canCheat) then
    s__Escaper_isMaximaxouB[this] = false
    s__Escaper_isTrueMaximaxouB[this] = false
  end
  s__Escaper_canCheatB[this] = canCheat
end

function s__Escaper_setIsMaximaxou(this, isMaximaxou)
  if (isMaximaxou) then
    s__Escaper_setCanCheat(this, true)
  else
    s__Escaper_isTrueMaximaxouB[this] = false
  end
  s__Escaper_isMaximaxouB[this] = isMaximaxou
end

function s__Escaper_setIsTrueMaximaxou(this, isTrueMaximaxou)
  if (isTrueMaximaxou) then
    s__Escaper_setIsMaximaxou(this, true)
  end
  s__Escaper_isTrueMaximaxouB[this] = isTrueMaximaxou
end

function s__Escaper_canCheat(this)
  return s__Escaper_canCheatB[this]
end

function s__Escaper_isMaximaxou(this)
  return s__Escaper_isMaximaxouB[this]
end

function s__Escaper_isTrueMaximaxou(this)
  return s__Escaper_isTrueMaximaxouB[this]
end


--autres
function s__Escaper_getPlayer(this)
  return s__Escaper_p[this]
end

function s__Escaper_setCameraField(this, cameraField)
  s__Escaper_cameraField[this] = cameraField
  SetCameraFieldForPlayer(s__Escaper_p[this], CAMERA_FIELD_TARGET_DISTANCE, I2R(cameraField), 0)
end

function s__Escaper_getCameraField(this)
  return s__Escaper_cameraField[this]
end

function s__Escaper_resetCamera(this)
  ResetToGameCameraForPlayer(s__Escaper_p[this], 0)
  SetCameraFieldForPlayer(s__Escaper_p[this], CAMERA_FIELD_TARGET_DISTANCE, s__Escaper_cameraField[this], 0)
end

function s__Escaper_kick(this, kicked)
  CustomDefeatBJ((s__Escaper_p[(kicked)]), "You have been kicked by " .. GetPlayerName(s__Escaper_p[this]) .. " !")
  -- INLINED!!
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId((s__Escaper_p[(kicked)]))] .. GetPlayerName((s__Escaper_p[(kicked)])) .. " has been kicked by " .. udg_colorCode[GetPlayerId(s__Escaper_p[this])] .. GetPlayerName(s__Escaper_p[this]) .. " !"))
  -- INLINED!!
  s__Escaper_deallocate(kicked)
end


--teleport methods
function s__Escaper_setCanTeleport(this, canTeleport)
  s__Escaper_canTeleportB[this] = canTeleport
end

function s__Escaper_canTeleport(this)
  return s__Escaper_canTeleportB[this]
end


--autorevive methods
function s__Escaper_hasAutorevive(this)
  return s__Escaper_hasAutoreviveB[this]
end

function s__Escaper_setHasAutorevive(this, hasAutorevive)
  s__Escaper_hasAutoreviveB[this] = hasAutorevive
end


--make methods
function s__Escaper_getMake(this)
  return s__Escaper_make[this]
end

function s__Escaper_destroyMakeIfForSpecificLevel(this)
  local doDestroy = nil
  if (s__Escaper_make[this] ~= 0) then
    doDestroy = (si__Make_type[s__Escaper_make[this]] == si__MakeMonsterNoMove)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeMonsterSimplePatrol)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeMonsterMultiplePatrols)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeMonsterTeleport)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeDeleteMonsters)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeMeteor)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeCaster)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeDeleteMeteors)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeStart)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeEnd)
    doDestroy = doDestroy or (si__Make_type[s__Escaper_make[this]] == si__MakeVisibilityModifier)
    if (doDestroy) then
      sc__Escaper_destroyMake(this)
    end
  end
end

function s__Escaper_setMakingLevel(this, level)
  local oldMakingLevel = nil
  if (s__Escaper_makingLevel[this] == level) then
    return false
  end
  oldMakingLevel = s__Escaper_makingLevel[this]
  s__Escaper_makingLevel[this] = level
  s__Escaper_destroyMakeIfForSpecificLevel(this)
  if (not IsLevelBeingMade(oldMakingLevel)) then
    sc__Level_activate(oldMakingLevel, false)
    if (sc__Level_getId(sc__LevelArray_getCurrentLevel(udg_levels)) < sc__Level_getId(oldMakingLevel)) then
      sc__Level_activateVisibilities(oldMakingLevel, false)
    end
  end
  Level_earningLivesActivated = false
  sc__Level_activate(level, true)
  Level_earningLivesActivated = true
  return true
end

function s__Escaper_getMakingLevel(this)
  if (s__Escaper_makingLevel[this] == 0) then
    return sc__LevelArray_getCurrentLevel(udg_levels)
  end
  return s__Escaper_makingLevel[this]
end

function s__Escaper_isMakingCurrentLevel(this)
  return (s__Escaper_makingLevel[this] == 0)
end

function s__Escaper_destroyMake(this)
  if (s__Escaper_make[this] == 0) then
    return false
  end
  sc__Make_deallocate(s__Escaper_make[this])
  s__Escaper_make[this] = 0
  return true
end

function s__Escaper_makeCreateNoMoveMonsters(this, mt, facingAngle)
  --mode : noMove
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeMonsterNoMove_create(s__Escaper_hero[this], mt, facingAngle)
end

function s__Escaper_makeCreateSimplePatrolMonsters(this, mode, mt)
  s__Escaper_destroyMake(this)
  --modes : normal, string, auto
  if (mode == "normal" or mode == "string" or mode == "auto") then
    s__Escaper_make[this] = sc__MakeMonsterSimplePatrol_create(s__Escaper_hero[this], mode, mt)
  end
end

function s__Escaper_makeCreateMultiplePatrolsMonsters(this, mode, mt)
  s__Escaper_destroyMake(this)
  --modes : normal, string
  if (mode == "normal" or mode == "string") then
    s__Escaper_make[this] = sc__MakeMonsterMultiplePatrols_create(s__Escaper_hero[this], mode, mt)
  end
end

function s__Escaper_makeCreateTeleportMonsters(this, mode, mt, period, angle)
  s__Escaper_destroyMake(this)
  --modes : normal, string
  if (mode == "normal" or mode == "string") then
    s__Escaper_make[this] = sc__MakeMonsterTeleport_create(s__Escaper_hero[this], mode, mt, period, angle)
  end
end

function s__Escaper_makeMmpOrMtNext(this)
  if (s__Escaper_make[this] == 0 or not (si__Make_type[s__Escaper_make[this]] == si__MakeMonsterMultiplePatrols or si__Make_type[s__Escaper_make[this]] == si__MakeMonsterTeleport)) then
    return false
  end
  if (si__Make_type[s__Escaper_make[this]] == si__MakeMonsterMultiplePatrols) then
    sc__MakeMonsterMultiplePatrols_nextMonster(((s__Escaper_make[this])))
  else
    sc__MakeMonsterTeleport_nextMonster(((s__Escaper_make[this])))
  end
  return true
end

function s__Escaper_makeMonsterTeleportWait(this)
  if (s__Escaper_make[this] == 0 or si__Make_type[s__Escaper_make[this]] ~= si__MakeMonsterTeleport) then
    return false
  end
  return sc__MakeMonsterTeleport_addWaitPeriod(((s__Escaper_make[this])))
end

function s__Escaper_makeMonsterTeleportHide(this)
  if (s__Escaper_make[this] == 0 or si__Make_type[s__Escaper_make[this]] ~= si__MakeMonsterTeleport) then
    return false
  end
  return sc__MakeMonsterTeleport_addHidePeriod(((s__Escaper_make[this])))
end

function s__Escaper_makeCreateMonsterSpawn(this, label, mt, sens, frequence)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeMonsterSpawn_create(s__Escaper_hero[this], label, mt, sens, frequence)
end

function s__Escaper_makeDeleteMonsters(this, mode)
  s__Escaper_destroyMake(this)
  --delete modes : all, noMove, move, simplePatrol, multiplePatrols, oneByOne
  if (mode ~= "all" and mode ~= "noMove" and mode ~= "move" and mode ~= "simplePatrol" and mode ~= "multiplePatrols" and mode ~= "oneByOne") then
    return
  end
  s__Escaper_make[this] = sc__MakeDeleteMonsters_create(s__Escaper_hero[this], mode)
end

function s__Escaper_makeSetUnitTeleportPeriod(this, mode, period)
  s__Escaper_destroyMake(this)
  --modes : oneByOne, twoClics
  if (mode ~= "twoClics" and mode ~= "oneByOne") then
    return
  end
  s__Escaper_make[this] = sc__MakeSetUnitTeleportPeriod_create(s__Escaper_hero[this], mode, period)
end

function s__Escaper_makeGetUnitTeleportPeriod(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeGetUnitTeleportPeriod_create(s__Escaper_hero[this])
end

function s__Escaper_makeSetUnitMonsterType(this, mode, mt)
  s__Escaper_destroyMake(this)
  --modes : oneByOne, twoClics
  if (mode ~= "twoClics" and mode ~= "oneByOne") then
    return
  end
  s__Escaper_make[this] = sc__MakeSetUnitMonsterType_create(s__Escaper_hero[this], mode, mt)
end

function s__Escaper_makeCreateMeteor(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeMeteor_create(s__Escaper_hero[this])
end

function s__Escaper_makeDeleteMeteors(this, mode)
  s__Escaper_destroyMake(this)
  --delete modes : oneByOne, twoClics
  if (mode ~= "oneByOne" and mode ~= "twoClics") then
    return
  end
  s__Escaper_make[this] = sc__MakeDeleteMeteors_create(s__Escaper_hero[this], mode)
end

function s__Escaper_makeCreateCaster(this, casterType, angle)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeCaster_create(s__Escaper_hero[this], casterType, angle)
end

function s__Escaper_makeDeleteCasters(this, mode)
  s__Escaper_destroyMake(this)
  --delete modes : oneByOne, twoClics
  if (mode ~= "oneByOne" and mode ~= "twoClics") then
    return
  end
  s__Escaper_make[this] = sc__MakeDeleteCasters_create(s__Escaper_hero[this], mode)
end

function s__Escaper_makeCreateClearMobs(this, disableDuration)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeClearMob_create(s__Escaper_hero[this], disableDuration)
end

function s__Escaper_makeDeleteClearMobs(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeDeleteClearMob_create(s__Escaper_hero[this])
end

function s__Escaper_makeCreateTerrain(this, terrainType)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeTerrainCreate_create(s__Escaper_hero[this], terrainType)
end

function s__Escaper_makeTerrainCopyPaste(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeTerrainCopyPaste_create(s__Escaper_hero[this])
end

function s__Escaper_makeTerrainVerticalSymmetry(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeTerrainVerticalSymmetry_create(s__Escaper_hero[this])
end

function s__Escaper_makeTerrainHorizontalSymmetry(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeTerrainHorizontalSymmetry_create(s__Escaper_hero[this])
end

function s__Escaper_makeTerrainHeight(this, radius, height)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeTerrainHeight_create(s__Escaper_hero[this], radius, height)
end

function s__Escaper_makeGetTerrainType(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeGetTerrainType_create(s__Escaper_hero[this])
end

function s__Escaper_makeExchangeTerrains(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeExchangeTerrains_create(s__Escaper_hero[this])
end

function s__Escaper_makeCreateStart(this, forNext)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeStart_create(s__Escaper_hero[this], forNext)
end

function s__Escaper_makeCreateEnd(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeEnd_create(s__Escaper_hero[this])
end

function s__Escaper_makeCreateVisibilityModifier(this)
  s__Escaper_destroyMake(this)
  s__Escaper_make[this] = sc__MakeVisibilityModifier_create(s__Escaper_hero[this])
end

function s__Escaper_cancelLastAction(this)
  if (s__Escaper_make[this] ~= 0) then
    if (sc__Make_cancelLastAction(s__Escaper_make[this])) then
      return true
    end
  end
  return s__MakeLastActions_cancelLastAction(s__Escaper_makeLastActions[this])
end

function s__Escaper_redoLastAction(this)
  if (s__MakeLastActions_redoLastAction(s__Escaper_makeLastActions[this])) then
    return true
  end
  if (s__Escaper_make[this] ~= 0) then
    return sc__Make_redoLastAction(s__Escaper_make[this])
  end
  return false
end

function s__Escaper_deleteSpecificActionsForLevel(this, level)
  s__MakeLastActions_deleteSpecificActionsForLevel(s__Escaper_makeLastActions[this], level)
end

function s__Escaper_newAction(this, action)
  return s__MakeLastActions_newAction(s__Escaper_makeLastActions[this], action)
end

function s__Escaper_destroyAllSavedActions(this)
  s__MakeLastActions_destroyAllActions(s__Escaper_makeLastActions[this])
end

function s__Escaper_destroyCancelledActions(this)
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[this])
end


--for gravity gestion    
function s__Escaper_getLastZ(this)
  return s__Escaper_lastZ[this]
end

function s__Escaper_setLastZ(this, lastZ)
  s__Escaper_lastZ[this] = lastZ
end

function s__Escaper_getOldDiffZ(this)
  return s__Escaper_oldDiffZ[this]
end

function s__Escaper_setOldDiffZ(this, oldDiffZ)
  s__Escaper_oldDiffZ[this] = oldDiffZ
end

function s__Escaper_getSpeedZ(this)
  return s__Escaper_speedZ[this]
end

function s__Escaper_setSpeedZ(this, speedZ)
  s__Escaper_speedZ[this] = speedZ
end


--coop reviving
function s__Escaper_coopReviveHero(this)
  s__Escaper_revive(this, GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
  RunSoundOnUnit(udg_coop_index_son, s__Escaper_hero[this])
  SetUnitAnimation(s__Escaper_hero[this], "channel")
  s__Escaper_absoluteSlideSpeed(this, 0)
  s__Escaper_coopInvul[(this)] = (true)
  -- INLINED!!
  TriggerSleepAction(1.4)
  s__Escaper_stopAbsoluteSlideSpeed(this)
  SetUnitAnimation(s__Escaper_hero[this], "stand")
  TriggerSleepAction(0.6)
  s__Escaper_coopInvul[(this)] = (false)
  -- INLINED!!
end

function s__Escaper_isCoopInvul(this)
  return s__Escaper_coopInvul[this]
end

function s__Escaper_setCoopInvul(this, invul)
  s__Escaper_coopInvul[this] = invul
end

function s__Escaper_enableTrigCoopRevive(this)
  ShowUnit(s__Escaper_powerCircle[this], true)
  SetUnitPathing(s__Escaper_powerCircle[this], false)
  SetUnitPosition(s__Escaper_powerCircle[this], GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
  ShowUnit(s__Escaper_dummyPowerCircle[this], true)
  SetUnitPathing(s__Escaper_dummyPowerCircle[this], false)
  SetUnitPosition(s__Escaper_dummyPowerCircle[this], GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
end

function s__Escaper_refreshCerclePosition(this)
  if (not IsUnitHidden(s__Escaper_powerCircle[this])) then
    SetUnitPosition(s__Escaper_powerCircle[this], GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
    SetUnitPosition(s__Escaper_dummyPowerCircle[this], GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
  end
end






--library Escaper ends
--library SaveTerrainHeights:






--save terrain cliff levels
function SaveTerrainHeights___SaveTerrainCliffs_Actions()
  local x = nil
  local cliffLevel = nil

  if (SaveTerrainHeights___y <= MAP_MAX_Y) then
    x = MAP_MIN_X
    while true do
      if (x > MAP_MAX_X) then
        break
      end
      if (IsNearBounds(x, SaveTerrainHeights___y)) then
        --at MAP_MAX_Y, GetTerrainZ used before makes GetTerrainCliffLevel crashes the game
        cliffLevel = 2
      else
        cliffLevel = GetTerrainCliffLevel(x, SaveTerrainHeights___y)
      end
      s__StringArrayForCache_push(stringArrayForCache, I2HexaString(cliffLevel))
      x = x + LARGEUR_CASE
    end
    SaveTerrainHeights___y = SaveTerrainHeights___y + LARGEUR_CASE
  else
    DisableTrigger(GetTriggeringTrigger())
    s__StringArrayForCache_writeInCache(stringArrayForCache)
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("terrain cliffs saved"))
    -- INLINED!!
    StartSaveTerrainRamps()
  end
end


function StartSaveTerrainCliffs()
  SaveTerrainHeights___y = MAP_MIN_Y
  stringArrayForCache = s__StringArrayForCache_create("terrain", "terrainCliffs", false)
  TriggerClearActions(trigSaveMapInCache)
  TriggerAddAction(trigSaveMapInCache, SaveTerrainHeights___SaveTerrainCliffs_Actions)
  EnableTrigger(trigSaveMapInCache)
end




--save terrain heights
function SaveTerrainHeights___SaveTerrainHeights_Actions()
  local x = nil
  local height = nil
  local isWater = nil

  if (SaveTerrainHeights___y <= MAP_MAX_Y) then
    x = MAP_MIN_X
    while true do
      if (x > MAP_MAX_X) then
        break
      end
      --set isWater = not IsTerrainPathable(x, y, PATHING_TYPE_FLOATABILITY)
      if (IsNearBounds(x, SaveTerrainHeights___y)) then
        --at MAP_MAX_Y, GetTerrainZ crashes the game
        height = GetSurfaceZ(x, SaveTerrainHeights___y)
      else
        height = GetTerrainZ(x, SaveTerrainHeights___y)
      end

      s__StringArrayForCache_push(stringArrayForCache, I2S(R2I(height)))
      x = x + LARGEUR_CASE
    end
    SaveTerrainHeights___y = SaveTerrainHeights___y + LARGEUR_CASE
  else
    DisableTrigger(GetTriggeringTrigger())
    s__StringArrayForCache_writeInCache(stringArrayForCache)
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("terrain heights saved"))
    -- INLINED!!
    StartSaveTerrainCliffs()
  end
end


function StartSaveTerrainHeights()
  SaveTerrainHeights___y = MAP_MIN_Y
  stringArrayForCache = s__StringArrayForCache_create("terrain", "terrainHeights", true)
  TriggerClearActions(trigSaveMapInCache)
  TriggerAddAction(trigSaveMapInCache, SaveTerrainHeights___SaveTerrainHeights_Actions)
  EnableTrigger(trigSaveMapInCache)
end



--library SaveTerrainHeights ends
--library TerrainTypeDeath:





function s__TerrainTypeDeath_create(label, terrainTypeId, killingEffectStr, timeToKill, toleranceDist)
  local i = nil
  local tt = nil
  if (not CanUseTerrain(terrainTypeId)) then
    return 0
  end
  tt = s__TerrainTypeDeath__allocate()
  s__TerrainType_label[tt] = label
  s__TerrainType_theAlias[tt] = nil
  s__TerrainType_terrainTypeId[tt] = terrainTypeId
  s__TerrainTypeDeath_killingEffectStr[tt] = killingEffectStr
  s__TerrainTypeDeath_timeToKill[tt] = timeToKill
  s__TerrainTypeDeath_killingTimers[tt] = s__KillingTimers_create()
  s__TerrainType_kind[tt] = "death"
  s__TerrainTypeDeath_toleranceDist[tt] = toleranceDist
  s__TerrainType_orderId[tt] = 0
  s__TerrainType_cliffClassId[tt] = 1
  return tt
end

function s__TerrainTypeDeath_onDestroy(this)
  s__KillingTimers_deallocate(s__TerrainTypeDeath_killingTimers[this])
end

function s__TerrainTypeDeath_setKillingEffectStr(this, killingEffectStr)
  s__TerrainTypeDeath_killingEffectStr[this] = killingEffectStr
end

function s__TerrainTypeDeath_getKillingEffectStr(this)
  return s__TerrainTypeDeath_killingEffectStr[this]
end

function s__TerrainTypeDeath_setTimeToKill(this, newTimeToKill)
  if (newTimeToKill < 0) then
    return false
  end
  s__TerrainTypeDeath_timeToKill[this] = newTimeToKill
  return true
end

function s__TerrainTypeDeath_getTimeToKill(this)
  return s__TerrainTypeDeath_timeToKill[this]
end

function s__TerrainTypeDeath_killEscaper(this, escaper)
  s__Escaper_enableCheckTerrain(escaper, false)
  s__Escaper_enableSlide(escaper, false)
  s__Escaper_pause(escaper, true)
  s__Escaper_createTerrainKillEffect(escaper, s__TerrainTypeDeath_killingEffectStr[this])
  s__KillingTimers_start(s__TerrainTypeDeath_killingTimers[this], s__Escaper_getId(escaper), s__TerrainTypeDeath_timeToKill[this])
end

function s__TerrainTypeDeath_getTimer(this, escaperId)
  return (s___KillingTimers_timers[s__KillingTimers_timers[(s__TerrainTypeDeath_killingTimers[this])] + (escaperId)])
  -- INLINED!!
end

function s__TerrainTypeDeath_getToleranceDist(this)
  return s__TerrainTypeDeath_toleranceDist[this]
end

function s__TerrainTypeDeath_setToleranceDist(this, toleranceDist)
  if (toleranceDist < 0 or toleranceDist > DEATH_TERRAIN_MAX_TOLERANCE) then
    return false
  end
  s__TerrainTypeDeath_toleranceDist[this] = toleranceDist
  return true
end



--library TerrainTypeDeath ends
--library TrigCheckpointReviveHeroes:





function Trig_Trig_checkpoint_revive_heroes_Actions()
  local l = TrigCheckpointReviveHeroes_levelForReviving
  local finisher = TrigCheckpointReviveHeroes_revivingFinisher
  local escaper = nil
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)])
    -- INLINED!!
    if (escaper ~= 0 and escaper ~= finisher) then
      if (not s__Escaper_reviveAtStart(escaper)) then
        s__Escaper_moveHero(escaper, sc__Level_getStartRandomX(l), sc__Level_getStartRandomY(l))
        StopUnit((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        s__Escaper_pause(escaper, true)
        s__Escaper_lastZ[(escaper)] = ((0) * 1.0)
        -- INLINED!!
        s__Escaper_oldDiffZ[(escaper)] = ((0) * 1.0)
        -- INLINED!!
        s__Escaper_speedZ[(escaper)] = ((0) * 1.0)
        -- INLINED!!
      end
      SetUnitFlyHeight((s__Escaper_hero[(escaper)]), 0, 0)
      -- INLINED!!
      s__Escaper_enableSlide(escaper, false)
    end
    i = i + 1
  end
  TriggerSleepAction(1)
  i = 0
  while true do
    if (i > 11) then
      break
    end
    escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)])
    -- INLINED!!
    if (escaper ~= 0 and escaper ~= finisher) then
      s__Escaper_pause(escaper, false)
    end
    i = i + 1
  end
  if (udg_changeAllTerrainsAtRevive) then
    TriggerSleepAction(1.00)
    ChangeAllTerrains("normal")
  end
end

--===========================================================================
function Init_Trig_checkpoint_revive_heroes()
  gg_trg____Trig_checkpoint_revive_heroes = CreateTrigger()
  TriggerAddAction(gg_trg____Trig_checkpoint_revive_heroes, Trig_Trig_checkpoint_revive_heroes_Actions)
end



--library TrigCheckpointReviveHeroes ends
--library CasterDeleteActions:


function CasterDelete_Actions()

  --modes : oneByOne, twoClics

  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local caster = nil
  local suppressionHashTable = InitHashtable()
  local nbCastersRemoved = 0
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local i = nil

  if (not IsIssuedOrder("smart")) then
    FlushParentHashtable(suppressionHashTable)
    suppressionHashTable = nil
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeDeleteCasters_mode[(mk)]) == "oneByOne") then
    -- INLINED!!
    caster = sc__CasterArray_getCasterNear(s__Level_casters[s__Escaper_getMakingLevel(escaper)], x, l__y)
    if (caster ~= 0 and sg__Caster_get_casterUnit(caster) ~= nil) then
      sc__Caster_disable(caster)
      SaveInteger(suppressionHashTable, 0, nbCastersRemoved, (caster))
      nbCastersRemoved = 1
    end
  else
    --mode twoClics
    if (not (s__MakeDeleteCasters_lastLocSavedIsUsed[(mk)])) then
      -- INLINED!!
      sc__MakeDeleteCasters_saveLoc(mk, x, l__y)
      FlushParentHashtable(suppressionHashTable)
      suppressionHashTable = nil
      return
    end

    i = 0
    while true do
      if (i > sc__CasterArray_getLastInstanceId(s__Level_casters[s__Escaper_getMakingLevel(escaper)])) then
        break
      end
      caster = sc__CasterArray_get(s__Level_casters[s__Escaper_getMakingLevel(escaper)], i)
      if (caster ~= 0 and sg__Caster_get_casterUnit(caster) ~= nil and IsUnitBetweenLocs(sg__Caster_get_casterUnit(caster), s__MakeDeleteCasters_lastX[mk], s__MakeDeleteCasters_lastY[mk], x, l__y)) then
        sc__Caster_disable(caster)
        SaveInteger(suppressionHashTable, 0, nbCastersRemoved, (caster))
        nbCastersRemoved = nbCastersRemoved + 1
      end
      i = i + 1
    end
  end

  if (nbCastersRemoved <= 1) then
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbCastersRemoved) .. " caster removed."))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbCastersRemoved) .. " casters removed."))
    -- INLINED!!
  end

  if (nbCastersRemoved > 0) then
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeDeleteCastersAction_create(s__Escaper_getMakingLevel(escaper), suppressionHashTable)))
    -- INLINED!!
  end

  sc__MakeDeleteCasters_unsaveLocDefinitely(mk)

  FlushParentHashtable(suppressionHashTable)
  suppressionHashTable = nil
end




--library CasterDeleteActions ends
--library CasterMakingActions:



function CasterMaking_Actions()
  local caster = nil
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  caster = sc__CasterArray_new(s__Level_casters[s__Escaper_getMakingLevel(escaper)], (s__MakeCaster_casterType[(mk)]), x, l__y, (s__MakeCaster_angle[(mk)]), true)
  -- INLINED!!
  s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeCasterAction_create(s__Escaper_getMakingLevel(escaper), caster)))
  -- INLINED!!
end




--library CasterMakingActions ends
--library CommandsFunctions:




--gives the name of the entered command  ////the name of the entered command is <command_name>
function CmdName(str)
  local length = StringLength(str)
  local outputStr = ""
  local car = nil
  local i = 0

  if (SubString(str, 0, 1) == "-" and length > 1) then
    car = SubString(str, 1, 2)
    i = 1
    while true do
      if (i >= length or car == " ") then
        break
      end
      outputStr = outputStr .. car
      i = i + 1
      car = SubString(str, i, i + 1)
    end
  end
  if (StringLength(outputStr) >= 1) then
    return outputStr
  end
  return nil
end

function IsCmd(str)
  return CmdName(str) ~= nil
end


--gives the parameter number 'paramNumber' of the entered command : <paramX>
function CmdParam(str, paramNumber)
  local length = StringLength(str)
  local nameLength = StringLength(CmdName(str))
  local outputStr = nil
  local char = nil
  local i = 0
  local currentParamNumber = 1
  local lastSpaceFound_pos = nameLength + 2

  if (not (CmdName((str)) ~= nil)) then
    -- INLINED!!
    return nil
  end

  i = lastSpaceFound_pos + 1

  if (paramNumber == 0) then
    return SubStringBJ(str, i, length)
  end

  while true do
    if (currentParamNumber == paramNumber or i > length) then
      break
    end
    char = SubStringBJ(str, i, i)
    if ((char == " ") and (i - 1 == lastSpaceFound_pos)) then
      return nil
    end
    if (char == " ") then
      lastSpaceFound_pos = i
      currentParamNumber = currentParamNumber + 1
    end
    i = i + 1
  end

  if (currentParamNumber == paramNumber) then
    while true do
      if (i > length) then
        break
      end
      char = SubStringBJ(str, i, i)
      if (char == " ") then
        break
      end
      outputStr = (outputStr or "") .. char
      i = i + 1
    end
    return outputStr
  end
  return nil
end


function NbParam(str)
  local i = 1
  while true do
    if (CmdParam(str, i) == nil) then
      break
    end
    i = i + 1
  end
  return i - 1
end


function NoParam(str)
  return CmdParam(str, 0) == nil
end


function ColorString2Id(colorString)
  if (colorString == "red" or colorString == "rd") then
    return 0
  end
  if (colorString == "blue" or colorString == "be") then
    return 1
  end
  if (colorString == "teal" or colorString == "tl") then
    return 2
  end
  if (colorString == "purple" or colorString == "pe") then
    return 3
  end
  if (colorString == "yellow" or colorString == "yw") then
    return 4
  end
  if (colorString == "orange" or colorString == "oe") then
    return 5
  end
  if (colorString == "green" or colorString == "gn") then
    return 6
  end
  if (colorString == "pink" or colorString == "pk") then
    return 7
  end
  if (colorString == "grey" or colorString == "gray" or colorString == "gy") then
    return 8
  end
  if (colorString == "lightblue" or colorString == "lb") then
    return 9
  end
  if (colorString == "darkgreen" or colorString == "dg") then
    return 10
  end
  if (colorString == "brown" or colorString == "bn") then
    return 11
  end
  if (colorString == "black" or colorString == "bk") then
    return 12
  end
  return 13
end

function IsColorString(colorString)
  return (ColorString2Id(colorString) <= 12)
end

function IsPlayerColorString(colorString)
  return (ColorString2Id(colorString) <= 11)
end





--library CommandsFunctions ends
--library EndMakingActions:



function EndMaking_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeEnd_lastLocSavedIsUsed[(mk)])) then
    -- INLINED!!
    sc__Level_newEnd(s__Escaper_getMakingLevel(escaper), s__MakeEnd_lastX[mk], s__MakeEnd_lastY[mk], x, l__y)
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, ("end made for level " .. I2S(sc__Level_getId(s__Escaper_getMakingLevel(escaper)))))
    -- INLINED!!
    s__Escaper_destroyMake(escaper)
  else
    sc__MakeEnd_saveLoc(mk, x, l__y)
  end
end




--library EndMakingActions ends
--library EscaperArray:



function s__EscaperArray_create()
  local e = s__EscaperArray__allocate()
  local playerId = 0
  while true do
    if (playerId > 11) then
      break
    end
    if (IsPlayerInGame(Player(playerId))) then
      s___EscaperArray_escapers[s__EscaperArray_escapers[e] + playerId] = s__Escaper_create(playerId)
    else
      s___EscaperArray_escapers[s__EscaperArray_escapers[e] + playerId] = 0
    end
    playerId = playerId + 1
  end
  return e
end

function s__EscaperArray_newAt(this, id)
  if (id < 0 or id > 11) then
    return
  end
  if (s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id] ~= 0) then
    return
  end
  s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id] = s__Escaper_create(id)
end

function s__EscaperArray_count(this)
  local n = 0
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if (s___EscaperArray_escapers[s__EscaperArray_escapers[this] + i] ~= 0) then
      n = n + 1
    end
    i = i + 1
  end
  return n
end

function s__EscaperArray_get(this, id)
  return s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id]
end

function s__EscaperArray_nullify(this, id)
  s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id] = 0
end

function s__EscaperArray_remove(this, id)
  s__Escaper_deallocate(s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id])
  s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id] = 0
end

function s__EscaperArray_deleteSpecificActionsForLevel(this, level)
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if (s___EscaperArray_escapers[s__EscaperArray_escapers[this] + i] ~= 0) then
      s__MakeLastActions_deleteSpecificActionsForLevel(s__Escaper_makeLastActions[(s___EscaperArray_escapers[s__EscaperArray_escapers[this] + i])], (level))
      -- INLINED!!
    end
    i = i + 1
  end
end

function s__EscaperArray_destroyMakesIfForSpecificLevel_currentLevel(this)
  --destroy le make des escapers si c'est un make pour spécifique level et que l'escaper make pour le "current_level"
  local doDestroy = nil
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    if (s___EscaperArray_escapers[s__EscaperArray_escapers[this] + i] ~= 0 and (s__Escaper_makingLevel[(s___EscaperArray_escapers[s__EscaperArray_escapers[this] + i])] == 0)) then
      -- INLINED!!
      s__Escaper_destroyMakeIfForSpecificLevel(s___EscaperArray_escapers[s__EscaperArray_escapers[this] + i])
    end
    i = i + 1
  end
end




--library EscaperArray ends
--library GettingTerrainTypeInfoActions:



function GettingTerrainTypeInfo_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, NORMAL_TEXT_COLORCODE, (GetTerrainData(GetTerrainType(x, l__y))))
  -- INLINED!!
end






--library GettingTerrainTypeInfoActions ends
--library Heroes:




function RandomizeStartPositionsAndHeroSpawnOrder()
  local alreadyAdded = __jarray(false)
  local n = nil
  local i = nil

  --randomize start positions
  i = 0
  while true do
    if (i > 11) then
      break
    end
    while true do
      n = GetRandomInt(0, 11)
      if (not alreadyAdded[n]) then
        break
      end
    end
    startPositionsRandomized[i] = startPositions[n]
    alreadyAdded[n] = true
    i = i + 1
  end

  --reinit alreadyAdded to false
  i = 0
  while true do
    if (i > 11) then
      break
    end
    alreadyAdded[i] = false
    i = i + 1
  end

  --randomize hero spawn order
  i = 0
  while true do
    if (i > 11) then
      break
    end
    while true do
      n = GetRandomInt(0, 11)
      if (not alreadyAdded[n]) then
        break
      end
    end
    playerIdsRandomized[i] = n
    alreadyAdded[n] = true
    i = i + 1
  end
end



function Trig_heroes_Actions()
  local alreadyAdded = __jarray(false)
  local anEffect = nil
  local i = nil
  local n = nil

  --randomize start positions
  RandomizeStartPositionsAndHeroSpawnOrder()

  --create heroes
  ClearSelection()
  i = 0
  while true do
    if (i > 11) then
      break
    end
    n = playerIdsRandomized[i]
    if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= 0) then
      -- INLINED!!
      s__Escaper_createHero((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]), GetLocationX(startPositionsRandomized[n]), GetLocationY(startPositionsRandomized[n]), HERO_START_ANGLE)
      -- INLINED!!
    else
      anEffect = AddSpecialEffectLoc(EFFECT_FOR_MISSING_HEROES, startPositionsRandomized[n])
      DestroyEffect(anEffect)
    end
    startPositionsRandomized[n] = nil
    TriggerSleepAction(TIME_BETWEEN_EACH_HERO_SPAWN)
    i = i + 1
  end
  --call EnableTrigger(gg_trg_anticheat_teleport_and_revive)
  --set AnticheatTeleport_justRevived = true
  anEffect = nil
end

--===========================================================================
function Init_Heroes()
  --define start positions
  local minX = GetRectMinX(gg_rct_departLvl_0)
  local minY = GetRectMinY(gg_rct_departLvl_0)
  local diffX = (GetRectMaxX(gg_rct_departLvl_0) - minX) / (Heroes___NB_COLUMNS - 1)
  local diffY = (GetRectMaxY(gg_rct_departLvl_0) - minY) / (Heroes___NB_ROWS - 1)
  local x = 0
  local l__y = 0
  local n = 0
  while true do
    if (l__y > Heroes___NB_ROWS - 1) then
      break
    end
    while true do
      if (x > Heroes___NB_COLUMNS - 1) then
        break
      end
      startPositions[n] = Location(minX + diffX * x, minY + diffY * l__y)
      n = n + 1
      x = x + 1
    end
    x = 0
    l__y = l__y + 1
  end

  gg_trg_Heroes = CreateTrigger()
  TriggerAddAction(gg_trg_Heroes, Trig_heroes_Actions)
  TriggerRegisterTimerEvent(gg_trg_Heroes, TIME_BEFORE_HERO_SPAWN, false)
end



--library Heroes ends
--library MClearMobActions:



function ClearMobMaking_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  local Mnm = nil
  local Msp = nil
  local Mmp = nil
  local Mt = nil
  local caster = nil
  local monsterOrCasterId = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  --recherche du monsterOrCaster cliqué
  Mnm = sc__MonsterNoMoveArray_getMonsterNear(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)], x, l__y)
  if (Mnm ~= 0 and sg__Monster_get_u(Mnm) ~= nil) then
    monsterOrCasterId = sc__MonsterNoMove_getId(Mnm)
  else
    Msp = sc__MonsterSimplePatrolArray_getMonsterNear(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], x, l__y)
    if (Msp ~= 0 and sg__Monster_get_u(Msp) ~= nil) then
      monsterOrCasterId = sc__MonsterSimplePatrol_getId(Msp)
    else
      Mmp = sc__MonsterMultiplePatrolsArray_getMonsterNear(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)], x, l__y)
      if (Mmp ~= 0 and sg__Monster_get_u(Mmp) ~= nil) then
        monsterOrCasterId = sc__MonsterMultiplePatrols_getId(Mmp)
      else
        Mt = sc__MonsterTeleportArray_getMonsterNear(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], x, l__y)
        if (Mt ~= 0 and sg__Monster_get_u(Mt) ~= nil) then
          monsterOrCasterId = sc__MonsterTeleport_getId(Mt)
        else
          caster = sc__CasterArray_getCasterNear(s__Level_casters[s__Escaper_getMakingLevel(escaper)], x, l__y)
          if (caster ~= 0 and sg__Caster_get_casterUnit(caster) ~= nil) then
            monsterOrCasterId = sc__Caster_getId(caster)
          else
            monsterOrCasterId = 0
          end
        end
      end
    end
  end

  --application du clic
  if (monsterOrCasterId == 0) then
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("no monster clicked for your making level"))
    -- INLINED!!
  else
    sc__MakeClearMob_clickMade(mk, monsterOrCasterId)
  end
end




--library MClearMobActions ends
--library MClearMobDeleteActions:



function ClearMobDelete_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  local Mnm = nil
  local Msp = nil
  local Mmp = nil
  local Mt = nil
  local caster = nil
  local monsterOrCasterId = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  --recherche du monsterOrCaster cliqué
  Mnm = sc__MonsterNoMoveArray_getMonsterNear(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)], x, l__y)
  if (Mnm ~= 0 and sg__Monster_get_u(Mnm) ~= nil) then
    monsterOrCasterId = sc__MonsterNoMove_getId(Mnm)
  else
    Msp = sc__MonsterSimplePatrolArray_getMonsterNear(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], x, l__y)
    if (Msp ~= 0 and sg__Monster_get_u(Msp) ~= nil) then
      monsterOrCasterId = sc__MonsterSimplePatrol_getId(Msp)
    else
      Mmp = sc__MonsterMultiplePatrolsArray_getMonsterNear(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)], x, l__y)
      if (Mmp ~= 0 and sg__Monster_get_u(Mmp) ~= nil) then
        monsterOrCasterId = sc__MonsterMultiplePatrols_getId(Mmp)
      else
        Mt = sc__MonsterTeleportArray_getMonsterNear(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], x, l__y)
        if (Mt ~= 0 and sg__Monster_get_u(Mt) ~= nil) then
          monsterOrCasterId = sc__MonsterTeleport_getId(Mt)
        else
          caster = sc__CasterArray_getCasterNear(s__Level_casters[s__Escaper_getMakingLevel(escaper)], x, l__y)
          if (caster ~= 0 and sg__Caster_get_casterUnit(caster) ~= nil) then
            monsterOrCasterId = sc__Caster_getId(caster)
          else
            monsterOrCasterId = 0
          end
        end
      end
    end
  end

  --application du clic
  if (monsterOrCasterId == 0) then
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("no monster clicked for your making level"))
    -- INLINED!!
  else
    sc__MakeDeleteClearMob_clickMade(mk, monsterOrCasterId)
  end
end




--library MClearMobDeleteActions ends
--library MMMultiplePatrolsActions:


function MonsterMakingMultiplePatrols_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local erreur = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeMonsterMultiplePatrols_locPointeur[(mk)]) >= 0) then
    -- INLINED!!
    erreur = sc__MonsterMultiplePatrols_addNewLoc((s__MakeMonsterMultiplePatrols_monster[(mk)]), x, l__y)
    -- INLINED!!
    if (erreur > 0) then
      if (erreur == 3) then
        Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("Number limit of patrol locations reached for this monster ! ( " .. I2S(s__MonsterMultiplePatrols_NB_MAX_LOC) .. " )"))
        -- INLINED!!
      end
      if (erreur == 2) then
        Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("Too close to the last location !"))
        -- INLINED!!
      end
      if (erreur == 1) then
        Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("Too close to the first location !"))
        -- INLINED!!
      end
    else
      sc__MakeMonsterMultiplePatrols_saveLoc(mk, x, l__y)
    end
  else
    s__MonsterMultiplePatrols_staticLastLocInd = -1
    -- INLINED!!
    sc__MonsterMultiplePatrols_storeNewLoc(x, l__y)
    sc__MakeMonsterMultiplePatrols_saveLoc(mk, x, l__y)
    sc__MakeMonsterMultiplePatrols_setMonster(mk, sc__MonsterMultiplePatrolsArray_new(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)], (s__MakeMonsterMultiplePatrols_mt[(mk)]), (s__MakeMonsterMultiplePatrols_mode[(mk)]), true))
    -- INLINED!!
  end
end




--library MMMultiplePatrolsActions ends
--library MMNoMoveActions:



function MonsterMakingNoMove_Actions()
  local monster = nil
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  monster = sc__MonsterNoMoveArray_new(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)], (s__MakeMonsterNoMove_mt[(mk)]), x, l__y, (s__MakeMonsterNoMove_facingAngle[(mk)]), true)
  -- INLINED!!
  s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), monster)))
  -- INLINED!!
end




--library MMNoMoveActions ends
--library MMSimplePatrolActions:



function MakeSimplePatrolAuto_ChangeDistOnTerrain(newDist)
  if (newDist < 0 or newDist > MMSimplePatrolActions__DIST_ON_TERRAIN_MAX) then
    return false
  end
  MMSimplePatrolActions__distOnTerrain = newDist
  return true
end

function MakeSimplePatrolAuto_ChangeDistOnTerrainDefault()
  MMSimplePatrolActions__distOnTerrain = MMSimplePatrolActions__DIST_ON_TERRAIN_DEFAULT
end


function MonsterMakingSimplePatrol_Actions()
  local monster = nil
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  local x1 = nil
  local y1 = nil
  local x2 = nil
  local y2 = nil
  local dist = nil
  local angle = nil
  local found = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeMonsterSimplePatrol_mode[(mk)]) == "normal") then
    -- INLINED!!
    if ((s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[(mk)])) then
      -- INLINED!!
      if (GetLocDist(s__MakeMonsterSimplePatrol_lastX[mk], s__MakeMonsterSimplePatrol_lastY[mk], x, l__y) <= PATROL_DISTANCE_MIN) then
        Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("Too close to the start location !"))
        -- INLINED!!
        return
      else
        monster = sc__MonsterSimplePatrolArray_new(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], (s__MakeMonsterSimplePatrol_mt[(mk)]), s__MakeMonsterSimplePatrol_lastX[mk], s__MakeMonsterSimplePatrol_lastY[mk], x, l__y, true)
        -- INLINED!!
        s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), monster)))
        -- INLINED!!
        sc__MakeMonsterSimplePatrol_unsaveLocDefinitely(mk)
      end
    else
      sc__MakeMonsterSimplePatrol_saveLoc(mk, x, l__y)
    end
  end


  if ((s__MakeMonsterSimplePatrol_mode[(mk)]) == "string") then
    -- INLINED!!
    if ((s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[(mk)])) then
      -- INLINED!!
      if (GetLocDist(s__MakeMonsterSimplePatrol_lastX[mk], s__MakeMonsterSimplePatrol_lastY[mk], x, l__y) <= PATROL_DISTANCE_MIN) then
        Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("Too close to the start location !"))
        -- INLINED!!
        return
      else
        monster = sc__MonsterSimplePatrolArray_new(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], (s__MakeMonsterSimplePatrol_mt[(mk)]), s__MakeMonsterSimplePatrol_lastX[mk], s__MakeMonsterSimplePatrol_lastY[mk], x, l__y, true)
        -- INLINED!!
        s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), monster)))
        -- INLINED!!
        sc__MakeMonsterSimplePatrol_unsaveLoc(mk)
      end
    end
    sc__MakeMonsterSimplePatrol_saveLoc(mk, x, l__y)
  end


  if ((s__MakeMonsterSimplePatrol_mode[(mk)]) == "auto") then
    -- INLINED!!
    if (IsTerrainTypeOfKind(GetTerrainType(x, l__y), "death")) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("You clicked on a death terrain !"))
      -- INLINED!!
      return
    end

    --find approximatively first location
    found = false
    dist = MMSimplePatrolActions__MIN_DIST
    while true do
      if (found or dist > MMSimplePatrolActions__MAX_DIST) then
        break
      end
      angle = 0
      x1 = x + dist * CosBJ(angle)
      y1 = l__y + dist * SinBJ(angle)
      found = IsTerrainTypeOfKind(GetTerrainType(x1, y1), "death")
      if found then
        break
      end

      angle = 90
      x1 = x + dist * CosBJ(angle)
      y1 = l__y + dist * SinBJ(angle)
      found = IsTerrainTypeOfKind(GetTerrainType(x1, y1), "death")
      if found then
        break
      end

      angle = 180
      x1 = x + dist * CosBJ(angle)
      y1 = l__y + dist * SinBJ(angle)
      found = IsTerrainTypeOfKind(GetTerrainType(x1, y1), "death")
      if found then
        break
      end

      angle = 270
      x1 = x + dist * CosBJ(angle)
      y1 = l__y + dist * SinBJ(angle)
      found = IsTerrainTypeOfKind(GetTerrainType(x1, y1), "death")
      if found then
        break
      end

      angle = 1
      while true do
        if (found or angle >= 360) then
          break
        end
        x1 = x + dist * CosBJ(angle)
        y1 = l__y + dist * SinBJ(angle)
        found = IsTerrainTypeOfKind(GetTerrainType(x1, y1), "death")
        angle = angle + MMSimplePatrolActions__ECART_ANGLE
      end
      angle = angle - MMSimplePatrolActions__ECART_ANGLE

      dist = dist + MMSimplePatrolActions__ECART_DIST
    end

    --first location not found
    if (not found) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("Death terrain too far !"))
      -- INLINED!!
      return
    end

    --precise position of first location
    while true do
      if (not IsTerrainTypeOfKind(GetTerrainType(x1, y1), "death")) then
        break
      end
      dist = dist - 1
      x1 = x + dist * CosBJ(angle)
      y1 = l__y + dist * SinBJ(angle)
    end
    dist = dist + MMSimplePatrolActions__distOnTerrain + 1
    x1 = x + dist * CosBJ(angle)
    y1 = l__y + dist * SinBJ(angle)

    --prepare angle for the second location
    if (angle >= 180) then
      angle = angle - 180
    else
      angle = angle + 180
    end

    --find approximatively second location
    found = false
    dist = MMSimplePatrolActions__MIN_DIST
    while true do
      if (found or dist > MMSimplePatrolActions__MAX_DIST) then
        break
      end
      x2 = x + dist * CosBJ(angle)
      y2 = l__y + dist * SinBJ(angle)
      found = IsTerrainTypeOfKind(GetTerrainType(x2, y2), "death")
      dist = dist + MMSimplePatrolActions__ECART_DIST
    end

    --second location not found
    if (not found) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("Death terrain too far for the second location !"))
      -- INLINED!!
      return
    end

    --precise position of second location
    while true do
      if (not IsTerrainTypeOfKind(GetTerrainType(x2, y2), "death")) then
        break
      end
      dist = dist - 1
      x2 = x + dist * CosBJ(angle)
      y2 = l__y + dist * SinBJ(angle)
    end
    dist = dist + MMSimplePatrolActions__distOnTerrain + 1
    x2 = x + dist * CosBJ(angle)
    y2 = l__y + dist * SinBJ(angle)

    --the two locations were found, creating monster
    monster = sc__MonsterSimplePatrolArray_new(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], (s__MakeMonsterSimplePatrol_mt[(mk)]), x1, y1, x2, y2, true)
    -- INLINED!!
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), monster)))
    -- INLINED!!
  end
end




--library MMSimplePatrolActions ends
--library MMTeleportActions:


function MonsterMakingTeleport_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeMonsterTeleport_locPointeur[(mk)]) >= 0) then
    -- INLINED!!
    if (not sc__MonsterTeleport_addNewLoc((s__MakeMonsterTeleport_monster[(mk)]), x, l__y)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("Number limit of actions reached for this monster ! ( " .. I2S(s__MonsterTeleport_NB_MAX_LOC) .. " )"))
      -- INLINED!!
    else
      sc__MakeMonsterTeleport_saveLoc(mk, x, l__y)
    end
  else
    s__MonsterTeleport_staticLastLocInd = -1
    -- INLINED!!
    sc__MonsterTeleport_storeNewLoc(x, l__y)
    sc__MakeMonsterTeleport_saveLoc(mk, x, l__y)
    sc__MakeMonsterTeleport_setMonster(mk, sc__MonsterTeleportArray_new(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], (s__MakeMonsterTeleport_mt[(mk)]), (s__MakeMonsterTeleport_period[(mk)]), (s__MakeMonsterTeleport_angle[(mk)]), (s__MakeMonsterTeleport_mode[(mk)]), true))
    -- INLINED!!
  end
end




--library MMTeleportActions ends
--library MakeExchangeTerrainsActions:


function MakeExchangeTerrains_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local terrainTypeA = nil
  local terrainTypeB = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  if ((s__MakeExchangeTerrains_lastLocSavedIsUsed[(mk)])) then
    -- INLINED!!
    terrainTypeA = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, s__MakeExchangeTerrains_lastX[mk], s__MakeExchangeTerrains_lastY[mk])
    terrainTypeB = sc__TerrainTypeArray_getTerrainType(udg_terrainTypes, x, l__y)
    ExchangeTerrains(s__TerrainType_label[terrainTypeA], s__TerrainType_label[terrainTypeB])
    sc__MakeExchangeTerrains_unsaveLocDefinitely(mk)
  else
    sc__MakeExchangeTerrains_saveLoc(mk, x, l__y)
  end
end



--library MakeExchangeTerrainsActions ends
--library MakeGetUnitTeleportPeriodActions:


function GetUnitTeleportPeriod_Actions()

  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local monster = nil
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local i = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  monster = sc__MonsterTeleportArray_getMonsterNear(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], x, l__y)
  if (monster ~= 0 and sg__Monster_get_u(monster) ~= nil) then
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, ("period : " .. R2S(sc__MonsterTeleport_getPeriod(monster)) .. " s"))
    -- INLINED!!
  end
end




--library MakeGetUnitTeleportPeriodActions ends
--library MakeSetUnitMonsterTypeActions:


function SetUnitMonsterType_Actions()

  --modes : oneByOne, twoClics

  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local monster = nil
  local nbMonstersFixed = 0
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local i = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeSetUnitMonsterType_mode[(mk)]) == "oneByOne") then
    -- INLINED!!
    monster = sc__MonsterNoMoveArray_getMonsterNear(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)], x, l__y)
    if (monster == 0 or sg__Monster_get_u(monster) == nil) then
      monster = sc__MonsterSimplePatrolArray_getMonsterNear(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], x, l__y)
      if (monster == 0 or sg__Monster_get_u(monster) == nil) then
        monster = sc__MonsterMultiplePatrolsArray_getMonsterNear(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)], x, l__y)
        if (monster == 0 or sg__Monster_get_u(monster) == nil) then
          monster = sc__MonsterTeleportArray_getMonsterNear(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], x, l__y)
        end
      end
    end
    if (monster ~= 0 and sg__Monster_get_u(monster) ~= nil) then
      if (sc__Monster_setMonsterType(monster, (s__MakeSetUnitMonsterType_mt[(mk)]))) then
        -- INLINED!!
        nbMonstersFixed = 1
      end
    end
  else
    --mode twoClics
    if (not (s__MakeSetUnitMonsterType_lastLocSavedIsUsed[(mk)])) then
      -- INLINED!!
      sc__MakeSetUnitMonsterType_saveLoc(mk, x, l__y)
      return
    end

    i = 0
    while true do
      if (i > sc__MonsterNoMoveArray_getLastInstanceId(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)])) then
        break
      end
      monster = sc__MonsterNoMoveArray_get(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)], i)
      if (monster ~= 0 and sg__Monster_get_u(monster) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(monster), s__MakeSetUnitMonsterType_lastX[mk], s__MakeSetUnitMonsterType_lastY[mk], x, l__y)) then
        if (sc__Monster_setMonsterType(monster, (s__MakeSetUnitMonsterType_mt[(mk)]))) then
          -- INLINED!!
          nbMonstersFixed = nbMonstersFixed + 1
        end
      end
      i = i + 1
    end

    i = 0
    while true do
      if (i > sc__MonsterSimplePatrolArray_getLastInstanceId(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)])) then
        break
      end
      monster = sc__MonsterSimplePatrolArray_get(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], i)
      if (monster ~= 0 and sg__Monster_get_u(monster) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(monster), s__MakeSetUnitMonsterType_lastX[mk], s__MakeSetUnitMonsterType_lastY[mk], x, l__y)) then
        if (sc__Monster_setMonsterType(monster, (s__MakeSetUnitMonsterType_mt[(mk)]))) then
          -- INLINED!!
          nbMonstersFixed = nbMonstersFixed + 1
        end
      end
      i = i + 1
    end

    i = 0
    while true do
      if (i > sc__MonsterMultiplePatrolsArray_getLastInstanceId(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)])) then
        break
      end
      monster = sc__MonsterMultiplePatrolsArray_get(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)], i)
      if (monster ~= 0 and sg__Monster_get_u(monster) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(monster), s__MakeSetUnitMonsterType_lastX[mk], s__MakeSetUnitMonsterType_lastY[mk], x, l__y)) then
        if (sc__Monster_setMonsterType(monster, (s__MakeSetUnitMonsterType_mt[(mk)]))) then
          -- INLINED!!
          nbMonstersFixed = nbMonstersFixed + 1
        end
      end
      i = i + 1
    end

    i = 0
    while true do
      if (i > sc__MonsterTeleportArray_getLastInstanceId(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)])) then
        break
      end
      monster = sc__MonsterTeleportArray_get(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], i)
      if (monster ~= 0 and sg__Monster_get_u(monster) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(monster), s__MakeSetUnitMonsterType_lastX[mk], s__MakeSetUnitMonsterType_lastY[mk], x, l__y)) then
        if (sc__Monster_setMonsterType(monster, (s__MakeSetUnitMonsterType_mt[(mk)]))) then
          -- INLINED!!
          nbMonstersFixed = nbMonstersFixed + 1
        end
      end
      i = i + 1
    end
  end

  if (nbMonstersFixed <= 1) then
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbMonstersFixed) .. " monster fixed."))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbMonstersFixed) .. " monsters fixed."))
    -- INLINED!!
  end

  sc__MakeSetUnitMonsterType_unsaveLocDefinitely(mk)
end




--library MakeSetUnitMonsterTypeActions ends
--library MakeSetUnitTeleportPeriodActions:


function SetUnitTeleportPeriod_Actions()

  --modes : oneByOne, twoClics

  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local monster = nil
  local nbMonstersFixed = 0
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local i = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeSetUnitTeleportPeriod_mode[(mk)]) == "oneByOne") then
    -- INLINED!!
    monster = sc__MonsterTeleportArray_getMonsterNear(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], x, l__y)
    if (monster ~= 0 and sg__Monster_get_u(monster) ~= nil) then
      sc__MonsterTeleport_setPeriod(monster, (s__MakeSetUnitTeleportPeriod_period[(mk)]))
      -- INLINED!!
      nbMonstersFixed = 1
    end
  else
    --mode twoClics
    if (not (s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[(mk)])) then
      -- INLINED!!
      sc__MakeSetUnitTeleportPeriod_saveLoc(mk, x, l__y)
      return
    end

    i = 0
    while true do
      if (i > sc__MonsterTeleportArray_getLastInstanceId(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)])) then
        break
      end
      monster = sc__MonsterTeleportArray_get(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], i)
      if (monster ~= 0 and sg__Monster_get_u(monster) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(monster), s__MakeSetUnitTeleportPeriod_lastX[mk], s__MakeSetUnitTeleportPeriod_lastY[mk], x, l__y)) then
        sc__MonsterTeleport_setPeriod(monster, (s__MakeSetUnitTeleportPeriod_period[(mk)]))
        -- INLINED!!
        nbMonstersFixed = nbMonstersFixed + 1
      end
      i = i + 1
    end
  end

  if (nbMonstersFixed <= 1) then
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbMonstersFixed) .. " monster fixed."))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbMonstersFixed) .. " monsters fixed."))
    -- INLINED!!
  end

  sc__MakeSetUnitTeleportPeriod_unsaveLocDefinitely(mk)
end




--library MakeSetUnitTeleportPeriodActions ends
--library MeteorDeleteActions:


function MeteorDelete_Actions()

  --modes : oneByOne, twoClics

  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local meteor = nil
  local suppressionHashTable = InitHashtable()
  local nbMeteorsRemoved = 0
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local i = nil

  if (not IsIssuedOrder("smart")) then
    FlushParentHashtable(suppressionHashTable)
    suppressionHashTable = nil
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeDeleteMeteors_mode[(mk)]) == "oneByOne") then
    -- INLINED!!
    if (GetItemTypeId(GetOrderTargetItem()) ~= METEOR_NORMAL) then
      FlushParentHashtable(suppressionHashTable)
      suppressionHashTable = nil
      return
    end
    meteor = (GetItemUserData(GetOrderTargetItem()))
    if (meteor ~= 0 and (s__Meteor_meteor[(meteor)]) ~= nil) then
      -- INLINED!!
      s__Meteor_removeMeteor(meteor)
      SaveInteger(suppressionHashTable, 0, nbMeteorsRemoved, (meteor))
      nbMeteorsRemoved = 1
    end
  else
    --mode twoClics
    if (not (s__MakeDeleteMeteors_lastLocSavedIsUsed[(mk)])) then
      -- INLINED!!
      sc__MakeDeleteMeteors_saveLoc(mk, x, l__y)
      FlushParentHashtable(suppressionHashTable)
      suppressionHashTable = nil
      return
    end

    i = 0
    while true do
      if (i > (s__MeteorArray_lastInstance[(s__Level_meteors[s__Escaper_getMakingLevel(escaper)])])) then
        break
      end
      -- INLINED!!
      meteor = s__MeteorArray_get(s__Level_meteors[s__Escaper_getMakingLevel(escaper)], i)
      if (meteor ~= 0 and (s__Meteor_meteor[(meteor)]) ~= nil and IsItemBetweenLocs((s__Meteor_meteor[(meteor)]), s__MakeDeleteMeteors_lastX[mk], s__MakeDeleteMeteors_lastY[mk], x, l__y)) then
        -- INLINED!!
        s__Meteor_removeMeteor(meteor)
        SaveInteger(suppressionHashTable, 0, nbMeteorsRemoved, (meteor))
        nbMeteorsRemoved = nbMeteorsRemoved + 1
      end
      i = i + 1
    end
  end

  if (nbMeteorsRemoved <= 1) then
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbMeteorsRemoved) .. " meteor removed."))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbMeteorsRemoved) .. " meteors removed."))
    -- INLINED!!
  end

  if (nbMeteorsRemoved > 0) then
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeDeleteMeteorsAction_create(s__Escaper_getMakingLevel(escaper), suppressionHashTable)))
    -- INLINED!!
  end

  sc__MakeDeleteMeteors_unsaveLocDefinitely(mk)

  FlushParentHashtable(suppressionHashTable)
  suppressionHashTable = nil
end




--library MeteorDeleteActions ends
--library MeteorMakingActions:



function MeteorMaking_Actions()
  local meteor = nil
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  meteor = s__MeteorArray_new(s__Level_meteors[s__Escaper_getMakingLevel(escaper)], x, l__y, true)
  s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMeteorAction_create(s__Escaper_getMakingLevel(escaper), meteor)))
  -- INLINED!!
end




--library MeteorMakingActions ends
--library MonsterDeleteActions:


function MonsterDelete_Actions()

  --modes : oneByOne, all, noMove, move, simplePatrol, multiplePatrols

  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local Mnm = nil
  local Msp = nil
  local Mmp = nil
  local Mt = nil
  local suppressionHashTable = InitHashtable()
  local nbMonstersRemoved = 0
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local i = nil

  if (not IsIssuedOrder("smart")) then
    FlushParentHashtable(suppressionHashTable)
    suppressionHashTable = nil
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeDeleteMonsters_mode[(mk)]) == "oneByOne") then
    -- INLINED!!
    Mnm = sc__MonsterNoMoveArray_getMonsterNear(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)], x, l__y)
    if (Mnm ~= 0 and sg__Monster_get_u(Mnm) ~= nil) then
      sc__MonsterNoMove_removeUnit(Mnm)
      SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, (Mnm))
      nbMonstersRemoved = 1
    else
      Msp = sc__MonsterSimplePatrolArray_getMonsterNear(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], x, l__y)
      if (Msp ~= 0 and sg__Monster_get_u(Msp) ~= nil) then
        sc__MonsterSimplePatrol_removeUnit(Msp)
        SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, (Msp))
        nbMonstersRemoved = 1
      else
        Mmp = sc__MonsterMultiplePatrolsArray_getMonsterNear(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)], x, l__y)
        if (Mmp ~= 0 and sg__Monster_get_u(Mmp) ~= nil) then
          sc__MonsterMultiplePatrols_removeUnit(Mmp)
          SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, (Mmp))
          nbMonstersRemoved = 1
        else
          Mt = sc__MonsterTeleportArray_getMonsterNear(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], x, l__y)
          if (Mt ~= 0 and sg__Monster_get_u(Mt) ~= nil) then
            sc__MonsterTeleport_removeUnit(Mt)
            SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, (Mt))
            nbMonstersRemoved = 1
          end
        end
      end
    end

  else

    if (not (s__MakeDeleteMonsters_lastLocSavedIsUsed[(mk)])) then
      -- INLINED!!
      sc__MakeDeleteMonsters_saveLoc(mk, x, l__y)
      FlushParentHashtable(suppressionHashTable)
      suppressionHashTable = nil
      return
    end


    --no move
    if ((s__MakeDeleteMonsters_mode[(mk)]) == "all" or (s__MakeDeleteMonsters_mode[(mk)]) == "noMove") then
      -- INLINED!!
      i = 0
      while true do
        if (i > sc__MonsterNoMoveArray_getLastInstanceId(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)])) then
          break
        end
        Mnm = sc__MonsterNoMoveArray_get(s__Level_monstersNoMove[s__Escaper_getMakingLevel(escaper)], i)
        if (Mnm ~= 0) then
          if (sg__Monster_get_u(Mnm) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(Mnm), s__MakeDeleteMonsters_lastX[mk], s__MakeDeleteMonsters_lastY[mk], x, l__y)) then
            sc__MonsterNoMove_removeUnit(Mnm)
            SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, (Mnm))
            nbMonstersRemoved = nbMonstersRemoved + 1
          end
        end
        i = i + 1
      end
    end

    --simple patrol
    if ((s__MakeDeleteMonsters_mode[(mk)]) == "all" or (s__MakeDeleteMonsters_mode[(mk)]) == "move" or (s__MakeDeleteMonsters_mode[(mk)]) == "simplePatrol") then
      -- INLINED!!
      i = 0
      while true do
        if (i > sc__MonsterSimplePatrolArray_getLastInstanceId(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)])) then
          break
        end
        Msp = sc__MonsterSimplePatrolArray_get(s__Level_monstersSimplePatrol[s__Escaper_getMakingLevel(escaper)], i)
        if (Msp ~= 0) then
          if (sg__Monster_get_u(Msp) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(Msp), s__MakeDeleteMonsters_lastX[mk], s__MakeDeleteMonsters_lastY[mk], x, l__y)) then
            sc__MonsterSimplePatrol_removeUnit(Msp)
            SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, (Msp))
            nbMonstersRemoved = nbMonstersRemoved + 1
          end
        end
        i = i + 1
      end
    end

    --multiple patrol
    if ((s__MakeDeleteMonsters_mode[(mk)]) == "all" or (s__MakeDeleteMonsters_mode[(mk)]) == "move" or (s__MakeDeleteMonsters_mode[(mk)]) == "multiplePatrols") then
      -- INLINED!!
      i = 0
      while true do
        if (i > sc__MonsterMultiplePatrolsArray_getLastInstanceId(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)])) then
          break
        end
        Mmp = sc__MonsterMultiplePatrolsArray_get(s__Level_monstersMultiplePatrols[s__Escaper_getMakingLevel(escaper)], i)
        if (Mmp ~= 0) then
          if (sg__Monster_get_u(Mmp) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(Mmp), s__MakeDeleteMonsters_lastX[mk], s__MakeDeleteMonsters_lastY[mk], x, l__y)) then
            sc__MonsterMultiplePatrols_removeUnit(Mmp)
            SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, (Mmp))
            nbMonstersRemoved = nbMonstersRemoved + 1
          end
        end
        i = i + 1
      end
    end

    --teleport
    if ((s__MakeDeleteMonsters_mode[(mk)]) == "all") then
      -- INLINED!!
      i = 0
      while true do
        if (i > sc__MonsterTeleportArray_getLastInstanceId(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)])) then
          break
        end
        Mt = sc__MonsterTeleportArray_get(s__Level_monstersTeleport[s__Escaper_getMakingLevel(escaper)], i)
        if (Mt ~= 0) then
          if (sg__Monster_get_u(Mt) ~= nil and IsUnitBetweenLocs(sg__Monster_get_u(Mt), s__MakeDeleteMonsters_lastX[mk], s__MakeDeleteMonsters_lastY[mk], x, l__y)) then
            sc__MonsterTeleport_removeUnit(Mt)
            SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, (Mt))
            nbMonstersRemoved = nbMonstersRemoved + 1
          end
        end
        i = i + 1
      end
    end
  end

  if (nbMonstersRemoved <= 1) then
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbMonstersRemoved) .. " monster removed."))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, (I2S(nbMonstersRemoved) .. " monsters removed."))
    -- INLINED!!
  end

  if (nbMonstersRemoved > 0) then
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeDeleteMonstersAction_create(s__Escaper_getMakingLevel(escaper), suppressionHashTable)))
    -- INLINED!!
  end

  sc__MakeDeleteMonsters_unsaveLocDefinitely(mk)

  FlushParentHashtable(suppressionHashTable)
  suppressionHashTable = nil
end




--library MonsterDeleteActions ends
--library MonsterSpawnMakingActions:



function MonsterSpawnMaking_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local level = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeMonsterSpawn_lastLocSavedIsUsed[(mk)])) then
    -- INLINED!!
    level = s__Escaper_getMakingLevel(escaper)
    if (s__MonsterSpawnArray_new(s__Level_monsterSpawns[level], s__MakeMonsterSpawn_label[mk], s__MakeMonsterSpawn_mt[mk], s__MakeMonsterSpawn_sens[mk], s__MakeMonsterSpawn_frequence[mk], s__MakeMonsterSpawn_lastX[mk], s__MakeMonsterSpawn_lastY[mk], x, l__y, true) ~= 0) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, ("monster spawn \"" .. s__MakeMonsterSpawn_label[mk] .. "\" created"))
      -- INLINED!!
      s__Escaper_destroyMake(escaper)
    else
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("impossible to create monster spawn \"" .. s__MakeMonsterSpawn_label[mk] .. "\", label propably already in use"))
      -- INLINED!!
    end
  else
    sc__MakeMonsterSpawn_saveLoc(mk, x, l__y)
  end
end




--library MonsterSpawnMakingActions ends
--library SaveTerrain:




function SaveTerrain___SaveTerrainsUsed()
  local i = nil
  stringArrayForCache = s__StringArrayForCache_create("terrain", "terrainsUsed", false)
  i = 0
  while true do
    if (i >= SaveTerrain___nbTerrainTypesUsed) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, Ascii2String(SaveTerrain___terrainTypeIds[i]))
    i = i + 1
  end
  s__StringArrayForCache_writeInCache(stringArrayForCache)
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("terrains used saved"))
  -- INLINED!!
end

function SaveTerrain___SaveMapDimensionsAndCenterOffset()
  local largeurMap = R2I((MAP_MAX_X - MAP_MIN_X) / LARGEUR_CASE)
  local hauteurMap = R2I((MAP_MAX_Y - MAP_MIN_Y) / LARGEUR_CASE)
  local offsetX = R2I(MAP_MIN_X)
  local offsetY = R2I(MAP_MIN_Y)
  stringArrayForCache = s__StringArrayForCache_create("terrain", "largeur", false)
  s__StringArrayForCache_push(stringArrayForCache, I2S(largeurMap))
  s__StringArrayForCache_writeInCache(stringArrayForCache)
  stringArrayForCache = s__StringArrayForCache_create("terrain", "hauteur", false)
  s__StringArrayForCache_push(stringArrayForCache, I2S(hauteurMap))
  s__StringArrayForCache_writeInCache(stringArrayForCache)
  stringArrayForCache = s__StringArrayForCache_create("terrain", "centerOffsetX", false)
  s__StringArrayForCache_push(stringArrayForCache, I2S(offsetX))
  s__StringArrayForCache_writeInCache(stringArrayForCache)
  stringArrayForCache = s__StringArrayForCache_create("terrain", "centerOffsetY", false)
  s__StringArrayForCache_push(stringArrayForCache, I2S(offsetY))
  s__StringArrayForCache_writeInCache(stringArrayForCache)
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("map dimensions and center offset saved"))
  -- INLINED!!
end


--crée si besoin une nouvelle instance dans le tableau et retourne l'id de cet élément de tableau
function SaveTerrain___GetTerrainId(x, l__SaveTerrain___y)
  local terrainTypeId = GetTerrainType(x, l__SaveTerrain___y)
  local i = 0
  while true do
    if (i >= SaveTerrain___nbTerrainTypesUsed) then
      break
    end
    if (terrainTypeId == SaveTerrain___terrainTypeIds[i]) then
      return I2HexaString(i)
    end
    i = i + 1
  end
  if (SaveTerrain___nbTerrainTypesUsed < 16) then
    SaveTerrain___terrainTypeIds[SaveTerrain___nbTerrainTypesUsed] = terrainTypeId
    SaveTerrain___nbTerrainTypesUsed = SaveTerrain___nbTerrainTypesUsed + 1
  end
  return I2HexaString(SaveTerrain___nbTerrainTypesUsed - 1)
end


function GererOrdreTerrains()
  local terrainType = nil
  local terrainTypes = __jarray(0)
  local nbOrderedTerrains = 0
  local numTerrain = 0
  local ordreMinTerrainId = nil
  local ordreMin = nil
  --récupération de tous les terrains
  local i = 0
  while true do
    terrainType = (s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainType == 0) then
      break
    end
    terrainTypes[numTerrain] = terrainType
    numTerrain = numTerrain + 1
    i = i + 1
  end
  i = 0
  while true do
    terrainType = (s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainType == 0) then
      break
    end
    terrainTypes[numTerrain] = terrainType
    numTerrain = numTerrain + 1
    i = i + 1
  end
  i = 0
  while true do
    terrainType = (s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[(udg_terrainTypes)] + (i)])
    -- INLINED!!
    if (terrainType == 0) then
      break
    end
    terrainTypes[numTerrain] = terrainType
    numTerrain = numTerrain + 1
    i = i + 1
  end
  --suppression des terrains non ordonnés du tableau
  i = 0
  while true do
    if (i == sc__TerrainTypeArray_count(udg_terrainTypes)) then
      break
    end
    if ((s__TerrainType_orderId[(terrainTypes[i])]) ~= 0) then
      -- INLINED!!
      if (i ~= nbOrderedTerrains) then
        terrainTypes[nbOrderedTerrains] = terrainTypes[i]
      end
      nbOrderedTerrains = nbOrderedTerrains + 1
    end
    i = i + 1
  end
  --tri du tableau
  numTerrain = 0
  while true do
    if (numTerrain >= nbOrderedTerrains - 1) then
      break
    end
    --on trouve l'emplacement du terrain avec l'ordre le plus petit
    ordreMin = 100
    i = numTerrain
    while true do
      if (i == nbOrderedTerrains) then
        break
      end
      if ((s__TerrainType_orderId[(terrainTypes[i])]) < ordreMin) then
        -- INLINED!!
        ordreMinTerrainId = i
        ordreMin = (s__TerrainType_orderId[(terrainTypes[i])])
        -- INLINED!!
      end
      i = i + 1
    end
    --on inverse l'emplacement du terrain trouvé avec celui du premier terrain non trié
    if (ordreMinTerrainId ~= numTerrain) then
      terrainType = terrainTypes[numTerrain]
      terrainTypes[numTerrain] = terrainTypes[ordreMinTerrainId]
      terrainTypes[ordreMinTerrainId] = terrainType
    end
    numTerrain = numTerrain + 1
  end
  --sauvegarde des terrains dans les variables finales
  SaveTerrain___nbTerrainTypesUsed = nbOrderedTerrains
  i = 0
  while true do
    if (i == nbOrderedTerrains) then
      break
    end
    SaveTerrain___terrainTypeIds[i] = (s__TerrainType_terrainTypeId[(terrainTypes[i])])
    -- INLINED!!
    i = i + 1
  end
end


function SaveTerrain___SaveTerrain_Actions()
  local x = nil
  if (SaveTerrain___y <= MAP_MAX_Y) then
    x = MAP_MIN_X
    while true do
      if (x > MAP_MAX_X) then
        break
      end
      s__StringArrayForCache_push(stringArrayForCache, SaveTerrain___GetTerrainId(x, SaveTerrain___y))
      x = x + LARGEUR_CASE
    end
    SaveTerrain___y = SaveTerrain___y + LARGEUR_CASE
  else
    DisableTrigger(GetTriggeringTrigger())
    s__StringArrayForCache_writeInCache(stringArrayForCache)
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("terrain saved"))
    -- INLINED!!
    SaveTerrain___SaveTerrainsUsed()
    SaveTerrain___SaveMapDimensionsAndCenterOffset()
    StartSaveTerrainHeights()
  end
end


function StartSaveTerrain()
  SaveTerrain___y = MAP_MIN_Y
  GererOrdreTerrains()
  stringArrayForCache = s__StringArrayForCache_create("terrain", "terrainTypes", false)
  TriggerClearActions(trigSaveMapInCache)
  TriggerAddAction(trigSaveMapInCache, SaveTerrain___SaveTerrain_Actions)
  EnableTrigger(trigSaveMapInCache)
end






--library SaveTerrain ends
--library StartAndEnd:






function s__Start_create(x1, y1, x2, y2)
  local s = s__Start__allocate()
  s__RectInterface_minX[s] = RMinBJ(x1, x2)
  s__RectInterface_minY[s] = RMinBJ(y1, y2)
  s__RectInterface_maxX[s] = RMaxBJ(x1, x2)
  s__RectInterface_maxY[s] = RMaxBJ(y1, y2)
  s__RectInterface_r[s] = Rect(s__RectInterface_minX[s], s__RectInterface_minY[s], s__RectInterface_maxX[s], s__RectInterface_maxY[s])
  return s
end

function s__Start_onDestroy(this)
  RemoveRect(s__RectInterface_r[this])
  s__RectInterface_r[this] = nil
end

function s__Start_getRandomX(this)
  return GetRandomReal(s__RectInterface_minX[this], s__RectInterface_maxX[this])
end

function s__Start_getRandomY(this)
  return GetRandomReal(s__RectInterface_minY[this], s__RectInterface_maxY[this])
end

function s__Start_getCenterX(this)
  return GetRectCenterX(s__RectInterface_r[this])
end

function s__Start_getCenterY(this)
  return GetRectCenterY(s__RectInterface_r[this])
end

function s__Start_toString(this)
  local minX = I2S(R2I(s__RectInterface_minX[this]))
  local minY = I2S(R2I(s__RectInterface_minY[this]))
  local maxX = I2S(R2I(s__RectInterface_maxX[this]))
  local maxY = I2S(R2I(s__RectInterface_maxY[this]))
  return (minX .. CACHE_SEPARATEUR_PARAM .. minY .. CACHE_SEPARATEUR_PARAM .. maxX .. CACHE_SEPARATEUR_PARAM .. maxY)
end





function EndReaching_Actions()
  local finisher = Hero2Escaper(GetTriggerUnit())
  if (finisher == 0) then
    return
  end
  if (not sc__LevelArray_goToNextLevel(udg_levels, finisher)) then
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("Good job ! You have finished the game."))
    -- INLINED!!
    TriggerSleepAction(2)
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("restart in 10 seconds"))
    -- INLINED!!
    TriggerSleepAction(10)
    sc__LevelArray_restartTheGame(udg_levels)
  end
end



function s__End_create(x1, y1, x2, y2)
  local e = s__End__allocate()
  s__RectInterface_minX[e] = RMinBJ(x1, x2)
  s__RectInterface_minY[e] = RMinBJ(y1, y2)
  s__RectInterface_maxX[e] = RMaxBJ(x1, x2)
  s__RectInterface_maxY[e] = RMaxBJ(y1, y2)
  s__RectInterface_r[e] = Rect(s__RectInterface_minX[e], s__RectInterface_minY[e], s__RectInterface_maxX[e], s__RectInterface_maxY[e])
  s__End_endReaching[e] = CreateTrigger()
  TriggerAddAction(s__End_endReaching[e], EndReaching_Actions)
  TriggerRegisterEnterRectSimple(s__End_endReaching[e], s__RectInterface_r[e])
  DisableTrigger(s__End_endReaching[e])
  return e
end

function s__End_activate(this, activ)
  if activ then
    EnableTrigger(s__End_endReaching[this])
  else
    DisableTrigger(s__End_endReaching[this])
  end
end

function s__End_onDestroy(this)
  RemoveRect(s__RectInterface_r[this])
  s__RectInterface_r[this] = nil
  DestroyTrigger(s__End_endReaching[this])
  s__End_endReaching[this] = nil
end

function s__End_toString(this)
  local minX = I2S(R2I(s__RectInterface_minX[this]))
  local minY = I2S(R2I(s__RectInterface_minY[this]))
  local maxX = I2S(R2I(s__RectInterface_maxX[this]))
  local maxY = I2S(R2I(s__RectInterface_maxY[this]))
  return (minX .. CACHE_SEPARATEUR_PARAM .. minY .. CACHE_SEPARATEUR_PARAM .. maxX .. CACHE_SEPARATEUR_PARAM .. maxY)
end





--===========================================================================
function Init_StartAndEnd()
  DEPART_PAR_DEFAUT = s__Start_create(-500, -500, 500, 500)
end




--library StartAndEnd ends
--library StartMakingActions:



function StartMaking_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()
  local level = nil

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeStart_lastLocSavedIsUsed[(mk)])) then
    -- INLINED!!
    level = s__Escaper_getMakingLevel(escaper)
    if ((s__MakeStart_forNextB[(mk)])) then
      -- INLINED!!
      if (sc__LevelArray_get(udg_levels, sc__Level_getId(level) + 1) == 0) then
        if (not sc__LevelArray_new(udg_levels)) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("nombre maximum de niveaux atteint"))
          -- INLINED!!
          s__Escaper_destroyMake(escaper)
          return
        end
      end
      level = sc__LevelArray_get(udg_levels, sc__Level_getId(level) + 1)
      if (level == 0) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("erreur d'origine inconnue"))
        -- INLINED!!
        s__Escaper_destroyMake(escaper)
        return
      end
    end
    sc__Level_newStart(level, s__MakeStart_lastX[mk], s__MakeStart_lastY[mk], x, l__y)
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, ("start made for level " .. I2S(sc__Level_getId(level))))
    -- INLINED!!
    s__Escaper_destroyMake(escaper)
  else
    sc__MakeStart_saveLoc(mk, x, l__y)
  end
end




--library StartMakingActions ends
--library TerrainCopyPasteActions:


function TerrainCopyPaste_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  sc__MakeTerrainCopyPaste_saveLoc(mk, x, l__y)
end




--library TerrainCopyPasteActions ends
--library TerrainHeightMakingActions:



function TerrainHeightMaking_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeTerrainHeightAction_create((s__MakeTerrainHeight_radius[(mk)]), (s__MakeTerrainHeight_height[(mk)]), x, l__y)))
  -- INLINED!!
end




--library TerrainHeightMakingActions ends
--library TerrainHorizontalSymmetryActions:


function TerrainHorizontalSymmetry_Actions()
  local action = nil
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  if ((s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[(mk)])) then
    -- INLINED!!
    action = s__MakeTerrainHorizontalSymmetryAction_create(s__MakeTerrainHorizontalSymmetry_lastX[mk], s__MakeTerrainHorizontalSymmetry_lastY[mk], x, l__y)
    if (action == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("too big zone"))
      -- INLINED!!
    else
      s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (action))
      -- INLINED!!
      sc__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely(mk)
    end
  else
    sc__MakeTerrainHorizontalSymmetry_saveLoc(mk, x, l__y)
  end
end



--library TerrainHorizontalSymmetryActions ends
--library TerrainMakingActions:


function TerrainMaking_Actions()
  local action = nil
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  if ((s__MakeTerrainCreate_lastLocSavedIsUsed[(mk)])) then
    -- INLINED!!
    action = s__MakeTerrainCreateAction_create((s__MakeTerrainCreate_terrainType[(mk)]), s__MakeTerrainCreate_lastX[mk], s__MakeTerrainCreate_lastY[mk], x, l__y)
    -- INLINED!!
    if (action == -1) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this terrain type doesn't exist anymore"))
      -- INLINED!!
    else
      if (action == 0) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("too big zone"))
        -- INLINED!!
      else
        s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (action))
        -- INLINED!!
        sc__MakeTerrainCreate_unsaveLocDefinitely(mk)
      end
    end
  else
    sc__MakeTerrainCreate_saveLoc(mk, x, l__y)
  end
end



--library TerrainMakingActions ends
--library TerrainVerticalSymmetryActions:


function TerrainVerticalSymmetry_Actions()
  local action = nil
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])

  if ((s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[(mk)])) then
    -- INLINED!!
    action = s__MakeTerrainVerticalSymmetryAction_create(s__MakeTerrainVerticalSymmetry_lastX[mk], s__MakeTerrainVerticalSymmetry_lastY[mk], x, l__y)
    if (action == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("too big zone"))
      -- INLINED!!
    else
      s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (action))
      -- INLINED!!
      sc__MakeTerrainVerticalSymmetry_unsaveLocDefinitely(mk)
    end
  else
    sc__MakeTerrainVerticalSymmetry_saveLoc(mk, x, l__y)
  end
end



--library TerrainVerticalSymmetryActions ends
--library TurnOnSlide:








function Trig_to_turn_to_point_Conditions()
  TurnOnSlide__escaper = Hero2Escaper(GetTriggerUnit())
  return (IsHero(GetTriggerUnit()) and (IsTriggerEnabled(s__Escaper_slide[(TurnOnSlide__escaper)])) and not (GetIssuedOrderId() == 851973))
  -- INLINED!!
end


function Trig_to_turn_to_point_Actions()
  --init variables
  TurnOnSlide__slider = GetTriggerUnit()
  TurnOnSlide__n = GetUnitUserData(TurnOnSlide__slider)
  TurnOnSlide__sliderX = GetUnitX(TurnOnSlide__slider)
  TurnOnSlide__sliderY = GetUnitY(TurnOnSlide__slider)
  TurnOnSlide__orderX = GetOrderPointX()
  TurnOnSlide__orderY = GetOrderPointY()

  --stop hero
  StopUnit(TurnOnSlide__slider)

  --set angle
  --if (udg_isMirrorModeOn_j[n]) then
  --    set angle = Atan2( sliderY - orderY, sliderX - orderX) * bj_RADTODEG
  --else
  TurnOnSlide__angle = Atan2(TurnOnSlide__orderY - TurnOnSlide__sliderY, TurnOnSlide__orderX - TurnOnSlide__sliderX) * bj_RADTODEG
  --endif

  --drunk mode
  if (udg_isDrunk[TurnOnSlide__n]) then
    if (GetRandomInt(1, 2) == 1) then
      TurnOnSlide__angle = TurnOnSlide__angle + udg_drunk[TurnOnSlide__n]
    else
      TurnOnSlide__angle = TurnOnSlide__angle - udg_drunk[TurnOnSlide__n]
    end
  end

  --turn hero
  if ((GetUnitFlyHeight((TurnOnSlide__slider)) < 1)) then
    -- INLINED!!
    if (s__TerrainType_kind[(s__Escaper_lastTerrainType[(TurnOnSlide__escaper)])] == "slide") then
      -- INLINED!!
      TurnOnSlide__canTurn = (s__TerrainTypeSlide_canTurn[((((s__Escaper_lastTerrainType[(TurnOnSlide__escaper)]))))])
      -- INLINED!!
    end
  else
    TurnOnSlide__canTurn = CAN_TURN_IN_AIR
  end
  if (TurnOnSlide__canTurn) then
    SetUnitFacing(TurnOnSlide__slider, TurnOnSlide__angle)
    s__Escaper_slideLastAngleOrder[(TurnOnSlide__escaper)] = ((TurnOnSlide__angle) * 1.0)
    -- INLINED!!
  end

  --save click
  lastClickedX[TurnOnSlide__n] = TurnOnSlide__orderX
  lastClickedY[TurnOnSlide__n] = TurnOnSlide__orderY
  isLastTargetALocation[TurnOnSlide__n] = true

  nbClicsOnSlide[TurnOnSlide__n] = nbClicsOnSlide[TurnOnSlide__n] + 1
end



function Trig_to_turn_to_widget_Conditions()
  TurnOnSlide__escaper = Hero2Escaper(GetTriggerUnit())
  return (IsHero(GetTriggerUnit()) and (IsTriggerEnabled(s__Escaper_slide[(TurnOnSlide__escaper)])))
  -- INLINED!!
end

function Trig_to_turn_to_widget_Actions()
  --init variables
  TurnOnSlide__slider = GetTriggerUnit()
  TurnOnSlide__n = GetUnitUserData(TurnOnSlide__slider)
  TurnOnSlide__sliderX = GetUnitX(TurnOnSlide__slider)
  TurnOnSlide__sliderY = GetUnitY(TurnOnSlide__slider)
  TurnOnSlide__orderWidget = GetOrderTarget()
  TurnOnSlide__orderX = GetWidgetX(TurnOnSlide__orderWidget)
  TurnOnSlide__orderY = GetWidgetY(TurnOnSlide__orderWidget)

  --stop hero
  StopUnit(TurnOnSlide__slider)

  --set angle
  --if (udg_isMirrorModeOn_j[n]) then
  --    set angle = Atan2( sliderY - orderY, sliderX - orderX) * bj_RADTODEG
  --else
  TurnOnSlide__angle = Atan2(TurnOnSlide__orderY - TurnOnSlide__sliderY, TurnOnSlide__orderX - TurnOnSlide__sliderX) * bj_RADTODEG
  --endif

  --drunk mode
  if (udg_isDrunk[TurnOnSlide__n]) then
    if (GetRandomInt(1, 2) == 1) then
      TurnOnSlide__angle = TurnOnSlide__angle + udg_drunk[TurnOnSlide__n]
    else
      TurnOnSlide__angle = TurnOnSlide__angle - udg_drunk[TurnOnSlide__n]
    end
  end

  --turn hero
  if ((GetUnitFlyHeight((TurnOnSlide__slider)) < 1)) then
    -- INLINED!!
    if (s__TerrainType_kind[(s__Escaper_lastTerrainType[(TurnOnSlide__escaper)])] == "slide") then
      -- INLINED!!
      TurnOnSlide__canTurn = (s__TerrainTypeSlide_canTurn[((((s__Escaper_lastTerrainType[(TurnOnSlide__escaper)]))))])
      -- INLINED!!
    end
  else
    TurnOnSlide__canTurn = CAN_TURN_IN_AIR
  end
  if (TurnOnSlide__canTurn) then
    SetUnitFacing(TurnOnSlide__slider, TurnOnSlide__angle)
    s__Escaper_slideLastAngleOrder[(TurnOnSlide__escaper)] = ((TurnOnSlide__angle) * 1.0)
    -- INLINED!!
  end

  --save click
  lastClickedWidgets[TurnOnSlide__n] = TurnOnSlide__orderWidget
  lastClickedX[TurnOnSlide__n] = TurnOnSlide__orderX
  lastClickedY[TurnOnSlide__n] = TurnOnSlide__orderY
  isLastTargetALocation[TurnOnSlide__n] = false

  nbClicsOnSlide[TurnOnSlide__n] = nbClicsOnSlide[TurnOnSlide__n] + 1
end



--===========================================================================
function Init_ToTurnOnSlide()
  local i = nil
  --turn to point
  trg_turnToPoint = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(trg_turnToPoint, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
  TriggerAddCondition(trg_turnToPoint, Condition(Trig_to_turn_to_point_Conditions))
  TriggerAddAction(trg_turnToPoint, Trig_to_turn_to_point_Actions)
  --turn to widget
  trg_turnToWidget = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(trg_turnToWidget, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
  TriggerAddCondition(trg_turnToWidget, Condition(Trig_to_turn_to_widget_Conditions))
  TriggerAddAction(trg_turnToWidget, Trig_to_turn_to_widget_Actions)
  --drunk mode
  i = 0
  while true do
    if (i > 11) then
      break
    end
    udg_drunk[i] = INITIAL_DRUNK
    i = i + 1
  end
  DRUNK_EFFECTS[1] = DRUNK_EFFECT_PETIT
  DRUNK_EFFECTS[2] = DRUNK_EFFECT_MOYEN
  DRUNK_EFFECTS[3] = DRUNK_EFFECT_GROS
end




--library TurnOnSlide ends
--library VisibilityModifierMakingActions:



function VisibilityModifierMaking_Actions()
  local newVisibilityModifier = nil
  local escaper = Hero2Escaper(GetTriggerUnit())
  local mkGeneral = (s__Escaper_make[(escaper)])
  -- INLINED!!
  local mk = ((mkGeneral))
  local x = GetOrderPointX()
  local l__y = GetOrderPointY()

  if (not IsIssuedOrder("smart")) then
    return
  end
  StopUnit(s__Make_maker[mk])


  if ((s__MakeVisibilityModifier_lastLocSavedIsUsed[(mk)])) then
    -- INLINED!!
    newVisibilityModifier = sc__Level_newVisibilityModifier(s__Escaper_getMakingLevel(escaper), s__MakeVisibilityModifier_lastX[mk], s__MakeVisibilityModifier_lastY[mk], x, l__y)
    if (newVisibilityModifier == 0) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, ERROR_TEXT_COLORCODE, ("can't create visibility, full for this level"))
      -- INLINED!!
    else
      s__VisibilityModifier_activate(newVisibilityModifier, true)
      s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeVisibilityModifierAction_create(s__Escaper_getMakingLevel(escaper), newVisibilityModifier)))
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[mk]), -1, MAKE_TEXT_COLORCODE, ("visibility rectangle made for level " .. I2S(sc__Level_getId(s__Escaper_getMakingLevel(escaper)))))
      -- INLINED!!
    end
    sc__MakeVisibilityModifier_unsaveLocDefinitely(mk)
  else
    sc__MakeVisibilityModifier_saveLoc(mk, x, l__y)
  end
end




--library VisibilityModifierMakingActions ends
--library CommandAll:



function ExecuteCommandAll(escaper, cmd)
  local name = CmdName(cmd)
  local noParam = (CmdParam((cmd), 0) == nil)
  -- INLINED!!
  local nbParam = NbParam(cmd)

  local n = nil
  local i = nil
  local j = nil
  local k = nil

  local b = nil

  local str = ""
  local str2 = ""

  local x = nil
  local l__y = nil
  local point = nil

  local param = nil

  local param1 = CmdParam(cmd, 1)
  local param2 = CmdParam(cmd, 2)
  local param3 = CmdParam(cmd, 3)
  local param4 = CmdParam(cmd, 4)




  ---<color>   --> change the base color of the hero
  if ((ColorString2Id((name)) <= 12)) then
    -- INLINED!!
    if (noParam) then
      s__Escaper_setBaseColor(escaper, ColorString2Id(name))
      return true
    end
    if (nbParam == 1 and (s__Escaper_isTrueMaximaxouB[(escaper)]) and (ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      s__Escaper_setBaseColor((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]), ColorString2Id(name))
      -- INLINED!!
    end
    return true
  end


  ---vertexColor(vc) [ <red> <green> <blue> [<transparency>] ]   --> without parameter takes a random vertex color without changing transparency
  if (name == "vertexColor" or name == "vc") then
    if (noParam or nbParam == 1) then
      if (nbParam == 1) then
        if (not ((ColorString2Id((param1)) <= 11) and (s__Escaper_isTrueMaximaxouB[(escaper)]))) then
          -- INLINED!!
          return true
        end
        escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))])
        -- INLINED!!
      end
      s__Escaper_setVcRed(escaper, GetRandomPercentageBJ())
      s__Escaper_setVcGreen(escaper, GetRandomPercentageBJ())
      s__Escaper_setVcBlue(escaper, GetRandomPercentageBJ())
    else
      if (not (nbParam == 3 or nbParam == 4)) then
        return true
      end
      if (not s__Escaper_setVcRed(escaper, I2R(PercentageStringOrX2Integer(param1)))) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[RED] .. "Red : not a correct percentage (" .. param1 .. ")"))
        -- INLINED!!
      end
      if (not s__Escaper_setVcGreen(escaper, I2R(PercentageStringOrX2Integer(param2)))) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GREEN] .. "Green : not a correct percentage (" .. param2 .. ")"))
        -- INLINED!!
      end
      if (not s__Escaper_setVcBlue(escaper, I2R(PercentageStringOrX2Integer(param3)))) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[BLUE] .. "Blue : not a correct percentage (" .. param3 .. ")"))
        -- INLINED!!
      end
      if (nbParam == 4) then
        if (not s__Escaper_setVcTransparency(escaper, I2R(PercentageStringOrX2Integer(param4)))) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GREY] .. "Transparency : not a correct percentage (" .. param4 .. ")"))
          -- INLINED!!
        end
      end
    end

    s__Escaper_refreshVertexColor(escaper)
    return true
  end


  ---vertexColorRed(vcr) [<red>]   --> changes the red part of the vertex color only
  if (name == "vertexColorRed" or name == "vcr") then
    if (noParam) then
      s__Escaper_setVcRed(escaper, GetRandomPercentageBJ())
      s__Escaper_refreshVertexColor(escaper)
      return true
    end
    if (not (nbParam == 1)) then
      return true
    end
    if (not s__Escaper_setVcRed(escaper, I2R(PercentageStringOrX2Integer(param1)))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[RED] .. "Red : not a correct percentage (" .. param1 .. ")"))
      -- INLINED!!
      return true
    end
    s__Escaper_refreshVertexColor(escaper)
    return true
  end


  ---vertexColorGreen(vcg) [<Green>]   --> changes the green part of the vertex color only
  if (name == "vertexColorGreen" or name == "vcg") then
    if (noParam) then
      s__Escaper_setVcGreen(escaper, GetRandomPercentageBJ())
      s__Escaper_refreshVertexColor(escaper)
      return true
    end
    if (not (nbParam == 1)) then
      return true
    end
    if (not s__Escaper_setVcGreen(escaper, I2R(PercentageStringOrX2Integer(param1)))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GREEN] .. "Green : not a correct percentage (" .. param1 .. ")"))
      -- INLINED!!
      return true
    end
    s__Escaper_refreshVertexColor(escaper)
    return true
  end


  ---vertexColorBlue(vcb) [<Blue>]   --> changes the blue part of the vertex color only
  if (name == "vertexColorBlue" or name == "vcb") then
    if (noParam) then
      s__Escaper_setVcBlue(escaper, GetRandomPercentageBJ())
      s__Escaper_refreshVertexColor(escaper)
      return true
    end
    if (not (nbParam == 1)) then
      return true
    end
    if (not s__Escaper_setVcBlue(escaper, I2R(PercentageStringOrX2Integer(param1)))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[BLUE] .. "Blue : not a correct percentage (" .. param1 .. ")"))
      -- INLINED!!
      return true
    end
    s__Escaper_refreshVertexColor(escaper)
    return true
  end


  ---vertexColorTransparency(vct) [<transparency>]   --> changes the transparency of the hero
  if (name == "vertexColorTransparency" or name == "vct") then
    if (noParam) then
      s__Escaper_setVcTransparency(escaper, GetRandomPercentageBJ())
      s__Escaper_refreshVertexColor(escaper)
      return true
    end
    if (not (nbParam == 1)) then
      return true
    end
    if (not s__Escaper_setVcTransparency(escaper, I2R(PercentageStringOrX2Integer(param1)))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GREY] .. "Transparency : not a correct percentage (" .. param1 .. ")"))
      -- INLINED!!
      return true
    end
    s__Escaper_refreshVertexColor(escaper)
    return true
  end


  ---noVertex(nv)   --> put normal vertex color : RGB(100, 100, 100) with 0 transparency
  if (name == "noVertex" or name == "nv") then
    if (not (noParam or nbParam == 1)) then
      return true
    end
    if (nbParam == 1) then
      if (not ((s__Escaper_isTrueMaximaxouB[(escaper)]) and (ColorString2Id((param1)) <= 11))) then
        -- INLINED!!
        return true
      end
      escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))])
      -- INLINED!!
    end
    s__Escaper_setVcRed(escaper, 100)
    s__Escaper_setVcGreen(escaper, 100)
    s__Escaper_setVcBlue(escaper, 100)
    s__Escaper_setVcTransparency(escaper, 0)
    s__Escaper_refreshVertexColor(escaper)
    return true
  end


  ---colorInfo(ci) [<Pcolor>]   --> displays base color and vertex color of a hero
  if (name == "colorInfo" or name == "ci") then
    if (noParam) then
      ColorInfo(escaper, (s__Escaper_p[(escaper)]))
      -- INLINED!!
      return true
    end
    if (nbParam == 1 and (ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      ColorInfo((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]), (s__Escaper_p[(escaper)]))
      -- INLINED!!
      return true
    end
    return true
  end


  ---effect(ef) <effect>   --> adds an effect on each hand of the hero
  if (name == "effect" or name == "ef") then
    if (not (String2EffectStr((param1)) ~= nil)) then
      -- INLINED!!
      return true
    end
    if (nbParam == 2 and (s__Escaper_isTrueMaximaxouB[(escaper)]) and (ColorString2Id((param2)) <= 11)) then
      -- INLINED!!
      escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))])
      -- INLINED!!
    else
      if (nbParam ~= 1) then
        return true
      end
    end
    str = String2EffectStr(param1)
    s__Escaper_newEffect(escaper, str, "hand right")
    s__Escaper_newEffect(escaper, str, "hand left")
    return true
  end


  ---customEffect(ce) <effect> <body_part>   --> adds an effect on a body part of the hero
  if (name == "customEffect" or name == "ce") then
    if (nbParam ~= 2) then
      return true
    end
    if (not ((String2EffectStr((param1)) ~= nil) and (String2BodyPartStr((param2)) ~= nil))) then
      -- INLINED!!
      return true
    end
    str = String2EffectStr(param1)
    s__Escaper_newEffect(escaper, str, String2BodyPartStr(param2))
    return true
  end


  ---effectsEverywhere(efe) <effect>   --> adds the same effect to each body part of the hero
  if (name == "effectsEverywhere" or name == "efe") then
    if (not (String2EffectStr((param1)) ~= nil)) then
      -- INLINED!!
      return true
    end
    if (nbParam == 2 and (s__Escaper_isTrueMaximaxouB[(escaper)]) and (ColorString2Id((param2)) <= 11)) then
      -- INLINED!!
      escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))])
      -- INLINED!!
    else
      if (nbParam ~= 1) then
        return true
      end
    end
    str = String2EffectStr(param1)
    s__Escaper_newEffect(escaper, str, "hand right")
    s__Escaper_newEffect(escaper, str, "hand left")
    s__Escaper_newEffect(escaper, str, "foot left")
    s__Escaper_newEffect(escaper, str, "foot right")
    s__Escaper_newEffect(escaper, str, "head")
    s__Escaper_newEffect(escaper, str, "chest")
    return true
  end


  ---deleteEffects(de) [<numberOfEffectsToRemove>]   --> delete a specified effect of the hero or all effects if not specified
  if (name == "deleteEffects" or name == "de") then
    if (not (noParam or nbParam == 1)) then
      return true
    end
    if (nbParam == 1) then
      if ((ColorString2Id((param1)) <= 11)) then
        -- INLINED!!
        if (not (s__Escaper_isTrueMaximaxouB[(escaper)])) then
          -- INLINED!!
          return true
        end
        escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))])
        -- INLINED!!
        n = LIMIT_NB_HERO_EFFECTS
      else
        n = S2I(param1)
        if (n < 1 or n > LIMIT_NB_HERO_EFFECTS) then
          return true
        end
      end
    else
      n = LIMIT_NB_HERO_EFFECTS
    end
    s__EscaperEffectArray_destroyLastEffects(s__Escaper_effects[(escaper)], (n))
    -- INLINED!!
    return true
  end


  ---cameraField(cf) x   --> changes the camera field (height), default is 2500
  if (name == "cameraField" or name == "cf") then
    if (not (nbParam == 1 and IsInteger(param1))) then
      return true
    end
    s__Escaper_setCameraField(escaper, S2I(param1))
    return true
  end


  ---resetCamera(rc)   --> put the camera back like chosen field
  if (name == "resetCamera" or name == "rc") then
    if (not noParam) then
      return true
    end
    s__Escaper_resetCamera(escaper)
    return true
  end


  ---resetCameraInit(rci)   --> changes the camera field back to its default value (2500)
  if (name == "resetCameraInit" or name == "rci") then
    if (not noParam) then
      return true
    end
    s__Escaper_setCameraField(escaper, DEFAULT_CAMERA_FIELD)
    return true
  end


  ---animation(an) <string>   --> makes your hero doing an animation
  if (name == "animation" or name == "an") then
    if (noParam or not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
      -- INLINED!!
      return true
    end
    SetUnitAnimation((s__Escaper_hero[(escaper)]), CmdParam(cmd, 0))
    -- INLINED!!
    return true
  end


  ---mapNbMonsters(mnbm) [moving(m)|all(a)|notMoving(nm)]   --> "moving" is the default value
  if (name == "mapNbMonsters" or name == "mnbm") then
    if (not (noParam or nbParam == 1)) then
      return true
    end
    if (noParam or param1 == "moving" or param1 == "m") then
      n = sc__LevelArray_getNbMonsters(udg_levels, "moving")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("There are " .. I2S(n) .. " moving monsters in the map."))
      -- INLINED!!
      return true
    end
    if (param1 == "all" or param1 == "a") then
      n = sc__LevelArray_getNbMonsters(udg_levels, "all")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("There are " .. I2S(n) .. " monsters in the map."))
      -- INLINED!!
      return true
    end
    if (param1 == "notMoving" or param1 == "nm") then
      n = sc__LevelArray_getNbMonsters(udg_levels, "not moving")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("There are " .. I2S(n) .. " non moving monsters in the map."))
      -- INLINED!!
      return true
    end
    return true
  end


  ---levelNbMonsters(lnbm) [moving(m)|all(a)|notMoving(nm)]   --> "moving" is the default value
  if (name == "levelNbMonsters" or name == "lnbm") then
    if (not (noParam or nbParam == 1)) then
      return true
    end
    if (noParam or param1 == "moving" or param1 == "m") then
      n = sc__Level_getNbMonsters(sc__LevelArray_getCurrentLevel(udg_levels), "moving")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("There are " .. I2S(n) .. " moving monsters in this level."))
      -- INLINED!!
      return true
    end
    if (param1 == "all" or param1 == "a") then
      n = sc__Level_getNbMonsters(sc__LevelArray_getCurrentLevel(udg_levels), "all")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("There are " .. I2S(n) .. " monsters in this level."))
      -- INLINED!!
      return true
    end
    if (param1 == "notMoving" or param1 == "nm") then
      n = sc__Level_getNbMonsters(sc__LevelArray_getCurrentLevel(udg_levels), "not moving")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("There are " .. I2S(n) .. " non moving monsters in this level."))
      -- INLINED!!
      return true
    end
    return true
  end


  ---kill(kl)   --> kills your hero
  if ((name == "kill" or name == "kl") and noParam) then
    if (not s__Escaper_kill(escaper)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("You are already dead."))
      -- INLINED!!
    end
    return true
  end


  ---kick(kc)   --> kicks yourself
  if ((name == "kick" or name == "kc") and noParam) then
    CustomDefeatBJ((s__Escaper_p[(escaper)]), "You have kicked... yourself.")
    -- INLINED!!
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId((s__Escaper_p[(escaper)]))] .. GetPlayerName((s__Escaper_p[(escaper)])) .. " has kicked himself !"))
    -- INLINED!!
    s__Escaper_deallocate(escaper)
    return true
  end


  ---getTerrainInfo(gti) [ <terrain> | <lowInteger> <upInteger> ]
  if (name == "getTerrainInfo" or name == "gti") then
    if (noParam) then
      s__Escaper_makeGetTerrainType(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("Get terrain info mode enabled"))
      -- INLINED!!
      return true
    end
    if (nbParam == 1) then
      n = TerrainTypeString2TerrainTypeId(param1)
      if (n ~= 0) then
        DisplayTimedTextToPlayer(((s__Escaper_p[(escaper)])), 0, 0, TERRAIN_DATA_DISPLAY_TIME, GetTerrainData((n)))
        -- INLINED!!
      end
      return true
    end
    if (nbParam == 2) then
      if (IsInteger(param1) and IsInteger(param2)) then
        i = S2I(param1)
        n = S2I(param2)
        if (i >= 1 and i < n and n <= NB_TERRAINS_TOTAL and n - i < NB_MAX_TERRAIN_DATA_DISPLAY) then
          Text___ForPlayer_timed_withColorCode((((s__Escaper_p[(escaper)]))), -1, NORMAL_TEXT_COLORCODE, (" "))
          -- INLINED!!
          while true do
            if (i > n) then
              break
            end
            DisplayTimedTextToPlayer(((s__Escaper_p[(escaper)])), 0, 0, TERRAIN_DATA_DISPLAY_TIME, GetTerrainData((i)))
            -- INLINED!!
            i = i + 1
          end
        end
      end
      return true
    end
    --mode recherche
    --set param = cmd_param(cmd, 0)
    --set n = StringLength(param)
    --if (SubStringBJ(param, 1, 1) == "\"" and SubStringBJ(param, n, n) == "\"") then
    --    call DisplayTerrainDataSearchToPlayer(TP, SubStringBJ(param, 2, n-1))
    --endif
    return true
  end


  ---stop(s)   --> stop creating monsters or terrain or stop getTerrainInfoMode
  if (name == "stop" or name == "s") then
    if (not noParam) then
      return true
    end
    if (s__Escaper_destroyMake(escaper)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("stop"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("nothing to stop"))
      -- INLINED!!
    end
    return true
  end


  ---disco(d) [off|1~30]  -> choose the number of color changes in ten seconds, or stop color changing (without parameter once a second)
  if (name == "disco" or name == "d") then
    if (noParam) then
      n = 10
    else
      if (nbParam == 1) then
        if (IsInteger(param1)) then
          n = S2I(param1)
          if (n < 1 or n > 30) then
            return true
          end
        else
          if (param1 == "off" and s__Escaper_discoTrigger[escaper] ~= nil) then
            DestroyTrigger(s__Escaper_discoTrigger[escaper])
            s__Escaper_discoTrigger[escaper] = nil
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("disco off"))
            -- INLINED!!
          end
          return true
        end
      else
        return true
      end
    end
    DestroyTrigger(s__Escaper_discoTrigger[escaper])
    s__Escaper_discoTrigger[escaper] = CreateTrigger()
    TriggerAddAction(s__Escaper_discoTrigger[escaper], Disco_Actions)
    TriggerRegisterTimerEvent(s__Escaper_discoTrigger[escaper], 10 / I2R(n), true)
    --n changements en 10 secondes    
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("disco : " .. I2S(n) .. " changes in 10 seconds"))
    -- INLINED!!
    return true
  end


  ---clearText(clr)   --> remove the text on the screen
  if (name == "clearText" or name == "clr") then
    if (noParam) then
      ClearTextForPlayer((s__Escaper_p[(escaper)]))
      -- INLINED!!
    end
    return true
  end


  ---usedTerrains(ut)   --> display the terrains already used (onto the map) during this game (16 is the maximum possible !)
  if (name == "usedTerrains" or name == "ut") then
    if (noParam) then
      Text___ForPlayer_timed_withColorCode((((s__Escaper_p[(escaper)]))), -1, NORMAL_TEXT_COLORCODE, (" "))
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), ((TERRAIN_DATA_DISPLAY_TIME) * 1.0), NORMAL_TEXT_COLORCODE, (udg_colorCode[TEAL] .. "       Used terrains :"))
      -- INLINED!!
      i = 0
      while true do
        if (i >= udg_nb_used_terrains) then
          break
        end
        str = udg_colorCode[TEAL] .. I2S(i + 1) .. " : "
        str = str .. GetTerrainData(udg_used_terrain_types[i])
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), ((TERRAIN_DATA_DISPLAY_TIME) * 1.0), NORMAL_TEXT_COLORCODE, (str))
        -- INLINED!!
        i = i + 1
      end
    end
    return true
  end


  ---drunk(-) <real drunkValue>   --> value between 5 and 60
  if (name == "drunk") then
    k = GetPlayerId((s__Escaper_p[(escaper)]))
    -- INLINED!!
    if (noParam) then
      if (not udg_isDrunk[k]) then
        udg_isDrunk[k] = true
        x = udg_drunk[k]
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("drunk mode set to " .. R2S(x)))
        -- INLINED!!
      else
        return true
      end
    else
      x = S2R(param1)
      if (nbParam == 1 and x >= 5 and x <= 60) then
        udg_isDrunk[k] = true
        udg_drunk[k] = x
      else
        return true
      end
    end
    if (x < 10) then
      n = 1
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("You begin to feel bad."))
      -- INLINED!!
    else
      if (x < 15) then
        n = 2
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("Burp !"))
        -- INLINED!!
      else
        n = 3
        if (x < 30) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("You understand now why driving drunk is dangerous ??!!"))
          -- INLINED!!
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("Dunno how you can stand..."))
          -- INLINED!!
        end
      end
    end
    if (n ~= udg_drunkLevel[k]) then
      DestroyEffect(udg_drunkEffect[k])
      udg_drunkEffect[k] = AddSpecialEffectTarget(DRUNK_EFFECTS[n], (s__Escaper_hero[(escaper)]), "head")
      -- INLINED!!
      udg_drunkLevel[k] = n
    end
    return true
  end


  ---noDrunk(-)   --> stop drunk mode
  if (name == "noDrunk") then
    k = GetPlayerId((s__Escaper_p[(escaper)]))
    -- INLINED!!
    if (noParam and udg_isDrunk[k]) then
      udg_isDrunk[k] = false
      udg_drunkLevel[k] = 0
      DestroyEffect(udg_drunkEffect[k])
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("You feel better now."))
      -- INLINED!!
    end
    return true
  end


  ---autoContinueAfterSliding(acas) <boolean status>
  if (name == "autoContinueAfterSliding" or name == "acas") then
    k = GetPlayerId((s__Escaper_p[(escaper)]))
    -- INLINED!!
    if (nbParam == 1 and IsBoolString(param1)) then
      if (udg_autoContinueAfterSliding[k] ~= S2B(param1)) then
        udg_autoContinueAfterSliding[k] = S2B(param1)
        if (S2B(param1)) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("auto continue after sliding on"))
          -- INLINED!!
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("auto continue after sliding off"))
          -- INLINED!!
        end
      end
    end
    return true
  end


  ---apm(-) [all|a]   --> displays apm on slide of everybody or just yourself
  if (name == "apm") then
    k = GetPlayerId((s__Escaper_p[(escaper)]))
    -- INLINED!!
    if (noParam) then
      DisplayApm(k)
    else
      if (nbParam == 1 and (param1 == "all" or param1 == "a")) then
        DisplayApmAll(k)
      end
    end
    return true
  end


  ---assign(as) <shortcut> <command>   --> puts a command into a key (A Z E R Q S D or F)
  if (name == "assign" or name == "as") then
    if (not (nbParam > 1 and IsShortcut(param1))) then
      return true
    end
    AssignShortcut(GetPlayerId((s__Escaper_p[(escaper)])), param1, GetStringAssignedFromCommand(cmd))
    -- INLINED!!
    return true
  end


  ---unassign(uas) <shortcut>   --> removes the command put into a key
  if (name == "unassign" or name == "uas") then
    if (not (nbParam == 1 and IsShortcut(param1))) then
      return true
    end
    UnassignShortcut(GetPlayerId((s__Escaper_p[(escaper)])), param1)
    -- INLINED!!
    return true
  end


  ---displayShortcuts(ds)   --> displays the commands associated to your shortcuts
  if (name == "displayShortcuts" or name == "ds") then
    if (noParam) then
      DisplayShortcuts(GetPlayerId((s__Escaper_p[(escaper)])))
      -- INLINED!!
    end
    return true
  end


  ---saveCommand(sc) <commandLabel> <command>   --> save a command into a name of your choice
  if (name == "saveCommand" or name == "sc") then
    if (not (nbParam > 1)) then
      return true
    end
    SaveStr(s__EscaperSavedCommands_savedCommands[(udg_savedCommands)], (escaper), StringHash((param1)), ("-" .. GetStringAssignedFromCommand(cmd)))
    -- INLINED!!
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("new command \"" .. param1 .. "\" added"))
    -- INLINED!!
    return true
  end


  ---executeCommand(ec) <commandLabel>   --> execute a command you saved with "saveCommand"
  if (name == "executeCommand" or name == "ec") then
    if (not (nbParam == 1)) then
      return true
    end
    if (not sc__EscaperSavedCommands_execute(udg_savedCommands, escaper, param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown command name"))
      -- INLINED!!
    end
    return true
  end


  ---getCurrentLevel(getcl)   --> displays the number of the current level (first one is number 0)
  if (name == "getCurrentLevel" or name == "getcl") then
    if (not noParam) then
      return true
    end
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("the current level is number " .. I2S(sc__Level_getId(sc__LevelArray_getCurrentLevel(udg_levels)))))
    -- INLINED!!
    return true
  end


  ---leaderboard
  if (name == "leaderboard" or name == "ldb") then
    if (nbParam == 1 and IsBoolString(param1)) then
      if (GetLocalPlayer() == (s__Escaper_p[(escaper)])) then
        -- INLINED!!
        LeaderboardDisplay((s__Lives_lb[(udg_lives)]), S2B(param1))
        -- INLINED!!
      end
    end
    return true
  end






  return false
end




--library CommandAll ends
--library CommandCheat:





function ExecuteCommandCheat(escaper, cmd)
  local name = CmdName(cmd)
  local noParam = (CmdParam((cmd), 0) == nil)
  -- INLINED!!
  local nbParam = NbParam(cmd)

  local n = nil
  local i = nil
  local j = nil
  local k = nil

  local b = nil

  local str = ""
  local str2 = ""

  local x = nil
  local l__y = nil
  local point = nil

  local param = nil

  local param1 = CmdParam(cmd, 1)
  local param2 = CmdParam(cmd, 2)
  local param3 = CmdParam(cmd, 3)
  local param4 = CmdParam(cmd, 4)

  local speed = nil




  ---slideSpeed(ss) <speed>   --> changes the slide speed of your hero, ignoring terrains
  if (name == "setSlideSpeed" or name == "ss") then
    if (not IsInteger(param1)) then
      return true
    end
    speed = S2R(param1) * SLIDE_PERIOD
    if (nbParam == 1) then
      s__Escaper_absoluteSlideSpeed(escaper, speed)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("your slide speed is set to " .. param1))
      -- INLINED!!
      return true
    end
    if (not (nbParam == 2 and (s__Escaper_isMaximaxouB[(escaper)]))) then
      -- INLINED!!
      return true
    end
    if (param2 == "all" or param2 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_absoluteSlideSpeed((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]), speed)
          -- INLINED!!
        end
        i = i + 1
      end
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("slide speed for all is set to " .. param1))
      -- INLINED!!
      return true
    end
    if ((ColorString2Id((param2)) <= 11)) then
      -- INLINED!!
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))]) ~= 0) then
        -- INLINED!!
        s__Escaper_absoluteSlideSpeed((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))]), speed)
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("slide speed for player " .. param2 .. " is set to " .. param1))
        -- INLINED!!
      end
    end
    return true
  end


  ---normalSlideSpeed(nss)   --> puts the slide speed back to normal (respecting terrains)
  if (name == "normalSlideSpeed" or name == "nss") then
    if (noParam) then
      s__Escaper_stopAbsoluteSlideSpeed(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("your slide speed depends now on terrains"))
      -- INLINED!!
      return true
    end
    if (not (nbParam == 1 and (s__Escaper_isMaximaxouB[(escaper)]))) then
      -- INLINED!!
      return true
    end
    if (param1 == "all" or param1 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_stopAbsoluteSlideSpeed((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
          -- INLINED!!
        end
        i = i + 1
      end
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("slide speed for all depends now on terrains"))
      -- INLINED!!
      return true
    end
    if ((ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]) ~= 0) then
        -- INLINED!!
        s__Escaper_stopAbsoluteSlideSpeed((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("slide speed for player " .. param1 .. " depends now on terrains"))
        -- INLINED!!
      end
    end
    return true
  end



  ---walkSpeed(ws) <speed>   --> changes the walk speed of your hero, ignoring terrains
  if (name == "setWalkSpeed" or name == "ws") then
    if (not IsInteger(param1)) then
      return true
    end
    speed = S2R(param1)
    if (nbParam == 1) then
      s__Escaper_absoluteWalkSpeed(escaper, speed)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("walk speed set to " .. param1))
      -- INLINED!!
      return true
    end
    if (not (nbParam == 2 and (s__Escaper_isMaximaxouB[(escaper)]))) then
      -- INLINED!!
      return true
    end
    if (param2 == "all" or param2 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_absoluteWalkSpeed((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]), speed)
          -- INLINED!!
        end
        i = i + 1
      end
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("walk speed for all set to " .. param1))
      -- INLINED!!
      return true
    end
    if ((ColorString2Id((param2)) <= 11)) then
      -- INLINED!!
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))]) ~= 0) then
        -- INLINED!!
        s__Escaper_absoluteWalkSpeed((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))]), speed)
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("walk speed for player " .. param2 .. " set to " .. param1))
        -- INLINED!!
      end
    end
    return true
  end


  ---normalWalkSpeed(nws)   --> puts the walk speed back to normal (respecting terrains)
  if (name == "normalWalkSpeed" or name == "nws") then
    if (noParam) then
      s__Escaper_stopAbsoluteWalkSpeed(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("walk speed depends now on terrains"))
      -- INLINED!!
      return true
    end
    if (not (nbParam == 1 and (s__Escaper_isMaximaxouB[(escaper)]))) then
      -- INLINED!!
      return true
    end
    if (param1 == "all" or param1 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_stopAbsoluteWalkSpeed((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
          -- INLINED!!
        end
        i = i + 1
      end
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("walk speed for all depends now on terrains"))
      -- INLINED!!
      return true
    end
    if ((ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]) ~= 0) then
        -- INLINED!!
        s__Escaper_stopAbsoluteWalkSpeed((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("walk speed for player " .. param1 .. " depends now on terrains"))
        -- INLINED!!
      end
    end
    return true
  end


  ---canTeleport(ct) <boolean canTeleport>   --> teleport trigger must have been enabled by the admin
  if (name == "canTeleport" or name == "ct") then
    if (not IsBoolString(param1)) then
      return true
    end
    b = S2B(param1)
    if (nbParam == 1) then
      s__Escaper_canTeleportB[(escaper)] = (b)
      -- INLINED!!
      return true
    end
    if (not (nbParam == 2 and (s__Escaper_isMaximaxouB[(escaper)]))) then
      -- INLINED!!
      return true
    end
    if (param2 == "all" or param2 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_canTeleportB[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))] = (b)
          -- INLINED!!
        end
        i = i + 1
      end
      return true
    end
    if ((ColorString2Id((param2)) <= 11)) then
      -- INLINED!!
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))]) ~= 0) then
        -- INLINED!!
        s__Escaper_canTeleportB[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))]))] = (b)
        -- INLINED!!
      end
    end
    return true
  end


  ---teleport(t)   --> teleports your hero at the next clic
  if (name == "teleport" or name == "t") and (noParam or (nbParam == 1 and (param1 == "0" or S2R(param1) ~= 0))) then
    if (nbParam == 1) then
      SetUnitFacing((s__Escaper_hero[(escaper)]), S2R(param1))
      -- INLINED!!
    end
    ActivateTeleportOnceOnly((s__Escaper_hero[(escaper)]))
    -- INLINED!!
    return true
  end


  ---revive(r)   --> revives your hero
  if (name == "revive" or name == "r") then
    if (noParam) then
      s__Escaper_reviveAtStart(escaper)
      return true
    end
    if (not (nbParam == 1 and (s__Escaper_isMaximaxouB[(escaper)]))) then
      -- INLINED!!
      return true
    end
    if (param1 == "all" or param1 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_reviveAtStart((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
          -- INLINED!!
        end
        i = i + 1
      end
      return true
    end
    if ((ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]) ~= 0) then
        -- INLINED!!
        s__Escaper_reviveAtStart((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))
        -- INLINED!!
      end
    end
    return true
  end


  ---reviveTo(rto) <Pcolor>   --> revives your hero to an other hero, with the same facing angle
  if (name == "reviveTo" or name == "rto") then
    if (not (nbParam == 1 and (ColorString2Id((param1)) <= 11))) then
      -- INLINED!!
      return true
    end
    n = ColorString2Id(param1)
    if (not (IsUnitAliveBJ(s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))])) or (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) == 0) then
      -- INLINED!!
      return true
    end
    s__Escaper_turnInstantly(escaper, GetUnitFacing((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))])))
    -- INLINED!!
    s__Escaper_moveHero(escaper, GetUnitX((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))])), GetUnitY((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))])))
    -- INLINED!!
    return true
  end


  ---getInfiniteMeteors(gim)   --> puts in your inventory a meteor that doesn't disapear after being used
  if (name == "getInfiniteMeteors" or name == "gim") then
    if (noParam) then
      if (UnitItemInSlot((s__Escaper_hero[(escaper)]), 0) == nil) then
        -- INLINED!!
        HeroAddCheatMeteor((s__Escaper_hero[(escaper)]))
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you get infinite meteors"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("inventory full"))
        -- INLINED!!
      end
    end
    return true
  end


  ---deleteInfiniteMeteors(dim)   --> remove the infinite meteor from your inventory if you have one
  if (name == "deleteInfiniteMeteors" or name == "dim") then
    if (noParam) then
      if (GetItemTypeId(UnitItemInSlot((s__Escaper_hero[(escaper)]), 0)) == METEOR_CHEAT) then
        -- INLINED!!
        RemoveItem(UnitItemInSlot((s__Escaper_hero[(escaper)]), 0))
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("infinite meteors removed"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("no infinite meteors to remove"))
        -- INLINED!!
      end
    end
    return true
  end


  ---endLevel(el)   --> go to the end of the current level
  if (name == "endLevel" or name == "el") then
    if (noParam) then
      sc__LevelArray_goToNextLevel(udg_levels, 0)
    end
    return true
  end


  ---goToLevel(gotl) <levelId>   --> first level is number 0
  if (name == "goToLevel" or name == "gotl") then
    if (not (nbParam == 1)) then
      return true
    end
    if (not IsPositiveInteger(param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("level number should be a positive integer"))
      -- INLINED!!
      return true
    end
    n = S2I(param1)
    if (sc__Level_getId(sc__LevelArray_getCurrentLevel(udg_levels)) == n) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("you already are in this level"))
      -- INLINED!!
      return true
    end
    if (not sc__LevelArray_goToLevel(udg_levels, 0, n)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this levels doesn't exist (level max : " .. I2S((s__LevelArray_lastInstance[(udg_levels)])) .. ")"))
      -- INLINED!!
    end
    return true
  end


  ---viewAll(va)   --> displays the whole map
  if (name == "viewAll" or name == "va") then
    if (noParam) then
      FogModifierStart(udg_viewAll)
    end
    return true
  end


  ---hideAll(ha)   --> puts the map view back to normal
  if (name == "hideAll" or name == "ha") then
    if (noParam) then
      FogModifierStop(udg_viewAll)
    end
    return true
  end


  ---setGodMode(setgm) <boolean status>   --> activate or desactivate god mode for your hero
  if (name == "setGodMode" or name == "setgm") then
    if (not (nbParam == 1 or nbParam == 2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("one or two params for this command"))
      -- INLINED!!
      return true
    end
    if (IsBoolString(param1)) then
      b = S2B(param1)
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 must be a boolean"))
      -- INLINED!!
      return true
    end
    if (nbParam == 1) then
      s__Escaper_godMode[(escaper)] = (b)
      -- INLINED!!
      if (b) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you are now invulnerable"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you are now vulnerable"))
        -- INLINED!!
      end
      return true
    end
    if (not (s__Escaper_isMaximaxouB[(escaper)])) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("your rights are too weak"))
      -- INLINED!!
      return true
    end
    if (param2 == "all" or param2 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_godMode[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))] = (b)
          -- INLINED!!
        end
        i = i + 1
      end
      if (b) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("all sliders are now invulnerable"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("all sliders are now vulnerable"))
        -- INLINED!!
      end
      return true
    end
    if ((ColorString2Id((param2)) <= 11)) then
      -- INLINED!!
      n = ColorString2Id(param2)
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= 0) then
        -- INLINED!!
        s__Escaper_godMode[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))] = (b)
        -- INLINED!!
        if (b) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("slider " .. param2 .. " is now invulnerable"))
          -- INLINED!!
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("slider " .. param2 .. " is now vulnerable"))
          -- INLINED!!
        end
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("escaper " .. param2 .. " doesn't exist"))
        -- INLINED!!
      end
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 must be a player color or \"all\""))
      -- INLINED!!
    end
    return true
  end


  ---setGodModeKills(setgmk) <boolean status>   --> if activated, monsters will be killed by your hero
  if (name == "setGodModeKills" or name == "setgmk") then
    if (not (nbParam == 1 or nbParam == 2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("one or two params for this command"))
      -- INLINED!!
      return true
    end
    if (IsBoolString(param1)) then
      b = S2B(param1)
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 must be a boolean"))
      -- INLINED!!
      return true
    end
    if (nbParam == 1) then
      s__Escaper_godModeKills[(escaper)] = (b)
      -- INLINED!!
      if (b) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("your god mode now kills monsters (if activated)"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you god mode doesn't kill monsters anymore"))
        -- INLINED!!
      end
      return true
    end
    if (not (s__Escaper_isMaximaxouB[(escaper)])) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("your rights are too weak"))
      -- INLINED!!
      return true
    end
    if (param2 == "all" or param2 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_godModeKills[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))] = (b)
          -- INLINED!!
        end
        i = i + 1
      end
      if (b) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("god mode of all sliders now kills monsters (if activated)"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("god mode of all sliders doesn't kill monsters anymore"))
        -- INLINED!!
      end
      return true
    end
    if ((ColorString2Id((param2)) <= 11)) then
      -- INLINED!!
      n = ColorString2Id(param2)
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= 0) then
        -- INLINED!!
        s__Escaper_godModeKills[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))] = (b)
        -- INLINED!!
        if (b) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("god mode of slider " .. param2 .. " now kills monsters (if activated)"))
          -- INLINED!!
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("god mode of slider " .. param2 .. " doesn't kill monsters anymore"))
          -- INLINED!!
        end
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("escaper " .. param2 .. " doesn't exist"))
        -- INLINED!!
      end
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 must be a player color or \"all\""))
      -- INLINED!!
    end
    return true
  end


  ---setGravity x
  if (name == "setGravity" or name == "setg") then
    if (not (nbParam == 1) or (S2R(param1) == 0 and param1 ~= "0")) then
      return true
    end
    Gravity__gravity = ((S2R(param1)) * 1.0) * SLIDE_PERIOD
    -- INLINED!!
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("gravity changed"))
    -- INLINED!!
    return true
  end


  ---getGravity
  if (name == "getGravity" or name == "getg") then
    if (noParam) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("current gravity is " .. R2S((Gravity__gravity / SLIDE_PERIOD))))
      -- INLINED!!
    end
    return true
  end


  ---setHeight
  if (name == "setHeight" or name == "seth") then
    if (nbParam ~= 1 or (S2R(param1) <= 0 and param1 ~= "0")) then
      return true
    end
    SetUnitFlyHeight((s__Escaper_hero[(escaper)]), S2R(param1), 0)
    -- INLINED!!
    return true
  end


  ---setTailleUnite
  if (name == "setTailleUnit" or name == "settu") then
    if (nbParam ~= 1 or (S2R(param1) <= 0 and param1 ~= "0")) then
      return true
    end
    TAILLE_UNITE = S2R(param1)
    return true
  end


  return false
end





--library CommandCheat ends
--library CommandMake:





function ExecuteCommandMake(escaper, cmd)
  local name = CmdName(cmd)
  local noParam = (CmdParam((cmd), 0) == nil)
  -- INLINED!!
  local nbParam = NbParam(cmd)

  local n = nil
  local i = nil
  local j = nil
  local k = nil

  local b = nil

  local str = ""
  local str2 = ""

  local x = nil
  local l__y = nil
  local point = nil

  local param = nil

  local param1 = CmdParam(cmd, 1)
  local param2 = CmdParam(cmd, 2)
  local param3 = CmdParam(cmd, 3)
  local param4 = CmdParam(cmd, 4)

  local speed = nil
  local terrainType = nil
  local level = nil





  ---newWalk(neww) <label> <terrainType> [<walkSpeed>]   --> add a new kind of walk terrain
  if (name == "newWalk" or name == "neww") then
    if (nbParam < 2 or nbParam > 3) then
      return true
    end
    if (nbParam == 3) then
      if (not IsPositiveInteger(param3) or S2R(param3) > 522) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong speed value, should be a real between 0 and 522"))
        -- INLINED!!
        return true
      end
      speed = S2R(param3)
    else
      speed = HERO_WALK_SPEED
    end
    if (StringContainsChar(param1, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param1, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param1, "\"")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
      -- INLINED!!
      return true
    end
    if (sc__TerrainTypeArray_newWalk(udg_terrainTypes, param1, TerrainTypeString2TerrainTypeId(param2), speed) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to add this new terrain type"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("new terrain type \"" .. param1 .. "\" added"))
      -- INLINED!!
    end
    return true
  end


  ---newDeath(newd) <label> <terrainType> [<killingEffect> [<terrainTimeToKill>]]   --> add a new kind of death terrain
  if (name == "newDeath" or name == "newd") then
    if (nbParam < 2 or nbParam > 4) then
      return true
    end
    if (nbParam >= 3) then
      str = param3
      if (StringContainsChar(param3, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param3, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param3, "\"")) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
        -- INLINED!!
        return true
      end
    else
      str = ""
    end
    if (nbParam == 4) then
      if (param4 ~= "0" and S2R(param4) == 0) then
        return true
      end
      x = S2R(param4)
    else
      x = TERRAIN_DEATH_TIME_TO_KILL
    end
    if (StringContainsChar(param1, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param1, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param1, "\"")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
      -- INLINED!!
      return true
    end
    if (sc__TerrainTypeArray_newDeath(udg_terrainTypes, param1, TerrainTypeString2TerrainTypeId(param2), str, x, 0) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to add this new terrain type"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("new terrain type \"" .. param1 .. "\" added"))
      -- INLINED!!
    end
    return true
  end


  ---newSlide(news) <label> <terrainType> [<slideSpeed> [<canTurn>]]   --> add a new kind of slide terrain
  if (name == "newSlide" or name == "news") then
    if (nbParam < 2 or nbParam > 4) then
      return true
    end
    if (nbParam >= 3) then
      if (not IsInteger(param3)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the slide speed must be an integer"))
        -- INLINED!!
        return true
      end
      speed = S2R(param3)
    else
      speed = HERO_SLIDE_SPEED
    end
    if (nbParam == 4) then
      if (not IsBoolString(param4)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the property \"canTurn\" must be a boolean (true or false)"))
        -- INLINED!!
        return true
      end
      b = S2B(param4)
    else
      b = true
      --can turn
    end
    if (StringContainsChar(param1, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param1, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param1, "\"")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
      -- INLINED!!
      return true
    end
    if (sc__TerrainTypeArray_newSlide(udg_terrainTypes, param1, TerrainTypeString2TerrainTypeId(param2), speed, b) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to add this new terrain type"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("new terrain type \"" .. param1 .. "\" added"))
      -- INLINED!!
    end
    return true
  end


  ---setTerrainLabel(settl) <oldTerrainLabel> <newTerrainLabel>
  if (name == "setTerrainLabel" or name == "settl") then
    if (not (nbParam == 2)) then
      return true
    end
    b = (sc__TerrainTypeArray_get(udg_terrainTypes, param1) ~= 0)
    if (b) then
      b = (not sc__TerrainTypeArray_isLabelAlreadyUsed(udg_terrainTypes, param2))
    end
    if (b) then
      if (StringContainsChar(param2, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param2, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param2, "\"")) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
        -- INLINED!!
        return true
      end
      s__TerrainType_label[(sc__TerrainTypeArray_get(udg_terrainTypes, param1))] = (param2)
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("label changed to \"" .. param2 .. "\""))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to change label"))
      -- INLINED!!
    end
    return true
  end


  ---setTerrainAlias(setta) <terrainLabel> <alias>   --> an alias is a shortcut which can be used like a label
  if (name == "setTerrainAlias" or name == "setta") then
    if (not (nbParam == 2)) then
      return true
    end
    b = (sc__TerrainTypeArray_get(udg_terrainTypes, param1) ~= 0)
    if (b) then
      b = (not sc__TerrainTypeArray_isLabelAlreadyUsed(udg_terrainTypes, param2))
    end
    if (b) then
      if (StringContainsChar(param2, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param2, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param2, "\"")) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
        -- INLINED!!
        return true
      end
      s__TerrainType_setAlias(sc__TerrainTypeArray_get(udg_terrainTypes, param1), param2)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("alias changed to \"" .. param2 .. "\""))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to change alias"))
      -- INLINED!!
    end
    return true
  end


  ---setTerrainWalkSpeed(settws) <walkTerrainLabel> <walkSpeed>   --> max walk speed : 522
  if (name == "setTerrainWalkSpeed" or name == "settws") then
    if (not (nbParam == 2)) then
      return true
    end
    terrainType = sc__TerrainTypeArray_get(udg_terrainTypes, param1)
    if (terrainType == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown terrain"))
      -- INLINED!!
      return true
    end
    if ((s__TerrainType_kind[(terrainType)]) ~= "walk") then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the terrain must be of walk type"))
      -- INLINED!!
      return true
    end
    if (not IsPositiveInteger(param2) or S2R(param2) > 522) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong speed value, should be a real between 0 and 522"))
      -- INLINED!!
      return true
    end
    s__TerrainTypeWalk_walkSpeed[(((terrainType)))] = ((S2R(param2)) * 1.0)
    -- INLINED!!
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrain walk speed changed"))
    -- INLINED!!
    return true
  end


  ---setTerrainKillEffect(settke) <deathTerrainLabel> <killingEffect>   --> special effect appearing when a hero touch the death terrain
  if (name == "setTerrainKillEffect" or name == "settke") then
    if (not (nbParam == 2)) then
      return true
    end
    terrainType = sc__TerrainTypeArray_get(udg_terrainTypes, param1)
    if (terrainType == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown terrain"))
      -- INLINED!!
      return true
    end
    if ((s__TerrainType_kind[(terrainType)]) ~= "death") then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the terrain must be of death type"))
      -- INLINED!!
      return true
    end
    if (StringContainsChar(param2, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param2, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param2, "\"")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
      -- INLINED!!
      return true
    end
    s__TerrainTypeDeath_killingEffectStr[(((terrainType)))] = (param2)
    -- INLINED!!
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrain kill effect changed"))
    -- INLINED!!
    return true
  end


  ---setTerrainKillDelay(settkd) <deathTerrainLabel> <killingDelay>   --> time before which the hero dies when he touch the death terrain
  if (name == "setTerrainKillDelay" or name == "settkd") then
    if (not (nbParam == 2)) then
      return true
    end
    terrainType = sc__TerrainTypeArray_get(udg_terrainTypes, param1)
    if (terrainType == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown terrain"))
      -- INLINED!!
      return true
    end
    if ((s__TerrainType_kind[(terrainType)]) ~= "death") then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the terrain must be of death type"))
      -- INLINED!!
      return true
    end
    if (param2 ~= "0" and S2R(param2) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong delay value"))
      -- INLINED!!
      return true
    end
    s__TerrainTypeDeath_setTimeToKill(((terrainType)), S2R(param2))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrain kill delay changed"))
    -- INLINED!!
    return true
  end


  ---setTerrainKillTolerance(settkt) <deathTerrainLabel> <tolerance dist>   --> max distance to the closest non death terrain, where heroes won't die
  if (name == "setTerrainKillTolerance" or name == "settkt") then
    if (not (nbParam == 2)) then
      return true
    end
    terrainType = sc__TerrainTypeArray_get(udg_terrainTypes, param1)
    if (terrainType == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown terrain"))
      -- INLINED!!
      return true
    end
    if ((s__TerrainType_kind[(terrainType)]) ~= "death") then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the terrain must be of death type"))
      -- INLINED!!
      return true
    end
    if (param2 ~= "0" and S2R(param2) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong tolerance value"))
      -- INLINED!!
      return true
    end
    if (s__TerrainTypeDeath_setToleranceDist(((terrainType)), S2R(param2))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("tolerance distance changed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("tolerance must be between 0 and " .. R2S(DEATH_TERRAIN_MAX_TOLERANCE)))
      -- INLINED!!
    end
    return true
  end


  ---setTerrainSlideSpeed(settss) <slideTerrainLabel> <slideSpeed>
  if (name == "setTerrainSlideSpeed" or name == "settss") then
    if (not (nbParam == 2)) then
      return true
    end
    terrainType = sc__TerrainTypeArray_get(udg_terrainTypes, param1)
    if (terrainType == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown terrain"))
      -- INLINED!!
      return true
    end
    if ((s__TerrainType_kind[(terrainType)]) ~= "slide") then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the terrain must be of slide type"))
      -- INLINED!!
      return true
    end
    if (not IsInteger(param2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong speed value"))
      -- INLINED!!
      return true
    end
    s__TerrainTypeSlide_slideSpeed[(((terrainType)))] = ((S2R(param2)) * 1.0) * SLIDE_PERIOD
    -- INLINED!!
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrain slide speed changed"))
    -- INLINED!!
    return true
  end


  ---setTerrainCanTurn(settct) <slideTerrainLabel> <canTurn>
  if (name == "setTerrainCanTurn" or name == "settct") then
    if (not (nbParam == 2)) then
      return true
    end
    terrainType = sc__TerrainTypeArray_get(udg_terrainTypes, param1)
    if (terrainType == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown terrain"))
      -- INLINED!!
      return true
    end
    if ((s__TerrainType_kind[(terrainType)]) ~= "slide") then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the terrain must be of slide type"))
      -- INLINED!!
      return true
    end
    if (not IsBoolString(param2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the property \"canTurn\" must be a boolean (true or false)"))
      -- INLINED!!
      return true
    end
    if (s__TerrainTypeSlide_setCanTurn(((terrainType)), S2B(param2))) then
      if (S2B(param2)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("the heroes can now turn on this slide terrain"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("the heroes can't turn on this slide terrain anymore"))
        -- INLINED!!
      end
    else
      if (S2B(param2)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the heroes can already turn on this slide terrain"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the heroes already can't turn on this slide terrain"))
        -- INLINED!!
      end
    end
    return true
  end


  ---changeTerrain(cht) <terrainLabel> <newTerrainType>   --> examples of terrain types : 'Nice', 46
  if (name == "changeTerrain" or name == "cht") then
    if (not (nbParam == 2)) then
      return true
    end
    Text___ForPlayer_timed_withColorCode((((s__Escaper_p[(escaper)]))), -1, NORMAL_TEXT_COLORCODE, (" "))
    -- INLINED!!
    str = ChangeOneTerrain(param1, param2)
    if (str ~= nil) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("changed to " .. udg_colorCode[RED] .. str))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't change terrain"))
      -- INLINED!!
    end
    return true
  end


  ---changeAllTerrains(chat) [known(k)|notKnown(nk)]
  if (name == "changeAllTerrains" or name == "chat") then
    if (noParam) then
      str = "normal"
    else
      if (nbParam == 1) then
        if (param1 == "known" or param1 == "k") then
          str = "known"
        else
          if (param1 == "notKnown" or param1 == "nk") then
            str = "notKnown"
          else
            return true
          end
        end
      end
    end
    if (not ChangeAllTerrains(str)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't change terrains"))
      -- INLINED!!
    end
    return true
  end


  ---changeAllTerrainsAtRevive(chatar) <boolean change>
  if (name == "changeAllTerrainsAtRevive" or name == "chatar") then
    if (nbParam == 1 and IsBoolString(param1) and S2B(param1) ~= udg_changeAllTerrainsAtRevive) then
      udg_changeAllTerrainsAtRevive = S2B(param1)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("change all terrains at revive " .. StringCase(param1, true)))
      -- INLINED!!
    end
    return true
  end


  ---exchangeTerrains(excht) [<terrainLabelA> <terrainLabelB>]   --> without parameter, click on the terrains to exchange them
  if (name == "exchangeTerrains" or name == "excht") then
    if (noParam) then
      s__Escaper_makeExchangeTerrains(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("exchange terrains on"))
      -- INLINED!!
      return true
    end
    if (not (nbParam == 2)) then
      return true
    end
    if (ExchangeTerrains(param1, param2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrains exchanged"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't exchange terrains"))
      -- INLINED!!
    end
    return true
  end


  ---randomizeTerrains(rdmt)
  if (name == "randomizeTerrains" or name == "rdmt") then
    if (noParam) then
      RandomizeTerrains()
    end
    return true
  end


  ---createTerrain(crt) <terrainLabel>   --> create the terrain on the map, by clicking
  if (name == "createTerrain" or name == "crt") then
    if (not (nbParam == 1)) then
      return true
    end
    if (sc__TerrainTypeArray_get(udg_terrainTypes, param1) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("terrain \"" .. param1 .. "\" doesn't exist"))
      -- INLINED!!
    else
      s__Escaper_makeCreateTerrain(escaper, sc__TerrainTypeArray_get(udg_terrainTypes, param1))
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("creating terrain on"))
      -- INLINED!!
    end
    return true
  end


  ---copyPasteTerrain(cpt)   --> copy paste a rectangle of terrain on the map
  if (name == "copyPasteTerrain" or name == "cpt") then
    if (noParam) then
      s__Escaper_makeTerrainCopyPaste(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("copy/paste terrain on"))
      -- INLINED!!
    end
    return true
  end


  ---verticalSymmetryTerrain(vst)   --> transform a rectangle of terrain by a vertical symmetry
  if (name == "verticalSymmetryTerrain" or name == "vst") then
    if (noParam) then
      s__Escaper_makeTerrainVerticalSymmetry(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("vertical symmetry terrain on"))
      -- INLINED!!
    end
    return true
  end


  ---horizontalSymmetryTerrain(hst)   --> transform a rectangle of terrain by an horizontal symmetry
  if (name == "horizontalSymmetryTerrain" or name == "hst") then
    if (noParam) then
      s__Escaper_makeTerrainHorizontalSymmetry(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("horizontal symmetry terrain on"))
      -- INLINED!!
    end
    return true
  end


  ---terrainHeight(th) [<terrainRadius> [<height>]]   --> apply a terrain height at chosen places ; default radius 100, default height 100
  if (name == "terrainHeight" or name == "th") then
    if (not (nbParam <= 2)) then
      return true
    end
    if (nbParam == 2) then
      l__y = S2R(param2)
      if (l__y == 0 and param2 ~= "0") then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 (height) must be a real"))
        -- INLINED!!
        return true
      end
      if (l__y == 0) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 (height) can't be 0"))
        -- INLINED!!
        return true
      end
    else
      l__y = 100
    end
    if (nbParam >= 1) then
      x = S2R(param1)
      if (x == 0 and param1 ~= "0") then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 (radius) must be a real"))
        -- INLINED!!
        return true
      end
      if (x <= 0) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 (radius) must be higher than 0"))
        -- INLINED!!
        return true
      end
    else
      x = 100
    end
    s__Escaper_makeTerrainHeight(escaper, x, l__y)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrain height making"))
    -- INLINED!!
    return true
  end


  ---displayTerrains(dt) [<terrainLabel>]   --> displays the characteristics of the terrains added by the maker(s)
  if (name == "displayTerrains" or name == "dt") then
    if (not (nbParam <= 1)) then
      return true
    end
    if (nbParam == 1) then
      if (sc__TerrainTypeArray_isLabelAlreadyUsed(udg_terrainTypes, param1)) then
        s__TerrainType_displayForPlayer(sc__TerrainTypeArray_get(udg_terrainTypes, param1), (s__Escaper_p[(escaper)]))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown terrain"))
        -- INLINED!!
      end
    else
      sc__TerrainTypeArray_displayForPlayer(udg_terrainTypes, (s__Escaper_p[(escaper)]))
      -- INLINED!!
    end
    return true
  end


  ---newMonster(newm) <label> <unitTypeId> [<immolationRadius> [<speed> [<scale> [<isClickable>]]]]
  if (name == "newMonster" or name == "newm") then
    if (nbParam < 2 or nbParam > 6) then
      return true
    end
    --checkParam1
    if ((s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("label \"" .. param1 .. "\" already used"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (not (StringLength(param2) == 6 and SubStringBJ(param2, 1, 1) == "'" and SubStringBJ(param2, 6, 6) == "'")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong unit type id (exemple : 'hfoo')"))
      -- INLINED!!
      return true
    end
    --checkParam3
    if (nbParam >= 3) then
      x = S2R(param3)
      if (not ((x / 5) == I2R(R2I(x / 5))) or x < 0 or x > 400) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong immolation radius ; should be an integer divisible by 5 and between 0 and 400"))
        -- INLINED!!
        return true
      end
      --checkParam4
      if (nbParam >= 4) then
        str = CmdParam(cmd, 4)
        if (not (IsPositiveInteger(str)) or S2I(str) > MAX_MOVE_SPEED) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong speed value ; should be a positive integer between 0 and 522"))
          -- INLINED!!
          return true
        end
        speed = S2R(str)
        --checkParam5
        if (nbParam >= 5) then
          str = CmdParam(cmd, 5)
          if (S2R(str) <= 0 and str ~= "default" and str ~= "d") then
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong scale value ; should be a real upper than 0 or \"default\" or \"d\""))
            -- INLINED!!
            return true
          end
          if (str == "default" or str == "d") then
            x = -1
          else
            x = S2R(str)
          end
          --checkParam6
          if (nbParam == 6) then
            str = CmdParam(cmd, 6)
            if (not IsBoolString(str)) then
              Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong \"is clickable\" value ; should be 'true', 'false', '0' or '1'"))
              -- INLINED!!
              return true
            end
            b = S2B(str)
          else
            b = false
          end
        else
          x = -1
          b = false
        end
      else
        speed = DEFAULT_MONSTER_SPEED
        x = -1
        b = false
      end
    else
      param3 = "0"
      speed = DEFAULT_MONSTER_SPEED
      x = -1
      b = false
    end
    if (StringContainsChar(param1, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param1, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param1, "\"")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
      -- INLINED!!
      return true
    end
    if (s__MonsterTypeArray_new(udg_monsterTypes, param1, String2Ascii(SubStringBJ(param2, 2, 5)), x, S2R(param3), speed, b) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't create the monster type"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster type \"" .. param1 .. "\" created"))
      -- INLINED!!
    end
    return true
  end


  ---setMonsterLabel(setml) <oldMonsterLabel> <newMonsterLabel>
  if (name == "setMonsterLabel" or name == "setml") then
    if (not (nbParam == 2)) then
      return true
    end
    b = (s__MonsterTypeArray_get(udg_monsterTypes, param1) ~= 0)
    if (b) then
      b = (not (s__MonsterTypeArray_get((udg_monsterTypes), (param2)) ~= 0))
      -- INLINED!!
    end
    if (b) then
      if (StringContainsChar(param2, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param2, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param2, "\"")) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
        -- INLINED!!
        return true
      end
      s__MonsterType_label[(s__MonsterTypeArray_get(udg_monsterTypes, param1))] = (param2)
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("label changed to \"" .. param2 .. "\""))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to change label"))
      -- INLINED!!
    end
    return true
  end


  ---setMonsterAlias(setma) <monsterLabel> <alias>
  if (name == "setMonsterAlias" or name == "setma") then
    if (not (nbParam == 2)) then
      return true
    end
    b = (s__MonsterTypeArray_get(udg_monsterTypes, param1) ~= 0)
    if (b) then
      b = (not (s__MonsterTypeArray_get((udg_monsterTypes), (param2)) ~= 0))
      -- INLINED!!
    end
    if (b) then
      if (StringContainsChar(param2, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param2, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param2, "\"")) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
        -- INLINED!!
        return true
      end
      s__MonsterType_setAlias(s__MonsterTypeArray_get(udg_monsterTypes, param1), param2)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("alias changed to \"" .. param2 .. "\""))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to change alias"))
      -- INLINED!!
    end
    return true
  end


  ---setMonsterUnit(setmu) <monsterLabel> <unitType>   --> example of unit type : 'ewsp'
  if (name == "setMonsterUnit" or name == "setmu") then
    if (not (nbParam == 2)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (not (StringLength(param2) == 6 and SubStringBJ(param2, 1, 1) == "'" and SubStringBJ(param2, 6, 6) == "'")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong unit type id (exemple : 'hfoo')"))
      -- INLINED!!
      return true
    end
    if (s__MonsterType_setUnitTypeId(s__MonsterTypeArray_get(udg_monsterTypes, param1), String2Ascii(SubStringBJ(param2, 2, 5)))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("unit type changed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this unit type doesn't exist"))
      -- INLINED!!
    end
    return true
  end


  ---setMonsterImmolation(setmi) <monsterLabel> <immolationRadius>   --> immolation between 5 and 400, divisible by 5
  if (name == "setMonsterImmolation" or name == "setmi") then
    if (not (nbParam == 2)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    x = S2R(param2)
    if (not ((x / 5) == I2R(R2I(x / 5))) or x < 0 or x > 400) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong immolation radius ; should be an integer divisible by 5 and between 0 and 400"))
      -- INLINED!!
      return true
    end
    if (s__MonsterType_setImmolation(s__MonsterTypeArray_get(udg_monsterTypes, param1), x)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("immolation changed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't change immolation"))
      -- INLINED!!
    end
    return true
  end


  ---setMonsterMoveSpeed(setmms) <monsterLabel> <speed>
  if (name == "setMonsterMoveSpeed" or name == "setmms") then
    if (not (nbParam == 2)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (not (IsPositiveInteger(param2)) or S2I(param2) > MAX_MOVE_SPEED) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong speed value ; should be a positive integer between 0 and 522"))
      -- INLINED!!
      return true
    end
    if (s__MonsterType_setUnitMoveSpeed(s__MonsterTypeArray_get(udg_monsterTypes, param1), S2R(param2))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("move speed changed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't change move speed"))
      -- INLINED!!
    end
    return true
  end


  ---setMonsterScale(setms) <monsterLabel> <scale>   --> affects the size of this kind of monster
  if (name == "setMonsterScale" or name == "setms") then
    if (not (nbParam == 2)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (S2R(param2) <= 0 and param2 ~= "default" and param2 ~= "d") then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong scale value ; should be a real upper than 0 or \"default\" or \"d\""))
      -- INLINED!!
      return true
    end
    if (param2 == "default" or param2 == "d") then
      x = -1
    else
      x = S2R(param2)
    end
    if (s__MonsterType_setScale(s__MonsterTypeArray_get(udg_monsterTypes, param1), x)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("scale changed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't change scale, probably because the old value is the same"))
      -- INLINED!!
    end
    return true
  end


  ---setMonsterClickable(setmc) <monsterLabel> <boolean clickable>   --> sets if locust or not for this kind of monster
  if (name == "setMonsterClickable" or name == "setmc") then
    if (not (nbParam == 2)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (not IsBoolString(param2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong \"is clickable\" value ; should be 'true', 'false', '0' or '1'"))
      -- INLINED!!
      return true
    end
    if (s__MonsterType_setIsClickable(s__MonsterTypeArray_get(udg_monsterTypes, param1), S2B(param2))) then
      if (S2B(param2)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("this monster type is now clickable"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("this monster type is now unclickable"))
        -- INLINED!!
      end
    else
      if (S2B(param2)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this monster type is already clickable"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this monster type is already unclickable"))
        -- INLINED!!
      end
    end
    return true
  end


  ---setMonsterKillEffect(setmke) <monsterLabel> <killingEffect>
  if (name == "setMonsterKillEffect" or name == "setmke") then
    if (not (nbParam == 2)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    if (StringContainsChar(param2, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param2, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param2, "\"")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
      -- INLINED!!
      return true
    end
    s__MonsterType_setKillingEffectStr(s__MonsterTypeArray_get(udg_monsterTypes, param1), param2)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("kill effect changed for this monster type"))
    -- INLINED!!
    return true
  end


  ---setMonsterMeteorsToKill(setmmtk) <monsterLabel> <meteorNumber>
  if (name == "setMonsterMeteorsToKill" or name == "setmmtk") then
    if (not (nbParam == 2)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (not (IsPositiveInteger(param2) and S2I(param2) > 0 and S2I(param2) < 10)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 must be an integer between 1 and 9"))
      -- INLINED!!
      return true
    end
    s__MonsterType_setNbMeteorsToKill(s__MonsterTypeArray_get(udg_monsterTypes, param1), S2I(param2))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("number of meteors to kill changed for this monster type"))
    -- INLINED!!
    return true
  end


  ---setMonsterHeight(setmh) <monsterLabel> <height>|default|d
  if (name == "setMonsterHeight" or name == "setmh") then
    if (not (nbParam == 2)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (param2 == "default" or param2 == "d") then
      x = -1
    elseif (S2R(param2) > 0 or param2 == "0") then
      x = S2R(param2)
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong height ; should be a positive real or \"default\" or \"d\""))
      -- INLINED!!
      return true
    end
    if (s__MonsterType_setHeight(s__MonsterTypeArray_get(udg_monsterTypes, param1), x)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("height changed for this monster type"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the height is already set to this value"))
      -- INLINED!!
    end
    return true
  end


  ---createMonsterImmobile(crmi) <monsterLabel> [<facingAngle>]   --> if facing angle not specified, random angles will be chosen
  if (name == "createMonsterImmobile" or name == "crmi") then
    if (nbParam < 1 or nbParam > 2) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (nbParam == 2) then
      if (S2R(param2) == 0 and param2 ~= "0") then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong angle value ; should be a real (-1 for random angle)"))
        -- INLINED!!
        return true
      end
      x = S2R(param2)
    else
      x = -1
    end
    s__Escaper_makeCreateNoMoveMonsters(escaper, s__MonsterTypeArray_get(udg_monsterTypes, param1), x)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster making on"))
    -- INLINED!!
    return true
  end

  ---createMonster(crm) <monsterLabel>   --> simple patrols (2 locations)   
  if (name == "createMonster" or name == "crm") then
    if (not (nbParam == 1)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    s__Escaper_makeCreateSimplePatrolMonsters(escaper, "normal", s__MonsterTypeArray_get(udg_monsterTypes, param1))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster making on"))
    -- INLINED!!
    return true
  end

  ---createMonsterString(crms) <monsterLabel>   --> simple patrols where the second loc of a monster is the first loc of the next one
  if (name == "createMonsterString" or name == "crms") then
    if (not (nbParam == 1)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    s__Escaper_makeCreateSimplePatrolMonsters(escaper, "string", s__MonsterTypeArray_get(udg_monsterTypes, param1))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster making on"))
    -- INLINED!!
    return true
  end

  ---createMonsterAuto(crma) <monsterLabel>  --> simple patrols created with only one click (click on a slide terrain)
  if (name == "crma") then
    if (not (nbParam == 1)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    s__Escaper_makeCreateSimplePatrolMonsters(escaper, "auto", s__MonsterTypeArray_get(udg_monsterTypes, param1))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster making on"))
    -- INLINED!!
    return true
  end


  ---setAutoDistOnTerrain(setadot) <newDist>   --> for patrol monsters created in one click, distance between locations and slide terrain
  if (name == "setAutoDistOnTerrain" or name == "setadot") then
    if (not (nbParam == 1 and (S2R(param1) ~= 0 or param1 == "0" or param1 == "default" or param1 == "d"))) then
      return true
    end
    if (param1 == "default" or param1 == "d") then
      MMSimplePatrolActions__distOnTerrain = MMSimplePatrolActions__DIST_ON_TERRAIN_DEFAULT
      -- INLINED!!
    else
      if (not MakeSimplePatrolAuto_ChangeDistOnTerrain(S2R(param1))) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("distance specified out of bounds"))
        -- INLINED!!
        return true
      end
    end
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("distance on terrain changed"))
    -- INLINED!!
    return true
  end


  ---createMonsterMultiPatrols(crmmp) <monsterLabel>   --> patrols until 20 locations
  if (name == "createMonsterMultiPatrols" or name == "crmmp") then
    if (not (nbParam == 1)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    s__Escaper_makeCreateMultiplePatrolsMonsters(escaper, "normal", s__MonsterTypeArray_get(udg_monsterTypes, param1))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster making on"))
    -- INLINED!!
    return true
  end

  ---createMonsterMultiPatrolsString(crmmps) <monsterLabel>   --> patrols until 20 locations, with come back at last location
  if (name == "createMonsterMultiPatrolsString" or name == "crmmps") then
    if (not (nbParam == 1)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    s__Escaper_makeCreateMultiplePatrolsMonsters(escaper, "string", s__MonsterTypeArray_get(udg_monsterTypes, param1))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster making on"))
    -- INLINED!!
    return true
  end


  ---createMonsterTeleport(crmt) <monsterLabel> <period> <angle>   --> teleport monster until 20 locations
  if (name == "createMonsterTeleport" or name == "crmt") then
    if (not (nbParam == 3)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    x = S2R(param2)
    if (x < MONSTER_TELEPORT_PERIOD_MIN or x > MONSTER_TELEPORT_PERIOD_MAX) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the period must be between " .. R2S(MONSTER_TELEPORT_PERIOD_MIN) .. " and " .. R2S(MONSTER_TELEPORT_PERIOD_MAX)))
      -- INLINED!!
      return true
    end
    --checkParam3
    if (S2R(param3) == 0 and param3 ~= "0") then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong angle value ; should be a real (-1 for random angle)"))
      -- INLINED!!
      return true
    end
    s__Escaper_makeCreateTeleportMonsters(escaper, "normal", s__MonsterTypeArray_get(udg_monsterTypes, param1), x, S2R(param3))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster making on"))
    -- INLINED!!
    return true
  end


  ---createMonsterTeleportStrings(crmts) <monsterLabel> <period> <angle>   --> teleport monster until 20 locations
  if (name == "createMonsterTeleport" or name == "crmts") then
    if (not (nbParam == 3)) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --checkParam2
    x = S2R(param2)
    if (x < MONSTER_TELEPORT_PERIOD_MIN or x > MONSTER_TELEPORT_PERIOD_MAX) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the period must be between " .. R2S(MONSTER_TELEPORT_PERIOD_MIN) .. " and " .. R2S(MONSTER_TELEPORT_PERIOD_MAX)))
      -- INLINED!!
      return true
    end
    --checkParam3
    if (S2R(param3) == 0 and param3 ~= "0") then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong angle value ; should be a real (-1 for random angle)"))
      -- INLINED!!
      return true
    end
    s__Escaper_makeCreateTeleportMonsters(escaper, "string", s__MonsterTypeArray_get(udg_monsterTypes, param1), x, S2R(param3))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster making on"))
    -- INLINED!!
    return true
  end


  ---next(n)   --> finalize the current multi patrols or teleport monster and start the next one
  if (name == "next" or name == "n") then
    if (not noParam) then
      return true
    end
    if (s__Escaper_makeMmpOrMtNext(escaper)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("next"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("you're not making multipatrol or teleport monsters"))
      -- INLINED!!
    end
    return true
  end


  ---monsterTeleportWait(mtw)   --> ajoute une période d'attente le MonsterTeleport en train d'être créé
  if (name == "monsterTeleportWait" or name == "mtw") then
    if (not noParam) then
      return true
    end
    if (s__Escaper_makeMonsterTeleportWait(escaper)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("wait period added"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to add a wait period"))
      -- INLINED!!
    end
    return true
  end


  ---monsterTeleportHide(mth)   --> ajoute une période où le MonsterTeleport est caché et ne tue pas
  if (name == "monsterTeleportHide" or name == "mth") then
    if (not noParam) then
      return true
    end
    if (s__Escaper_makeMonsterTeleportHide(escaper)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("hide period added"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to add a hide period"))
      -- INLINED!!
    end
    return true
  end


  ---setUnitTeleportPeriod(setutp) <period>
  if (name == "setUnitTeleportPeriod" or name == "setutp") then
    if (nbParam ~= 1) then
      return true
    end
    --checkParam1
    x = S2R(param1)
    if (x < MONSTER_TELEPORT_PERIOD_MIN or x > MONSTER_TELEPORT_PERIOD_MAX) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the period must be between " .. R2S(MONSTER_TELEPORT_PERIOD_MIN) .. " and " .. R2S(MONSTER_TELEPORT_PERIOD_MAX)))
      -- INLINED!!
      return true
    end
    --apply command
    s__Escaper_makeSetUnitTeleportPeriod(escaper, "oneByOne", x)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("setting unit teleport period on"))
    -- INLINED!!
    return true
  end


  ---setUnitTeleportPeriodBetweenPoints(setutpbp) <period>
  if (name == "setUnitTeleportPeriodBetweenPoints" or name == "setutpbp") then
    if (nbParam ~= 1) then
      return true
    end
    --checkParam1
    x = S2R(param1)
    if (x < MONSTER_TELEPORT_PERIOD_MIN or x > MONSTER_TELEPORT_PERIOD_MAX) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the period must be between " .. R2S(MONSTER_TELEPORT_PERIOD_MIN) .. " and " .. R2S(MONSTER_TELEPORT_PERIOD_MAX)))
      -- INLINED!!
      return true
    end
    --apply command
    s__Escaper_makeSetUnitTeleportPeriod(escaper, "twoClics", x)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("setting unit teleport period on"))
    -- INLINED!!
    return true
  end


  ---getUnitTeleportPeriod(getutp)
  if (name == "getUnitTeleportPeriod" or name == "getutp") then
    if (not noParam) then
      return true
    end
    --apply command
    s__Escaper_makeGetUnitTeleportPeriod(escaper)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("getting unit teleport period on"))
    -- INLINED!!
    return true
  end


  ---setUnitTeleportPeriod(setutp) <period>
  if (name == "setUnitTeleportPeriod" or name == "setutp") then
    if (nbParam ~= 1) then
      return true
    end
    --checkParam1
    x = S2R(param1)
    if (x < MONSTER_TELEPORT_PERIOD_MIN or x > MONSTER_TELEPORT_PERIOD_MAX) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the period must be between " .. R2S(MONSTER_TELEPORT_PERIOD_MIN) .. " and " .. R2S(MONSTER_TELEPORT_PERIOD_MAX)))
      -- INLINED!!
      return true
    end
    --apply command
    s__Escaper_makeSetUnitTeleportPeriod(escaper, "oneByOne", x)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("setting unit teleport period on"))
    -- INLINED!!
    return true
  end


  ---setUnitMonsterType(setumt) <monsterLabel>
  if (name == "setUnitMonsterType" or name == "setumt") then
    if (nbParam ~= 1) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --apply command
    s__Escaper_makeSetUnitMonsterType(escaper, "oneByOne", s__MonsterTypeArray_get(udg_monsterTypes, param1))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("setting unit monster type on"))
    -- INLINED!!
    return true
  end


  ---setUnitMonsterTypeBetweenPoints(setumtbp) <monsterLabel>
  if (name == "setUnitMonsterTypeBetweenPoints" or name == "setumtbp") then
    if (nbParam ~= 1) then
      return true
    end
    --checkParam1
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
      return true
    end
    --apply command
    s__Escaper_makeSetUnitMonsterType(escaper, "twoClics", s__MonsterTypeArray_get(udg_monsterTypes, param1))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("setting unit monster type on"))
    -- INLINED!!
    return true
  end


  ---displayMonsters(dm) [<monsterLabel>]   --> displays the characteristics of the kinds of monsters added by the maker(s)
  if (name == "displayMonsters" or name == "dm") then
    if (not (nbParam <= 1)) then
      return true
    end
    if (nbParam == 1) then
      if ((s__MonsterTypeArray_get((udg_monsterTypes), (param1)) ~= 0)) then
        -- INLINED!!
        s__MonsterType_displayTotalForPlayer(s__MonsterTypeArray_get(udg_monsterTypes, param1), (s__Escaper_p[(escaper)]))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
        -- INLINED!!
      end
    else
      s__MonsterTypeArray_displayForPlayer(udg_monsterTypes, (s__Escaper_p[(escaper)]))
      -- INLINED!!
    end
    return true
  end


  ---deleteMonstersBetweenPoints(delmbp) [<deleteMode>]   --> delete monsters in a rectangle formed with two clicks
  if (name == "deleteMonstersBetweenPoints" or name == "delmbp") then
    --delete modes : all, noMove, move, simplePatrol, multiplePatrols
    if (not (nbParam <= 1)) then
      return true
    end
    if (nbParam == 1) then
      if (param1 == "all" or param1 == "a") then
        str = "all"
      else
        if (param1 == "noMove" or param1 == "nm") then
          str = "noMove"
        else
          if (param1 == "move" or param1 == "m") then
            str = "move"
          else
            if (param1 == "simplePatrol" or param1 == "sp") then
              str = "simplePatrol"
            else
              if (param1 == "multiplePatrols" or param1 == "mp") then
                str = "multiplePatrols"
              else
                return true
              end
            end
          end
        end
      end
    else
      str = "all"
    end
    s__Escaper_makeDeleteMonsters(escaper, str)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monsters deleting on"))
    -- INLINED!!
    return true
  end


  ---deleteMonster(delm)   --> delete the monsters clicked by the player
  if (name == "deleteMonster" or name == "delm") then
    if (noParam) then
      s__Escaper_makeDeleteMonsters(escaper, "oneByOne")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster deleting on"))
      -- INLINED!!
    end
    return true
  end


  ---createMonsterSpawn(crmsp) <monsterSpawnLabel> <monsterLabel> <direction> [<frequency>]   --> default frequency is 2, minimum is 0.1, maximum is 30
  if (name == "createMonsterSpawn" or name == "crmsp") then
    if (not (nbParam >= 3 and nbParam <= 4)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("uncorrect number of parameters"))
      -- INLINED!!
      return true
    end
    if (s__MonsterSpawnArray_getFromLabel(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1) ~= 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("a monster spawn with label \"" .. param1 .. "\" already exists for this level"))
      -- INLINED!!
      return true
    end
    if (s__MonsterTypeArray_get(udg_monsterTypes, param2) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type \"" .. param2 .. "\""))
      -- INLINED!!
      return true
    end
    if (param3 == "leftToRight" or param3 == "ltr") then
      str = "leftToRight"
    elseif (param3 == "upToDown" or param3 == "utd") then
      str = "upToDown"
    elseif (param3 == "rightToLeft" or param3 == "rtl") then
      str = "rightToLeft"
    elseif (param3 == "downToUp" or param3 == "dtu") then
      str = "downToUp"
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param 3 should be direction : leftToRight, upToDown, rightToLeft or downToUp"))
      -- INLINED!!
      return true
    end
    if (nbParam == 4) then
      x = S2R(param4)
      if (x < 0.1 or x > 30) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("frequency must be a real between 0.1 and 30"))
        -- INLINED!!
        return true
      end
    else
      x = 2
    end
    s__Escaper_makeCreateMonsterSpawn(escaper, param1, s__MonsterTypeArray_get(udg_monsterTypes, param2), str, x)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster spawn making on"))
    -- INLINED!!
    return true
  end


  ---setMonsterSpawnLabel(setmsl) <oldMonsterSpawnLabel> <newMonsterSpawnLabel>
  if (name == "setMonsterSpawnLabel" or name == "setmsl") then
    if (not (nbParam == 2)) then
      return true
    end
    if (s__MonsterSpawnArray_changeLabel(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1, param2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("label changed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't change label"))
      -- INLINED!!
    end
    return true
  end


  ---setMonsterSpawnMonster(setmsm) <monsterSpawnLabel> <monsterLabel>
  if (name == "setMonsterSpawnMonster" or name == "setmsm") then
    if (not (nbParam == 2)) then
      return true
    end
    if (s__MonsterSpawnArray_getFromLabel(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster spawn \"" .. param1 .. "\" in this level"))
      -- INLINED!!
      return true
    end
    if (s__MonsterTypeArray_get(udg_monsterTypes, param2) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type \"" .. param2 .. "\""))
      -- INLINED!!
      return true
    end
    s__MonsterSpawn_mt[(s__MonsterSpawnArray_getFromLabel(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1))] = (s__MonsterTypeArray_get(udg_monsterTypes, param2))
    -- INLINED!!
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster type changed"))
    -- INLINED!!
    return true
  end


  ---setMonsterSpawnDirection(setmsd) <monsterSpawnLabel> <direction>   --> leftToRight(ltr), upToDown(utd), rightToLeft(rtl), downToUp(dtu)
  if (name == "setMonsterSpawnDirection" or name == "setmsd") then
    if (not (nbParam == 2)) then
      return true
    end
    if (s__MonsterSpawnArray_getFromLabel(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster spawn \"" .. param1 .. "\" in this level"))
      -- INLINED!!
      return true
    end
    if (param2 == "leftToRight" or param2 == "ltr") then
      str = "leftToRight"
    elseif (param2 == "upToDown" or param2 == "utd") then
      str = "upToDown"
    elseif (param2 == "rightToLeft" or param2 == "rtl") then
      str = "rightToLeft"
    elseif (param2 == "downToUp" or param2 == "dtu") then
      str = "downToUp"
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("direction should be leftToRight, upToDown, rightToLeft or downToUp"))
      -- INLINED!!
      return true
    end
    s__MonsterSpawn_setSens(s__MonsterSpawnArray_getFromLabel(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1), str)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("direction changed"))
    -- INLINED!!
    return true
  end


  ---setMonsterSpawnFrequency(setmsf) <monsterSpawnLabel> <frequency>   --> maximum 20 mobs per second
  if (name == "setMonsterSpawnFrequency" or name == "setmsf") then
    if (not (nbParam == 2)) then
      return true
    end
    if (s__MonsterSpawnArray_getFromLabel(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1) == 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster spawn \"" .. param1 .. "\" in this level"))
      -- INLINED!!
      return true
    end
    x = S2R(param2)
    if (x < 0.1 or x > 30) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("frequency must be a real between 0.1 and 30"))
      -- INLINED!!
      return true
    end
    s__MonsterSpawn_setFrequence(s__MonsterSpawnArray_getFromLabel(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1), x)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("frequency changed"))
    -- INLINED!!
    return true
  end


  ---displayMonsterSpawns(dms)
  if (name == "displayMonsterSpawns" or name == "dms") then
    if (not noParam) then
      return true
    end
    s__MonsterSpawnArray_displayForPlayer(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], (s__Escaper_p[(escaper)]))
    -- INLINED!!
    return true
  end


  ---deleteMonsterSpawn(delms) <monsterSpawnLabel> 
  if (name == "deleteMonsterSpawn" or name == "delms") then
    if (not (nbParam == 1)) then
      return true
    end
    if (s__MonsterSpawnArray_clearMonsterSpawn(s__Level_monsterSpawns[s__Escaper_getMakingLevel(escaper)], param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster spawn deleted"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster spawn for this level"))
      -- INLINED!!
    end
    return true
  end


  --createKey(crk)   --> create meteors used to kill clickable monsters
  if (name == "createKey" or name == "crk") then
    if (noParam) then
      s__Escaper_makeCreateMeteor(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("meteor making on"))
      -- INLINED!!
    end
    return true
  end


  ---deleteKeysBetweenPoints(delkbp)   --> delete meteors in a rectangle formed with two clicks
  if (name == "deleteKeysBetweenPoints" or name == "delkbp") then
    if (noParam) then
      s__Escaper_makeDeleteMeteors(escaper, "twoClics")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("meteors deleting on"))
      -- INLINED!!
    end
    return true
  end


  ---deleteKey(delk)   --> delete the meteors clicked by the player
  if (name == "deleteKey" or name == "delk") then
    if (noParam) then
      s__Escaper_makeDeleteMeteors(escaper, "oneByOne")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("meteors deleting on"))
      -- INLINED!!
    end
    return true
  end


  ---createStart(crs) [next(n)]   --> create the start (a rectangle formed with two clicks) of the current level or the next one if specified
  if (name == "createStart" or name == "crs") then
    if (not (nbParam <= 1)) then
      return true
    end
    --checkParam1
    if (nbParam == 1) then
      if (not (param1 == "next" or param1 == "n")) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 should be \"next\" or \"n\""))
        -- INLINED!!
        return true
      end
      b = true
    else
      b = false
    end
    s__Escaper_makeCreateStart(escaper, b)
    --b signifie si le "Start" est créé pour le niveau suivant (sinon pour le niveau en cours de mapping pour l'escaper)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("start making on"))
    -- INLINED!!
    return true
  end


  ---createEnd(cre)   --> create the end (a rectangle formed with two clicks) of the current level
  if (name == "createEnd" or name == "cre") then
    if (not noParam) then
      return true
    end
    s__Escaper_makeCreateEnd(escaper)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("end making on"))
    -- INLINED!!
    return true
  end


  ---getMakingLevel(getmkl)   --> displays the id of the level the player is creating (the first one is id 0)
  if (name == "getMakingLevel" or name == "getmkl") then
    if (not noParam) then
      return true
    end
    if (sc__LevelArray_getCurrentLevel(udg_levels) == s__Escaper_getMakingLevel(escaper)) then
      str = " (same as current level)"
    else
      str = ""
    end
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("the level you are making is number " .. I2S(sc__Level_getId(s__Escaper_getMakingLevel(escaper))) .. str))
    -- INLINED!!
    return true
  end


  ---setMakingLevel(setmkl) <levelId> | current(c)   --> sets the level the players chose to continue creating
  if (name == "setMakingLevel" or name == "setmkl") then
    if (not (nbParam == 1)) then
      return true
    end
    if (IsPositiveInteger(param1)) then
      n = S2I(param1)
      if ((s__LevelArray_lastInstance[(udg_levels)]) < n) then
        -- INLINED!!
        if (n - (s__LevelArray_lastInstance[(udg_levels)]) == 1) then
          -- INLINED!!
          if (sc__LevelArray_new(udg_levels)) then
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("level number " .. I2S(n) .. " created"))
            -- INLINED!!
          else
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("nombre maximum de niveaux atteint"))
            -- INLINED!!
            return true
          end
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this level doesn't exist"))
          -- INLINED!!
          return true
        end
      end
      if (s__Escaper_setMakingLevel(escaper, sc__LevelArray_get(udg_levels, n))) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("you are now making level " .. I2S(n)))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("you are already making this level"))
        -- INLINED!!
      end
    else
      if (param1 == "current" or param1 == "c") then
        if (s__Escaper_setMakingLevel(escaper, 0)) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("you are now making current level (which is at the moment number " .. I2S(sc__Level_getId(sc__LevelArray_getCurrentLevel(udg_levels))) .. ")"))
          -- INLINED!!
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("you are already making current level"))
          -- INLINED!!
        end
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 should be a level id or \"current\""))
        -- INLINED!!
      end
    end
    return true
  end


  ---newLevel(newl)   --> creates a new level after the last one
  if (name == "newLevel" or name == "newl") then
    if (noParam) then
      if (sc__LevelArray_new(udg_levels)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("level number " .. I2S((s__LevelArray_lastInstance[(udg_levels)])) .. " created"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("nombre maximum de niveaux atteint"))
        -- INLINED!!
      end
    end
    return true
  end


  ---setLivesEarned(setle) <livesNumber> [<levelID>]   --> set the number of lives earned at the specified level
  if (name == "setLivesEarned" or name == "setle") then
    if (not (nbParam >= 1 and nbParam <= 2)) then
      return true
    end
    --check param1
    if (not IsPositiveInteger(param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the number of lives must be a positive integer"))
      -- INLINED!!
      return true
    end
    --check param2
    if (nbParam == 2) then
      if (not (IsPositiveInteger(param2))) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the level number must be a positive integer"))
        -- INLINED!!
        return true
      end
      level = sc__LevelArray_get(udg_levels, S2I(param2))
      if (level == 0) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("level number " .. param2 .. " doesn't exist"))
        -- INLINED!!
        return true
      end
    else
      level = s__Escaper_getMakingLevel(escaper)
    end
    sc__Level_setNbLivesEarned(level, S2I(param1))
    if (sc__Level_getId(level) > 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("the number of lives earned at level " .. I2S(sc__Level_getId(level)) .. " is now " .. param1))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("the number of lives at the beginning of the game is now " .. param1))
      -- INLINED!!
    end
    return true
  end


  ---createVisibility(crv)   --> create visibility rectangles for the current level
  if (name == "createVisibility" or name == "crv") then
    if (noParam) then
      s__Escaper_makeCreateVisibilityModifier(escaper)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("visibility making on"))
      -- INLINED!!
    end
    return true
  end


  ---removeVisibilities(remv) [<levelId>]   --> remove all visibility rectangles made for the current level
  if (name == "removeVisibilities" or name == "remv") then
    if (not (noParam or nbParam == 1)) then
      return true
    end
    --check param1
    if (nbParam == 1) then
      if (not (IsPositiveInteger(param1))) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the level number must be a positive integer"))
        -- INLINED!!
        return true
      end
      level = sc__LevelArray_get(udg_levels, S2I(param2))
      if (level == 0) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("level number " .. param1 .. " doesn't exist"))
        -- INLINED!!
        return true
      end
    else
      level = s__Escaper_getMakingLevel(escaper)
    end
    sc__Level_removeVisibilities(level)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("visibilities removed for level " .. I2S(sc__Level_getId(level))))
    -- INLINED!!
    return true
  end


  ---setStartMessage(setsm) [<message>]   --> sets the start message of the current level (spaces allowed)
  if (name == "setStartMessage" or name == "setsm") then
    sc__Level_setStartMessage(s__Escaper_getMakingLevel(escaper), CmdParam(cmd, 0))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("start message for level " .. I2S(sc__Level_getId(s__Escaper_getMakingLevel(escaper))) .. " changed"))
    -- INLINED!!
    return true
  end


  ---getStartMessage(getsm)   --> displays the start message of the current level
  if (name == "getStartMessage" or name == "getsm") then
    str = (s__Level_startMessage[(s__Escaper_getMakingLevel(escaper))])
    -- INLINED!!
    if (str == "" or str == nil) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("start message for level " .. I2S(sc__Level_getId(s__Escaper_getMakingLevel(escaper))) .. " is not defined"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("start message for level " .. I2S(sc__Level_getId(s__Escaper_getMakingLevel(escaper))) .. " is \"" .. str .. "\""))
      -- INLINED!!
    end
    return true
  end


  ---cancel(z)   --> cancel the last action made on the map
  if (name == "cancel" or name == "z") then
    if (noParam) then
      if (not s__Escaper_cancelLastAction(escaper)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("nothing to cancel"))
        -- INLINED!!
      end
    end
    return true
  end


  ---redo(y)   --> redo the last action cancelled
  if (name == "redo" or name == "y") then
    if (noParam) then
      if (not s__Escaper_redoLastAction(escaper)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("nothing to redo"))
        -- INLINED!!
      end
    end
    return true
  end


  ---nbLevels(nbl)   --> display the number of levels that are currently in the map
  if (name == "nbLevels" or name == "nbl") then
    if (noParam) then
      n = (s__LevelArray_lastInstance[(udg_levels)] + 1)
      -- INLINED!!
      if (n > 1) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("there are currently " .. I2S(n) .. " levels in the map"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("there is currently " .. I2S(n) .. " level in the map"))
        -- INLINED!!
      end
    end
    return true
  end


  ---newCaster(newc) <label> <casterMonsterType> <projectileMonsterType> [<range> [<projectileSpeed> [<loadTime>]]]
  if (name == "newCaster" or name == "newc") then
    if (nbParam < 3 or nbParam > 6) then
      return true
    end
    --checkParam1
    if ((s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("label \"" .. param1 .. "\" already used"))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param2)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type \"" .. param2 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam3
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param3)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type \"" .. param3 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam4 range
    if (nbParam >= 4) then
      if (S2R(param4) <= 0) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the range must be a real higher than 0"))
        -- INLINED!!
        return true
      end
      x = S2R(param4)
      --checkParam5 projectile speed
      if (nbParam >= 5) then
        if (S2R(CmdParam(cmd, 5)) < MIN_CASTER_PROJECTILE_SPEED) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the projectile speed must be a real higher or equals to " .. R2S(MIN_CASTER_PROJECTILE_SPEED)))
          -- INLINED!!
          return true
        end
        speed = S2R(CmdParam(cmd, 5))
        --checkParam6 load time
        if (nbParam == 6) then
          if (S2R(CmdParam(cmd, 6)) < MIN_CASTER_LOAD_TIME) then
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the load time must be a real higher or equals to " .. R2S(MIN_CASTER_LOAD_TIME)))
            -- INLINED!!
            return true
          end
          l__y = S2R(CmdParam(cmd, 6))
        else
          l__y = DEFAULT_CASTER_LOAD_TIME
        end
      else
        l__y = DEFAULT_CASTER_LOAD_TIME
        speed = DEFAULT_CASTER_PROJECTILE_SPEED
      end
    else
      l__y = DEFAULT_CASTER_LOAD_TIME
      speed = DEFAULT_CASTER_PROJECTILE_SPEED
      x = DEFAULT_CASTER_RANGE
    end
    --apply command
    if (StringContainsChar(param1, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param1, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param1, "\"")) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
      -- INLINED!!
      return true
    end
    s__CasterTypeArray_new(udg_casterTypes, param1, s__MonsterTypeArray_get(udg_monsterTypes, param2), s__MonsterTypeArray_get(udg_monsterTypes, param3), x, speed, l__y, DEFAULT_CASTER_ANIMATION)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("new caster type \"" .. param1 .. "\" created"))
    -- INLINED!!
    return true
  end


  ---setCasterLabel(setcl) <oldCasterLabel> <newCasterLabel>
  if (name == "setCasterLabel" or name == "setcl") then
    if (not (nbParam == 2)) then
      return true
    end
    b = (s__CasterTypeArray_get(udg_casterTypes, param1) ~= 0)
    if (b) then
      b = (not (s__CasterTypeArray_get((udg_casterTypes), (param2)) ~= 0))
      -- INLINED!!
    end
    if (b) then
      if (StringContainsChar(param2, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param2, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param2, "\"")) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
        -- INLINED!!
        return true
      end
      s__CasterType_label[(s__CasterTypeArray_get(udg_casterTypes, param1))] = (param2)
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("label changed to \"" .. param2 .. "\""))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to change label"))
      -- INLINED!!
    end
    return true
  end


  ---setCasterAlias(setca) <casterLabel> <alias>
  if (name == "setCasterAlias" or name == "setca") then
    if (not (nbParam == 2)) then
      return true
    end
    b = (s__CasterTypeArray_get(udg_casterTypes, param1) ~= 0)
    if (b) then
      b = (not (s__CasterTypeArray_get((udg_casterTypes), (param2)) ~= 0))
      -- INLINED!!
    end
    if (b) then
      if (StringContainsChar(param2, CACHE_SEPARATEUR_ITEM) or StringContainsChar(param2, CACHE_SEPARATEUR_PARAM) or StringContainsChar(param2, "\"")) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("characters \", " .. CACHE_SEPARATEUR_ITEM .. " and " .. CACHE_SEPARATEUR_PARAM .. " not allowed"))
        -- INLINED!!
        return true
      end
      s__CasterType_setAlias(s__CasterTypeArray_get(udg_casterTypes, param1), param2)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("alias changed to \"" .. param2 .. "\""))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to change alias"))
      -- INLINED!!
    end
    return true
  end


  ---setCasterCaster(setcc) <casterLabel> <casterMonsterType>
  if (name == "setCasterCaster" or name == "setcc") then
    if (nbParam ~= 2) then
      return true
    end
    --checkParam 1
    if (not (s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type \"" .. param1 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam 2
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param2)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type \"" .. param2 .. "\""))
      -- INLINED!!
      return true
    end
    --apply command
    s__CasterType_setCasterMonsterType(s__CasterTypeArray_get(udg_casterTypes, param1), s__MonsterTypeArray_get(udg_monsterTypes, param2))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("caster monster type changed"))
    -- INLINED!!
    return true
  end


  ---setCasterProjectile(setcp) <casterLabel> <projectileMonsterType>
  if (name == "setCasterProjectile" or name == "setcp") then
    if (nbParam ~= 2) then
      return true
    end
    --checkParam 1
    if (not (s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type \"" .. param1 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam 2
    if (not (s__MonsterTypeArray_get((udg_monsterTypes), (param2)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type \"" .. param2 .. "\""))
      -- INLINED!!
      return true
    end
    --apply command
    s__CasterType_projectileMonsterType[(s__CasterTypeArray_get(udg_casterTypes, param1))] = (s__MonsterTypeArray_get(udg_monsterTypes, param2))
    -- INLINED!!
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("projectile monster type changed"))
    -- INLINED!!
    return true
  end


  ---setCasterRange(setcr) <casterLabel> <range>
  if (name == "setCasterRange" or name == "setcr") then
    if (nbParam ~= 2) then
      return true
    end
    --checkParam 1
    if (not (s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type \"" .. param1 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam 2
    if (S2R(param2) <= 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the range must be a real higher than 0"))
      -- INLINED!!
      return true
    end
    --apply command
    s__CasterType_setRange(s__CasterTypeArray_get(udg_casterTypes, param1), S2R(param2))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("range changed"))
    -- INLINED!!
    return true
  end


  ---setCasterSpeed(setcs) <casterLabel> <projectileSpeed>
  if (name == "setCasterSpeed" or name == "setcs") then
    if (nbParam ~= 2) then
      return true
    end
    --checkParam 1
    if (not (s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type \"" .. param1 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam 2
    if (S2R(param2) < MIN_CASTER_PROJECTILE_SPEED) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the projectile speed must be a real higher or equals to " .. R2S(MIN_CASTER_PROJECTILE_SPEED)))
      -- INLINED!!
      return true
    end
    --apply command
    s__CasterType_setProjectileSpeed(s__CasterTypeArray_get(udg_casterTypes, param1), S2R(param2))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("projectile speed changed"))
    -- INLINED!!
    return true
  end


  ---setCasterLoadtime(setclt) <casterLabel> <loadTime>
  if (name == "setCasterLoadTime" or name == "setclt") then
    if (nbParam ~= 2) then
      return true
    end
    --checkParam 1
    if (not (s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type \"" .. param1 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam 2
    if (S2R(param2) < MIN_CASTER_LOAD_TIME) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the load time must be a real higher or equals to " .. R2S(MIN_CASTER_LOAD_TIME)))
      -- INLINED!!
      return true
    end
    --apply command
    s__CasterType_setLoadTime(s__CasterTypeArray_get(udg_casterTypes, param1), S2R(param2))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("load time changed"))
    -- INLINED!!
    return true
  end


  ---setCasterAnimation(setcan) <casterLabel> <animation>
  if (name == "setCasterAnimation" or name == "setcan") then
    if (not (nbParam >= 2)) then
      return true
    end
    --checkParam 1
    if (not (s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type \"" .. param1 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam 2
    n = StringLength(name) + StringLength(param1) + 4
    str = SubStringBJ(cmd, n, StringLength(cmd))
    --apply command
    s__CasterType_animation[(s__CasterTypeArray_get(udg_casterTypes, param1))] = (str)
    -- INLINED!!
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("caster animation changed"))
    -- INLINED!!
    return true
  end


  ---createCaster(crc) <casterLabel> [<facingAngle>]
  if (name == "createCaster" or name == "crc") then
    if (nbParam < 1 or nbParam > 2) then
      return true
    end
    --checkParam 1
    if (not (s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type \"" .. param1 .. "\""))
      -- INLINED!!
      return true
    end
    --checkParam2
    if (nbParam == 2) then
      if (S2R(param2) == 0 and param2 ~= "0") then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("wrong angle value ; should be a real (-1 for random angle)"))
        -- INLINED!!
        return true
      end
      x = S2R(param2)
    else
      x = -1
    end
    --apply command
    s__Escaper_makeCreateCaster(escaper, s__CasterTypeArray_get(udg_casterTypes, param1), x)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("casters making on"))
    -- INLINED!!
    return true
  end


  ---deleteCastersBetweenPoints(delcbp)   --> delete casters in a rectangle formed with two clicks
  if (name == "deleteCastersBetweenPoints" or name == "delcbp") then
    if (noParam) then
      s__Escaper_makeDeleteCasters(escaper, "twoClics")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("casters deleting on"))
      -- INLINED!!
    end
    return true
  end


  ---deleteCaster(delc)   --> delete the casters clicked by the player
  if (name == "deleteCaster" or name == "delc") then
    if (noParam) then
      s__Escaper_makeDeleteCasters(escaper, "oneByOne")
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("casters deleting on"))
      -- INLINED!!
    end
    return true
  end


  ---displayCasters(dc) [<casterLabel>]
  if (name == "displayCasters" or name == "dc") then
    if (not (nbParam <= 1)) then
      return true
    end
    if (nbParam == 1) then
      if ((s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
        -- INLINED!!
        s__CasterType_displayForPlayer(s__CasterTypeArray_get(udg_casterTypes, param1), (s__Escaper_p[(escaper)]))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type"))
        -- INLINED!!
      end
    else
      s__CasterTypeArray_displayForPlayer(udg_casterTypes, (s__Escaper_p[(escaper)]))
      -- INLINED!!
    end
    return true
  end


  ---createClearMob(crcm) <disableDuration>
  if (name == "createClearMob" or name == "crcm") then
    if (not (nbParam == 1)) then
      return true
    end
    x = S2R(param1)
    if (x ~= 0 and (x > CLEAR_MOB_MAX_DURATION or x < ClearMob_FRONT_MONTANT_DURATION)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("the disable duration must be a real between " .. R2S(ClearMob_FRONT_MONTANT_DURATION) .. " and " .. R2S(CLEAR_MOB_MAX_DURATION)))
      -- INLINED!!
      return true
    end
    s__Escaper_makeCreateClearMobs(escaper, x)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("clear mob making on"))
    -- INLINED!!
    return true
  end


  ---deleteClearMob(delcm)
  if (name == "deleteClearMob" or name == "delcm") then
    if (not noParam) then
      return true
    end
    s__Escaper_makeDeleteClearMobs(escaper)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("clear mobs deleting on"))
    -- INLINED!!
    return true
  end


  ---getTerrainCliffClass(gettcc) <terrainLabel>
  if (name == "getTerrainCliffClass" or name == "gettcc") then
    if (nbParam ~= 1) then
      return true
    end
    --checkParam 1
    b = (sc__TerrainTypeArray_get(udg_terrainTypes, param1) ~= 0)
    if (not b) then
      return true
    end
    --apply command
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("cliff class for that terrain is " .. I2S((s__TerrainType_cliffClassId[(sc__TerrainTypeArray_get(udg_terrainTypes, param1))]))))
    -- INLINED!!
    return true
  end


  ---getMainTileset
  if (name == "getMainTileset") then
    if (not noParam) then
      return true
    end
    if ((s__TerrainTypeArray_mainTileset[(udg_terrainTypes)]) == "auto") then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("main tileset : auto"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("main tileset : " .. (s__TerrainTypeArray_mainTileset[(udg_terrainTypes)]) .. " = " .. tileset2tilesetString((s__TerrainTypeArray_mainTileset[(udg_terrainTypes)]))))
      -- INLINED!!
    end
    return true
  end




  return false
end







--library CommandMake ends
--library CommandRed:




function ExecuteCommandRed(escaper, cmd)
  local name = CmdName(cmd)
  local noParam = (CmdParam((cmd), 0) == nil)
  -- INLINED!!
  local nbParam = NbParam(cmd)

  local n = nil
  local i = nil
  local j = nil
  local k = nil

  local b = nil

  local str = ""
  local str2 = ""

  local x = nil
  local l__y = nil
  local point = nil

  local param = nil

  local param1 = CmdParam(cmd, 1)
  local param2 = CmdParam(cmd, 2)
  local param3 = CmdParam(cmd, 3)
  local param4 = CmdParam(cmd, 4)




  ---kill(kl) <Pcolor>   --> kills a hero
  if (name == "kill" or name == "kl") then
    if (nbParam ~= 1) then
      return true
    end
    if ((s__Escaper_isTrueMaximaxouB[(escaper)])) then
      -- INLINED!!
      if ((ColorString2Id((param1)) <= 11)) then
        -- INLINED!!
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]) ~= 0) then
          -- INLINED!!
          s__Escaper_kill((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))
          -- INLINED!!
        end
        return true
      end
      if (param1 == "all" or param1 == "a") then
        i = 0
        while true do
          if (i > 11) then
            break
          end
          if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= escaper and (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
            -- INLINED!!
            s__Escaper_kill((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
            -- INLINED!!
          end
          i = i + 1
        end
      end
      return true
    end
    if ((ColorString2Id((param1)) <= 11) and not (s__Escaper_canCheatB[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))])) then
      -- INLINED!!
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]) ~= 0) then
        -- INLINED!!
        s__Escaper_kill((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))
        -- INLINED!!
      end
    end
    return true
  end


  ---kick(kc) <Pcolor>   --> kicks a player
  if (name == "kick" or name == "kc") then
    if (nbParam ~= 1) then
      return true
    end
    if ((s__Escaper_isTrueMaximaxouB[(escaper)])) then
      -- INLINED!!
      if ((ColorString2Id((param1)) <= 11)) then
        -- INLINED!!
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]) ~= 0) then
          -- INLINED!!
          s__Escaper_kick(escaper, (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))
          -- INLINED!!
        end
        return true
      end
      if (param1 == "all" or param1 == "a") then
        i = 0
        while true do
          if (i > 11) then
            break
          end
          if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= escaper and (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
            -- INLINED!!
            s__Escaper_kick(escaper, (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
            -- INLINED!!
          end
          i = i + 1
        end
      end
      return true
    end
    if ((ColorString2Id((param1)) <= 11) and not (s__Escaper_canCheatB[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))])) then
      -- INLINED!!
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]) ~= 0) then
        -- INLINED!!
        s__Escaper_kick(escaper, (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param1))]))
        -- INLINED!!
      end
    end
    return true
  end


  ---restart(-)
  if (name == "restart") then
    if (noParam) then
      sc__LevelArray_restartTheGame(udg_levels)
    end
    return true
  end



  return false
end






--library CommandRed ends
--library CommandTrueMax:




function ExecuteCommandTrueMax(escaper, cmd)
  local name = CmdName(cmd)
  local noParam = (CmdParam((cmd), 0) == nil)
  -- INLINED!!
  local nbParam = NbParam(cmd)

  local n = nil
  local i = nil
  local j = nil
  local k = nil

  local b = nil

  local str = ""
  local str2 = ""

  local x = nil
  local l__y = nil
  local point = nil

  local param = nil

  local param1 = CmdParam(cmd, 1)
  local param2 = CmdParam(cmd, 2)
  local param3 = CmdParam(cmd, 3)
  local param4 = CmdParam(cmd, 4)

  local speed = nil




  ---beAdmin <Pcolor>|all(a) [<boolean status>]
  if (name == "beAdmin") then
    if (not (nbParam == 1 or nbParam == 2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("one or two params for this command"))
      -- INLINED!!
      return true
    end
    if (nbParam == 2) then
      if (IsBoolString(param2)) then
        b = S2B(param2)
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 must be a boolean"))
        -- INLINED!!
        return true
      end
    else
      b = true
    end
    if (param1 == "all" or param1 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0 and (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= escaper) then
          -- INLINED!!
          s__Escaper_setIsMaximaxou((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]), b)
          -- INLINED!!
        end
        i = i + 1
      end
      if (b) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("all players have now admin rights"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you are now the only one to have admin rights"))
        -- INLINED!!
      end
      return true
    end
    if ((ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      n = ColorString2Id(param1)
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= 0) then
        -- INLINED!!
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= escaper) then
          -- INLINED!!
          s__Escaper_setIsMaximaxou((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]), b)
          -- INLINED!!
          if (b) then
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("player " .. param1 .. " has now admin rights"))
            -- INLINED!!
          else
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("player " .. param1 .. " no longer has admin rights"))
            -- INLINED!!
          end
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("you can't change your own rights"))
          -- INLINED!!
        end
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("escaper " .. param1 .. " doesn't exist"))
        -- INLINED!!
      end
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 must be a player color or \"all\""))
      -- INLINED!!
    end
    return true
  end



  return false
end






--library CommandTrueMax ends
--library Level:

--nombre maximum de niveaux : 200. Nombre maximum de monstres de chaque type par niveau : 1000.





function s__Level_create()
  local l = s__Level__allocate()
  s__Level_visibilities[l] = s__VisibilityModifierArray_create()
  s__Level_triggers[l] = s__TriggerArray_create()
  s__Level_monstersNoMove[l] = sc__MonsterNoMoveArray_create()
  s__Level_monstersSimplePatrol[l] = sc__MonsterSimplePatrolArray_create()
  s__Level_monstersMultiplePatrols[l] = sc__MonsterMultiplePatrolsArray_create()
  s__Level_monstersTeleport[l] = sc__MonsterTeleportArray_create()
  s__Level_monsterSpawns[l] = s__MonsterSpawnArray_create()
  s__Level_meteors[l] = s__MeteorArray_create()
  s__Level_casters[l] = sc__CasterArray_create()
  s__Level_clearMobs[l] = sc__ClearMobArray_create()
  s__Level_livesEarnedAtBeginning[l] = 1
  s__Level_isActivatedB[l] = false
  s__Level_startMessage[l] = ""
  s__Level_start[l] = 0
  s__Level_end[l] = 0
  return l
end

function s__Level_activate(this, activ)
  if (s__Level_isActivatedB[this] == activ) then
    return
  end
  s__End_activate(s__Level_end[this], activ)
  s__TriggerArray_activate(s__Level_triggers[this], activ)
  if (activ) then
    if (s__Level_startMessage[this] ~= nil and s__Level_startMessage[this] ~= "" and Level_earningLivesActivated) then
      Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (s__Level_startMessage[this]))
      -- INLINED!!
    end
    s__VisibilityModifierArray_activate(s__Level_visibilities[this], true)
    sc__MonsterNoMoveArray_createMonsters(s__Level_monstersNoMove[this])
    sc__MonsterSimplePatrolArray_createMonsters(s__Level_monstersSimplePatrol[this])
    sc__MonsterMultiplePatrolsArray_createMonsters(s__Level_monstersMultiplePatrols[this])
    sc__MonsterTeleportArray_createMonsters(s__Level_monstersTeleport[this])
    s__MonsterSpawnArray_activate(s__Level_monsterSpawns[this])
    s__MeteorArray_createMeteors(s__Level_meteors[this])
    sc__CasterArray_createCasters(s__Level_casters[this])
    sc__ClearMobArray_initializeClearMobs(s__Level_clearMobs[this])
    if (Level_earningLivesActivated and sc__Level_getId(this) > 0) then
      s__Lives_add(udg_lives, s__Level_livesEarnedAtBeginning[this])
    end
  else
    sc__MonsterNoMoveArray_removeMonsters(s__Level_monstersNoMove[this])
    sc__MonsterSimplePatrolArray_removeMonsters(s__Level_monstersSimplePatrol[this])
    sc__MonsterMultiplePatrolsArray_removeMonsters(s__Level_monstersMultiplePatrols[this])
    sc__MonsterTeleportArray_removeMonsters(s__Level_monstersTeleport[this])
    s__MonsterSpawnArray_desactivate(s__Level_monsterSpawns[this])
    s__MeteorArray_removeMeteors(s__Level_meteors[this])
    sc__CasterArray_removeCasters(s__Level_casters[this])
    s__EscaperArray_deleteSpecificActionsForLevel(udg_escapers, this)
  end
  s__Level_isActivatedB[this] = activ
end

function s__Level_checkpointReviveHeroes(this, finisher)
  TrigCheckpointReviveHeroes_levelForReviving = this
  TrigCheckpointReviveHeroes_revivingFinisher = finisher
  TriggerExecute(gg_trg____Trig_checkpoint_revive_heroes)
end

function s__Level_getStart(this)
  return s__Level_start[this]
end

function s__Level_getStartRandomX(this)
  return s__Start_getRandomX(s__Level_start[this])
end

function s__Level_getStartRandomY(this)
  return s__Start_getRandomY(s__Level_start[this])
end

function s__Level_newStart(this, x1, y1, x2, y2)
  sc__RectInterface_deallocate(s__Level_start[this])
  s__Level_start[this] = s__Start_create(x1, y1, x2, y2)
end

function s__Level_newEnd(this, x1, y1, x2, y2)
  sc__RectInterface_deallocate(s__Level_end[this])
  s__Level_end[this] = s__End_create(x1, y1, x2, y2)
  if (s__Level_isActivatedB[this]) then
    s__End_activate(s__Level_end[this], true)
  end
end

function s__Level_getEnd(this)
  return s__Level_end[this]
end

function s__Level_getNbMonsters(this, mode)
  --modes : all, moving, not moving
  local nb = 0
  if (mode == "all" or mode == "not moving") then
    nb = nb + sc__MonsterNoMoveArray_count(s__Level_monstersNoMove[this]) + sc__CasterArray_count(s__Level_casters[this])
  end
  if (mode == "all" or mode == "moving") then
    nb = nb + sc__MonsterSimplePatrolArray_count(s__Level_monstersSimplePatrol[this]) + sc__MonsterMultiplePatrolsArray_count(s__Level_monstersMultiplePatrols[this])
  end
  if (mode == "all") then
    nb = nb + sc__MonsterTeleportArray_count(s__Level_monstersTeleport[this])
  end
  return nb
end

function s__Level_onDestroy(this)
  sc__RectInterface_deallocate(s__Level_start[this])
  sc__RectInterface_deallocate(s__Level_end[this])
  s__VisibilityModifierArray_deallocate(s__Level_visibilities[this])
  s__TriggerArray_deallocate(s__Level_triggers[this])
  sc__MonsterNoMoveArray_deallocate(s__Level_monstersNoMove[this])
  sc__MonsterSimplePatrolArray_deallocate(s__Level_monstersSimplePatrol[this])
  sc__MonsterMultiplePatrolsArray_deallocate(s__Level_monstersMultiplePatrols[this])
  sc__MonsterTeleportArray_deallocate(s__Level_monstersTeleport[this])
end

--Generated destructor of Level
function s__Level_deallocate(this)
  if this == nil then
    return
  elseif (si__Level_V[this] ~= -1) then
    return
  end
  s__Level_onDestroy(this)
  si__Level_V[this] = si__Level_F
  si__Level_F = this
end

function s__Level_recreateMonstersOfType(this, mt)
  sc__MonsterNoMoveArray_recreateMonstersOfType(s__Level_monstersNoMove[this], mt)
  sc__MonsterSimplePatrolArray_recreateMonstersOfType(s__Level_monstersSimplePatrol[this], mt)
  sc__MonsterMultiplePatrolsArray_recreateMonstersOfType(s__Level_monstersMultiplePatrols[this], mt)
  sc__MonsterTeleportArray_recreateMonstersOfType(s__Level_monstersTeleport[this], mt)
end

function s__Level_removeMonstersOfType(this, mt)
  sc__MonsterNoMoveArray_removeMonstersOfType(s__Level_monstersNoMove[this], mt)
  sc__MonsterSimplePatrolArray_removeMonstersOfType(s__Level_monstersSimplePatrol[this], mt)
  sc__MonsterMultiplePatrolsArray_removeMonstersOfType(s__Level_monstersMultiplePatrols[this], mt)
  sc__MonsterTeleportArray_removeMonstersOfType(s__Level_monstersTeleport[this], mt)
end

function s__Level_refreshCastersOfType(this, ct)
  sc__CasterArray_refreshCastersOfType(s__Level_casters[this], ct)
end

function s__Level_removeCastersOfType(this, ct)
  sc__CasterArray_removeCastersOfType(s__Level_casters[this], ct)
end

function s__Level_getId(this)
  local i = 0
  while true do
    if (sc__LevelArray_get(udg_levels, i) == 0) then
      break
    end
    if (sc__LevelArray_get(udg_levels, i) == this) then
      return i
    end
    i = i + 1
  end
  return -1
end

function s__Level_isActivated(this)
  return s__Level_isActivatedB[this]
end

function s__Level_setIsActivated(this, activated)
  s__Level_isActivatedB[this] = activated
end

function s__Level_setNbLivesEarned(this, nbLives)
  if (nbLives < 0) then
    return false
  end
  s__Level_livesEarnedAtBeginning[this] = nbLives
  return true
end

function s__Level_getNbLives(this)
  return s__Level_livesEarnedAtBeginning[this]
end

function s__Level_newVisibilityModifier(this, x1, y1, x2, y2)
  return s__VisibilityModifierArray_new(s__Level_visibilities[this], x1, y1, x2, y2)
end

function s__Level_newVisibilityModifierFromExisting(this, vm)
  return s__VisibilityModifierArray_newFromExisting(s__Level_visibilities[this], vm)
end

function s__Level_removeVisibilities(this)
  s__VisibilityModifierArray_removeAllVisibilityModifiers(s__Level_visibilities[this])
end

function s__Level_activateVisibilities(this, activate)
  s__VisibilityModifierArray_activate(s__Level_visibilities[this], activate)
end

function s__Level_setStartMessage(this, str)
  if (str == "") then
    str = nil
  end
  s__Level_startMessage[this] = str
end

function s__Level_getStartMessage(this)
  return s__Level_startMessage[this]
end




--library Level ends
--library Make:





function Make_GetActions(kind)
  if (kind == "monsterCreateNoMove") then
    return MonsterMakingNoMove_Actions
  elseif (kind == "monsterCreateSimplePatrol") then
    return MonsterMakingSimplePatrol_Actions
  elseif (kind == "monsterCreateMultiplePatrols") then
    return MonsterMakingMultiplePatrols_Actions
  elseif (kind == "monsterCreateTeleport") then
    return MonsterMakingTeleport_Actions
  elseif (kind == "monsterSpawnCreate") then
    return MonsterSpawnMaking_Actions
  elseif (kind == "deleteMonsters") then
    return MonsterDelete_Actions
  elseif (kind == "setUnitMonsterType") then
    return SetUnitMonsterType_Actions
  elseif (kind == "setUnitTeleportPeriod") then
    return SetUnitTeleportPeriod_Actions
  elseif (kind == "getUnitTeleportPeriod") then
    return GetUnitTeleportPeriod_Actions
  elseif (kind == "meteorCreate") then
    return MeteorMaking_Actions
  elseif (kind == "casterCreate") then
    return CasterMaking_Actions
  elseif (kind == "deleteCasters") then
    return CasterDelete_Actions
  elseif (kind == "createClearMob") then
    return ClearMobMaking_Actions
  elseif (kind == "deleteClearMob") then
    return ClearMobDelete_Actions
  elseif (kind == "deleteMeteors") then
    return MeteorDelete_Actions
  elseif (kind == "terrainCreate") then
    return TerrainMaking_Actions
  elseif (kind == "terrainHeight") then
    return TerrainHeightMaking_Actions
  elseif (kind == "terrainCopyPaste") then
    return TerrainCopyPaste_Actions
  elseif (kind == "terrainVerticalSymmetry") then
    return TerrainVerticalSymmetry_Actions
  elseif (kind == "terrainHorizontalSymmetry") then
    return TerrainHorizontalSymmetry_Actions
  elseif (kind == "getTerrainType") then
    return GettingTerrainTypeInfo_Actions
  elseif (kind == "exchangeTerrains") then
    return MakeExchangeTerrains_Actions
  elseif (kind == "startCreate") then
    return StartMaking_Actions
  elseif (kind == "endCreate") then
    return EndMaking_Actions
  elseif (kind == "visibilityModifierCreate") then
    return VisibilityModifierMaking_Actions
  end
  return nil
end




--library Make ends
--library MonsterInterface:



--static method count takes nothing returns integer
--method setId takes integer id returns Monster______


function MonsterInterface__InitHtMonster()
  MonsterInterface__htMonsterId2MonsterHandleId = InitHashtable()
end


function GetNextMonsterId()
  MonsterInterface__monsterNextId = MonsterInterface__monsterNextId + 1
  return MonsterInterface__monsterNextId - 1
end

function MonsterIdHasBeenSetTo(monsterId)
  if (monsterId >= MonsterInterface__monsterNextId) then
    MonsterInterface__monsterNextId = monsterId + 1
  end
end


--//////////////////////////////////////////////////////////////////
function MonsterHashtableSetMonsterId(monster, oldId, newId)
  if (oldId == newId) then
    return
  end
  if (oldId ~= NO_ID) then
    RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, oldId)
  end
  SaveInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, newId, (monster))
end

function MonsterId2Monster(monsterId)
  return (LoadInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, monsterId))
end

function MonsterHashtableRemoveMonsterId(id)
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, id)
end


--//////////////////////////////////////////////////////////////////
function CasterHashtableSetCasterId(caster, oldId, newId)
  if (oldId == newId) then
    return
  end
  if (oldId ~= NO_ID) then
    RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__CASTER, oldId)
  end
  SaveInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__CASTER, newId, (caster))
end

function CasterId2Caster(casterId)
  return (LoadInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__CASTER, casterId))
end

function CasterHashtableRemoveCasterId(id)
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__CASTER, id)
end




--library MonsterInterface ends
--library SaveMapInCache:







function StartSaveMapInCache()
  local i = nil
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("starting saving map in gamecache \"epicSlide\"..."))
  -- INLINED!!
  FlushStoredMission(saveMap_cache, "terrain")
  FlushStoredMission(saveMap_cache, "monsterTypes")
  FlushStoredMission(saveMap_cache, "casterTypes")
  i = 0
  while true do
    if (i >= NB_MAX_LEVELS) then
      break
    end
    FlushStoredMission(saveMap_cache, "level" .. I2S(i))
    i = i + 1
  end
  SaveTerrainConfig()
  StartSaveTerrain()
end




--===========================================================================
function Init_SaveMapInCache()
  saveMap_cache = InitGameCache("epicSlide")
  trigSaveMapInCache = CreateTrigger()
  DisableTrigger(trigSaveMapInCache)
  TriggerRegisterTimerEvent(trigSaveMapInCache, LOW_PERIOD_FOR_WORK, true)
end




--library SaveMapInCache ends
--library TerrainTypeArray:



function s__TerrainTypeArray_create()
  local tta = s__TerrainTypeArray__allocate()
  s__TerrainTypeArray_numberOfWalk[tta] = 0
  s__TerrainTypeArray_numberOfDeath[tta] = 0
  s__TerrainTypeArray_numberOfSlide[tta] = 0
  s__TerrainTypeArray_mainTileset[tta] = "auto"
  return tta
end

function s__TerrainTypeArray_get(this, label)
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    if (s__TerrainType_label[s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]] == label) then
      return s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    if (s__TerrainType_label[s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]] == label) then
      return s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    if (s__TerrainType_label[s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]] == label) then
      return s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]
    end
    i = i + 1
  end
  return 0
end

function s__TerrainTypeArray_getTerrainType(this, x, l__y)
  local terrainTypeId = GetTerrainType(x, l__y)
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i])]) == terrainTypeId) then
      -- INLINED!!
      return s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i])]) == terrainTypeId) then
      -- INLINED!!
      return s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i])]) == terrainTypeId) then
      -- INLINED!!
      return s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]
    end
    i = i + 1
  end
  return 0
end

function s__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(this, terrainTypeId)
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    if (terrainTypeId == (s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i])])) then
      -- INLINED!!
      return true
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    if (terrainTypeId == (s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i])])) then
      -- INLINED!!
      return true
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    if (terrainTypeId == (s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i])])) then
      -- INLINED!!
      return true
    end
    i = i + 1
  end
  return false
end

function s__TerrainTypeArray_isLabelAlreadyUsed(this, label)
  return (s__TerrainTypeArray_get(this, label) ~= 0)
end

function s__TerrainTypeArray_newWalk(this, label, terrainTypeId, walkspeed)
  local n = s__TerrainTypeArray_numberOfWalk[this]
  if (sc__TerrainTypeArray_count(this) >= 16 or (s__TerrainTypeArray_get((this), (label)) ~= 0) or s__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(this, terrainTypeId) or terrainTypeId == 0) then
    -- INLINED!!
    return 0
  end
  s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + n] = s__TerrainTypeWalk_create(label, terrainTypeId, walkspeed)
  if (s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + n] ~= 0) then
    s__TerrainTypeArray_numberOfWalk[this] = s__TerrainTypeArray_numberOfWalk[this] + 1
  end
  return s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + n]
end

function s__TerrainTypeArray_newDeath(this, label, terrainTypeId, killingEffectStr, timeToKill, toleranceDist)
  local n = s__TerrainTypeArray_numberOfDeath[this]
  if (sc__TerrainTypeArray_count(this) >= 16 or (s__TerrainTypeArray_get((this), (label)) ~= 0) or s__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(this, terrainTypeId) or terrainTypeId == 0) then
    -- INLINED!!
    return 0
  end
  s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + n] = s__TerrainTypeDeath_create(label, terrainTypeId, killingEffectStr, timeToKill, toleranceDist)
  if (s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + n] ~= 0) then
    s__TerrainTypeArray_numberOfDeath[this] = s__TerrainTypeArray_numberOfDeath[this] + 1
  end
  return s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + n]
end

function s__TerrainTypeArray_newSlide(this, label, terrainTypeId, slideSpeed, canTurn)
  local n = s__TerrainTypeArray_numberOfSlide[this]
  if (sc__TerrainTypeArray_count(this) >= 16 or (s__TerrainTypeArray_get((this), (label)) ~= 0) or s__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(this, terrainTypeId) or terrainTypeId == 0) then
    -- INLINED!!
    return 0
  end
  s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + n] = s__TerrainTypeSlide_create(label, terrainTypeId, slideSpeed, canTurn)
  if (s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + n] ~= 0) then
    s__TerrainTypeArray_numberOfSlide[this] = s__TerrainTypeArray_numberOfSlide[this] + 1
  end
  return s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + n]
end

function s__TerrainTypeArray_remove(this, label)
  local position = nil
  local i = nil
  local tt = s__TerrainTypeArray_get(this, label)
  if (tt == 0) then
    return false
  end
  if (s__TerrainType_kind[tt] == "walk") then
    i = 0
    while true do
      if (s__TerrainType_label[s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]] == label or i >= s__TerrainTypeArray_numberOfWalk[this]) then
        break
      end
      i = i + 1
    end
    if (i < s__TerrainTypeArray_numberOfWalk[this]) then
      position = i
      i = i + 1
      while true do
        if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
          break
        end
        s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i - 1] = s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]
        i = i + 1
      end
      s__TerrainTypeArray_numberOfWalk[this] = s__TerrainTypeArray_numberOfWalk[this] - 1
    end
  end
  if (s__TerrainType_kind[tt] == "death") then
    i = 0
    while true do
      if (s__TerrainType_label[s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]] == label or i >= s__TerrainTypeArray_numberOfDeath[this]) then
        break
      end
      i = i + 1
    end
    if (i < s__TerrainTypeArray_numberOfDeath[this]) then
      position = i
      i = i + 1
      while true do
        if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
          break
        end
        s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i - 1] = s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]
        i = i + 1
      end
      s__TerrainTypeArray_numberOfDeath[this] = s__TerrainTypeArray_numberOfDeath[this] - 1
    end
  end
  if (s__TerrainType_kind[tt] == "slide") then
    i = 0
    while true do
      if (s__TerrainType_label[s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]] == label or i >= s__TerrainTypeArray_numberOfSlide[this]) then
        break
      end
      i = i + 1
    end
    if (i < s__TerrainTypeArray_numberOfSlide[this]) then
      position = i
      i = i + 1
      while true do
        if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
          break
        end
        s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i - 1] = s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]
        i = i + 1
      end
      s__TerrainTypeArray_numberOfSlide[this] = s__TerrainTypeArray_numberOfSlide[this] - 1
    end
  end
  sc__TerrainType_deallocate(tt)
  return true
end

function s__TerrainTypeArray_getWalk(this, id)
  return s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + id]
end

function s__TerrainTypeArray_getDeath(this, id)
  return s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + id]
end

function s__TerrainTypeArray_getSlide(this, id)
  return s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + id]
end

function s__TerrainTypeArray_displayForPlayer(this, p)
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    s__TerrainType_displayForPlayer(s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i], p)
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    s__TerrainType_displayForPlayer(s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i], p)
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    s__TerrainType_displayForPlayer(s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i], p)
    i = i + 1
  end
  if (s__TerrainTypeArray_numberOfSlide[this] + s__TerrainTypeArray_numberOfWalk[this] + s__TerrainTypeArray_numberOfDeath[this] == 0) then
    Text___ForPlayer_timed_withColorCode((p), -1, ERROR_TEXT_COLORCODE, ("no terrain saved"))
    -- INLINED!!
  end
end

function s__TerrainTypeArray_saveInCache(this)
  local i = nil

  --main tileset
  stringArrayForCache = s__StringArrayForCache_create("terrain", "mainTileset", false)
  s__StringArrayForCache_push(stringArrayForCache, s__TerrainTypeArray_mainTileset[this])
  s__StringArrayForCache_writeInCache(stringArrayForCache)

  --terrainConfig
  stringArrayForCache = s__StringArrayForCache_create("terrain", "terrainConfig", true)
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, s__TerrainType_toString(s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]))
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, s__TerrainType_toString(s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]))
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, s__TerrainType_toString(s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]))
    i = i + 1
  end
  s__StringArrayForCache_writeInCache(stringArrayForCache)
end

function s__TerrainTypeArray_count(this)
  return s__TerrainTypeArray_numberOfWalk[this] + s__TerrainTypeArray_numberOfSlide[this] + s__TerrainTypeArray_numberOfDeath[this]
end

--mettre en place l'ordre des terrains au niveau des tilesets
function s__TerrainTypeArray_setOrder(this, cmd)
  local terrainType = nil
  local terrainTypesOrdered = __jarray(0)
  local nbTerrainsDone = nil
  local i = nil
  if (s__TerrainTypeArray_count(this) ~= NbParam(cmd)) then
    return false
  end
  nbTerrainsDone = 0
  while true do
    if (nbTerrainsDone == s__TerrainTypeArray_count(this)) then
      break
    end
    terrainType = s__TerrainTypeArray_get(this, CmdParam(cmd, nbTerrainsDone + 1))
    --vérification que le terrain existe
    if (terrainType == 0) then
      return false
    end
    --vérification que le terrain n'a pas déjà été cité
    i = 0
    while true do
      if (i == nbTerrainsDone) then
        break
      end
      if (terrainTypesOrdered[i] == terrainType) then
        return false
      end
      i = i + 1
    end
    --mémorisation du terrain
    terrainTypesOrdered[nbTerrainsDone] = terrainType
    nbTerrainsDone = nbTerrainsDone + 1
  end
  --mémorisation du numéro d'ordre de chaque terrain
  i = 0
  while true do
    if (i == nbTerrainsDone) then
      break
    end
    s__TerrainType_setOrderId(terrainTypesOrdered[i], i + 1)
    i = i + 1
  end
  return true
end

function s__TerrainTypeArray_setMainTileset(this, tileset)
  local tilesetChar = tileset2tilesetChar(tileset)
  if (tilesetChar ~= "") then
    s__TerrainTypeArray_mainTileset[this] = tilesetChar
    return true
  end
  return false
end

function s__TerrainTypeArray_getMainTileset(this)
  return s__TerrainTypeArray_mainTileset[this]
end





--library TerrainTypeArray ends
--library ClearMob:





function ClearTriggerMobId2ClearMob(triggerMobId)
  return (LoadInteger(ClearMob__htClearMob, 0, triggerMobId))
end


function ClearMobTimerExpires()
  local clearMob = (LoadInteger(ClearMob__htClearMob, ClearMob__TIMER_ACTIVATED, GetHandleId(GetExpiredTimer())))
  if (clearMob ~= 0) then
    sc__ClearMob_initialize(clearMob)
    --réinitialise la couleur du trigger mob
    ClearMob__udp_currentTimer = GetExpiredTimer()
    s__MonsterOrCasterStack_executeForAll((s__ClearMob_blockMobs[(clearMob)]), "TemporarilyEnableMonsterOrCasterEach")
    -- INLINED!!
  end
end

function ClearMobFrontMontantTimerExpires()
  local clearMob = (LoadInteger(ClearMob__htClearMob, ClearMob__TIMER_FRONT_MONTANT, GetHandleId(GetExpiredTimer())))
  if (clearMob ~= 0) then
    if ((TimerGetRemaining(s__ClearMob_timerActivated[(clearMob)]) > 0)) then
      -- INLINED!!
      sc__MonsterOrCaster_setVertexColor((s__ClearMob_triggerMob[(clearMob)]), 70, 100, 70)
      -- INLINED!!
    end
  end
end

function KillMonsterOrCasterEach()
  sc__MonsterOrCaster_killUnit((MonsterOrCasterStack__udg_enumMoc))
  -- INLINED!!
end

function TemporarilyDisableMonsterOrCasterEach()
  sc__MonsterOrCaster_temporarilyDisable((MonsterOrCasterStack__udg_enumMoc), ClearMob__udp_currentTimer)
  -- INLINED!!
end

function TemporarilyEnableMonsterOrCasterEach()
  sc__MonsterOrCaster_temporarilyEnable((MonsterOrCasterStack__udg_enumMoc), ClearMob__udp_currentTimer)
  -- INLINED!!
end

function ClearMob__InitClearMob()
  ClearMob__htClearMob = InitHashtable()
end






function s__ClearMob_getDisableDuration(this)
  return s__ClearMob_disableDuration[this]
end

function s__ClearMob_setDisableDuration(this, disableDuration)
  if (disableDuration > CLEAR_MOB_MAX_DURATION or disableDuration < ClearMob_FRONT_MONTANT_DURATION) then
    return false
  end
  s__ClearMob_disableDuration[this] = disableDuration
  return true
end

function s__ClearMob_getTriggerMob(this)
  return s__ClearMob_triggerMob[this]
end

function s__ClearMob_setTriggerMob(this, newTriggerMob)
  if (newTriggerMob == 0 or s__ClearMob_triggerMob[this] == newTriggerMob) then
    return false
  end
  RemoveSavedInteger(ClearMob__htClearMob, ClearMob__TRIGGER_MOB, sc__MonsterOrCaster_getId(s__ClearMob_triggerMob[this]))
  SaveInteger(ClearMob__htClearMob, ClearMob__TRIGGER_MOB, sc__MonsterOrCaster_getId(newTriggerMob), (this))
  s__ClearMob_triggerMob[this] = newTriggerMob
  return true
end

function s__ClearMob_getBlockMobs(this)
  return s__ClearMob_blockMobs[this]
end

function s__ClearMob_create(triggerMobId, disableDuration)
  local clearMob = nil
  local triggerMob = nil
  if (disableDuration ~= 0 and (disableDuration > CLEAR_MOB_MAX_DURATION or disableDuration < ClearMob_FRONT_MONTANT_DURATION)) then
    return 0
  end
  triggerMob = sc__MonsterOrCaster_create(triggerMobId)
  if (triggerMob ~= 0) then
    clearMob = s__ClearMob__allocate()
    s__ClearMob_triggerMob[clearMob] = triggerMob
  else
    return 0
  end
  s__ClearMob_blockMobs[clearMob] = 0
  s__ClearMob_disableDuration[clearMob] = disableDuration
  s__ClearMob_timerActivated[clearMob] = CreateTimer()
  s__ClearMob_timerFrontMontant[clearMob] = CreateTimer()
  s__ClearMob_triggerMobPermanentEffect[clearMob] = nil
  s__ClearMob_enabled[clearMob] = true
  SaveInteger(ClearMob__htClearMob, ClearMob__TRIGGER_MOB, triggerMobId, (clearMob))
  SaveInteger(ClearMob__htClearMob, ClearMob__TIMER_ACTIVATED, GetHandleId(s__ClearMob_timerActivated[clearMob]), (clearMob))
  SaveInteger(ClearMob__htClearMob, ClearMob__TIMER_FRONT_MONTANT, GetHandleId(s__ClearMob_timerFrontMontant[clearMob]), (clearMob))
  return clearMob
end

function s__ClearMob_initialize(this)
  sc__MonsterOrCaster_setBaseColor(s__ClearMob_triggerMob[this], "blue")
  sc__MonsterOrCaster_setVertexColor(s__ClearMob_triggerMob[this], 30, 60, 100)
  if (s__ClearMob_triggerMobPermanentEffect[this] == nil) then
    s__ClearMob_triggerMobPermanentEffect[this] = AddSpecialEffectTarget(ClearMob__TRIGGER_MOB_PERMANENT_EFFECT, sc__MonsterOrCaster_getUnit(s__ClearMob_triggerMob[this]), "origin")
  end
  s__ClearMob_enabled[this] = true
end

function s__ClearMob_close(this)
  if (s__ClearMob_triggerMobPermanentEffect[this] ~= nil) then
    DestroyEffect(s__ClearMob_triggerMobPermanentEffect[this])
    s__ClearMob_triggerMobPermanentEffect[this] = nil
  end
end

function s__ClearMob_redoTriggerMobPermanentEffect(this)
  if (s__ClearMob_triggerMobPermanentEffect[this] ~= nil) then
    DestroyEffect(s__ClearMob_triggerMobPermanentEffect[this])
  end
  s__ClearMob_triggerMobPermanentEffect[this] = AddSpecialEffectTarget(ClearMob__TRIGGER_MOB_PERMANENT_EFFECT, sc__MonsterOrCaster_getUnit(s__ClearMob_triggerMob[this]), "origin")
end

function s__ClearMob_addBlockMob(this, blockMobId)
  if (s__MonsterOrCasterStack_containsMob(s__ClearMob_blockMobs[this], blockMobId)) then
    return false
  end
  if (s__ClearMob_blockMobs[this] == 0) then
    s__ClearMob_blockMobs[this] = s__MonsterOrCasterStack_create(sc__MonsterOrCaster_create(blockMobId))
    return s__ClearMob_blockMobs[this] ~= 0
  else
    return s__MonsterOrCasterStack_addMonsterOrCaster(s__ClearMob_blockMobs[this], sc__MonsterOrCaster_create(blockMobId))
  end
end

function s__ClearMob_removeLastBlockMob(this)
  sc__MonsterOrCaster_temporarilyEnable((sg__MonsterOrCasterStack_get_monsterOrCaster((s__ClearMob_blockMobs[this]))), s__ClearMob_timerActivated[this])
  -- INLINED!!
  return s__MonsterOrCasterStack_removeLast(s__ClearMob_blockMobs[this])
end

function s__ClearMob_removeAllBlockMobs(this)
  ClearMob__udp_currentTimer = s__ClearMob_timerActivated[this]
  s__MonsterOrCasterStack_executeForAll(s__ClearMob_blockMobs[this], "TemporarilyEnableMonsterOrCasterEach")
  s__MonsterOrCasterStack_deallocate(s__ClearMob_blockMobs[this])
  s__ClearMob_blockMobs[this] = 0
end

function s__ClearMob_onDestroy(this)
  RemoveSavedInteger(ClearMob__htClearMob, ClearMob__TRIGGER_MOB, sc__MonsterOrCaster_getId(s__ClearMob_triggerMob[this]))
  RemoveSavedInteger(ClearMob__htClearMob, ClearMob__TIMER_ACTIVATED, GetHandleId(s__ClearMob_timerActivated[this]))
  RemoveSavedInteger(ClearMob__htClearMob, ClearMob__TIMER_FRONT_MONTANT, GetHandleId(s__ClearMob_timerFrontMontant[this]))
  s__ClearMob_close(this)
  sc__MonsterOrCaster_reinitColor(s__ClearMob_triggerMob[this])
  s__MonsterOrCaster_deallocate(s__ClearMob_triggerMob[this])
  s__ClearMob_triggerMob[this] = 0
  ClearMob__udp_currentTimer = s__ClearMob_timerActivated[this]
  s__MonsterOrCasterStack_executeForAll(s__ClearMob_blockMobs[this], "TemporarilyEnableMonsterOrCasterEach")
  s__MonsterOrCasterStack_deallocate(s__ClearMob_blockMobs[this])
  DestroyTimer(s__ClearMob_timerActivated[this])
  s__ClearMob_timerActivated[this] = nil
  DestroyTimer(s__ClearMob_timerFrontMontant[this])
  s__ClearMob_timerFrontMontant[this] = nil
  s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[(s__Level_clearMobs[s__ClearMob_level[this]])] + (s__ClearMob_arrayId[this])] = 0
  -- INLINED!!
end

--Generated destructor of ClearMob
function s__ClearMob_deallocate(this)
  if this == nil then
    return
  elseif (si__ClearMob_V[this] ~= -1) then
    return
  end
  s__ClearMob_onDestroy(this)
  si__ClearMob_V[this] = si__ClearMob_F
  si__ClearMob_F = this
end

function s__ClearMob_isBeingActivated(this)
  return TimerGetRemaining(s__ClearMob_timerActivated[this]) > 0
end

function s__ClearMob_activate(this)
  if (not s__ClearMob_enabled[this]) then
    return
  end
  if (s__ClearMob_disableDuration[this] == 0) then
    --désactivation permanente des block mobs
    s__MonsterOrCasterStack_executeForAll(s__ClearMob_blockMobs[this], "KillMonsterOrCasterEach")
    s__ClearMob_enabled[this] = false
    --le clear mob se désactive pour le niveau actuel (il n'est plus utile car les mobs sont morts)
  else
    ClearMob__udp_currentTimer = s__ClearMob_timerActivated[this]
    TimerStart(s__ClearMob_timerActivated[this], s__ClearMob_disableDuration[this], false, ClearMobTimerExpires)
    s__MonsterOrCasterStack_executeForAll(s__ClearMob_blockMobs[this], "TemporarilyDisableMonsterOrCasterEach")
    TimerStart(s__ClearMob_timerFrontMontant[this], ClearMob_FRONT_MONTANT_DURATION, false, ClearMobFrontMontantTimerExpires)
    --le vert perd de son éclat quand le héros part du trigger mob, mais pas de le cas d'un clear mob permanent
  end
  --dans tous les cas le trigger mob "s'active"
  sc__MonsterOrCaster_setBaseColor(s__ClearMob_triggerMob[this], "green")
  sc__MonsterOrCaster_setVertexColor(s__ClearMob_triggerMob[this], 40, 100, 40)
end





--library ClearMob ends
--library CommandMax:




function ExecuteCommandMax(escaper, cmd)
  local name = CmdName(cmd)
  local noParam = (CmdParam((cmd), 0) == nil)
  -- INLINED!!
  local nbParam = NbParam(cmd)

  local n = nil
  local i = nil
  local j = nil
  local k = nil

  local b = nil

  local str = ""
  local str2 = ""

  local x = nil
  local l__y = nil
  local point = nil

  local param = nil

  local param1 = CmdParam(cmd, 1)
  local param2 = CmdParam(cmd, 2)
  local param3 = CmdParam(cmd, 3)
  local param4 = CmdParam(cmd, 4)

  local speed = nil

  local escaper2 = nil



  ---reinitTerrains(rit)   --> reset kinds of terrain
  if (name == "reinitTerrains" or name == "rit") then
    if (noParam) then
      ReinitTerrains()
    end
    return true
  end


  ---reinitTerrainsPosition(ritp)   --> reset the terrain on the map
  if (name == "reinitTerrainsPosition" or name == "ritp") then
    if (noParam) then
      ReinitTerrainsPosition()
    end
    return true
  end


  ---saveTerrain(st) [<slotName>]   --> spaces allowed for slotName
  if (name == "saveTerrain" or name == "st") then
    if (noParam) then
      SaveTerrainWithoutName()
    else
      SaveTerrainWithName(CmdParam(cmd, 0))
    end
    return true
  end


  ---loadTerrain(lt) [<slotName>]
  if (name == "loadTerrain" or name == "lt") then
    if (noParam) then
      LoadTerrainWithoutName()
    else
      if (not LoadTerrainWithName(CmdParam(cmd, 0))) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this terrain save doesn't exist"))
        -- INLINED!!
      end
    end
    return true
  end


  ---deleteTerrainSave(delts) [<slotName>]
  if (name == "deleteTerrainSave" or name == "delts") then
    if (noParam) then
      return true
    end
    if (DeleteTerrainSaveWithName(CmdParam(cmd, 0))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrain save deleted"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this terrain save doesn't exist"))
      -- INLINED!!
    end
    return true
  end


  ---control(cl) <Pcolor1>|all(a) [<Pcolor2>]   --> gives the control of a hero to player <Pcolor2>
  if (name == "control" or name == "cl") then
    if (not (nbParam == 1 or nbParam == 2)) then
      return true
    end
    if (nbParam == 2) then
      if (not (ColorString2Id((param2)) <= 11)) then
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 should be a player color"))
        -- INLINED!!
        return true
      end
      escaper2 = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (ColorString2Id(param2))])
      -- INLINED!!
      if (escaper2 == 0) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("escaper " .. param2 .. " doesn't exist"))
        -- INLINED!!
        return true
      end
    else
      escaper2 = escaper
    end
    if (param1 == "all" or param1 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_giveHeroControl((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]), escaper2)
          -- INLINED!!
        end
        i = i + 1
      end
      if (escaper == escaper2) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("all heroes are now yours"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("all heroes are now to player " .. param2))
        -- INLINED!!
      end
      return true
    end
    if ((ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      n = ColorString2Id(param1)
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= 0) then
        -- INLINED!!
        s__Escaper_giveHeroControl((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]), escaper2)
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("escaper " .. param1 .. " doesn't exist"))
        -- INLINED!!
        return true
      end
      if (escaper == escaper2) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("hero of player " .. param1 .. " is now yours"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("hero of player " .. param1 .. " is now to player " .. param2))
        -- INLINED!!
      end
    end
    return true
  end


  ---resetOwners(ro)   --> gives back the control of heroes to their owner
  if (name == "resetOwners" or name == "ro") then
    if (noParam) then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_resetOwner((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
          -- INLINED!!
        end
        i = i + 1
      end
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("all heroes are now to their owners"))
      -- INLINED!!
    end
    return true
  end


  ---setlives(setl) <nbLives>
  if (name == "setlives" or name == "setl") then
    if (not (nbParam == 1 and IsPositiveInteger(param1))) then
      return true
    end
    s__Lives_setNb(udg_lives, S2I(param1))
    return true
  end


  ---teleport(t) <boolean status>   --> enable or disable teleport trigger
  if (name == "teleport" or name == "t") then
    if (not (nbParam == 1)) then
      return true
    end
    if (not IsBoolString(param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 should be a boolean or a real"))
      -- INLINED!!
      return true
    end
    if (S2B(param1)) then
      EnableTrigger(gg_trg_Teleport)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("teleport on"))
      -- INLINED!!
    else
      DisableTrigger(gg_trg_Teleport)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("teleport off"))
      -- INLINED!!
    end
    return true
  end


  ---redRights(redr) <boolean status> 
  if (name == "redRights" or name == "redr") then
    if (not (nbParam == 1 and IsBoolString(param1))) then
      return true
    end
    udg_areRedRightsOn = S2B(param1)
    if (S2B(param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("red rights on"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("red rights off"))
      -- INLINED!!
    end
    return true
  end


  ---autorevive(ar) [<boolean status> [<Pcolor>|all(a)]]
  if (name == "autorevive" or name == "ar") then
    if (noParam) then
      s__Escaper_hasAutoreviveB[(escaper)] = (true)
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you have now autorevive set to on"))
      -- INLINED!!
      return true
    end
    if (not IsBoolString(param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 should be a boolean"))
      -- INLINED!!
      return true
    end
    b = S2B(param1)
    if (nbParam == 1) then
      s__Escaper_hasAutoreviveB[(escaper)] = (b)
      -- INLINED!!
      if (b) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you have now autorevive set to on"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you have now autorevive set to off"))
        -- INLINED!!
      end
      return true
    end
    if (not (nbParam == 2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("no more than 2 params allowed for this command"))
      -- INLINED!!
      return true
    end
    if (param2 == "all" or param2 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
          -- INLINED!!
          s__Escaper_hasAutoreviveB[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))] = (b)
          -- INLINED!!
        end
        i = i + 1
      end
      if (b) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("autorevive set to on for all"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("autorevive set to off for all"))
        -- INLINED!!
      end
      return true
    end
    if ((ColorString2Id((param2)) <= 11)) then
      -- INLINED!!
      n = ColorString2Id(param2)
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= 0) then
        -- INLINED!!
        s__Escaper_hasAutoreviveB[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))] = (b)
        -- INLINED!!
        if (b) then
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("autorevive set to on for player " .. param2))
          -- INLINED!!
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("autorevive set to off for player " .. param2))
          -- INLINED!!
        end
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("escaper " .. param2 .. " doesn't exist"))
        -- INLINED!!
      end
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 should be a player color or \"all\""))
      -- INLINED!!
    end
    return true
  end


  ---createHero(crh) [<Pcolor>|all(a)]
  if (name == "createHero" or name == "crh") then
    if (noParam) then
      if (not s__Escaper_createHeroAtStart(escaper)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("You already have a hero !"))
        -- INLINED!!
      end
      return true
    end
    if (not (nbParam == 1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("no more than one param allowed for this command"))
      -- INLINED!!
      return true
    end
    if (param1 == "all" or param1 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) == 0) then
          -- INLINED!!
          s__EscaperArray_newAt(udg_escapers, i)
        end
        s__Escaper_createHeroAtStart((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
        -- INLINED!!
        i = i + 1
      end
      return true
    end
    if ((ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      n = ColorString2Id(param1)
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) == 0) then
        -- INLINED!!
        s__EscaperArray_newAt(udg_escapers, n)
      end
      if (not s__Escaper_createHeroAtStart((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))) then
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("this player already has a hero"))
        -- INLINED!!
      end
    end
    return true
  end


  ---deleteHero(delh) [<Pcolor>|all(a)]
  if (name == "deleteHero" or name == "delh") then
    if (noParam) then
      s__Escaper_removeHero(escaper)
      return true
    end
    if (not (nbParam == 1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("no more than one param allowed for this command"))
      -- INLINED!!
      return true
    end
    if (param1 == "all" or param1 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0 and (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= escaper) then
          -- INLINED!!
          if (IsPlayerInGame(Player(i))) then
            s__Escaper_removeHero((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
            -- INLINED!!
          else
            s__EscaperArray_remove(udg_escapers, i)
          end
        end
        i = i + 1
      end
      return true
    end
    if ((ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      n = ColorString2Id(param1)
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= 0) then
        -- INLINED!!
        if (IsPlayerInGame(Player(n))) then
          s__Escaper_removeHero((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))
          -- INLINED!!
        else
          s__EscaperArray_remove(udg_escapers, n)
        end
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("escaper " .. param1 .. " doesn't exist"))
        -- INLINED!!
      end
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 should be a player color or \"all\""))
      -- INLINED!!
    end
    return true
  end


  ---canCheat(cc) <Pcolor>|all(a) [<boolean status>]
  if (name == "canCheat" or name == "cc") then
    if (not (nbParam == 1 or nbParam == 2)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("one or two params for this command"))
      -- INLINED!!
      return true
    end
    if (nbParam == 2) then
      if (IsBoolString(param2)) then
        b = S2B(param2)
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param2 must be a boolean"))
        -- INLINED!!
        return true
      end
    else
      b = true
    end
    if (param1 == "all" or param1 == "a") then
      i = 0
      while true do
        if (i > 11) then
          break
        end
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0 and (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= escaper) then
          -- INLINED!!
          if (not (s__Escaper_isMaximaxouB[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))])) then
            -- INLINED!!
            s__Escaper_setCanCheat((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]), b)
            -- INLINED!!
          end
        end
        i = i + 1
      end
      if (b) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("all players can now cheat and make"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("all players who haven't Maximaxou rights can't cheat or make anymore"))
        -- INLINED!!
      end
      return true
    end
    if ((ColorString2Id((param1)) <= 11)) then
      -- INLINED!!
      n = ColorString2Id(param1)
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= 0) then
        -- INLINED!!
        if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]) ~= escaper) then
          -- INLINED!!
          if (not (s__Escaper_isMaximaxouB[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))])) then
            -- INLINED!!
            s__Escaper_setCanCheat((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]), b)
            -- INLINED!!
            if (b) then
              Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("player " .. param1 .. " can now cheat and make"))
              -- INLINED!!
            else
              Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("player " .. param1 .. " no longer can cheat and make"))
              -- INLINED!!
            end
          else
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("you can't change rights of player " .. param1 .. ", he has Maximaxou rights like you"))
            -- INLINED!!
          end
        else
          Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("you can't change your own rights"))
          -- INLINED!!
        end
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("escaper " .. param1 .. " doesn't exist"))
        -- INLINED!!
      end
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("param1 must be a player color or \"all\""))
      -- INLINED!!
    end
    return true
  end


  ---setAfkTime(setafkt) <time>
  if (name == "setAfkTime" or name == "setafkt") then
    if (nbParam ~= 1 or S2I(param1) <= 0) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("there must be one param which is an integer higher than 0"))
      -- INLINED!!
      return true
    end
    timeMinAfk = S2R(param1)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("afk time set to " .. param1))
    -- INLINED!!
    return true
  end


  ---setAutoreviveDelay(setard) <time>   --> maximum 15 seconds
  if (name == "setAutoreviveDelay" or name == "setard") then
    if (not (nbParam == 1 and (S2R(param1) > 0 or param1 == "0") and S2R(param1) <= 15)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("there must be one param positive real (maximum 15)"))
      -- INLINED!!
      return true
    end
    x = S2R(param1)
    udg_autoreviveDelay = x
    if (x > 1) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("autorevive delay set to " .. R2S(x) .. " seconds"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("autorevive delay set to " .. R2S(x) .. " second"))
      -- INLINED!!
    end
    return true
  end


  ---canSave(-) [<boolean canSave>]   --> allow or not saving the game for all players
  if (name == "canSave") then
    if (not (noParam or (nbParam == 1 and IsBoolString(param1)))) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("there must be no param or one param boolean"))
      -- INLINED!!
      return true
    end
    if (noParam or S2B(param1)) then
      DisableTrigger(gg_trg_Antisave)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("you can now save"))
      -- INLINED!!
    else
      EnableTrigger(gg_trg_Antisave)
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("now you can't save"))
      -- INLINED!!
    end
    return true
  end


  ---saveMapInCache(smic)
  if (name == "saveMapInCache" or name == "smic") then
    if (noParam) then
      StartSaveMapInCache()
    end
    return true
  end


  ---removeTerrain(remt) <terrainLabel>
  if (name == "removeTerrain" or name == "remt") then
    if (not (nbParam == 1)) then
      return true
    end
    if (s__TerrainTypeArray_remove(udg_terrainTypes, param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrain removed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown terrain"))
      -- INLINED!!
    end
    return true
  end


  ---removeMonster(remm) <monsterLabel>
  if (name == "removeMonster" or name == "remm") then
    if (not (nbParam == 1)) then
      return true
    end
    if (s__MonsterTypeArray_remove(udg_monsterTypes, param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("monster type removed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown monster type"))
      -- INLINED!!
    end
    return true
  end


  ---removeLastLevel(remll)
  if (name == "removeLastLevel" or name == "remll") then
    if (noParam) then
      if (sc__LevelArray_destroyLastLevel(udg_levels)) then
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("level number " .. I2S((s__LevelArray_lastInstance[(udg_levels)]) + 1) .. " destroyed"))
        -- INLINED!!
      else
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("impossible to destroy the first level"))
        -- INLINED!!
      end
    end
    return true
  end


  ---removeCaster(remc) <casterLabel>
  if (name == "removeCaster" or name == "remc") then
    if (nbParam ~= 1) then
      return true
    end
    --checkParam 1
    if (not (s__CasterTypeArray_get((udg_casterTypes), (param1)) ~= 0)) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown caster type \"" .. param1 .. "\""))
      -- INLINED!!
      return true
    end
    --apply command
    s__CasterTypeArray_remove(udg_casterTypes, param1)
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("caster type removed"))
    -- INLINED!!
    return true
  end


  ---setTerrainsOrder(setto) <terrainLabels>
  if (name == "setTerrainsOrder" or name == "setto") then
    if (s__TerrainTypeArray_setOrder(udg_terrainTypes, cmd)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("terrains order set"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("couldn't set terrains order. Usage : put all the terrain types as parameters, once each"))
      -- INLINED!!
    end
    return true
  end


  ---setTerrainCliffClass(settcc) <terrainLabel> <cliffClass>
  if (name == "setTerrainCliffClass" or name == "settcc") then
    if (nbParam ~= 2) then
      return true
    end
    --checkParam 1
    b = (s__TerrainTypeArray_get(udg_terrainTypes, param1) ~= 0)
    if (not b) then
      return true
    end
    --checkParam 2
    if (param2 ~= "1" and param2 ~= "2") then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("cliff class must be 1 or 2"))
      -- INLINED!!
    end
    --apply command
    s__TerrainType_setCliffClassId(s__TerrainTypeArray_get(udg_terrainTypes, param1), S2I(param2))
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("cliff class changed to " .. param2))
    -- INLINED!!
    return true
  end


  ---setMainTileset <tileset>
  if (name == "setMainTileset") then
    if (nbParam > 1) then
      return true
    end
    if (s__TerrainTypeArray_setMainTileset(udg_terrainTypes, param1)) then
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, MAKE_TEXT_COLORCODE, ("main tileset changed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, NORMAL_TEXT_COLORCODE, ("available tilesets : " .. MAKE_TEXT_COLORCODE .. "auto|r ; " .. MAKE_TEXT_COLORCODE .. "A|r = Ashenvale ; " .. MAKE_TEXT_COLORCODE .. "B|r = Barrens ; " .. MAKE_TEXT_COLORCODE .. "C|r = Felwood ; " .. MAKE_TEXT_COLORCODE .. "D|r = Dungeon ; " .. MAKE_TEXT_COLORCODE .. "F|r = Lordaeron Fall ; " .. MAKE_TEXT_COLORCODE .. "G|r = Underground ; " .. MAKE_TEXT_COLORCODE .. "L|r = Lordaeron Summer ; " .. MAKE_TEXT_COLORCODE .. "N|r = Northrend ; " .. MAKE_TEXT_COLORCODE .. "Q|r = Village Fall ; " .. MAKE_TEXT_COLORCODE .. "V|r = Village ; " .. MAKE_TEXT_COLORCODE .. "W|r = Lordaeron Winter ; " .. MAKE_TEXT_COLORCODE .. "X|r = Dalaran ; " .. MAKE_TEXT_COLORCODE .. "Y|r = Cityscape ; " .. MAKE_TEXT_COLORCODE .. "Z|r = Sunken Ruins ; " .. MAKE_TEXT_COLORCODE .. "I|r = Icecrown ; " .. MAKE_TEXT_COLORCODE .. "J|r = Dalaran Ruins ; " .. MAKE_TEXT_COLORCODE .. "O|r = Outland ; " .. MAKE_TEXT_COLORCODE .. "K|r = Black Citadel"))
      -- INLINED!!
    end
    return true
  end




  return false
end






--library CommandMax ends
--library LevelArray:






function s__LevelArray_create()
  local x1 = GetRectMinX(gg_rct_departLvl_0)
  local y1 = GetRectMinY(gg_rct_departLvl_0)
  local x2 = GetRectMaxX(gg_rct_departLvl_0)
  local y2 = GetRectMaxY(gg_rct_departLvl_0)
  local la = s__LevelArray__allocate()
  s___LevelArray_levels[s__LevelArray_levels[la]] = s__Level_create()
  s__Level_newStart(s___LevelArray_levels[s__LevelArray_levels[la]], x1, y1, x2, y2)
  s__Level_setNbLivesEarned(s___LevelArray_levels[s__LevelArray_levels[la]], NB_LIVES_AT_BEGINNING)
  s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[la]], true)
  s__LevelArray_currentLevel[la] = 0
  s__LevelArray_lastInstance[la] = 0
  return la
end

function s__LevelArray_goToLevel(this, finisher, levelId)
  local xCam = nil
  local yCam = nil
  local i = nil
  local previousLevelId = s__LevelArray_currentLevel[this]
  if (levelId < 0 or levelId > s__LevelArray_lastInstance[this] or levelId == s__LevelArray_currentLevel[this]) then
    return false
  end
  s__LevelArray_currentLevel[this] = levelId
  if (previousLevelId ~= NB_MAX_LEVELS) then
    --cas spécial restart de la game
    if (not IsLevelBeingMade(s___LevelArray_levels[s__LevelArray_levels[this] + previousLevelId])) then
      s__EscaperArray_destroyMakesIfForSpecificLevel_currentLevel(udg_escapers)
      s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this] + previousLevelId], false)
    end
  end
  s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]], true)
  s__Level_checkpointReviveHeroes(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]], finisher)
  if (previousLevelId ~= NB_MAX_LEVELS) then
    if (levelId > previousLevelId + 1) then
      i = previousLevelId + 1
      while true do
        if (i >= levelId) then
          break
        end
        s__VisibilityModifierArray_activate(s__Level_visibilities[(s___LevelArray_levels[s__LevelArray_levels[this] + i])], (true))
        -- INLINED!!
        i = i + 1
      end
    else
      if (levelId < previousLevelId) then
        i = levelId + 1
        while true do
          if (i > previousLevelId) then
            break
          end
          s__VisibilityModifierArray_activate(s__Level_visibilities[(s___LevelArray_levels[s__LevelArray_levels[this] + i])], (false))
          -- INLINED!!
          i = i + 1
        end
      end
    end
  end
  xCam = (GetRectCenterX(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this] + levelId])]))]))
  -- INLINED!!
  yCam = (GetRectCenterY(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this] + levelId])]))]))
  -- INLINED!!
  if (finisher ~= 0) then
    MoveCamExceptForPlayer((s__Escaper_p[(finisher)]), xCam, yCam)
    -- INLINED!!
  else
    SetCameraPosition(xCam, yCam)
  end
  return true
end

function s__LevelArray_goToNextLevel(this, finisher)
  local xCam = nil
  local yCam = nil
  if (s__LevelArray_currentLevel[this] >= s__LevelArray_lastInstance[this]) then
    return false
  end
  s__LevelArray_currentLevel[this] = s__LevelArray_currentLevel[this] + 1
  if (not IsLevelBeingMade(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this] - 1])) then
    s__EscaperArray_destroyMakesIfForSpecificLevel_currentLevel(udg_escapers)
    s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this] - 1], false)
  end
  s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]], true)
  s__Level_checkpointReviveHeroes(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]], finisher)
  xCam = (GetRectCenterX(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]])]))]))
  -- INLINED!!
  yCam = (GetRectCenterY(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]])]))]))
  -- INLINED!!
  if (finisher ~= 0) then
    MoveCamExceptForPlayer((s__Escaper_p[(finisher)]), xCam, yCam)
    -- INLINED!!
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId((s__Escaper_p[(finisher)]))] .. "Good job " .. GetPlayerName((s__Escaper_p[(finisher)])) .. " !"))
    -- INLINED!!
  else
    SetCameraPosition(xCam, yCam)
  end
  return true
end

function s__LevelArray_restartTheGame(this)
  if (s__LevelArray_currentLevel[this] == 0) then
    s__LevelArray_currentLevel[this] = NB_MAX_LEVELS
    --pour assurer le changement de niveau
    s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this]], false)
  end
  s__LevelArray_goToLevel(this, 0, 0)
  s__Lives_setNb(udg_lives, (s__Level_livesEarnedAtBeginning[(s___LevelArray_levels[s__LevelArray_levels[this]])]))
  -- INLINED!!
  SetCameraPosition((GetRectCenterX(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this]])]))])), (GetRectCenterY(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this]])]))])))
  -- INLINED!!
  --coop
  TriggerExecute(gg_trg_apparition_dialogue_et_fermeture_automatique)
end

function s__LevelArray_new(this)
  if (s__LevelArray_lastInstance[this] >= NB_MAX_LEVELS - 1) then
    return false
  end
  s__LevelArray_lastInstance[this] = s__LevelArray_lastInstance[this] + 1
  s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_lastInstance[this]] = s__Level_create()
  return true
end

function s__LevelArray_destroyLastLevel(this)
  if (s__LevelArray_lastInstance[this] <= 0) then
    return false
  end
  s__Level_deallocate(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_lastInstance[this]])
  s__LevelArray_lastInstance[this] = s__LevelArray_lastInstance[this] - 1
  return true
end

function s__LevelArray_count(this)
  return s__LevelArray_lastInstance[this] + 1
end

function s__LevelArray_getCurrentLevel(this)
  return s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]]
end

function s__LevelArray_get(this, levelId)
  if (levelId > s__LevelArray_lastInstance[this] or levelId < 0) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + levelId]
end

function s__LevelArray_getLevelFromMonsterNoMoveArray(this, ma)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_monstersNoMove[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == ma) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end
function s__LevelArray_getLevelFromMonsterSimplePatrolArray(this, ma)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_monstersSimplePatrol[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == ma) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end
function s__LevelArray_getLevelFromMonsterMultiplePatrolsArray(this, ma)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_monstersMultiplePatrols[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == ma) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end
function s__LevelArray_getLevelFromMonsterTeleportArray(this, ma)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_monstersTeleport[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == ma) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end
function s__LevelArray_getLevelFromMonsterSpawnArray(this, msa)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_monsterSpawns[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == msa) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end
function s__LevelArray_getLevelFromMeteorArray(this, ma)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_meteors[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == ma) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end
function s__LevelArray_getLevelFromVisibilityModifierArray(this, vma)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_visibilities[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == vma) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end
function s__LevelArray_getLevelFromCasterArray(this, casterArray)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_casters[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == casterArray) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end
function s__LevelArray_getLevelFromClearMobArray(this, clearMobArray)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_clearMobs[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == clearMobArray) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    return 0
  end
  return s___LevelArray_levels[s__LevelArray_levels[this] + i]
end

function s__LevelArray_removeMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this]) then
      break
    end
    s__Level_removeMonstersOfType(s___LevelArray_levels[s__LevelArray_levels[this] + i], mt)
    i = i + 1
  end
end

function s__LevelArray_removeCastersOfType(this, ct)
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this]) then
      break
    end
    sc__CasterArray_removeCastersOfType(s__Level_casters[(s___LevelArray_levels[s__LevelArray_levels[this] + i])], (ct))
    -- INLINED!!
    i = i + 1
  end
end

function s__LevelArray_getLastLevelId(this)
  return s__LevelArray_lastInstance[this]
end

function s__LevelArray_getNbMonsters(this, mode)
  --modes : all, moving, not moving
  local nb = 0
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this]) then
      break
    end
    nb = nb + s__Level_getNbMonsters(s___LevelArray_levels[s__LevelArray_levels[this] + i], mode)
    i = i + 1
  end
  return nb
end



function ForceGetLevel(levelId)
  local i = nil
  local lastInstance = nil
  if (levelId < 0 or levelId >= NB_MAX_LEVELS) then
    return 0
  end
  if (udg_levels == 0) then
    udg_levels = s__LevelArray_create()
  end
  lastInstance = (s__LevelArray_lastInstance[(udg_levels)])
  -- INLINED!!
  while true do
    if (lastInstance >= levelId) then
      break
    end
    s__LevelArray_new(udg_levels)
    lastInstance = (s__LevelArray_lastInstance[(udg_levels)])
    -- INLINED!!
  end
  return s__LevelArray_get(udg_levels, levelId)
end




--library LevelArray ends
--library MakeCaster:




function s__MakeCaster_getCasterType(this)
  return s__MakeCaster_casterType[this]
end

function s__MakeCaster_getAngle(this)
  return s__MakeCaster_angle[this]
end


function s__MakeCaster_create(maker, casterType, angle)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeCaster__allocate()
  s__Make_maker[m] = maker
  s__Make_kind[m] = "casterCreate"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeCaster_casterType[m] = casterType
  s__MakeCaster_angle[m] = angle
  return m
end

function s__MakeCaster_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeCaster_cancelLastAction(this)
  return false
end

function s__MakeCaster_redoLastAction(this)
  return false
end





--library MakeCaster ends
--library MakeDeleteCasters:




function s__MakeDeleteCasters_isLastLocSavedUsed(this)
  return s__MakeDeleteCasters_lastLocSavedIsUsed[this]
end

function s__MakeDeleteCasters_create(maker, mode)
  --modes : oneByOne, twoClics
  local m = nil
  if (maker == nil or (mode ~= "oneByOne" and mode ~= "twoClics")) then
    return 0
  end
  m = s__MakeDeleteCasters__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "deleteCasters"
  s__MakeDeleteCasters_mode[m] = mode
  s__MakeDeleteCasters_lastLocIsSaved[m] = false
  s__MakeDeleteCasters_lastLocSavedIsUsed[m] = false
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeDeleteCasters_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteCasters_unitLastClic[this])
  s__MakeDeleteCasters_unitLastClic[this] = nil
end

function s__MakeDeleteCasters_saveLoc(this, x, l__y)
  s__MakeDeleteCasters_lastX[this] = x
  s__MakeDeleteCasters_lastY[this] = l__y
  s__MakeDeleteCasters_lastLocIsSaved[this] = true
  s__MakeDeleteCasters_lastLocSavedIsUsed[this] = true
  if (s__MakeDeleteCasters_unitLastClic[this] == nil) then
    s__MakeDeleteCasters_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeDeleteCasters_unitLastClic[this], x)
    SetUnitY(s__MakeDeleteCasters_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeDeleteCasters_unsaveLoc(this)
  if (not s__MakeDeleteCasters_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeDeleteCasters_unitLastClic[this])
  s__MakeDeleteCasters_unitLastClic[this] = nil
  s__MakeDeleteCasters_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeDeleteCasters_unsaveLocDefinitely(this)
  s__MakeDeleteCasters_unsaveLoc(this)
  s__MakeDeleteCasters_lastLocIsSaved[this] = false
end

function s__MakeDeleteCasters_cancelLastAction(this)
  return s__MakeDeleteCasters_unsaveLoc(this)
end

function s__MakeDeleteCasters_redoLastAction(this)
  if (s__MakeDeleteCasters_lastLocIsSaved[this] and not s__MakeDeleteCasters_lastLocSavedIsUsed[this]) then
    s__MakeDeleteCasters_saveLoc(this, s__MakeDeleteCasters_lastX[this], s__MakeDeleteCasters_lastY[this])
    return true
  end
  return false
end

function s__MakeDeleteCasters_getMode(this)
  return s__MakeDeleteCasters_mode[this]
end




--library MakeDeleteCasters ends
--library MakeDeleteMeteors:




function s__MakeDeleteMeteors_isLastLocSavedUsed(this)
  return s__MakeDeleteMeteors_lastLocSavedIsUsed[this]
end

function s__MakeDeleteMeteors_create(maker, mode)
  --modes : oneByOne, twoClics
  local m = nil
  if (maker == nil or (mode ~= "oneByOne" and mode ~= "twoClics")) then
    return 0
  end
  m = s__MakeDeleteMeteors__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "deleteMeteors"
  s__MakeDeleteMeteors_mode[m] = mode
  s__MakeDeleteMeteors_lastLocIsSaved[m] = false
  s__MakeDeleteMeteors_lastLocSavedIsUsed[m] = false
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  if (mode == "oneByOne") then
    TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_TARGET_ORDER)
  end
  return m
end

function s__MakeDeleteMeteors_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteMeteors_unitLastClic[this])
  s__MakeDeleteMeteors_unitLastClic[this] = nil
end

function s__MakeDeleteMeteors_saveLoc(this, x, l__y)
  s__MakeDeleteMeteors_lastX[this] = x
  s__MakeDeleteMeteors_lastY[this] = l__y
  s__MakeDeleteMeteors_lastLocIsSaved[this] = true
  s__MakeDeleteMeteors_lastLocSavedIsUsed[this] = true
  if (s__MakeDeleteMeteors_unitLastClic[this] == nil) then
    s__MakeDeleteMeteors_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeDeleteMeteors_unitLastClic[this], x)
    SetUnitY(s__MakeDeleteMeteors_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeDeleteMeteors_unsaveLoc(this)
  if (not s__MakeDeleteMeteors_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeDeleteMeteors_unitLastClic[this])
  s__MakeDeleteMeteors_unitLastClic[this] = nil
  s__MakeDeleteMeteors_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeDeleteMeteors_unsaveLocDefinitely(this)
  s__MakeDeleteMeteors_unsaveLoc(this)
  s__MakeDeleteMeteors_lastLocIsSaved[this] = false
end

function s__MakeDeleteMeteors_cancelLastAction(this)
  return s__MakeDeleteMeteors_unsaveLoc(this)
end

function s__MakeDeleteMeteors_redoLastAction(this)
  if (s__MakeDeleteMeteors_lastLocIsSaved[this] and not s__MakeDeleteMeteors_lastLocSavedIsUsed[this]) then
    s__MakeDeleteMeteors_saveLoc(this, s__MakeDeleteMeteors_lastX[this], s__MakeDeleteMeteors_lastY[this])
    return true
  end
  return false
end

function s__MakeDeleteMeteors_getMode(this)
  return s__MakeDeleteMeteors_mode[this]
end




--library MakeDeleteMeteors ends
--library MakeDeleteMonsters:





function s__MakeDeleteMonsters_isLastLocSavedUsed(this)
  return s__MakeDeleteMonsters_lastLocSavedIsUsed[this]
end

function s__MakeDeleteMonsters_create(maker, mode)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeDeleteMonsters__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "deleteMonsters"
  s__MakeDeleteMonsters_mode[m] = mode
  s__MakeDeleteMonsters_lastLocIsSaved[m] = false
  s__MakeDeleteMonsters_lastLocSavedIsUsed[m] = false
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeDeleteMonsters_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteMonsters_unitLastClic[this])
  s__MakeDeleteMonsters_unitLastClic[this] = nil
end

function s__MakeDeleteMonsters_saveLoc(this, x, l__y)
  s__MakeDeleteMonsters_lastX[this] = x
  s__MakeDeleteMonsters_lastY[this] = l__y
  s__MakeDeleteMonsters_lastLocIsSaved[this] = true
  s__MakeDeleteMonsters_lastLocSavedIsUsed[this] = true
  if (s__MakeDeleteMonsters_unitLastClic[this] == nil) then
    s__MakeDeleteMonsters_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeDeleteMonsters_unitLastClic[this], x)
    SetUnitY(s__MakeDeleteMonsters_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeDeleteMonsters_unsaveLoc(this)
  if (not s__MakeDeleteMonsters_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeDeleteMonsters_unitLastClic[this])
  s__MakeDeleteMonsters_unitLastClic[this] = nil
  s__MakeDeleteMonsters_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeDeleteMonsters_unsaveLocDefinitely(this)
  s__MakeDeleteMonsters_unsaveLoc(this)
  s__MakeDeleteMonsters_lastLocIsSaved[this] = false
end

function s__MakeDeleteMonsters_cancelLastAction(this)
  return s__MakeDeleteMonsters_unsaveLoc(this)
end

function s__MakeDeleteMonsters_redoLastAction(this)
  if (s__MakeDeleteMonsters_lastLocIsSaved[this] and not s__MakeDeleteMonsters_lastLocSavedIsUsed[this]) then
    s__MakeDeleteMonsters_saveLoc(this, s__MakeDeleteMonsters_lastX[this], s__MakeDeleteMonsters_lastY[this])
    return true
  end
  return false
end

function s__MakeDeleteMonsters_getMode(this)
  return s__MakeDeleteMonsters_mode[this]
end




--library MakeDeleteMonsters ends
--library MakeEnd:




function s__MakeEnd_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeEnd__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "endCreate"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeEnd_lastLocIsSaved[m] = false
  s__MakeEnd_lastLocSavedIsUsed[m] = false
  return m
end

function s__MakeEnd_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeEnd_unitLastClic[this])
  s__MakeEnd_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeEnd_saveLoc(this, x, l__y)
  s__MakeEnd_lastX[this] = x
  s__MakeEnd_lastY[this] = l__y
  s__MakeEnd_lastLocIsSaved[this] = true
  s__MakeEnd_lastLocSavedIsUsed[this] = true
  if (s__MakeEnd_unitLastClic[this] == nil) then
    s__MakeEnd_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeEnd_unitLastClic[this], x)
    SetUnitY(s__MakeEnd_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeEnd_unsaveLoc(this)
  if (not s__MakeEnd_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeEnd_unitLastClic[this])
  s__MakeEnd_unitLastClic[this] = nil
  s__MakeEnd_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeEnd_isLastLocSavedUsed(this)
  return s__MakeEnd_lastLocSavedIsUsed[this]
end

function s__MakeEnd_cancelLastAction(this)
  return s__MakeEnd_unsaveLoc(this)
end

function s__MakeEnd_redoLastAction(this)
  if (not s__MakeEnd_lastLocSavedIsUsed[this] and s__MakeEnd_lastLocIsSaved[this]) then
    s__MakeEnd_saveLoc(this, s__MakeEnd_lastX[this], s__MakeEnd_lastY[this])
    return true
  end
  return false
end




--library MakeEnd ends
--library MakeExchangeTerrains:





function s__MakeExchangeTerrains_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeExchangeTerrains__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "exchangeTerrains"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeExchangeTerrains_lastLocIsSaved[m] = false
  s__MakeExchangeTerrains_lastLocSavedIsUsed[m] = false
  return m
end

function s__MakeExchangeTerrains_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeExchangeTerrains_unitLastClic[this])
  s__MakeExchangeTerrains_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeExchangeTerrains_saveLoc(this, x, l__y)
  s__MakeExchangeTerrains_lastX[this] = x
  s__MakeExchangeTerrains_lastY[this] = l__y
  s__MakeExchangeTerrains_lastLocIsSaved[this] = true
  s__MakeExchangeTerrains_lastLocSavedIsUsed[this] = true
  if (s__MakeExchangeTerrains_unitLastClic[this] == nil) then
    s__MakeExchangeTerrains_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeExchangeTerrains_unitLastClic[this], x)
    SetUnitY(s__MakeExchangeTerrains_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeExchangeTerrains_unsaveLoc(this)
  if (not s__MakeExchangeTerrains_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeExchangeTerrains_unitLastClic[this])
  s__MakeExchangeTerrains_unitLastClic[this] = nil
  s__MakeExchangeTerrains_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeExchangeTerrains_unsaveLocDefinitely(this)
  s__MakeExchangeTerrains_unsaveLoc(this)
  s__MakeExchangeTerrains_lastLocIsSaved[this] = false
end

function s__MakeExchangeTerrains_isLastLocSavedUsed(this)
  return s__MakeExchangeTerrains_lastLocSavedIsUsed[this]
end

function s__MakeExchangeTerrains_cancelLastAction(this)
  return s__MakeExchangeTerrains_unsaveLoc(this)
end

function s__MakeExchangeTerrains_redoLastAction(this)
  if (s__MakeExchangeTerrains_lastLocIsSaved[this] and not s__MakeExchangeTerrains_lastLocSavedIsUsed[this]) then
    s__MakeExchangeTerrains_saveLoc(this, s__MakeExchangeTerrains_lastX[this], s__MakeExchangeTerrains_lastY[this])
    return true
  end
  return false
end




--library MakeExchangeTerrains ends
--library MakeGetTerrainType:



function s__MakeGetTerrainType_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeGetTerrainType__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "getTerrainType"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeGetTerrainType_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeGetTerrainType_cancelLastAction(this)
  return false
end

function s__MakeGetTerrainType_redoLastAction(this)
  return false
end




--library MakeGetTerrainType ends
--library MakeGetUnitTeleportPeriod:



function s__MakeGetUnitTeleportPeriod_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeGetUnitTeleportPeriod__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "getUnitTeleportPeriod"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeGetUnitTeleportPeriod_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeGetUnitTeleportPeriod_cancelLastAction(this)
  return false
end

function s__MakeGetUnitTeleportPeriod_redoLastAction(this)
  return false
end




--library MakeGetUnitTeleportPeriod ends
--library MakeMeteor:



function s__MakeMeteor_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeMeteor__allocate()
  s__Make_maker[m] = maker
  s__Make_kind[m] = "meteorCreate"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeMeteor_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeMeteor_cancelLastAction(this)
  return false
end

function s__MakeMeteor_redoLastAction(this)
  return false
end





--library MakeMeteor ends
--library MakeMonsterMultiplePatrols:




function s__MakeMonsterMultiplePatrols_getMonsterType(this)
  return s__MakeMonsterMultiplePatrols_mt[this]
end

function s__MakeMonsterMultiplePatrols_getMode(this)
  return s__MakeMonsterMultiplePatrols_mode[this]
end

function s__MakeMonsterMultiplePatrols_getMonster(this)
  return s__MakeMonsterMultiplePatrols_monster[this]
end

function s__MakeMonsterMultiplePatrols_create(maker, mode, mt)
  local m = nil
  if (maker == nil or mt == 0 or (mode ~= "normal" and mode ~= "string")) then
    return 0
  end
  m = s__MakeMonsterMultiplePatrols__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "monsterCreateMultiplePatrols"
  s__MakeMonsterMultiplePatrols_mt[m] = mt
  s__MakeMonsterMultiplePatrols_mode[m] = mode
  s__MakeMonsterMultiplePatrols_monster[m] = 0
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeMonsterMultiplePatrols_lastLocId[m] = -1
  s__MakeMonsterMultiplePatrols_locPointeur[m] = -1
  return m
end

function s__MakeMonsterMultiplePatrols_onDestroy(this)
  local escaper = nil
  if (s__MakeMonsterMultiplePatrols_monster[this] ~= 0 and sg__Monster_get_u(s__MakeMonsterMultiplePatrols_monster[this]) ~= nil) then
    escaper = Hero2Escaper(s__Make_maker[this])
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), s__MakeMonsterMultiplePatrols_monster[this])))
    -- INLINED!!
  else
    sc__Monster_deallocate(s__MakeMonsterMultiplePatrols_monster[this])
  end
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterMultiplePatrols_unitLastClic[this])
  s__MakeMonsterMultiplePatrols_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeMonsterMultiplePatrols_nextMonster(this)
  local escaper = nil
  s__MakeMonsterMultiplePatrols_lastLocId[this] = -1
  s__MakeMonsterMultiplePatrols_locPointeur[this] = -1
  RemoveUnit(s__MakeMonsterMultiplePatrols_unitLastClic[this])
  s__MakeMonsterMultiplePatrols_unitLastClic[this] = nil
  if (s__MakeMonsterMultiplePatrols_monster[this] ~= 0 and sg__Monster_get_u(s__MakeMonsterMultiplePatrols_monster[this]) ~= nil) then
    escaper = Hero2Escaper(s__Make_maker[this])
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), s__MakeMonsterMultiplePatrols_monster[this])))
    -- INLINED!!
  else
    sc__Monster_deallocate(s__MakeMonsterMultiplePatrols_monster[this])
  end
  s__MakeMonsterMultiplePatrols_monster[this] = 0
end

function s__MakeMonsterMultiplePatrols_getLocPointeur(this)
  return s__MakeMonsterMultiplePatrols_locPointeur[this]
end

function s__MakeMonsterMultiplePatrols_setUnitLastClicPosition(this, x, l__y)
  if (s__MakeMonsterMultiplePatrols_unitLastClic[this] == nil) then
    s__MakeMonsterMultiplePatrols_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    --call SetUnitX(.unitLastClic, x)
    --call SetUnitY(.unitLastClic, y)
    SetUnitPosition(s__MakeMonsterMultiplePatrols_unitLastClic[this], x, l__y)
  end
end

function s__MakeMonsterMultiplePatrols_saveLoc(this, x, l__y)
  if (s__MakeMonsterMultiplePatrols_locPointeur[this] >= s__MonsterMultiplePatrols_NB_MAX_LOC - 1) then
    return
  end
  s__MakeMonsterMultiplePatrols_locPointeur[this] = s__MakeMonsterMultiplePatrols_locPointeur[this] + 1
  s___MakeMonsterMultiplePatrols_lastX[s__MakeMonsterMultiplePatrols_lastX[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]] = x
  s___MakeMonsterMultiplePatrols_lastY[s__MakeMonsterMultiplePatrols_lastY[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]] = l__y
  s__MakeMonsterMultiplePatrols_lastLocId[this] = s__MakeMonsterMultiplePatrols_locPointeur[this]
  s__MakeMonsterMultiplePatrols_setUnitLastClicPosition(this, x, l__y)
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeMonsterMultiplePatrols_unsaveLoc(this)
  if (s__MakeMonsterMultiplePatrols_locPointeur[this] < 0) then
    return false
  end
  sc__MonsterMultiplePatrols_destroyLastLoc(s__MakeMonsterMultiplePatrols_monster[this])
  s__MakeMonsterMultiplePatrols_locPointeur[this] = s__MakeMonsterMultiplePatrols_locPointeur[this] - 1
  if (s__MakeMonsterMultiplePatrols_locPointeur[this] >= 0) then
    s__MakeMonsterMultiplePatrols_setUnitLastClicPosition(this, s___MakeMonsterMultiplePatrols_lastX[s__MakeMonsterMultiplePatrols_lastX[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]], s___MakeMonsterMultiplePatrols_lastY[s__MakeMonsterMultiplePatrols_lastY[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]])
  else
    RemoveUnit(s__MakeMonsterMultiplePatrols_unitLastClic[this])
    s__MakeMonsterMultiplePatrols_unitLastClic[this] = nil
    sc__MonsterMultiplePatrols_removeUnit(s__MakeMonsterMultiplePatrols_monster[this])
  end
  return true
end

function s__MakeMonsterMultiplePatrols_setMonster(this, monster)
  if (s__MakeMonsterMultiplePatrols_monster[this] ~= 0) then
    sc__Monster_deallocate(s__MakeMonsterMultiplePatrols_monster[this])
  end
  s__MakeMonsterMultiplePatrols_monster[this] = monster
end

function s__MakeMonsterMultiplePatrols_cancelLastAction(this)
  return s__MakeMonsterMultiplePatrols_unsaveLoc(this)
end

function s__MakeMonsterMultiplePatrols_redoLastAction(this)
  if (s__MakeMonsterMultiplePatrols_locPointeur[this] < s__MakeMonsterMultiplePatrols_lastLocId[this]) then
    s__MakeMonsterMultiplePatrols_locPointeur[this] = s__MakeMonsterMultiplePatrols_locPointeur[this] + 1
    sc__MonsterMultiplePatrols_addNewLoc(s__MakeMonsterMultiplePatrols_monster[this], s___MakeMonsterMultiplePatrols_lastX[s__MakeMonsterMultiplePatrols_lastX[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]], s___MakeMonsterMultiplePatrols_lastY[s__MakeMonsterMultiplePatrols_lastY[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]])
    s__MakeMonsterMultiplePatrols_setUnitLastClicPosition(this, s___MakeMonsterMultiplePatrols_lastX[s__MakeMonsterMultiplePatrols_lastX[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]], s___MakeMonsterMultiplePatrols_lastY[s__MakeMonsterMultiplePatrols_lastY[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]])
    return true
  end
  return false
end




--library MakeMonsterMultiplePatrols ends
--library MakeMonsterNoMove:





function s__MakeMonsterNoMove_getMonsterType(this)
  return s__MakeMonsterNoMove_mt[this]
end

function s__MakeMonsterNoMove_getFacingAngle(this)
  return s__MakeMonsterNoMove_facingAngle[this]
end

function s__MakeMonsterNoMove_create(maker, mt, facingAngle)
  local m = nil
  if (maker == nil or mt == 0) then
    return 0
  end
  m = s__MakeMonsterNoMove__allocate()
  s__Make_maker[m] = maker
  s__Make_kind[m] = "monsterCreateNoMove"
  s__MakeMonsterNoMove_mt[m] = mt
  s__MakeMonsterNoMove_facingAngle[m] = facingAngle
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeMonsterNoMove_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeMonsterNoMove_cancelLastAction(this)
  return false
end

function s__MakeMonsterNoMove_redoLastAction(this)
  return false
end





--library MakeMonsterNoMove ends
--library MakeMonsterSimplePatrol:




function s__MakeMonsterSimplePatrol_getMonsterType(this)
  return s__MakeMonsterSimplePatrol_mt[this]
end

function s__MakeMonsterSimplePatrol_create(maker, mode, mt)
  local m = nil
  if (maker == nil or (mode ~= "normal" and mode ~= "string" and mode ~= "auto") or mt == 0) then
    return 0
  end
  m = s__MakeMonsterSimplePatrol__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "monsterCreateSimplePatrol"
  s__MakeMonsterSimplePatrol_mode[m] = mode
  s__MakeMonsterSimplePatrol_mt[m] = mt
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeMonsterSimplePatrol_lastLocIsSaved[m] = false
  s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[m] = false
  return m
end

function s__MakeMonsterSimplePatrol_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterSimplePatrol_unitLastClic[this])
  s__MakeMonsterSimplePatrol_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeMonsterSimplePatrol_saveLoc(this, x, l__y)
  s__MakeMonsterSimplePatrol_lastX[this] = x
  s__MakeMonsterSimplePatrol_lastY[this] = l__y
  s__MakeMonsterSimplePatrol_lastLocIsSaved[this] = true
  s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this] = true
  if (s__MakeMonsterSimplePatrol_unitLastClic[this] == nil) then
    s__MakeMonsterSimplePatrol_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeMonsterSimplePatrol_unitLastClic[this], x)
    SetUnitY(s__MakeMonsterSimplePatrol_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeMonsterSimplePatrol_unsaveLoc(this)
  if (not s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeMonsterSimplePatrol_unitLastClic[this])
  s__MakeMonsterSimplePatrol_unitLastClic[this] = nil
  s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeMonsterSimplePatrol_unsaveLocDefinitely(this)
  s__MakeMonsterSimplePatrol_unsaveLoc(this)
  s__MakeMonsterSimplePatrol_lastLocIsSaved[this] = false
end

function s__MakeMonsterSimplePatrol_isLastLocSavedUsed(this)
  return s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this]
end

function s__MakeMonsterSimplePatrol_cancelLastAction(this)
  return s__MakeMonsterSimplePatrol_unsaveLoc(this)
end

function s__MakeMonsterSimplePatrol_redoLastAction(this)
  if (s__MakeMonsterSimplePatrol_lastLocIsSaved[this] and not s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this]) then
    s__MakeMonsterSimplePatrol_saveLoc(this, s__MakeMonsterSimplePatrol_lastX[this], s__MakeMonsterSimplePatrol_lastY[this])
    return true
  end
  return false
end

function s__MakeMonsterSimplePatrol_getMode(this)
  return s__MakeMonsterSimplePatrol_mode[this]
end




--library MakeMonsterSimplePatrol ends
--library MakeMonsterSpawn:





function s__MakeMonsterSpawn_create(maker, label, mt, sens, frequence)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeMonsterSpawn__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "monsterSpawnCreate"
  s__MakeMonsterSpawn_label[m] = label
  s__MakeMonsterSpawn_mt[m] = mt
  s__MakeMonsterSpawn_sens[m] = sens
  s__MakeMonsterSpawn_frequence[m] = frequence
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeMonsterSpawn_lastLocIsSaved[m] = false
  s__MakeMonsterSpawn_lastLocSavedIsUsed[m] = false
  return m
end

function s__MakeMonsterSpawn_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterSpawn_unitLastClic[this])
  s__MakeMonsterSpawn_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeMonsterSpawn_saveLoc(this, x, l__y)
  s__MakeMonsterSpawn_lastX[this] = x
  s__MakeMonsterSpawn_lastY[this] = l__y
  s__MakeMonsterSpawn_lastLocIsSaved[this] = true
  s__MakeMonsterSpawn_lastLocSavedIsUsed[this] = true
  if (s__MakeMonsterSpawn_unitLastClic[this] == nil) then
    s__MakeMonsterSpawn_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeMonsterSpawn_unitLastClic[this], x)
    SetUnitY(s__MakeMonsterSpawn_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeMonsterSpawn_unsaveLoc(this)
  if (not s__MakeMonsterSpawn_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeMonsterSpawn_unitLastClic[this])
  s__MakeMonsterSpawn_unitLastClic[this] = nil
  s__MakeMonsterSpawn_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeMonsterSpawn_isLastLocSavedUsed(this)
  return s__MakeMonsterSpawn_lastLocSavedIsUsed[this]
end

function s__MakeMonsterSpawn_cancelLastAction(this)
  return s__MakeMonsterSpawn_unsaveLoc(this)
end

function s__MakeMonsterSpawn_redoLastAction(this)
  if (not s__MakeMonsterSpawn_lastLocSavedIsUsed[this] and s__MakeMonsterSpawn_lastLocIsSaved[this]) then
    s__MakeMonsterSpawn_saveLoc(this, s__MakeMonsterSpawn_lastX[this], s__MakeMonsterSpawn_lastY[this])
    return true
  end
  return false
end




--library MakeMonsterSpawn ends
--library MakeMonsterTeleport:




function s__MakeMonsterTeleport_getMonsterType(this)
  return s__MakeMonsterTeleport_mt[this]
end

function s__MakeMonsterTeleport_getPeriod(this)
  return s__MakeMonsterTeleport_period[this]
end

function s__MakeMonsterTeleport_getAngle(this)
  return s__MakeMonsterTeleport_angle[this]
end

function s__MakeMonsterTeleport_getMode(this)
  return s__MakeMonsterTeleport_mode[this]
end

function s__MakeMonsterTeleport_getMonster(this)
  return s__MakeMonsterTeleport_monster[this]
end

function s__MakeMonsterTeleport_create(maker, mode, mt, period, angle)
  local m = nil
  if (maker == nil or mt == 0 or (mode ~= "normal" and mode ~= "string") or period < MONSTER_TELEPORT_PERIOD_MIN or period > MONSTER_TELEPORT_PERIOD_MAX) then
    return 0
  end
  m = s__MakeMonsterTeleport__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "monsterCreateTeleport"
  s__MakeMonsterTeleport_mt[m] = mt
  s__MakeMonsterTeleport_mode[m] = mode
  s__MakeMonsterTeleport_period[m] = period
  s__MakeMonsterTeleport_angle[m] = angle
  s__MakeMonsterTeleport_monster[m] = 0
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeMonsterTeleport_lastLocId[m] = -1
  s__MakeMonsterTeleport_locPointeur[m] = -1
  return m
end

function s__MakeMonsterTeleport_onDestroy(this)
  local escaper = nil
  if (s__MakeMonsterTeleport_monster[this] ~= 0 and sg__Monster_get_u(s__MakeMonsterTeleport_monster[this]) ~= nil) then
    escaper = Hero2Escaper(s__Make_maker[this])
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), s__MakeMonsterTeleport_monster[this])))
    -- INLINED!!
  else
    sc__Monster_deallocate(s__MakeMonsterTeleport_monster[this])
  end
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterTeleport_unitLastClic[this])
  s__MakeMonsterTeleport_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeMonsterTeleport_nextMonster(this)
  local escaper = nil
  s__MakeMonsterTeleport_lastLocId[this] = -1
  s__MakeMonsterTeleport_locPointeur[this] = -1
  RemoveUnit(s__MakeMonsterTeleport_unitLastClic[this])
  s__MakeMonsterTeleport_unitLastClic[this] = nil
  if (s__MakeMonsterTeleport_monster[this] ~= 0 and sg__Monster_get_u(s__MakeMonsterTeleport_monster[this]) ~= nil) then
    escaper = Hero2Escaper(s__Make_maker[this])
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), s__MakeMonsterTeleport_monster[this])))
    -- INLINED!!
  else
    sc__Monster_deallocate(s__MakeMonsterTeleport_monster[this])
  end
  s__MakeMonsterTeleport_monster[this] = 0
end

function s__MakeMonsterTeleport_addWaitPeriod(this)
  if (s__MakeMonsterTeleport_locPointeur[this] < 0) then
    return false
    --un wait sans point au préalable est interdit
  end
  if (sc__MakeMonsterTeleport_saveLoc(this, WAIT, WAIT)) then
    sc__MonsterTeleport_addNewLoc((s__MakeMonsterTeleport_monster[(this)]), WAIT, WAIT)
    -- INLINED!!
    return true
  end
  return false
end

function s__MakeMonsterTeleport_addHidePeriod(this)
  if (s__MakeMonsterTeleport_locPointeur[this] < 0) then
    return false
    --un hide sans point au préalable est interdit
  end
  if (sc__MakeMonsterTeleport_saveLoc(this, HIDE, HIDE)) then
    sc__MonsterTeleport_addNewLoc((s__MakeMonsterTeleport_monster[(this)]), HIDE, HIDE)
    -- INLINED!!
    return true
  end
  return false
end

function s__MakeMonsterTeleport_getLocPointeur(this)
  return s__MakeMonsterTeleport_locPointeur[this]
end

function s__MakeMonsterTeleport_setUnitLastClicPosition(this, x, l__y)
  if (s__MakeMonsterTeleport_unitLastClic[this] == nil) then
    s__MakeMonsterTeleport_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    --call SetUnitX(.unitLastClic, x)
    --call SetUnitY(.unitLastClic, y)
    SetUnitPosition(s__MakeMonsterTeleport_unitLastClic[this], x, l__y)
  end
end

function s__MakeMonsterTeleport_saveLoc(this, x, l__y)
  if (s__MakeMonsterTeleport_locPointeur[this] >= s__MonsterTeleport_NB_MAX_LOC - 1) then
    return false
  end
  s__MakeMonsterTeleport_locPointeur[this] = s__MakeMonsterTeleport_locPointeur[this] + 1
  s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + s__MakeMonsterTeleport_locPointeur[this]] = x
  s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + s__MakeMonsterTeleport_locPointeur[this]] = l__y
  s__MakeMonsterTeleport_lastLocId[this] = s__MakeMonsterTeleport_locPointeur[this]
  if (not (x == l__y and (x == WAIT or x == HIDE))) then
    s__MakeMonsterTeleport_setUnitLastClicPosition(this, x, l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end

function s__MakeMonsterTeleport_unsaveLoc(this)
  local x = nil
  local l__y = nil
  local i = nil
  if (s__MakeMonsterTeleport_locPointeur[this] < 0) then
    return false
  end
  sc__MonsterTeleport_destroyLastLoc(s__MakeMonsterTeleport_monster[this])
  s__MakeMonsterTeleport_locPointeur[this] = s__MakeMonsterTeleport_locPointeur[this] - 1
  if (s__MakeMonsterTeleport_locPointeur[this] >= 0) then
    x = s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + s__MakeMonsterTeleport_locPointeur[this]]
    l__y = s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + s__MakeMonsterTeleport_locPointeur[this]]
    i = s__MakeMonsterTeleport_locPointeur[this]
    while true do
      if (i < 0 or not (x == l__y and (x == WAIT or x == HIDE))) then
        break
      end
      --il ne faut pas que la unitLastClic se retrouve au point (1, 1) ou (2, 2)
      i = i - 1
      x = s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + i]
      l__y = s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + i]
    end
    if (i >= 0) then
      s__MakeMonsterTeleport_setUnitLastClicPosition(this, s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + i], s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + i])
    else
      RemoveUnit(s__MakeMonsterTeleport_unitLastClic[this])
      s__MakeMonsterTeleport_unitLastClic[this] = nil
    end
  else
    RemoveUnit(s__MakeMonsterTeleport_unitLastClic[this])
    s__MakeMonsterTeleport_unitLastClic[this] = nil
    sc__MonsterTeleport_removeUnit(s__MakeMonsterTeleport_monster[this])
  end
  return true
end

function s__MakeMonsterTeleport_setMonster(this, monster)
  if (s__MakeMonsterTeleport_monster[this] ~= 0) then
    sc__Monster_deallocate(s__MakeMonsterTeleport_monster[this])
  end
  s__MakeMonsterTeleport_monster[this] = monster
end

function s__MakeMonsterTeleport_cancelLastAction(this)
  return s__MakeMonsterTeleport_unsaveLoc(this)
end

function s__MakeMonsterTeleport_redoLastAction(this)
  if (s__MakeMonsterTeleport_locPointeur[this] < s__MakeMonsterTeleport_lastLocId[this]) then
    s__MakeMonsterTeleport_locPointeur[this] = s__MakeMonsterTeleport_locPointeur[this] + 1
    sc__MonsterTeleport_addNewLoc(s__MakeMonsterTeleport_monster[this], s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + s__MakeMonsterTeleport_locPointeur[this]], s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + s__MakeMonsterTeleport_locPointeur[this]])
    s__MakeMonsterTeleport_setUnitLastClicPosition(this, s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + s__MakeMonsterTeleport_locPointeur[this]], s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + s__MakeMonsterTeleport_locPointeur[this]])
    return true
  end
  return false
end




--library MakeMonsterTeleport ends
--library MakeSetUnitMonsterType:




function s__MakeSetUnitMonsterType_getMonsterType(this)
  return s__MakeSetUnitMonsterType_mt[this]
end

function s__MakeSetUnitMonsterType_isLastLocSavedUsed(this)
  return s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this]
end

function s__MakeSetUnitMonsterType_create(maker, mode, mt)
  --modes : oneByOne, twoClics
  local m = nil
  if (maker == nil or (mode ~= "oneByOne" and mode ~= "twoClics") or mt == 0) then
    return 0
  end
  m = s__MakeSetUnitMonsterType__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "setUnitMonsterType"
  s__MakeSetUnitMonsterType_mode[m] = mode
  s__MakeSetUnitMonsterType_mt[m] = mt
  s__MakeSetUnitMonsterType_lastLocIsSaved[m] = false
  s__MakeSetUnitMonsterType_lastLocSavedIsUsed[m] = false
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeSetUnitMonsterType_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeSetUnitMonsterType_unitLastClic[this])
  s__MakeSetUnitMonsterType_unitLastClic[this] = nil
end

function s__MakeSetUnitMonsterType_saveLoc(this, x, l__y)
  s__MakeSetUnitMonsterType_lastX[this] = x
  s__MakeSetUnitMonsterType_lastY[this] = l__y
  s__MakeSetUnitMonsterType_lastLocIsSaved[this] = true
  s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this] = true
  if (s__MakeSetUnitMonsterType_unitLastClic[this] == nil) then
    s__MakeSetUnitMonsterType_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeSetUnitMonsterType_unitLastClic[this], x)
    SetUnitY(s__MakeSetUnitMonsterType_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeSetUnitMonsterType_unsaveLoc(this)
  if (not s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeSetUnitMonsterType_unitLastClic[this])
  s__MakeSetUnitMonsterType_unitLastClic[this] = nil
  s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeSetUnitMonsterType_unsaveLocDefinitely(this)
  s__MakeSetUnitMonsterType_unsaveLoc(this)
  s__MakeSetUnitMonsterType_lastLocIsSaved[this] = false
end

function s__MakeSetUnitMonsterType_cancelLastAction(this)
  return s__MakeSetUnitMonsterType_unsaveLoc(this)
end

function s__MakeSetUnitMonsterType_redoLastAction(this)
  if (s__MakeSetUnitMonsterType_lastLocIsSaved[this] and not s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this]) then
    s__MakeSetUnitMonsterType_saveLoc(this, s__MakeSetUnitMonsterType_lastX[this], s__MakeSetUnitMonsterType_lastY[this])
    return true
  end
  return false
end

function s__MakeSetUnitMonsterType_getMode(this)
  return s__MakeSetUnitMonsterType_mode[this]
end




--library MakeSetUnitMonsterType ends
--library MakeSetUnitTeleportPeriod:




function s__MakeSetUnitTeleportPeriod_getPeriod(this)
  return s__MakeSetUnitTeleportPeriod_period[this]
end

function s__MakeSetUnitTeleportPeriod_isLastLocSavedUsed(this)
  return s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this]
end

function s__MakeSetUnitTeleportPeriod_create(maker, mode, period)
  --modes : oneByOne, twoClics
  local m = nil
  if (maker == nil or (mode ~= "oneByOne" and mode ~= "twoClics") or period < MONSTER_TELEPORT_PERIOD_MIN or period > MONSTER_TELEPORT_PERIOD_MAX) then
    return 0
  end
  m = s__MakeSetUnitTeleportPeriod__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "setUnitTeleportPeriod"
  s__MakeSetUnitTeleportPeriod_mode[m] = mode
  s__MakeSetUnitTeleportPeriod_period[m] = period
  s__MakeSetUnitTeleportPeriod_lastLocIsSaved[m] = false
  s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[m] = false
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeSetUnitTeleportPeriod_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeSetUnitTeleportPeriod_unitLastClic[this])
  s__MakeSetUnitTeleportPeriod_unitLastClic[this] = nil
end

function s__MakeSetUnitTeleportPeriod_saveLoc(this, x, l__y)
  s__MakeSetUnitTeleportPeriod_lastX[this] = x
  s__MakeSetUnitTeleportPeriod_lastY[this] = l__y
  s__MakeSetUnitTeleportPeriod_lastLocIsSaved[this] = true
  s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this] = true
  if (s__MakeSetUnitTeleportPeriod_unitLastClic[this] == nil) then
    s__MakeSetUnitTeleportPeriod_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeSetUnitTeleportPeriod_unitLastClic[this], x)
    SetUnitY(s__MakeSetUnitTeleportPeriod_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeSetUnitTeleportPeriod_unsaveLoc(this)
  if (not s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeSetUnitTeleportPeriod_unitLastClic[this])
  s__MakeSetUnitTeleportPeriod_unitLastClic[this] = nil
  s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeSetUnitTeleportPeriod_unsaveLocDefinitely(this)
  s__MakeSetUnitTeleportPeriod_unsaveLoc(this)
  s__MakeSetUnitTeleportPeriod_lastLocIsSaved[this] = false
end

function s__MakeSetUnitTeleportPeriod_cancelLastAction(this)
  return s__MakeSetUnitTeleportPeriod_unsaveLoc(this)
end

function s__MakeSetUnitTeleportPeriod_redoLastAction(this)
  if (s__MakeSetUnitTeleportPeriod_lastLocIsSaved[this] and not s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this]) then
    s__MakeSetUnitTeleportPeriod_saveLoc(this, s__MakeSetUnitTeleportPeriod_lastX[this], s__MakeSetUnitTeleportPeriod_lastY[this])
    return true
  end
  return false
end

function s__MakeSetUnitTeleportPeriod_getMode(this)
  return s__MakeSetUnitTeleportPeriod_mode[this]
end




--library MakeSetUnitTeleportPeriod ends
--library MakeStart:




function s__MakeStart_create(maker, forNext)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeStart__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "startCreate"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeStart_lastLocIsSaved[m] = false
  s__MakeStart_lastLocSavedIsUsed[m] = false
  s__MakeStart_forNextB[m] = forNext
  return m
end

function s__MakeStart_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeStart_unitLastClic[this])
  s__MakeStart_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeStart_saveLoc(this, x, l__y)
  s__MakeStart_lastX[this] = x
  s__MakeStart_lastY[this] = l__y
  s__MakeStart_lastLocIsSaved[this] = true
  s__MakeStart_lastLocSavedIsUsed[this] = true
  if (s__MakeStart_unitLastClic[this] == nil) then
    s__MakeStart_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeStart_unitLastClic[this], x)
    SetUnitY(s__MakeStart_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeStart_unsaveLoc(this)
  if (not s__MakeStart_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeStart_unitLastClic[this])
  s__MakeStart_unitLastClic[this] = nil
  s__MakeStart_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeStart_isLastLocSavedUsed(this)
  return s__MakeStart_lastLocSavedIsUsed[this]
end

function s__MakeStart_cancelLastAction(this)
  return s__MakeStart_unsaveLoc(this)
end

function s__MakeStart_redoLastAction(this)
  if (not s__MakeStart_lastLocSavedIsUsed[this] and s__MakeStart_lastLocIsSaved[this]) then
    s__MakeStart_saveLoc(this, s__MakeStart_lastX[this], s__MakeStart_lastY[this])
    return true
  end
  return false
end

function s__MakeStart_forNext(this)
  return s__MakeStart_forNextB[this]
end




--library MakeStart ends
--library MakeTerrainCopyPaste:





function s__MakeTerrainCopyPaste_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeTerrainCopyPaste__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "terrainCopyPaste"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeTerrainCopyPaste_isPoint1Saved[m] = false
  s__MakeTerrainCopyPaste_isPoint2Saved[m] = false
  s__MakeTerrainCopyPaste_isPoint3Saved[m] = false
  s__MakeTerrainCopyPaste_isPoint1Used[m] = false
  s__MakeTerrainCopyPaste_isPoint2Used[m] = false
  s__MakeTerrainCopyPaste_isPoint3Used[m] = false
  return m
end

function s__MakeTerrainCopyPaste_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic1[this])
  s__MakeTerrainCopyPaste_unitLastClic1[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic2[this])
  s__MakeTerrainCopyPaste_unitLastClic2[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic3[this])
  s__MakeTerrainCopyPaste_unitLastClic3[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeTerrainCopyPaste_createUnitClic(this, u, x, l__y)
  if (u == nil) then
    u = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(u, x)
    SetUnitY(u, l__y)
  end
  return u
end

function s__MakeTerrainCopyPaste_unsaveLoc(this, locId)
  if (locId == 1) then
    s__MakeTerrainCopyPaste_isPoint1Used[this] = false
    RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic1[this])
    s__MakeTerrainCopyPaste_unitLastClic1[this] = nil
  else
    if (locId == 2) then
      s__MakeTerrainCopyPaste_isPoint2Used[this] = false
      RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic2[this])
      s__MakeTerrainCopyPaste_unitLastClic2[this] = nil
    else
      if (locId == 3) then
        s__MakeTerrainCopyPaste_isPoint3Used[this] = false
        RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic3[this])
        s__MakeTerrainCopyPaste_unitLastClic3[this] = nil
      end
    end
  end
end

function s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, locId)
  s__MakeTerrainCopyPaste_unsaveLoc(this, locId)
  if (locId == 1) then
    s__MakeTerrainCopyPaste_isPoint1Saved[this] = false
  else
    if (locId == 2) then
      s__MakeTerrainCopyPaste_isPoint2Saved[this] = false
    else
      if (locId == 3) then
        s__MakeTerrainCopyPaste_isPoint3Saved[this] = false
      end
    end
  end
end

function s__MakeTerrainCopyPaste_unsaveLocsDefinitely(this)
  s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 1)
  s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 2)
  s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 3)
end

function s__MakeTerrainCopyPaste_saveLoc(this, x, l__y)
  local action = nil
  if (not s__MakeTerrainCopyPaste_isPoint1Used[this]) then
    s__MakeTerrainCopyPaste_unitLastClic1[this] = s__MakeTerrainCopyPaste_createUnitClic(this, s__MakeTerrainCopyPaste_unitLastClic1[this], x, l__y)
    s__MakeTerrainCopyPaste_x1[this] = x
    s__MakeTerrainCopyPaste_y1[this] = l__y
    s__MakeTerrainCopyPaste_isPoint1Saved[this] = true
    s__MakeTerrainCopyPaste_isPoint1Used[this] = true
    s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 2)
    s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 3)
  else
    if (not s__MakeTerrainCopyPaste_isPoint2Used[this]) then
      if (GetNbCaseBetween(s__MakeTerrainCopyPaste_x1[this], s__MakeTerrainCopyPaste_y1[this], x, l__y) > NB_MAX_TILES_MODIFIED) then
        Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("Too big zone !"))
        -- INLINED!!
        return
      end
      s__MakeTerrainCopyPaste_unitLastClic2[this] = s__MakeTerrainCopyPaste_createUnitClic(this, s__MakeTerrainCopyPaste_unitLastClic2[this], x, l__y)
      s__MakeTerrainCopyPaste_x2[this] = x
      s__MakeTerrainCopyPaste_y2[this] = l__y
      s__MakeTerrainCopyPaste_isPoint2Saved[this] = true
      s__MakeTerrainCopyPaste_isPoint2Used[this] = true
      s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 3)
    else
      if (not s__MakeTerrainCopyPaste_isPoint3Used[this]) then
        s__MakeTerrainCopyPaste_unitLastClic3[this] = s__MakeTerrainCopyPaste_createUnitClic(this, s__MakeTerrainCopyPaste_unitLastClic3[this], x, l__y)
        s__MakeTerrainCopyPaste_x3[this] = x
        s__MakeTerrainCopyPaste_y3[this] = l__y
        s__MakeTerrainCopyPaste_isPoint3Saved[this] = true
        s__MakeTerrainCopyPaste_isPoint3Used[this] = true
      else
        action = s__MakeTerrainCopyPasteAction_create(s__MakeTerrainCopyPaste_x1[this], s__MakeTerrainCopyPaste_y1[this], s__MakeTerrainCopyPaste_x2[this], s__MakeTerrainCopyPaste_y2[this], s__MakeTerrainCopyPaste_x3[this], s__MakeTerrainCopyPaste_y3[this], x, l__y)
        if (action ~= 0) then
          s__MakeTerrainCopyPaste_unsaveLocsDefinitely(this)
          s__MakeLastActions_newAction(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))], (action))
          -- INLINED!!
        else
          Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("paste zone out of bounds"))
          -- INLINED!!
        end
      end
    end
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeTerrainCopyPaste_cancelLastAction(this)
  if (s__MakeTerrainCopyPaste_isPoint3Used[this]) then
    s__MakeTerrainCopyPaste_unsaveLoc(this, 3)
    return true
  else
    if (s__MakeTerrainCopyPaste_isPoint2Used[this]) then
      s__MakeTerrainCopyPaste_unsaveLoc(this, 2)
      return true
    else
      if (s__MakeTerrainCopyPaste_isPoint1Used[this]) then
        s__MakeTerrainCopyPaste_unsaveLoc(this, 1)
        return true
      end
    end
  end
  return false
end

function s__MakeTerrainCopyPaste_redoLastAction(this)
  if (s__MakeTerrainCopyPaste_isPoint1Saved[this] and not s__MakeTerrainCopyPaste_isPoint1Used[this]) then
    s__MakeTerrainCopyPaste_saveLoc(this, s__MakeTerrainCopyPaste_x1[this], s__MakeTerrainCopyPaste_y1[this])
    return true
  else
    if (s__MakeTerrainCopyPaste_isPoint2Saved[this] and not s__MakeTerrainCopyPaste_isPoint2Used[this]) then
      s__MakeTerrainCopyPaste_saveLoc(this, s__MakeTerrainCopyPaste_x2[this], s__MakeTerrainCopyPaste_y2[this])
      return true
    else
      if (s__MakeTerrainCopyPaste_isPoint3Saved[this] and not s__MakeTerrainCopyPaste_isPoint3Used[this]) then
        s__MakeTerrainCopyPaste_saveLoc(this, s__MakeTerrainCopyPaste_x3[this], s__MakeTerrainCopyPaste_y3[this])
        return true
      end
    end
  end
  return false
end




--library MakeTerrainCopyPaste ends
--library MakeTerrainCreate:




function s__MakeTerrainCreate_isLastLocSavedUsed(this)
  return s__MakeTerrainCreate_lastLocSavedIsUsed[this]
end

function s__MakeTerrainCreate_getTerrainType(this)
  return s__MakeTerrainCreate_terrainType[this]
end

function s__MakeTerrainCreate_create(maker, terrainType)
  local m = nil
  if (maker == nil or terrainType == 0) then
    return 0
  end
  m = s__MakeTerrainCreate__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__MakeTerrainCreate_terrainType[m] = terrainType
  s__Make_kind[m] = "terrainCreate"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeTerrainCreate_lastLocIsSaved[m] = false
  s__MakeTerrainCreate_lastLocSavedIsUsed[m] = false
  return m
end

function s__MakeTerrainCreate_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainCreate_unitLastClic[this])
  s__MakeTerrainCreate_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeTerrainCreate_saveLoc(this, x, l__y)
  s__MakeTerrainCreate_lastX[this] = x
  s__MakeTerrainCreate_lastY[this] = l__y
  s__MakeTerrainCreate_lastLocIsSaved[this] = true
  s__MakeTerrainCreate_lastLocSavedIsUsed[this] = true
  if (s__MakeTerrainCreate_unitLastClic[this] == nil) then
    s__MakeTerrainCreate_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeTerrainCreate_unitLastClic[this], x)
    SetUnitY(s__MakeTerrainCreate_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeTerrainCreate_unsaveLoc(this)
  if (not s__MakeTerrainCreate_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeTerrainCreate_unitLastClic[this])
  s__MakeTerrainCreate_unitLastClic[this] = nil
  s__MakeTerrainCreate_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeTerrainCreate_unsaveLocDefinitely(this)
  s__MakeTerrainCreate_unsaveLoc(this)
  s__MakeTerrainCreate_lastLocIsSaved[this] = false
end

function s__MakeTerrainCreate_cancelLastAction(this)
  return s__MakeTerrainCreate_unsaveLoc(this)
end

function s__MakeTerrainCreate_redoLastAction(this)
  if (s__MakeTerrainCreate_lastLocIsSaved[this] and not s__MakeTerrainCreate_lastLocSavedIsUsed[this]) then
    s__MakeTerrainCreate_saveLoc(this, s__MakeTerrainCreate_lastX[this], s__MakeTerrainCreate_lastY[this])
    return true
  end
  return false
end




--library MakeTerrainCreate ends
--library MakeTerrainHeight:





function s__MakeTerrainHeight_create(maker, radius, height)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeTerrainHeight__allocate()
  s__Make_maker[m] = maker
  s__MakeTerrainHeight_radius[m] = radius
  s__MakeTerrainHeight_height[m] = height
  s__Make_kind[m] = "terrainHeight"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], s__Make_maker[m], EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeTerrainHeight_getRadius(this)
  return s__MakeTerrainHeight_radius[this]
end

function s__MakeTerrainHeight_getHeight(this)
  return s__MakeTerrainHeight_height[this]
end

function s__MakeTerrainHeight_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeTerrainHeight_cancelLastAction(this)
  return false
end

function s__MakeTerrainHeight_redoLastAction(this)
  return false
end




--library MakeTerrainHeight ends
--library MakeTerrainHorizontalSymmetry:




function s__MakeTerrainHorizontalSymmetry_isLastLocSavedUsed(this)
  return s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this]
end

function s__MakeTerrainHorizontalSymmetry_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeTerrainHorizontalSymmetry__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "terrainHorizontalSymmetry"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeTerrainHorizontalSymmetry_lastLocIsSaved[m] = false
  s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[m] = false
  return m
end

function s__MakeTerrainHorizontalSymmetry_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainHorizontalSymmetry_unitLastClic[this])
  s__MakeTerrainHorizontalSymmetry_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeTerrainHorizontalSymmetry_saveLoc(this, x, l__y)
  s__MakeTerrainHorizontalSymmetry_lastX[this] = x
  s__MakeTerrainHorizontalSymmetry_lastY[this] = l__y
  s__MakeTerrainHorizontalSymmetry_lastLocIsSaved[this] = true
  s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this] = true
  if (s__MakeTerrainHorizontalSymmetry_unitLastClic[this] == nil) then
    s__MakeTerrainHorizontalSymmetry_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeTerrainHorizontalSymmetry_unitLastClic[this], x)
    SetUnitY(s__MakeTerrainHorizontalSymmetry_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeTerrainHorizontalSymmetry_unsaveLoc(this)
  if (not s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeTerrainHorizontalSymmetry_unitLastClic[this])
  s__MakeTerrainHorizontalSymmetry_unitLastClic[this] = nil
  s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely(this)
  s__MakeTerrainHorizontalSymmetry_unsaveLoc(this)
  s__MakeTerrainHorizontalSymmetry_lastLocIsSaved[this] = false
end

function s__MakeTerrainHorizontalSymmetry_cancelLastAction(this)
  return s__MakeTerrainHorizontalSymmetry_unsaveLoc(this)
end

function s__MakeTerrainHorizontalSymmetry_redoLastAction(this)
  if (s__MakeTerrainHorizontalSymmetry_lastLocIsSaved[this] and not s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this]) then
    s__MakeTerrainHorizontalSymmetry_saveLoc(this, s__MakeTerrainHorizontalSymmetry_lastX[this], s__MakeTerrainHorizontalSymmetry_lastY[this])
    return true
  end
  return false
end




--library MakeTerrainHorizontalSymmetry ends
--library MakeTerrainVerticalSymmetry:




function s__MakeTerrainVerticalSymmetry_isLastLocSavedUsed(this)
  return s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this]
end

function s__MakeTerrainVerticalSymmetry_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeTerrainVerticalSymmetry__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "terrainVerticalSymmetry"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeTerrainVerticalSymmetry_lastLocIsSaved[m] = false
  s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[m] = false
  return m
end

function s__MakeTerrainVerticalSymmetry_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainVerticalSymmetry_unitLastClic[this])
  s__MakeTerrainVerticalSymmetry_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeTerrainVerticalSymmetry_saveLoc(this, x, l__y)
  s__MakeTerrainVerticalSymmetry_lastX[this] = x
  s__MakeTerrainVerticalSymmetry_lastY[this] = l__y
  s__MakeTerrainVerticalSymmetry_lastLocIsSaved[this] = true
  s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this] = true
  if (s__MakeTerrainVerticalSymmetry_unitLastClic[this] == nil) then
    s__MakeTerrainVerticalSymmetry_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeTerrainVerticalSymmetry_unitLastClic[this], x)
    SetUnitY(s__MakeTerrainVerticalSymmetry_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeTerrainVerticalSymmetry_unsaveLoc(this)
  if (not s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeTerrainVerticalSymmetry_unitLastClic[this])
  s__MakeTerrainVerticalSymmetry_unitLastClic[this] = nil
  s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeTerrainVerticalSymmetry_unsaveLocDefinitely(this)
  s__MakeTerrainVerticalSymmetry_unsaveLoc(this)
  s__MakeTerrainVerticalSymmetry_lastLocIsSaved[this] = false
end

function s__MakeTerrainVerticalSymmetry_cancelLastAction(this)
  return s__MakeTerrainVerticalSymmetry_unsaveLoc(this)
end

function s__MakeTerrainVerticalSymmetry_redoLastAction(this)
  if (s__MakeTerrainVerticalSymmetry_lastLocIsSaved[this] and not s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this]) then
    s__MakeTerrainVerticalSymmetry_saveLoc(this, s__MakeTerrainVerticalSymmetry_lastX[this], s__MakeTerrainVerticalSymmetry_lastY[this])
    return true
  end
  return false
end




--library MakeTerrainVerticalSymmetry ends
--library MakeVisibilityModifier:




function s__MakeVisibilityModifier_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeVisibilityModifier__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "visibilityModifierCreate"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeVisibilityModifier_lastLocIsSaved[m] = false
  s__MakeVisibilityModifier_lastLocSavedIsUsed[m] = false
  return m
end

function s__MakeVisibilityModifier_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeVisibilityModifier_unitLastClic[this])
  s__MakeVisibilityModifier_unitLastClic[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeVisibilityModifier_saveLoc(this, x, l__y)
  s__MakeVisibilityModifier_lastX[this] = x
  s__MakeVisibilityModifier_lastY[this] = l__y
  s__MakeVisibilityModifier_lastLocIsSaved[this] = true
  s__MakeVisibilityModifier_lastLocSavedIsUsed[this] = true
  if (s__MakeVisibilityModifier_unitLastClic[this] == nil) then
    s__MakeVisibilityModifier_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeVisibilityModifier_unitLastClic[this], x)
    SetUnitY(s__MakeVisibilityModifier_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
end

function s__MakeVisibilityModifier_unsaveLoc(this)
  if (not s__MakeVisibilityModifier_lastLocSavedIsUsed[this]) then
    return false
  end
  RemoveUnit(s__MakeVisibilityModifier_unitLastClic[this])
  s__MakeVisibilityModifier_unitLastClic[this] = nil
  s__MakeVisibilityModifier_lastLocSavedIsUsed[this] = false
  return true
end

function s__MakeVisibilityModifier_unsaveLocDefinitely(this)
  s__MakeVisibilityModifier_unsaveLoc(this)
  s__MakeVisibilityModifier_lastLocIsSaved[this] = false
end

function s__MakeVisibilityModifier_isLastLocSavedUsed(this)
  return s__MakeVisibilityModifier_lastLocSavedIsUsed[this]
end

function s__MakeVisibilityModifier_cancelLastAction(this)
  return s__MakeVisibilityModifier_unsaveLoc(this)
end

function s__MakeVisibilityModifier_redoLastAction(this)
  if (not s__MakeVisibilityModifier_lastLocSavedIsUsed[this] and s__MakeVisibilityModifier_lastLocIsSaved[this]) then
    s__MakeVisibilityModifier_saveLoc(this, s__MakeVisibilityModifier_lastX[this], s__MakeVisibilityModifier_lastY[this])
    return true
  end
  return false
end




--library MakeVisibilityModifier ends
--library MonsterMultiplePatrols:



function MonsterMultiplePatrols__NewRegion(x, l__y)
  local r = Rect(x - 16, l__y - 16, x + 16, l__y + 16)
  local R = CreateRegion()
  RegionAddRect(R, r)
  RemoveRect(r)
  r = nil
  return R
end

function MonsterMultiplePatrols_move_Actions()
  local monster = nil
  local MMP = nil
  if (IsHero(GetTriggerUnit())) then
    return
  end
  monster = (GetUnitUserData(GetTriggerUnit()))
  if (si__Monster_getType(monster) == si__MonsterMultiplePatrols) then
    MMP = ((monster))
    if (sc__MonsterMultiplePatrols_getCurrentTrigger(MMP) == GetTriggeringTrigger()) then
      sc__MonsterMultiplePatrols_nextMove(MMP)
    end
  end
end
--===========================================================



function s__MonsterMultiplePatrols_count()
  return s__Monster_nbInstances
end

function s__MonsterMultiplePatrols_storeNewLoc(x, l__y)
  if (s__MonsterMultiplePatrols_staticLastLocInd >= s__MonsterMultiplePatrols_NB_MAX_LOC - 1) then
    return false
  end
  s__MonsterMultiplePatrols_staticLastLocInd = s__MonsterMultiplePatrols_staticLastLocInd + 1
  s__s__MonsterMultiplePatrols_X[s__MonsterMultiplePatrols_staticLastLocInd] = x
  s__s__MonsterMultiplePatrols_Y[s__MonsterMultiplePatrols_staticLastLocInd] = l__y
  return true
end

function s__MonsterMultiplePatrols_destroyLocs()
  s__MonsterMultiplePatrols_staticLastLocInd = -1
end


--color


--textmacro instance: MMP_Variables( "0"  )
--end of: MMP_Variables( "0"  )
--textmacro instance: MMP_Variables( "1"  )
--end of: MMP_Variables( "1"  )
--textmacro instance: MMP_Variables( "2"  )
--end of: MMP_Variables( "2"  )
--textmacro instance: MMP_Variables( "3"  )
--end of: MMP_Variables( "3"  )
--textmacro instance: MMP_Variables( "4"  )
--end of: MMP_Variables( "4"  )
--textmacro instance: MMP_Variables( "5"  )
--end of: MMP_Variables( "5"  )
--textmacro instance: MMP_Variables( "6"  )
--end of: MMP_Variables( "6"  )
--textmacro instance: MMP_Variables( "7"  )
--end of: MMP_Variables( "7"  )
--textmacro instance: MMP_Variables( "8"  )
--end of: MMP_Variables( "8"  )
--textmacro instance: MMP_Variables( "9"  )
--end of: MMP_Variables( "9"  )
--textmacro instance: MMP_Variables( "10" )
--end of: MMP_Variables( "10" )
--textmacro instance: MMP_Variables( "11" )
--end of: MMP_Variables( "11" )
--textmacro instance: MMP_Variables( "12" )
--end of: MMP_Variables( "12" )
--textmacro instance: MMP_Variables( "13" )
--end of: MMP_Variables( "13" )
--textmacro instance: MMP_Variables( "14" )
--end of: MMP_Variables( "14" )
--textmacro instance: MMP_Variables( "15" )
--end of: MMP_Variables( "15" )
--textmacro instance: MMP_Variables( "16" )
--end of: MMP_Variables( "16" )
--textmacro instance: MMP_Variables( "17" )
--end of: MMP_Variables( "17" )
--textmacro instance: MMP_Variables( "18" )
--end of: MMP_Variables( "18" )
--textmacro instance: MMP_Variables( "19" )
--end of: MMP_Variables( "19" )

function s__MonsterMultiplePatrols_getId(this)
  return sg__Monster_get_id(this)
end

function s__MonsterMultiplePatrols_setId(this, id)
  if (id == sg__Monster_get_id(this)) then
    return this
  end
  MonsterHashtableSetMonsterId(this, sg__Monster_get_id(this), id)
  sg__Monster_set_id(this, id)
  return this
end

function s__MonsterMultiplePatrols_getCurrentTrigger(this)
  return sg__MonsterMultiplePatrols_get_currentTrigger(this)
end

function s__MonsterMultiplePatrols_removeUnit(this)
  if (sg__Monster_get_u(this) ~= nil) then
    GroupRemoveUnit(monstersClickable, sg__Monster_get_u(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
  end
end

function s__MonsterMultiplePatrols_killUnit(this)
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    KillUnit(sg__Monster_get_u(this))
  end
end

function s__MonsterMultiplePatrols_onDestroy(this)
  while true do
    if (not sc__MonsterMultiplePatrols_destroyLastLoc(this)) then
      break
    end
  end
  if (sg__Monster_get_u(this) ~= nil) then
    s__MonsterMultiplePatrols_removeUnit(this)
  end
  sc__MonsterMultiplePatrolsArray_setMonsterNull(s__Level_monstersMultiplePatrols[sg__Monster_get_level(this)], sg__Monster_get_arrayId(this))
  s__Monster_nbInstances = s__Monster_nbInstances - 1
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (sg__Monster_get_id(this)))
  -- INLINED!!
end

function s__MonsterMultiplePatrols_disableTrigger(this, id)
  --textmacro instance: MMP_disableTrigger( "0"  )
  if (id == 0) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t0(this))
    return
  end
  --end of: MMP_disableTrigger( "0"  )
  --textmacro instance: MMP_disableTrigger( "1"  )
  if (id == 1) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t1(this))
    return
  end
  --end of: MMP_disableTrigger( "1"  )
  --textmacro instance: MMP_disableTrigger( "2"  )
  if (id == 2) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t2(this))
    return
  end
  --end of: MMP_disableTrigger( "2"  )
  --textmacro instance: MMP_disableTrigger( "3"  )
  if (id == 3) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t3(this))
    return
  end
  --end of: MMP_disableTrigger( "3"  )
  --textmacro instance: MMP_disableTrigger( "4"  )
  if (id == 4) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t4(this))
    return
  end
  --end of: MMP_disableTrigger( "4"  )
  --textmacro instance: MMP_disableTrigger( "5"  )
  if (id == 5) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t5(this))
    return
  end
  --end of: MMP_disableTrigger( "5"  )
  --textmacro instance: MMP_disableTrigger( "6"  )
  if (id == 6) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t6(this))
    return
  end
  --end of: MMP_disableTrigger( "6"  )
  --textmacro instance: MMP_disableTrigger( "7"  )
  if (id == 7) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t7(this))
    return
  end
  --end of: MMP_disableTrigger( "7"  )
  --textmacro instance: MMP_disableTrigger( "8"  )
  if (id == 8) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t8(this))
    return
  end
  --end of: MMP_disableTrigger( "8"  )
  --textmacro instance: MMP_disableTrigger( "9"  )
  if (id == 9) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t9(this))
    return
  end
  --end of: MMP_disableTrigger( "9"  )
  --textmacro instance: MMP_disableTrigger( "10" )
  if (id == 10) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t10(this))
    return
  end
  --end of: MMP_disableTrigger( "10" )
  --textmacro instance: MMP_disableTrigger( "11" )
  if (id == 11) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t11(this))
    return
  end
  --end of: MMP_disableTrigger( "11" )
  --textmacro instance: MMP_disableTrigger( "12" )
  if (id == 12) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t12(this))
    return
  end
  --end of: MMP_disableTrigger( "12" )
  --textmacro instance: MMP_disableTrigger( "13" )
  if (id == 13) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t13(this))
    return
  end
  --end of: MMP_disableTrigger( "13" )
  --textmacro instance: MMP_disableTrigger( "14" )
  if (id == 14) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t14(this))
    return
  end
  --end of: MMP_disableTrigger( "14" )
  --textmacro instance: MMP_disableTrigger( "15" )
  if (id == 15) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t15(this))
    return
  end
  --end of: MMP_disableTrigger( "15" )
  --textmacro instance: MMP_disableTrigger( "16" )
  if (id == 16) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t16(this))
    return
  end
  --end of: MMP_disableTrigger( "16" )
  --textmacro instance: MMP_disableTrigger( "17" )
  if (id == 17) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t17(this))
    return
  end
  --end of: MMP_disableTrigger( "17" )
  --textmacro instance: MMP_disableTrigger( "18" )
  if (id == 18) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t18(this))
    return
  end
  --end of: MMP_disableTrigger( "18" )
  --textmacro instance: MMP_disableTrigger( "19" )
  if (id == 19) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t19(this))
    return
  end
  --end of: MMP_disableTrigger( "19" )
end

function s__MonsterMultiplePatrols_activateMove(this, id)
  --textmacro instance: MMP_activateMove( "0"  )
  if (id == 0) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t0(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t0(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x0(this), sg__MonsterMultiplePatrols_get_y0(this))
    return
  end
  --end of: MMP_activateMove( "0"  )
  --textmacro instance: MMP_activateMove( "1"  )
  if (id == 1) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t1(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t1(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x1(this), sg__MonsterMultiplePatrols_get_y1(this))
    return
  end
  --end of: MMP_activateMove( "1"  )
  --textmacro instance: MMP_activateMove( "2"  )
  if (id == 2) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t2(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t2(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x2(this), sg__MonsterMultiplePatrols_get_y2(this))
    return
  end
  --end of: MMP_activateMove( "2"  )
  --textmacro instance: MMP_activateMove( "3"  )
  if (id == 3) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t3(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t3(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x3(this), sg__MonsterMultiplePatrols_get_y3(this))
    return
  end
  --end of: MMP_activateMove( "3"  )
  --textmacro instance: MMP_activateMove( "4"  )
  if (id == 4) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t4(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t4(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x4(this), sg__MonsterMultiplePatrols_get_y4(this))
    return
  end
  --end of: MMP_activateMove( "4"  )
  --textmacro instance: MMP_activateMove( "5"  )
  if (id == 5) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t5(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t5(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x5(this), sg__MonsterMultiplePatrols_get_y5(this))
    return
  end
  --end of: MMP_activateMove( "5"  )
  --textmacro instance: MMP_activateMove( "6"  )
  if (id == 6) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t6(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t6(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x6(this), sg__MonsterMultiplePatrols_get_y6(this))
    return
  end
  --end of: MMP_activateMove( "6"  )
  --textmacro instance: MMP_activateMove( "7"  )
  if (id == 7) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t7(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t7(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x7(this), sg__MonsterMultiplePatrols_get_y7(this))
    return
  end
  --end of: MMP_activateMove( "7"  )
  --textmacro instance: MMP_activateMove( "8"  )
  if (id == 8) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t8(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t8(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x8(this), sg__MonsterMultiplePatrols_get_y8(this))
    return
  end
  --end of: MMP_activateMove( "8"  )
  --textmacro instance: MMP_activateMove( "9"  )
  if (id == 9) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t9(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t9(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x9(this), sg__MonsterMultiplePatrols_get_y9(this))
    return
  end
  --end of: MMP_activateMove( "9"  )
  --textmacro instance: MMP_activateMove( "10" )
  if (id == 10) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t10(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t10(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x10(this), sg__MonsterMultiplePatrols_get_y10(this))
    return
  end
  --end of: MMP_activateMove( "10" )
  --textmacro instance: MMP_activateMove( "11" )
  if (id == 11) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t11(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t11(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x11(this), sg__MonsterMultiplePatrols_get_y11(this))
    return
  end
  --end of: MMP_activateMove( "11" )
  --textmacro instance: MMP_activateMove( "12" )
  if (id == 12) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t12(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t12(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x12(this), sg__MonsterMultiplePatrols_get_y12(this))
    return
  end
  --end of: MMP_activateMove( "12" )
  --textmacro instance: MMP_activateMove( "13" )
  if (id == 13) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t13(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t13(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x13(this), sg__MonsterMultiplePatrols_get_y13(this))
    return
  end
  --end of: MMP_activateMove( "13" )
  --textmacro instance: MMP_activateMove( "14" )
  if (id == 14) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t14(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t14(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x14(this), sg__MonsterMultiplePatrols_get_y14(this))
    return
  end
  --end of: MMP_activateMove( "14" )
  --textmacro instance: MMP_activateMove( "15" )
  if (id == 15) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t15(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t15(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x15(this), sg__MonsterMultiplePatrols_get_y15(this))
    return
  end
  --end of: MMP_activateMove( "15" )
  --textmacro instance: MMP_activateMove( "16" )
  if (id == 16) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t16(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t16(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x16(this), sg__MonsterMultiplePatrols_get_y16(this))
    return
  end
  --end of: MMP_activateMove( "16" )
  --textmacro instance: MMP_activateMove( "17" )
  if (id == 17) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t17(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t17(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x17(this), sg__MonsterMultiplePatrols_get_y17(this))
    return
  end
  --end of: MMP_activateMove( "17" )
  --textmacro instance: MMP_activateMove( "18" )
  if (id == 18) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t18(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t18(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x18(this), sg__MonsterMultiplePatrols_get_y18(this))
    return
  end
  --end of: MMP_activateMove( "18" )
  --textmacro instance: MMP_activateMove( "19" )
  if (id == 19) then
    EnableTrigger(sg__MonsterMultiplePatrols_get_t19(this))
    sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t19(this))
    IssuePointOrder(sg__Monster_get_u(this), "move", sg__MonsterMultiplePatrols_get_x19(this), sg__MonsterMultiplePatrols_get_y19(this))
    return
  end
  --end of: MMP_activateMove( "19" )
end

function s__MonsterMultiplePatrols_nextMove(this)
  s__MonsterMultiplePatrols_disableTrigger(this, sg__MonsterMultiplePatrols_get_currentMove(this))
  if (sg__MonsterMultiplePatrols_get_sens(this) == 0 or sg__MonsterMultiplePatrols_get_sens(this) == 1) then
    if (sg__MonsterMultiplePatrols_get_currentMove(this) >= sg__MonsterMultiplePatrols_get_lastLocInd(this)) then
      if (sg__MonsterMultiplePatrols_get_sens(this) == 0) then
        sg__MonsterMultiplePatrols_set_currentMove(this, 0)
      else
        sg__MonsterMultiplePatrols_set_sens(this, 2)
        sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      end
    else
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) + 1)
    end
  else
    --sens == 2
    if (sg__MonsterMultiplePatrols_get_currentMove(this) <= 0) then
      sg__MonsterMultiplePatrols_set_sens(this, 1)
      sg__MonsterMultiplePatrols_set_currentMove(this, 1)
    else
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
    end
  end
  s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
end

function s__MonsterMultiplePatrols_create(mt, mode)
  --mode == "normal" (0, 1, 2, 3, 0 , 1...) ou mode == "string" (0, 1, 2, 3, 2, 1...)
  local m = nil
  local i = nil

  if (mode ~= "normal" and mode ~= "string") then
    return 0
  end

  m = s__MonsterMultiplePatrols__allocate()
  s__Monster_nbInstances = s__Monster_nbInstances + 1
  sg__Monster_set_mt(m, mt)
  if (mode == "normal") then
    sg__MonsterMultiplePatrols_set_sens(m, 0)
  else
    sg__MonsterMultiplePatrols_set_sens(m, 1)
  end

  --textmacro instance: MMP_create( "0"  )
  if (0 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x0(m, s__s__MonsterMultiplePatrols_X[0])
    sg__MonsterMultiplePatrols_set_y0(m, s__s__MonsterMultiplePatrols_Y[0])
    sg__MonsterMultiplePatrols_set_r0(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x0(m), sg__MonsterMultiplePatrols_get_y0(m)))
    sg__MonsterMultiplePatrols_set_t0(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t0(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t0(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t0(m), sg__MonsterMultiplePatrols_get_r0(m))
  end
  --end of: MMP_create( "0"  )
  --textmacro instance: MMP_create( "1"  )
  if (1 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x1(m, s__s__MonsterMultiplePatrols_X[1])
    sg__MonsterMultiplePatrols_set_y1(m, s__s__MonsterMultiplePatrols_Y[1])
    sg__MonsterMultiplePatrols_set_r1(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x1(m), sg__MonsterMultiplePatrols_get_y1(m)))
    sg__MonsterMultiplePatrols_set_t1(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t1(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t1(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t1(m), sg__MonsterMultiplePatrols_get_r1(m))
  end
  --end of: MMP_create( "1"  )
  --textmacro instance: MMP_create( "2"  )
  if (2 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x2(m, s__s__MonsterMultiplePatrols_X[2])
    sg__MonsterMultiplePatrols_set_y2(m, s__s__MonsterMultiplePatrols_Y[2])
    sg__MonsterMultiplePatrols_set_r2(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x2(m), sg__MonsterMultiplePatrols_get_y2(m)))
    sg__MonsterMultiplePatrols_set_t2(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t2(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t2(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t2(m), sg__MonsterMultiplePatrols_get_r2(m))
  end
  --end of: MMP_create( "2"  )
  --textmacro instance: MMP_create( "3"  )
  if (3 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x3(m, s__s__MonsterMultiplePatrols_X[3])
    sg__MonsterMultiplePatrols_set_y3(m, s__s__MonsterMultiplePatrols_Y[3])
    sg__MonsterMultiplePatrols_set_r3(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x3(m), sg__MonsterMultiplePatrols_get_y3(m)))
    sg__MonsterMultiplePatrols_set_t3(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t3(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t3(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t3(m), sg__MonsterMultiplePatrols_get_r3(m))
  end
  --end of: MMP_create( "3"  )
  --textmacro instance: MMP_create( "4"  )
  if (4 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x4(m, s__s__MonsterMultiplePatrols_X[4])
    sg__MonsterMultiplePatrols_set_y4(m, s__s__MonsterMultiplePatrols_Y[4])
    sg__MonsterMultiplePatrols_set_r4(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x4(m), sg__MonsterMultiplePatrols_get_y4(m)))
    sg__MonsterMultiplePatrols_set_t4(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t4(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t4(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t4(m), sg__MonsterMultiplePatrols_get_r4(m))
  end
  --end of: MMP_create( "4"  )
  --textmacro instance: MMP_create( "5"  )
  if (5 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x5(m, s__s__MonsterMultiplePatrols_X[5])
    sg__MonsterMultiplePatrols_set_y5(m, s__s__MonsterMultiplePatrols_Y[5])
    sg__MonsterMultiplePatrols_set_r5(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x5(m), sg__MonsterMultiplePatrols_get_y5(m)))
    sg__MonsterMultiplePatrols_set_t5(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t5(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t5(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t5(m), sg__MonsterMultiplePatrols_get_r5(m))
  end
  --end of: MMP_create( "5"  )
  --textmacro instance: MMP_create( "6"  )
  if (6 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x6(m, s__s__MonsterMultiplePatrols_X[6])
    sg__MonsterMultiplePatrols_set_y6(m, s__s__MonsterMultiplePatrols_Y[6])
    sg__MonsterMultiplePatrols_set_r6(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x6(m), sg__MonsterMultiplePatrols_get_y6(m)))
    sg__MonsterMultiplePatrols_set_t6(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t6(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t6(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t6(m), sg__MonsterMultiplePatrols_get_r6(m))
  end
  --end of: MMP_create( "6"  )
  --textmacro instance: MMP_create( "7"  )
  if (7 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x7(m, s__s__MonsterMultiplePatrols_X[7])
    sg__MonsterMultiplePatrols_set_y7(m, s__s__MonsterMultiplePatrols_Y[7])
    sg__MonsterMultiplePatrols_set_r7(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x7(m), sg__MonsterMultiplePatrols_get_y7(m)))
    sg__MonsterMultiplePatrols_set_t7(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t7(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t7(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t7(m), sg__MonsterMultiplePatrols_get_r7(m))
  end
  --end of: MMP_create( "7"  )
  --textmacro instance: MMP_create( "8"  )
  if (8 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x8(m, s__s__MonsterMultiplePatrols_X[8])
    sg__MonsterMultiplePatrols_set_y8(m, s__s__MonsterMultiplePatrols_Y[8])
    sg__MonsterMultiplePatrols_set_r8(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x8(m), sg__MonsterMultiplePatrols_get_y8(m)))
    sg__MonsterMultiplePatrols_set_t8(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t8(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t8(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t8(m), sg__MonsterMultiplePatrols_get_r8(m))
  end
  --end of: MMP_create( "8"  )
  --textmacro instance: MMP_create( "9"  )
  if (9 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x9(m, s__s__MonsterMultiplePatrols_X[9])
    sg__MonsterMultiplePatrols_set_y9(m, s__s__MonsterMultiplePatrols_Y[9])
    sg__MonsterMultiplePatrols_set_r9(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x9(m), sg__MonsterMultiplePatrols_get_y9(m)))
    sg__MonsterMultiplePatrols_set_t9(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t9(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t9(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t9(m), sg__MonsterMultiplePatrols_get_r9(m))
  end
  --end of: MMP_create( "9"  )
  --textmacro instance: MMP_create( "10" )
  if (10 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x10(m, s__s__MonsterMultiplePatrols_X[10])
    sg__MonsterMultiplePatrols_set_y10(m, s__s__MonsterMultiplePatrols_Y[10])
    sg__MonsterMultiplePatrols_set_r10(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x10(m), sg__MonsterMultiplePatrols_get_y10(m)))
    sg__MonsterMultiplePatrols_set_t10(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t10(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t10(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t10(m), sg__MonsterMultiplePatrols_get_r10(m))
  end
  --end of: MMP_create( "10" )
  --textmacro instance: MMP_create( "11" )
  if (11 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x11(m, s__s__MonsterMultiplePatrols_X[11])
    sg__MonsterMultiplePatrols_set_y11(m, s__s__MonsterMultiplePatrols_Y[11])
    sg__MonsterMultiplePatrols_set_r11(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x11(m), sg__MonsterMultiplePatrols_get_y11(m)))
    sg__MonsterMultiplePatrols_set_t11(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t11(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t11(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t11(m), sg__MonsterMultiplePatrols_get_r11(m))
  end
  --end of: MMP_create( "11" )
  --textmacro instance: MMP_create( "12" )
  if (12 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x12(m, s__s__MonsterMultiplePatrols_X[12])
    sg__MonsterMultiplePatrols_set_y12(m, s__s__MonsterMultiplePatrols_Y[12])
    sg__MonsterMultiplePatrols_set_r12(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x12(m), sg__MonsterMultiplePatrols_get_y12(m)))
    sg__MonsterMultiplePatrols_set_t12(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t12(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t12(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t12(m), sg__MonsterMultiplePatrols_get_r12(m))
  end
  --end of: MMP_create( "12" )
  --textmacro instance: MMP_create( "13" )
  if (13 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x13(m, s__s__MonsterMultiplePatrols_X[13])
    sg__MonsterMultiplePatrols_set_y13(m, s__s__MonsterMultiplePatrols_Y[13])
    sg__MonsterMultiplePatrols_set_r13(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x13(m), sg__MonsterMultiplePatrols_get_y13(m)))
    sg__MonsterMultiplePatrols_set_t13(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t13(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t13(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t13(m), sg__MonsterMultiplePatrols_get_r13(m))
  end
  --end of: MMP_create( "13" )
  --textmacro instance: MMP_create( "14" )
  if (14 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x14(m, s__s__MonsterMultiplePatrols_X[14])
    sg__MonsterMultiplePatrols_set_y14(m, s__s__MonsterMultiplePatrols_Y[14])
    sg__MonsterMultiplePatrols_set_r14(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x14(m), sg__MonsterMultiplePatrols_get_y14(m)))
    sg__MonsterMultiplePatrols_set_t14(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t14(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t14(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t14(m), sg__MonsterMultiplePatrols_get_r14(m))
  end
  --end of: MMP_create( "14" )
  --textmacro instance: MMP_create( "15" )
  if (15 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x15(m, s__s__MonsterMultiplePatrols_X[15])
    sg__MonsterMultiplePatrols_set_y15(m, s__s__MonsterMultiplePatrols_Y[15])
    sg__MonsterMultiplePatrols_set_r15(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x15(m), sg__MonsterMultiplePatrols_get_y15(m)))
    sg__MonsterMultiplePatrols_set_t15(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t15(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t15(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t15(m), sg__MonsterMultiplePatrols_get_r15(m))
  end
  --end of: MMP_create( "15" )
  --textmacro instance: MMP_create( "16" )
  if (16 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x16(m, s__s__MonsterMultiplePatrols_X[16])
    sg__MonsterMultiplePatrols_set_y16(m, s__s__MonsterMultiplePatrols_Y[16])
    sg__MonsterMultiplePatrols_set_r16(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x16(m), sg__MonsterMultiplePatrols_get_y16(m)))
    sg__MonsterMultiplePatrols_set_t16(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t16(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t16(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t16(m), sg__MonsterMultiplePatrols_get_r16(m))
  end
  --end of: MMP_create( "16" )
  --textmacro instance: MMP_create( "17" )
  if (17 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x17(m, s__s__MonsterMultiplePatrols_X[17])
    sg__MonsterMultiplePatrols_set_y17(m, s__s__MonsterMultiplePatrols_Y[17])
    sg__MonsterMultiplePatrols_set_r17(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x17(m), sg__MonsterMultiplePatrols_get_y17(m)))
    sg__MonsterMultiplePatrols_set_t17(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t17(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t17(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t17(m), sg__MonsterMultiplePatrols_get_r17(m))
  end
  --end of: MMP_create( "17" )
  --textmacro instance: MMP_create( "18" )
  if (18 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x18(m, s__s__MonsterMultiplePatrols_X[18])
    sg__MonsterMultiplePatrols_set_y18(m, s__s__MonsterMultiplePatrols_Y[18])
    sg__MonsterMultiplePatrols_set_r18(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x18(m), sg__MonsterMultiplePatrols_get_y18(m)))
    sg__MonsterMultiplePatrols_set_t18(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t18(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t18(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t18(m), sg__MonsterMultiplePatrols_get_r18(m))
  end
  --end of: MMP_create( "18" )
  --textmacro instance: MMP_create( "19" )
  if (19 <= s__MonsterMultiplePatrols_staticLastLocInd) then
    sg__MonsterMultiplePatrols_set_x19(m, s__s__MonsterMultiplePatrols_X[19])
    sg__MonsterMultiplePatrols_set_y19(m, s__s__MonsterMultiplePatrols_Y[19])
    sg__MonsterMultiplePatrols_set_r19(m, MonsterMultiplePatrols__NewRegion(sg__MonsterMultiplePatrols_get_x19(m), sg__MonsterMultiplePatrols_get_y19(m)))
    sg__MonsterMultiplePatrols_set_t19(m, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t19(m))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t19(m), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t19(m), sg__MonsterMultiplePatrols_get_r19(m))
  end
  --end of: MMP_create( "19" )

  sg__MonsterMultiplePatrols_set_lastLocInd(m, s__MonsterMultiplePatrols_staticLastLocInd)
  --call Text_A("test, lastLocInd == " + I2S(m.lastLocInd))
  sg__MonsterMultiplePatrols_set_currentMove(m, -1)
  s__MonsterMultiplePatrols_staticLastLocInd = -1
  -- INLINED!!
  sg__Monster_set_life(m, 0)
  sg__Monster_set_id(m, GetNextMonsterId())
  MonsterHashtableSetMonsterId(m, NO_ID, sg__Monster_get_id(m))
  sg__Monster_set_disablingTimer(m, nil)
  --color
  sg__Monster_set_baseColorId(m, -1)
  sg__Monster_set_vcRed(m, 100)
  sg__Monster_set_vcGreen(m, 100)
  sg__Monster_set_vcBlue(m, 100)
  sg__Monster_set_vcTransparency(m, 0)
  return m
end

function s__MonsterMultiplePatrols_createUnit(this)
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Monster_get_disablingTimer(this)
  local previouslyEnabled = sg__Monster_get_u(this) ~= nil
  local isMonsterAlive = IsUnitAliveBJ(sg__Monster_get_u(this))
  if (previouslyEnabled) then
    s__MonsterMultiplePatrols_removeUnit(this)
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) <= 0) then
    return
  end
  sg__Monster_set_u(this, NewPatrolMonster(sg__Monster_get_mt(this), sg__MonsterMultiplePatrols_get_x0(this), sg__MonsterMultiplePatrols_get_y0(this), sg__MonsterMultiplePatrols_get_x1(this), sg__MonsterMultiplePatrols_get_y1(this)))
  SetUnitUserData(sg__Monster_get_u(this), sg__Monster_get_id(this))
  sg__MonsterMultiplePatrols_set_currentMove(this, 1)
  if (sg__MonsterMultiplePatrols_get_sens(this) == 2) then
    sg__MonsterMultiplePatrols_set_sens(this, 1)
  end
  EnableTrigger(sg__MonsterMultiplePatrols_get_t1(this))
  sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t1(this))
  if ((s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
    -- INLINED!!
    sg__Monster_set_life(this, (s__MonsterType_maxLife[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    GroupAddUnit(monstersClickable, sg__Monster_get_u(this))
  end
  if (previouslyEnabled) then
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__MonsterMultiplePatrols_temporarilyDisable(this, disablingTimer)
    end
    if (not isMonsterAlive) then
      s__MonsterMultiplePatrols_killUnit(this)
    end
    if (sg__Monster_get_baseColorId(this) ~= -1) then
      if (sg__Monster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(sg__Monster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
end

function s__MonsterMultiplePatrols_getLife(this)
  return sg__Monster_get_life(this)
end

function s__MonsterMultiplePatrols_setLife(this, life)
  sg__Monster_set_life(this, life)
  if (life > 0) then
    SetUnitLifeBJ(sg__Monster_get_u(this), I2R(life) - 0.5)
  else
    s__MonsterMultiplePatrols_killUnit(this)
  end
end

function s__MonsterMultiplePatrols_getX(this, id)
  --textmacro instance: MMP_getX( "0"  )
  if (id == 0) then
    return sg__MonsterMultiplePatrols_get_x0(this)
  end
  --end of: MMP_getX( "0"  )
  --textmacro instance: MMP_getX( "1"  )
  if (id == 1) then
    return sg__MonsterMultiplePatrols_get_x1(this)
  end
  --end of: MMP_getX( "1"  )
  --textmacro instance: MMP_getX( "2"  )
  if (id == 2) then
    return sg__MonsterMultiplePatrols_get_x2(this)
  end
  --end of: MMP_getX( "2"  )
  --textmacro instance: MMP_getX( "3"  )
  if (id == 3) then
    return sg__MonsterMultiplePatrols_get_x3(this)
  end
  --end of: MMP_getX( "3"  )
  --textmacro instance: MMP_getX( "4"  )
  if (id == 4) then
    return sg__MonsterMultiplePatrols_get_x4(this)
  end
  --end of: MMP_getX( "4"  )
  --textmacro instance: MMP_getX( "5"  )
  if (id == 5) then
    return sg__MonsterMultiplePatrols_get_x5(this)
  end
  --end of: MMP_getX( "5"  )
  --textmacro instance: MMP_getX( "6"  )
  if (id == 6) then
    return sg__MonsterMultiplePatrols_get_x6(this)
  end
  --end of: MMP_getX( "6"  )
  --textmacro instance: MMP_getX( "7"  )
  if (id == 7) then
    return sg__MonsterMultiplePatrols_get_x7(this)
  end
  --end of: MMP_getX( "7"  )
  --textmacro instance: MMP_getX( "8"  )
  if (id == 8) then
    return sg__MonsterMultiplePatrols_get_x8(this)
  end
  --end of: MMP_getX( "8"  )
  --textmacro instance: MMP_getX( "9"  )
  if (id == 9) then
    return sg__MonsterMultiplePatrols_get_x9(this)
  end
  --end of: MMP_getX( "9"  )
  --textmacro instance: MMP_getX( "10" )
  if (id == 10) then
    return sg__MonsterMultiplePatrols_get_x10(this)
  end
  --end of: MMP_getX( "10" )
  --textmacro instance: MMP_getX( "11" )
  if (id == 11) then
    return sg__MonsterMultiplePatrols_get_x11(this)
  end
  --end of: MMP_getX( "11" )
  --textmacro instance: MMP_getX( "12" )
  if (id == 12) then
    return sg__MonsterMultiplePatrols_get_x12(this)
  end
  --end of: MMP_getX( "12" )
  --textmacro instance: MMP_getX( "13" )
  if (id == 13) then
    return sg__MonsterMultiplePatrols_get_x13(this)
  end
  --end of: MMP_getX( "13" )
  --textmacro instance: MMP_getX( "14" )
  if (id == 14) then
    return sg__MonsterMultiplePatrols_get_x14(this)
  end
  --end of: MMP_getX( "14" )
  --textmacro instance: MMP_getX( "15" )
  if (id == 15) then
    return sg__MonsterMultiplePatrols_get_x15(this)
  end
  --end of: MMP_getX( "15" )
  --textmacro instance: MMP_getX( "16" )
  if (id == 16) then
    return sg__MonsterMultiplePatrols_get_x16(this)
  end
  --end of: MMP_getX( "16" )
  --textmacro instance: MMP_getX( "17" )
  if (id == 17) then
    return sg__MonsterMultiplePatrols_get_x17(this)
  end
  --end of: MMP_getX( "17" )
  --textmacro instance: MMP_getX( "18" )
  if (id == 18) then
    return sg__MonsterMultiplePatrols_get_x18(this)
  end
  --end of: MMP_getX( "18" )
  --textmacro instance: MMP_getX( "19" )
  if (id == 19) then
    return sg__MonsterMultiplePatrols_get_x19(this)
  end
  --end of: MMP_getX( "19" )
  return 0
end

function s__MonsterMultiplePatrols_getY(this, id)
  --textmacro instance: MMP_getY( "0"  )
  if (id == 0) then
    return sg__MonsterMultiplePatrols_get_y0(this)
  end
  --end of: MMP_getY( "0"  )
  --textmacro instance: MMP_getY( "1"  )
  if (id == 1) then
    return sg__MonsterMultiplePatrols_get_y1(this)
  end
  --end of: MMP_getY( "1"  )
  --textmacro instance: MMP_getY( "2"  )
  if (id == 2) then
    return sg__MonsterMultiplePatrols_get_y2(this)
  end
  --end of: MMP_getY( "2"  )
  --textmacro instance: MMP_getY( "3"  )
  if (id == 3) then
    return sg__MonsterMultiplePatrols_get_y3(this)
  end
  --end of: MMP_getY( "3"  )
  --textmacro instance: MMP_getY( "4"  )
  if (id == 4) then
    return sg__MonsterMultiplePatrols_get_y4(this)
  end
  --end of: MMP_getY( "4"  )
  --textmacro instance: MMP_getY( "5"  )
  if (id == 5) then
    return sg__MonsterMultiplePatrols_get_y5(this)
  end
  --end of: MMP_getY( "5"  )
  --textmacro instance: MMP_getY( "6"  )
  if (id == 6) then
    return sg__MonsterMultiplePatrols_get_y6(this)
  end
  --end of: MMP_getY( "6"  )
  --textmacro instance: MMP_getY( "7"  )
  if (id == 7) then
    return sg__MonsterMultiplePatrols_get_y7(this)
  end
  --end of: MMP_getY( "7"  )
  --textmacro instance: MMP_getY( "8"  )
  if (id == 8) then
    return sg__MonsterMultiplePatrols_get_y8(this)
  end
  --end of: MMP_getY( "8"  )
  --textmacro instance: MMP_getY( "9"  )
  if (id == 9) then
    return sg__MonsterMultiplePatrols_get_y9(this)
  end
  --end of: MMP_getY( "9"  )
  --textmacro instance: MMP_getY( "10" )
  if (id == 10) then
    return sg__MonsterMultiplePatrols_get_y10(this)
  end
  --end of: MMP_getY( "10" )
  --textmacro instance: MMP_getY( "11" )
  if (id == 11) then
    return sg__MonsterMultiplePatrols_get_y11(this)
  end
  --end of: MMP_getY( "11" )
  --textmacro instance: MMP_getY( "12" )
  if (id == 12) then
    return sg__MonsterMultiplePatrols_get_y12(this)
  end
  --end of: MMP_getY( "12" )
  --textmacro instance: MMP_getY( "13" )
  if (id == 13) then
    return sg__MonsterMultiplePatrols_get_y13(this)
  end
  --end of: MMP_getY( "13" )
  --textmacro instance: MMP_getY( "14" )
  if (id == 14) then
    return sg__MonsterMultiplePatrols_get_y14(this)
  end
  --end of: MMP_getY( "14" )
  --textmacro instance: MMP_getY( "15" )
  if (id == 15) then
    return sg__MonsterMultiplePatrols_get_y15(this)
  end
  --end of: MMP_getY( "15" )
  --textmacro instance: MMP_getY( "16" )
  if (id == 16) then
    return sg__MonsterMultiplePatrols_get_y16(this)
  end
  --end of: MMP_getY( "16" )
  --textmacro instance: MMP_getY( "17" )
  if (id == 17) then
    return sg__MonsterMultiplePatrols_get_y17(this)
  end
  --end of: MMP_getY( "17" )
  --textmacro instance: MMP_getY( "18" )
  if (id == 18) then
    return sg__MonsterMultiplePatrols_get_y18(this)
  end
  --end of: MMP_getY( "18" )
  --textmacro instance: MMP_getY( "19" )
  if (id == 19) then
    return sg__MonsterMultiplePatrols_get_y19(this)
  end
  --end of: MMP_getY( "19" )
  return 0
end

function s__MonsterMultiplePatrols_destroyLastLoc(this)
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 1) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t0(this))
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t1(this))
    sg__MonsterMultiplePatrols_set_t1(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r1(this))
    sg__MonsterMultiplePatrols_set_r1(this, nil)
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
  end
  --textmacro instance: MMP_destroyLastLoc( "0"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 0) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t0(this))
    sg__MonsterMultiplePatrols_set_t0(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r0(this))
    sg__MonsterMultiplePatrols_set_r0(this, nil)
    if (0 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "0"  )
  --textmacro instance: MMP_destroyLastLoc( "2"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 2) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t2(this))
    sg__MonsterMultiplePatrols_set_t2(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r2(this))
    sg__MonsterMultiplePatrols_set_r2(this, nil)
    if (2 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "2"  )
  --textmacro instance: MMP_destroyLastLoc( "3"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 3) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t3(this))
    sg__MonsterMultiplePatrols_set_t3(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r3(this))
    sg__MonsterMultiplePatrols_set_r3(this, nil)
    if (3 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "3"  )
  --textmacro instance: MMP_destroyLastLoc( "4"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 4) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t4(this))
    sg__MonsterMultiplePatrols_set_t4(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r4(this))
    sg__MonsterMultiplePatrols_set_r4(this, nil)
    if (4 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "4"  )
  --textmacro instance: MMP_destroyLastLoc( "5"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 5) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t5(this))
    sg__MonsterMultiplePatrols_set_t5(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r5(this))
    sg__MonsterMultiplePatrols_set_r5(this, nil)
    if (5 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "5"  )
  --textmacro instance: MMP_destroyLastLoc( "6"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 6) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t6(this))
    sg__MonsterMultiplePatrols_set_t6(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r6(this))
    sg__MonsterMultiplePatrols_set_r6(this, nil)
    if (6 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "6"  )
  --textmacro instance: MMP_destroyLastLoc( "7"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 7) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t7(this))
    sg__MonsterMultiplePatrols_set_t7(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r7(this))
    sg__MonsterMultiplePatrols_set_r7(this, nil)
    if (7 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "7"  )
  --textmacro instance: MMP_destroyLastLoc( "8"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 8) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t8(this))
    sg__MonsterMultiplePatrols_set_t8(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r8(this))
    sg__MonsterMultiplePatrols_set_r8(this, nil)
    if (8 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "8"  )
  --textmacro instance: MMP_destroyLastLoc( "9"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 9) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t9(this))
    sg__MonsterMultiplePatrols_set_t9(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r9(this))
    sg__MonsterMultiplePatrols_set_r9(this, nil)
    if (9 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "9"  )
  --textmacro instance: MMP_destroyLastLoc( "10" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 10) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t10(this))
    sg__MonsterMultiplePatrols_set_t10(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r10(this))
    sg__MonsterMultiplePatrols_set_r10(this, nil)
    if (10 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "10" )
  --textmacro instance: MMP_destroyLastLoc( "11" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 11) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t11(this))
    sg__MonsterMultiplePatrols_set_t11(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r11(this))
    sg__MonsterMultiplePatrols_set_r11(this, nil)
    if (11 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "11" )
  --textmacro instance: MMP_destroyLastLoc( "12" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 12) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t12(this))
    sg__MonsterMultiplePatrols_set_t12(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r12(this))
    sg__MonsterMultiplePatrols_set_r12(this, nil)
    if (12 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "12" )
  --textmacro instance: MMP_destroyLastLoc( "13" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 13) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t13(this))
    sg__MonsterMultiplePatrols_set_t13(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r13(this))
    sg__MonsterMultiplePatrols_set_r13(this, nil)
    if (13 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "13" )
  --textmacro instance: MMP_destroyLastLoc( "14" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 14) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t14(this))
    sg__MonsterMultiplePatrols_set_t14(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r14(this))
    sg__MonsterMultiplePatrols_set_r14(this, nil)
    if (14 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "14" )
  --textmacro instance: MMP_destroyLastLoc( "15" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 15) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t15(this))
    sg__MonsterMultiplePatrols_set_t15(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r15(this))
    sg__MonsterMultiplePatrols_set_r15(this, nil)
    if (15 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "15" )
  --textmacro instance: MMP_destroyLastLoc( "16" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 16) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t16(this))
    sg__MonsterMultiplePatrols_set_t16(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r16(this))
    sg__MonsterMultiplePatrols_set_r16(this, nil)
    if (16 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "16" )
  --textmacro instance: MMP_destroyLastLoc( "17" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 17) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t17(this))
    sg__MonsterMultiplePatrols_set_t17(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r17(this))
    sg__MonsterMultiplePatrols_set_r17(this, nil)
    if (17 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "17" )
  --textmacro instance: MMP_destroyLastLoc( "18" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 18) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t18(this))
    sg__MonsterMultiplePatrols_set_t18(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r18(this))
    sg__MonsterMultiplePatrols_set_r18(this, nil)
    if (18 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "18" )
  --textmacro instance: MMP_destroyLastLoc( "19" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 19) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t19(this))
    sg__MonsterMultiplePatrols_set_t19(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r19(this))
    sg__MonsterMultiplePatrols_set_r19(this, nil)
    if (19 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  --end of: MMP_destroyLastLoc( "19" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 0) then
    return false
  end
  sg__MonsterMultiplePatrols_set_lastLocInd(this, sg__MonsterMultiplePatrols_get_lastLocInd(this) - 1)
  return true
end

function s__MonsterMultiplePatrols_addNewLocAt(this, id, x, l__y)
  --textmacro instance: MMP_addNewLocAt( "0"  )
  if (id == 0) then
    sg__MonsterMultiplePatrols_set_x0(this, x)
    sg__MonsterMultiplePatrols_set_y0(this, l__y)
    sg__MonsterMultiplePatrols_set_r0(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t0(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t0(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t0(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t0(this), sg__MonsterMultiplePatrols_get_r0(this))
    return
  end
  --end of: MMP_addNewLocAt( "0"  )
  --textmacro instance: MMP_addNewLocAt( "1"  )
  if (id == 1) then
    sg__MonsterMultiplePatrols_set_x1(this, x)
    sg__MonsterMultiplePatrols_set_y1(this, l__y)
    sg__MonsterMultiplePatrols_set_r1(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t1(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t1(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t1(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t1(this), sg__MonsterMultiplePatrols_get_r1(this))
    return
  end
  --end of: MMP_addNewLocAt( "1"  )
  --textmacro instance: MMP_addNewLocAt( "2"  )
  if (id == 2) then
    sg__MonsterMultiplePatrols_set_x2(this, x)
    sg__MonsterMultiplePatrols_set_y2(this, l__y)
    sg__MonsterMultiplePatrols_set_r2(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t2(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t2(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t2(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t2(this), sg__MonsterMultiplePatrols_get_r2(this))
    return
  end
  --end of: MMP_addNewLocAt( "2"  )
  --textmacro instance: MMP_addNewLocAt( "3"  )
  if (id == 3) then
    sg__MonsterMultiplePatrols_set_x3(this, x)
    sg__MonsterMultiplePatrols_set_y3(this, l__y)
    sg__MonsterMultiplePatrols_set_r3(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t3(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t3(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t3(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t3(this), sg__MonsterMultiplePatrols_get_r3(this))
    return
  end
  --end of: MMP_addNewLocAt( "3"  )
  --textmacro instance: MMP_addNewLocAt( "4"  )
  if (id == 4) then
    sg__MonsterMultiplePatrols_set_x4(this, x)
    sg__MonsterMultiplePatrols_set_y4(this, l__y)
    sg__MonsterMultiplePatrols_set_r4(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t4(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t4(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t4(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t4(this), sg__MonsterMultiplePatrols_get_r4(this))
    return
  end
  --end of: MMP_addNewLocAt( "4"  )
  --textmacro instance: MMP_addNewLocAt( "5"  )
  if (id == 5) then
    sg__MonsterMultiplePatrols_set_x5(this, x)
    sg__MonsterMultiplePatrols_set_y5(this, l__y)
    sg__MonsterMultiplePatrols_set_r5(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t5(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t5(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t5(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t5(this), sg__MonsterMultiplePatrols_get_r5(this))
    return
  end
  --end of: MMP_addNewLocAt( "5"  )
  --textmacro instance: MMP_addNewLocAt( "6"  )
  if (id == 6) then
    sg__MonsterMultiplePatrols_set_x6(this, x)
    sg__MonsterMultiplePatrols_set_y6(this, l__y)
    sg__MonsterMultiplePatrols_set_r6(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t6(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t6(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t6(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t6(this), sg__MonsterMultiplePatrols_get_r6(this))
    return
  end
  --end of: MMP_addNewLocAt( "6"  )
  --textmacro instance: MMP_addNewLocAt( "7"  )
  if (id == 7) then
    sg__MonsterMultiplePatrols_set_x7(this, x)
    sg__MonsterMultiplePatrols_set_y7(this, l__y)
    sg__MonsterMultiplePatrols_set_r7(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t7(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t7(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t7(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t7(this), sg__MonsterMultiplePatrols_get_r7(this))
    return
  end
  --end of: MMP_addNewLocAt( "7"  )
  --textmacro instance: MMP_addNewLocAt( "8"  )
  if (id == 8) then
    sg__MonsterMultiplePatrols_set_x8(this, x)
    sg__MonsterMultiplePatrols_set_y8(this, l__y)
    sg__MonsterMultiplePatrols_set_r8(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t8(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t8(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t8(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t8(this), sg__MonsterMultiplePatrols_get_r8(this))
    return
  end
  --end of: MMP_addNewLocAt( "8"  )
  --textmacro instance: MMP_addNewLocAt( "9"  )
  if (id == 9) then
    sg__MonsterMultiplePatrols_set_x9(this, x)
    sg__MonsterMultiplePatrols_set_y9(this, l__y)
    sg__MonsterMultiplePatrols_set_r9(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t9(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t9(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t9(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t9(this), sg__MonsterMultiplePatrols_get_r9(this))
    return
  end
  --end of: MMP_addNewLocAt( "9"  )
  --textmacro instance: MMP_addNewLocAt( "10" )
  if (id == 10) then
    sg__MonsterMultiplePatrols_set_x10(this, x)
    sg__MonsterMultiplePatrols_set_y10(this, l__y)
    sg__MonsterMultiplePatrols_set_r10(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t10(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t10(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t10(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t10(this), sg__MonsterMultiplePatrols_get_r10(this))
    return
  end
  --end of: MMP_addNewLocAt( "10" )
  --textmacro instance: MMP_addNewLocAt( "11" )
  if (id == 11) then
    sg__MonsterMultiplePatrols_set_x11(this, x)
    sg__MonsterMultiplePatrols_set_y11(this, l__y)
    sg__MonsterMultiplePatrols_set_r11(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t11(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t11(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t11(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t11(this), sg__MonsterMultiplePatrols_get_r11(this))
    return
  end
  --end of: MMP_addNewLocAt( "11" )
  --textmacro instance: MMP_addNewLocAt( "12" )
  if (id == 12) then
    sg__MonsterMultiplePatrols_set_x12(this, x)
    sg__MonsterMultiplePatrols_set_y12(this, l__y)
    sg__MonsterMultiplePatrols_set_r12(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t12(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t12(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t12(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t12(this), sg__MonsterMultiplePatrols_get_r12(this))
    return
  end
  --end of: MMP_addNewLocAt( "12" )
  --textmacro instance: MMP_addNewLocAt( "13" )
  if (id == 13) then
    sg__MonsterMultiplePatrols_set_x13(this, x)
    sg__MonsterMultiplePatrols_set_y13(this, l__y)
    sg__MonsterMultiplePatrols_set_r13(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t13(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t13(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t13(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t13(this), sg__MonsterMultiplePatrols_get_r13(this))
    return
  end
  --end of: MMP_addNewLocAt( "13" )
  --textmacro instance: MMP_addNewLocAt( "14" )
  if (id == 14) then
    sg__MonsterMultiplePatrols_set_x14(this, x)
    sg__MonsterMultiplePatrols_set_y14(this, l__y)
    sg__MonsterMultiplePatrols_set_r14(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t14(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t14(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t14(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t14(this), sg__MonsterMultiplePatrols_get_r14(this))
    return
  end
  --end of: MMP_addNewLocAt( "14" )
  --textmacro instance: MMP_addNewLocAt( "15" )
  if (id == 15) then
    sg__MonsterMultiplePatrols_set_x15(this, x)
    sg__MonsterMultiplePatrols_set_y15(this, l__y)
    sg__MonsterMultiplePatrols_set_r15(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t15(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t15(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t15(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t15(this), sg__MonsterMultiplePatrols_get_r15(this))
    return
  end
  --end of: MMP_addNewLocAt( "15" )
  --textmacro instance: MMP_addNewLocAt( "16" )
  if (id == 16) then
    sg__MonsterMultiplePatrols_set_x16(this, x)
    sg__MonsterMultiplePatrols_set_y16(this, l__y)
    sg__MonsterMultiplePatrols_set_r16(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t16(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t16(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t16(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t16(this), sg__MonsterMultiplePatrols_get_r16(this))
    return
  end
  --end of: MMP_addNewLocAt( "16" )
  --textmacro instance: MMP_addNewLocAt( "17" )
  if (id == 17) then
    sg__MonsterMultiplePatrols_set_x17(this, x)
    sg__MonsterMultiplePatrols_set_y17(this, l__y)
    sg__MonsterMultiplePatrols_set_r17(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t17(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t17(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t17(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t17(this), sg__MonsterMultiplePatrols_get_r17(this))
    return
  end
  --end of: MMP_addNewLocAt( "17" )
  --textmacro instance: MMP_addNewLocAt( "18" )
  if (id == 18) then
    sg__MonsterMultiplePatrols_set_x18(this, x)
    sg__MonsterMultiplePatrols_set_y18(this, l__y)
    sg__MonsterMultiplePatrols_set_r18(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t18(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t18(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t18(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t18(this), sg__MonsterMultiplePatrols_get_r18(this))
    return
  end
  --end of: MMP_addNewLocAt( "18" )
  --textmacro instance: MMP_addNewLocAt( "19" )
  if (id == 19) then
    sg__MonsterMultiplePatrols_set_x19(this, x)
    sg__MonsterMultiplePatrols_set_y19(this, l__y)
    sg__MonsterMultiplePatrols_set_r19(this, MonsterMultiplePatrols__NewRegion(x, l__y))
    sg__MonsterMultiplePatrols_set_t19(this, CreateTrigger())
    DisableTrigger(sg__MonsterMultiplePatrols_get_t19(this))
    TriggerAddAction(sg__MonsterMultiplePatrols_get_t19(this), MonsterMultiplePatrols_move_Actions)
    TriggerRegisterEnterRegionSimple(sg__MonsterMultiplePatrols_get_t19(this), sg__MonsterMultiplePatrols_get_r19(this))
    return
  end
  --end of: MMP_addNewLocAt( "19" )
end

function s__MonsterMultiplePatrols_addNewLoc(this, x, l__y)
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) >= s__MonsterMultiplePatrols_NB_MAX_LOC - 1) then
    --nombre limite de points atteint
    return 3
    --erreur 3
  end
  if (GetLocDist(s__MonsterMultiplePatrols_getX(this, sg__MonsterMultiplePatrols_get_lastLocInd(this)), s__MonsterMultiplePatrols_getY(this, sg__MonsterMultiplePatrols_get_lastLocInd(this)), x, l__y) <= PATROL_DISTANCE_MIN) then
    return 2
    --erreur 2
  end
  if (sg__MonsterMultiplePatrols_get_sens(this) == 0 and GetLocDist(sg__MonsterMultiplePatrols_get_x0(this), sg__MonsterMultiplePatrols_get_y0(this), x, l__y) <= PATROL_DISTANCE_MIN) then
    return 1
    --erreur 1
  end
  sg__MonsterMultiplePatrols_set_lastLocInd(this, sg__MonsterMultiplePatrols_get_lastLocInd(this) + 1)
  s__MonsterMultiplePatrols_addNewLocAt(this, sg__MonsterMultiplePatrols_get_lastLocInd(this), x, l__y)
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 1) then
    s__MonsterMultiplePatrols_createUnit(this)
  end
  return 0
  --c'est bon, pas d'erreur
end

function s__MonsterMultiplePatrols_getMonsterType(this)
  return sg__Monster_get_mt(this)
end

function s__MonsterMultiplePatrols_setMonsterType(this, mt)
  if (mt == 0 or mt == sg__Monster_get_mt(this)) then
    return false
  end
  sg__Monster_set_mt(this, mt)
  s__MonsterMultiplePatrols_createUnit(this)
  return true
end

function s__MonsterMultiplePatrols_temporarilyDisable(this, disablingTimer)
  if (sg__Monster_get_disablingTimer(this) == nil or sg__Monster_get_disablingTimer(this) == disablingTimer or TimerGetRemaining(disablingTimer) > TimerGetRemaining(sg__Monster_get_disablingTimer(this))) then
    sg__Monster_set_disablingTimer(this, disablingTimer)
    UnitRemoveAbility(sg__Monster_get_u(this), (s__MonsterType_immolationSkill[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), DISABLE_TRANSPARENCY)
    sg__Monster_set_vcTransparency(this, DISABLE_TRANSPARENCY)
  end
end

function s__MonsterMultiplePatrols_temporarilyEnable(this, disablingTimer)
  if (sg__Monster_get_disablingTimer(this) == disablingTimer) then
    --on ne réactive le mob que si le disablingTimer correspond bien au bon, celui restant le plus longtemps
    UnitAddAbility(sg__Monster_get_u(this), (s__MonsterType_immolationSkill[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), 0)
    sg__Monster_set_vcTransparency(this, 0)
  end
end

function s__MonsterMultiplePatrols_setBaseColor(this, colorString)
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return
    end
    sg__Monster_set_baseColorId(this, baseColorId)
    if (sg__Monster_get_u(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
end

function s__MonsterMultiplePatrols_setVertexColor(this, vcRed, vcGreen, vcBlue)
  sg__Monster_set_vcRed(this, vcRed)
  sg__Monster_set_vcGreen(this, vcGreen)
  sg__Monster_set_vcBlue(this, vcBlue)
  if (sg__Monster_get_u(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Monster_get_u(this), vcRed, vcGreen, vcBlue, sg__Monster_get_vcTransparency(this))
  end
end

function s__MonsterMultiplePatrols_reinitColor(this)
  local initBaseColorId = nil
  --changement valeurs des champs
  sg__Monster_set_baseColorId(this, -1)
  sg__Monster_set_vcRed(this, 100)
  sg__Monster_set_vcGreen(this, 100)
  sg__Monster_set_vcBlue(this, 100)
  sg__Monster_set_vcTransparency(this, 0)
  --changement couleur du mob actuel
  if (sg__Monster_get_u(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Monster_get_u(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
end

function s__MonsterMultiplePatrols_toString(this)
  local str = nil
  if (s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= nil and s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= "") then
    str = s__MonsterType_theAlias[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__MonsterType_label[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Monster_get_id(this)) .. CACHE_SEPARATEUR_PARAM
  if (sg__MonsterMultiplePatrols_get_sens(this) > 0) then
    str = str .. "string"
  else
    str = str .. "normal"
  end
  --textmacro instance: MMP_loc_toString( "0"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 0) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x0(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y0(this)))
  --end of: MMP_loc_toString( "0"  )
  --textmacro instance: MMP_loc_toString( "1"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 1) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x1(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y1(this)))
  --end of: MMP_loc_toString( "1"  )
  --textmacro instance: MMP_loc_toString( "2"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 2) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x2(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y2(this)))
  --end of: MMP_loc_toString( "2"  )
  --textmacro instance: MMP_loc_toString( "3"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 3) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x3(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y3(this)))
  --end of: MMP_loc_toString( "3"  )
  --textmacro instance: MMP_loc_toString( "4"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 4) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x4(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y4(this)))
  --end of: MMP_loc_toString( "4"  )
  --textmacro instance: MMP_loc_toString( "5"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 5) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x5(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y5(this)))
  --end of: MMP_loc_toString( "5"  )
  --textmacro instance: MMP_loc_toString( "6"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 6) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x6(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y6(this)))
  --end of: MMP_loc_toString( "6"  )
  --textmacro instance: MMP_loc_toString( "7"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 7) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x7(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y7(this)))
  --end of: MMP_loc_toString( "7"  )
  --textmacro instance: MMP_loc_toString( "8"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 8) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x8(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y8(this)))
  --end of: MMP_loc_toString( "8"  )
  --textmacro instance: MMP_loc_toString( "9"  )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 9) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x9(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y9(this)))
  --end of: MMP_loc_toString( "9"  )
  --textmacro instance: MMP_loc_toString( "10" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 10) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x10(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y10(this)))
  --end of: MMP_loc_toString( "10" )
  --textmacro instance: MMP_loc_toString( "11" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 11) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x11(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y11(this)))
  --end of: MMP_loc_toString( "11" )
  --textmacro instance: MMP_loc_toString( "12" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 12) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x12(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y12(this)))
  --end of: MMP_loc_toString( "12" )
  --textmacro instance: MMP_loc_toString( "13" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 13) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x13(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y13(this)))
  --end of: MMP_loc_toString( "13" )
  --textmacro instance: MMP_loc_toString( "14" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 14) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x14(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y14(this)))
  --end of: MMP_loc_toString( "14" )
  --textmacro instance: MMP_loc_toString( "15" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 15) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x15(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y15(this)))
  --end of: MMP_loc_toString( "15" )
  --textmacro instance: MMP_loc_toString( "16" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 16) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x16(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y16(this)))
  --end of: MMP_loc_toString( "16" )
  --textmacro instance: MMP_loc_toString( "17" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 17) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x17(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y17(this)))
  --end of: MMP_loc_toString( "17" )
  --textmacro instance: MMP_loc_toString( "18" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 18) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x18(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y18(this)))
  --end of: MMP_loc_toString( "18" )
  --textmacro instance: MMP_loc_toString( "19" )
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 19) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x19(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y19(this)))
  --end of: MMP_loc_toString( "19" )
  return str
end




--library MonsterMultiplePatrols ends
--library MonsterNoMove:



function s__MonsterNoMove_count()
  return s__Monster_nbInstances
end

--color


function s__MonsterNoMove_getId(this)
  return sg__Monster_get_id(this)
end

function s__MonsterNoMove_setId(this, id)
  if (id == sg__Monster_get_id(this)) then
    return this
  end
  MonsterHashtableSetMonsterId(this, sg__Monster_get_id(this), id)
  sg__Monster_set_id(this, id)
  return this
end

function s__MonsterNoMove_removeUnit(this)
  if (sg__Monster_get_u(this) ~= nil) then
    GroupRemoveUnit(monstersClickable, sg__Monster_get_u(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
    sg__Monster_set_disablingTimer(this, nil)
  end
end

function s__MonsterNoMove_killUnit(this)
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    KillUnit(sg__Monster_get_u(this))
  end
end

function s__MonsterNoMove_onDestroy(this)
  if (sg__Monster_get_u(this) ~= nil) then
    s__MonsterNoMove_removeUnit(this)
  end
  sc__MonsterNoMoveArray_setMonsterNull(s__Level_monstersNoMove[sg__Monster_get_level(this)], sg__Monster_get_arrayId(this))
  s__Monster_nbInstances = s__Monster_nbInstances - 1
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (sg__Monster_get_id(this)))
  -- INLINED!!
end

function s__MonsterNoMove_create(mt, x, l__y, angle)
  local m = s__MonsterNoMove__allocate()
  s__Monster_nbInstances = s__Monster_nbInstances + 1
  sg__Monster_set_mt(m, mt)
  sg__MonsterNoMove_set_x(m, x)
  sg__MonsterNoMove_set_y(m, l__y)
  sg__MonsterNoMove_set_angle(m, angle)
  sg__Monster_set_life(m, 0)
  sg__Monster_set_id(m, GetNextMonsterId())
  MonsterHashtableSetMonsterId(m, NO_ID, sg__Monster_get_id(m))
  sg__Monster_set_disablingTimer(m, nil)
  --color
  sg__Monster_set_baseColorId(m, -1)
  sg__Monster_set_vcRed(m, 100)
  sg__Monster_set_vcGreen(m, 100)
  sg__Monster_set_vcBlue(m, 100)
  sg__Monster_set_vcTransparency(m, 0)
  return m
end

function s__MonsterNoMove_createUnit(this)
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Monster_get_disablingTimer(this)
  local previouslyEnabled = sg__Monster_get_u(this) ~= nil
  local isMonsterAlive = IsUnitAliveBJ(sg__Monster_get_u(this))
  if (previouslyEnabled) then
    s__MonsterNoMove_removeUnit(this)
  end
  sg__Monster_set_u(this, NewImmobileMonster(sg__Monster_get_mt(this), sg__MonsterNoMove_get_x(this), sg__MonsterNoMove_get_y(this), sg__MonsterNoMove_get_angle(this)))
  SetUnitUserData(sg__Monster_get_u(this), sg__Monster_get_id(this))
  if ((s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
    -- INLINED!!
    sg__Monster_set_life(this, (s__MonsterType_maxLife[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    GroupAddUnit(monstersClickable, sg__Monster_get_u(this))
  end
  if (previouslyEnabled) then
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__MonsterNoMove_temporarilyDisable(this, disablingTimer)
    end
    if (not isMonsterAlive) then
      s__MonsterNoMove_killUnit(this)
    end
    if (sg__Monster_get_baseColorId(this) ~= -1) then
      if (sg__Monster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(sg__Monster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
end

function s__MonsterNoMove_getLife(this)
  return sg__Monster_get_life(this)
end

function s__MonsterNoMove_setLife(this, life)
  sg__Monster_set_life(this, life)
  if (life > 0) then
    SetUnitLifeBJ(sg__Monster_get_u(this), I2R(life) - 0.5)
  else
    s__MonsterNoMove_killUnit(this)
  end
end

function s__MonsterNoMove_getMonsterType(this)
  return sg__Monster_get_mt(this)
end

function s__MonsterNoMove_setMonsterType(this, mt)
  if (mt == 0 or mt == sg__Monster_get_mt(this)) then
    return false
  end
  sg__Monster_set_mt(this, mt)
  s__MonsterNoMove_createUnit(this)
  return true
end

function s__MonsterNoMove_toString(this)
  local str = nil
  if (s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= nil and s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= "") then
    str = s__MonsterType_theAlias[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__MonsterType_label[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Monster_get_id(this)) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterNoMove_get_x(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterNoMove_get_y(this)))
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterNoMove_get_angle(this)))
  return str
end

function s__MonsterNoMove_temporarilyDisable(this, disablingTimer)
  if (sg__Monster_get_disablingTimer(this) == nil or sg__Monster_get_disablingTimer(this) == disablingTimer or TimerGetRemaining(disablingTimer) > TimerGetRemaining(sg__Monster_get_disablingTimer(this))) then
    sg__Monster_set_disablingTimer(this, disablingTimer)
    UnitRemoveAbility(sg__Monster_get_u(this), (s__MonsterType_immolationSkill[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), DISABLE_TRANSPARENCY)
    sg__Monster_set_vcTransparency(this, DISABLE_TRANSPARENCY)
  end
end

function s__MonsterNoMove_temporarilyEnable(this, disablingTimer)
  if (sg__Monster_get_disablingTimer(this) == disablingTimer) then
    --on ne réactive le mob que si le disablingTimer correspond bien au bon, celui restant le plus longtemps
    UnitAddAbility(sg__Monster_get_u(this), (s__MonsterType_immolationSkill[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), 0)
    sg__Monster_set_vcTransparency(this, 0)
  end
end

function s__MonsterNoMove_setBaseColor(this, colorString)
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return
    end
    sg__Monster_set_baseColorId(this, baseColorId)
    if (sg__Monster_get_u(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
end

function s__MonsterNoMove_setVertexColor(this, vcRed, vcGreen, vcBlue)
  sg__Monster_set_vcRed(this, vcRed)
  sg__Monster_set_vcGreen(this, vcGreen)
  sg__Monster_set_vcBlue(this, vcBlue)
  if (sg__Monster_get_u(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Monster_get_u(this), vcRed, vcGreen, vcBlue, sg__Monster_get_vcTransparency(this))
  end
end

function s__MonsterNoMove_reinitColor(this)
  local initBaseColorId = nil
  --changement valeurs des champs
  sg__Monster_set_baseColorId(this, -1)
  sg__Monster_set_vcRed(this, 100)
  sg__Monster_set_vcGreen(this, 100)
  sg__Monster_set_vcBlue(this, 100)
  sg__Monster_set_vcTransparency(this, 0)
  --changement couleur du mob actuel
  if (sg__Monster_get_u(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Monster_get_u(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
end




--library MonsterNoMove ends
--library MonsterOrCaster:



function s__MonsterOrCaster_create(mobId)
  local moc = nil
  local monster = (LoadInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (mobId)))
  -- INLINED!!
  local caster = nil
  if (monster ~= 0) then
    moc = s__MonsterOrCaster__allocate()
    sg__MonsterOrCaster_set_monster(moc, monster)
    sg__MonsterOrCaster_set_caster(moc, 0)
  else
    caster = (LoadInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__CASTER, (mobId)))
    -- INLINED!!
    if (caster ~= 0) then
      moc = s__MonsterOrCaster__allocate()
      sg__MonsterOrCaster_set_monster(moc, 0)
      sg__MonsterOrCaster_set_caster(moc, caster)
    else
      moc = 0
    end
  end
  return moc
end

function s__MonsterOrCaster_getId(this)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    return sc__Monster_getId(sg__MonsterOrCaster_get_monster(this))
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    return sc__Caster_getId(sg__MonsterOrCaster_get_caster(this))
  end
  return 0
end

function s__MonsterOrCaster_killUnit(this)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_killUnit(sg__MonsterOrCaster_get_monster(this))
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_killUnit(sg__MonsterOrCaster_get_caster(this))
  end
end

function s__MonsterOrCaster_temporarilyDisable(this, disablingTimer)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_temporarilyDisable(sg__MonsterOrCaster_get_monster(this), disablingTimer)
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_temporarilyDisable(sg__MonsterOrCaster_get_caster(this), disablingTimer)
  end
end

function s__MonsterOrCaster_temporarilyEnable(this, enablingTimer)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_temporarilyEnable(sg__MonsterOrCaster_get_monster(this), enablingTimer)
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_temporarilyEnable(sg__MonsterOrCaster_get_caster(this), enablingTimer)
  end
end

function s__MonsterOrCaster_setBaseColor(this, colorString)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_setBaseColor(sg__MonsterOrCaster_get_monster(this), colorString)
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_setBaseColor(sg__MonsterOrCaster_get_caster(this), colorString)
  end
end

function s__MonsterOrCaster_setVertexColor(this, vcRed, vcGreen, vcBlue)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_setVertexColor(sg__MonsterOrCaster_get_monster(this), vcRed, vcGreen, vcBlue)
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_setVertexColor(sg__MonsterOrCaster_get_caster(this), vcRed, vcGreen, vcBlue)
  end
end

function s__MonsterOrCaster_reinitColor(this)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_reinitColor(sg__MonsterOrCaster_get_monster(this))
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_reinitColor(sg__MonsterOrCaster_get_caster(this))
  end
end

function s__MonsterOrCaster_getUnit(this)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    return sg__Monster_get_u(sg__MonsterOrCaster_get_monster(this))
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    return sg__Caster_get_casterUnit(sg__MonsterOrCaster_get_caster(this))
  end
  return nil
end

function s__MonsterOrCaster_copy(this)
  return s__MonsterOrCaster_create(s__MonsterOrCaster_getId(this))
end

function s__MonsterOrCaster_getMonsterType(this)
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    return sc__Monster_getMonsterType(sg__MonsterOrCaster_get_monster(this))
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    return (s__CasterType_casterMonsterType[(sc__Caster_getCasterType(sg__MonsterOrCaster_get_caster(this)))])
    -- INLINED!!
  end
  return 0
end




--library MonsterOrCaster ends
--library MonsterSimplePatrol:


--vérification que les monstres multi-patrouilles patrouillent bien

function MonsterSimplePatrol__CheckSimplePatrolMobsEnum()
  if (GetUnitCurrentOrder(GetEnumUnit()) == 0) then
    --le mob s'est arrêté
    sc__MonsterSimplePatrol_createUnit((GetUnitUserData(GetEnumUnit())))
  end
end

function MonsterSimplePatrol__CheckSimplePatrolMobs_Actions()
  ForGroup(MonsterSimplePatrol__simplePatrolMobs, MonsterSimplePatrol__CheckSimplePatrolMobsEnum)
end

function Init_MonsterSimplePatrol()
  local trigCheckSimplePatrolMobs = CreateTrigger()
  TriggerAddAction(trigCheckSimplePatrolMobs, MonsterSimplePatrol__CheckSimplePatrolMobs_Actions)
  TriggerRegisterTimerEvent(trigCheckSimplePatrolMobs, MonsterSimplePatrol__checkSimplePatrolMobsPeriod, true)
  trigCheckSimplePatrolMobs = nil
end
--///////////////////////////////////////////////////////////////////////



function s__MonsterSimplePatrol_count()
  return s__Monster_nbInstances
end


--color


function s__MonsterSimplePatrol_getId(this)
  return sg__Monster_get_id(this)
end

function s__MonsterSimplePatrol_setId(this, id)
  if (id == sg__Monster_get_id(this)) then
    return this
  end
  MonsterHashtableSetMonsterId(this, sg__Monster_get_id(this), id)
  sg__Monster_set_id(this, id)
  return this
end

function s__MonsterSimplePatrol_removeUnit(this)
  if (sg__Monster_get_u(this) ~= nil) then
    GroupRemoveUnit(monstersClickable, sg__Monster_get_u(this))
    GroupRemoveUnit(MonsterSimplePatrol__simplePatrolMobs, sg__Monster_get_u(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
  end
end

function s__MonsterSimplePatrol_killUnit(this)
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    GroupRemoveUnit(MonsterSimplePatrol__simplePatrolMobs, sg__Monster_get_u(this))
    KillUnit(sg__Monster_get_u(this))
  end
end

function s__MonsterSimplePatrol_onDestroy(this)
  if (sg__Monster_get_u(this) ~= nil) then
    s__MonsterSimplePatrol_removeUnit(this)
  end
  sc__MonsterSimplePatrolArray_setMonsterNull(s__Level_monstersSimplePatrol[sg__Monster_get_level(this)], sg__Monster_get_arrayId(this))
  s__Monster_nbInstances = s__Monster_nbInstances - 1
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (sg__Monster_get_id(this)))
  -- INLINED!!
end

function s__MonsterSimplePatrol_create(mt, x1, y1, x2, y2)
  local m = s__MonsterSimplePatrol__allocate()
  s__Monster_nbInstances = s__Monster_nbInstances + 1
  sg__Monster_set_mt(m, mt)
  sg__MonsterSimplePatrol_set_x1(m, x1)
  sg__MonsterSimplePatrol_set_y1(m, y1)
  sg__MonsterSimplePatrol_set_x2(m, x2)
  sg__MonsterSimplePatrol_set_y2(m, y2)
  sg__Monster_set_life(m, 0)
  sg__Monster_set_id(m, GetNextMonsterId())
  MonsterHashtableSetMonsterId(m, NO_ID, sg__Monster_get_id(m))
  sg__Monster_set_disablingTimer(m, nil)
  --color
  sg__Monster_set_baseColorId(m, -1)
  sg__Monster_set_vcRed(m, 100)
  sg__Monster_set_vcGreen(m, 100)
  sg__Monster_set_vcBlue(m, 100)
  sg__Monster_set_vcTransparency(m, 0)
  return m
end

function s__MonsterSimplePatrol_createUnit(this)
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Monster_get_disablingTimer(this)
  local previouslyEnabled = sg__Monster_get_u(this) ~= nil
  local isMonsterAlive = IsUnitAliveBJ(sg__Monster_get_u(this))
  if (previouslyEnabled) then
    s__MonsterSimplePatrol_removeUnit(this)
  end
  sg__Monster_set_u(this, NewPatrolMonster(sg__Monster_get_mt(this), sg__MonsterSimplePatrol_get_x1(this), sg__MonsterSimplePatrol_get_y1(this), sg__MonsterSimplePatrol_get_x2(this), sg__MonsterSimplePatrol_get_y2(this)))
  SetUnitUserData(sg__Monster_get_u(this), sg__Monster_get_id(this))
  GroupAddUnit(MonsterSimplePatrol__simplePatrolMobs, sg__Monster_get_u(this))
  if ((s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
    -- INLINED!!
    sg__Monster_set_life(this, (s__MonsterType_maxLife[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    GroupAddUnit(monstersClickable, sg__Monster_get_u(this))
  end
  if (previouslyEnabled) then
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__MonsterSimplePatrol_temporarilyDisable(this, disablingTimer)
    end
    if (not isMonsterAlive) then
      s__MonsterSimplePatrol_killUnit(this)
    end
    if (sg__Monster_get_baseColorId(this) ~= -1) then
      if (sg__Monster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(sg__Monster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
end

function s__MonsterSimplePatrol_getLife(this)
  return sg__Monster_get_life(this)
end

function s__MonsterSimplePatrol_setLife(this, life)
  sg__Monster_set_life(this, life)
  if (life > 0) then
    SetUnitLifeBJ(sg__Monster_get_u(this), I2R(life) - 0.5)
  else
    s__MonsterSimplePatrol_killUnit(this)
  end
end

function s__MonsterSimplePatrol_getMonsterType(this)
  return sg__Monster_get_mt(this)
end

function s__MonsterSimplePatrol_setMonsterType(this, mt)
  if (mt == 0 or mt == sg__Monster_get_mt(this)) then
    return false
  end
  sg__Monster_set_mt(this, mt)
  s__MonsterSimplePatrol_createUnit(this)
  return true
end

function s__MonsterSimplePatrol_temporarilyDisable(this, disablingTimer)
  if (sg__Monster_get_disablingTimer(this) == nil or sg__Monster_get_disablingTimer(this) == disablingTimer or TimerGetRemaining(disablingTimer) > TimerGetRemaining(sg__Monster_get_disablingTimer(this))) then
    sg__Monster_set_disablingTimer(this, disablingTimer)
    UnitRemoveAbility(sg__Monster_get_u(this), (s__MonsterType_immolationSkill[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), DISABLE_TRANSPARENCY)
    sg__Monster_set_vcTransparency(this, DISABLE_TRANSPARENCY)
  end
end

function s__MonsterSimplePatrol_temporarilyEnable(this, disablingTimer)
  if (sg__Monster_get_disablingTimer(this) == disablingTimer) then
    --on ne réactive le mob que si le disablingTimer correspond bien au bon, celui restant le plus longtemps
    UnitAddAbility(sg__Monster_get_u(this), (s__MonsterType_immolationSkill[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), 0)
    sg__Monster_set_vcTransparency(this, 0)
  end
end

function s__MonsterSimplePatrol_setBaseColor(this, colorString)
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return
    end
    sg__Monster_set_baseColorId(this, baseColorId)
    if (sg__Monster_get_u(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
end

function s__MonsterSimplePatrol_setVertexColor(this, vcRed, vcGreen, vcBlue)
  sg__Monster_set_vcRed(this, vcRed)
  sg__Monster_set_vcGreen(this, vcGreen)
  sg__Monster_set_vcBlue(this, vcBlue)
  if (sg__Monster_get_u(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Monster_get_u(this), vcRed, vcGreen, vcBlue, sg__Monster_get_vcTransparency(this))
  end
end

function s__MonsterSimplePatrol_reinitColor(this)
  local initBaseColorId = nil
  --changement valeurs des champs
  sg__Monster_set_baseColorId(this, -1)
  sg__Monster_set_vcRed(this, 100)
  sg__Monster_set_vcGreen(this, 100)
  sg__Monster_set_vcBlue(this, 100)
  sg__Monster_set_vcTransparency(this, 0)
  --changement couleur du mob actuel
  if (sg__Monster_get_u(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Monster_get_u(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
end

function s__MonsterSimplePatrol_toString(this)
  local str = nil
  if (s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= nil and s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= "") then
    str = s__MonsterType_theAlias[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__MonsterType_label[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Monster_get_id(this)) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterSimplePatrol_get_x1(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterSimplePatrol_get_y1(this))) .. CACHE_SEPARATEUR_PARAM
  str = str .. I2S(R2I(sg__MonsterSimplePatrol_get_x2(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterSimplePatrol_get_y2(this)))
  return str
end



--library MonsterSimplePatrol ends
--library MonsterTeleport:




function MonsterTeleport_move_Actions()
  local monster = nil
  local MT = (LoadInteger(MonsterTeleport_monsterTeleportHashtable, 0, GetHandleId(GetExpiredTimer())))
  if (MT == 0) then
    return
  end
  sc__MonsterTeleport_nextMove(MT)
end
--===========================================================



function s__MonsterTeleport_count()
  return s__Monster_nbInstances
end

function s__MonsterTeleport_storeNewLoc(x, l__y)
  if (s__MonsterTeleport_staticLastLocInd >= s__MonsterTeleport_NB_MAX_LOC - 1) then
    return false
  end
  s__MonsterTeleport_staticLastLocInd = s__MonsterTeleport_staticLastLocInd + 1
  s__s__MonsterTeleport_X[s__MonsterTeleport_staticLastLocInd] = x
  s__s__MonsterTeleport_Y[s__MonsterTeleport_staticLastLocInd] = l__y
  return true
end

function s__MonsterTeleport_destroyLocs()
  s__MonsterTeleport_staticLastLocInd = -1
end


--color



--textmacro instance: MT_Variables( "0"  )
--end of: MT_Variables( "0"  )
--textmacro instance: MT_Variables( "1"  )
--end of: MT_Variables( "1"  )
--textmacro instance: MT_Variables( "2"  )
--end of: MT_Variables( "2"  )
--textmacro instance: MT_Variables( "3"  )
--end of: MT_Variables( "3"  )
--textmacro instance: MT_Variables( "4"  )
--end of: MT_Variables( "4"  )
--textmacro instance: MT_Variables( "5"  )
--end of: MT_Variables( "5"  )
--textmacro instance: MT_Variables( "6"  )
--end of: MT_Variables( "6"  )
--textmacro instance: MT_Variables( "7"  )
--end of: MT_Variables( "7"  )
--textmacro instance: MT_Variables( "8"  )
--end of: MT_Variables( "8"  )
--textmacro instance: MT_Variables( "9"  )
--end of: MT_Variables( "9"  )
--textmacro instance: MT_Variables( "10" )
--end of: MT_Variables( "10" )
--textmacro instance: MT_Variables( "11" )
--end of: MT_Variables( "11" )
--textmacro instance: MT_Variables( "12" )
--end of: MT_Variables( "12" )
--textmacro instance: MT_Variables( "13" )
--end of: MT_Variables( "13" )
--textmacro instance: MT_Variables( "14" )
--end of: MT_Variables( "14" )
--textmacro instance: MT_Variables( "15" )
--end of: MT_Variables( "15" )
--textmacro instance: MT_Variables( "16" )
--end of: MT_Variables( "16" )
--textmacro instance: MT_Variables( "17" )
--end of: MT_Variables( "17" )
--textmacro instance: MT_Variables( "18" )
--end of: MT_Variables( "18" )
--textmacro instance: MT_Variables( "19" )
--end of: MT_Variables( "19" )


function s__MonsterTeleport_getId(this)
  return sg__Monster_get_id(this)
end

function s__MonsterTeleport_setId(this, id)
  if (id == sg__Monster_get_id(this)) then
    return this
  end
  MonsterHashtableSetMonsterId(this, sg__Monster_get_id(this), id)
  sg__Monster_set_id(this, id)
  return this
end

function s__MonsterTeleport_removeUnit(this)
  if (sg__Monster_get_u(this) ~= nil) then
    GroupRemoveUnit(monstersClickable, sg__Monster_get_u(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
    PauseTimer(sg__MonsterTeleport_get_t(this))
  end
end

function s__MonsterTeleport_killUnit(this)
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    KillUnit(sg__Monster_get_u(this))
    PauseTimer(sg__MonsterTeleport_get_t(this))
  end
end

function s__MonsterTeleport_onDestroy(this)
  if (sg__Monster_get_u(this) ~= nil) then
    s__MonsterTeleport_removeUnit(this)
  end
  sc__MonsterTeleportArray_setMonsterNull(s__Level_monstersTeleport[sg__Monster_get_level(this)], sg__Monster_get_arrayId(this))
  s__Monster_nbInstances = s__Monster_nbInstances - 1
  RemoveSavedInteger(MonsterTeleport_monsterTeleportHashtable, 0, GetHandleId(sg__MonsterTeleport_get_t(this)))
  DestroyTimer(sg__MonsterTeleport_get_t(this))
  sg__MonsterTeleport_set_t(this, nil)
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (sg__Monster_get_id(this)))
  -- INLINED!!
end

function s__MonsterTeleport_create(mt, period, angle, mode)
  --mode == "normal" (0, 1, 2, 3, 0 , 1...) ou mode == "string" (0, 1, 2, 3, 2, 1...)
  local m = nil
  local i = nil

  if ((mode ~= "normal" and mode ~= "string") or period < MONSTER_TELEPORT_PERIOD_MIN or period > MONSTER_TELEPORT_PERIOD_MAX) then
    return 0
  end

  m = s__MonsterTeleport__allocate()
  s__Monster_nbInstances = s__Monster_nbInstances + 1
  sg__Monster_set_mt(m, mt)
  if (mode == "normal") then
    sg__MonsterTeleport_set_sens(m, 0)
  else
    sg__MonsterTeleport_set_sens(m, 1)
  end
  sg__MonsterTeleport_set_angle(m, angle)
  sg__MonsterTeleport_set_period(m, period)
  sg__MonsterTeleport_set_t(m, CreateTimer())
  SaveInteger(MonsterTeleport_monsterTeleportHashtable, 0, GetHandleId(sg__MonsterTeleport_get_t(m)), (m))

  --textmacro instance: MT_create( "0"  )
  if (0 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x0(m, s__s__MonsterTeleport_X[0])
    sg__MonsterTeleport_set_y0(m, s__s__MonsterTeleport_Y[0])
  end
  --end of: MT_create( "0"  )
  --textmacro instance: MT_create( "1"  )
  if (1 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x1(m, s__s__MonsterTeleport_X[1])
    sg__MonsterTeleport_set_y1(m, s__s__MonsterTeleport_Y[1])
  end
  --end of: MT_create( "1"  )
  --textmacro instance: MT_create( "2"  )
  if (2 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x2(m, s__s__MonsterTeleport_X[2])
    sg__MonsterTeleport_set_y2(m, s__s__MonsterTeleport_Y[2])
  end
  --end of: MT_create( "2"  )
  --textmacro instance: MT_create( "3"  )
  if (3 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x3(m, s__s__MonsterTeleport_X[3])
    sg__MonsterTeleport_set_y3(m, s__s__MonsterTeleport_Y[3])
  end
  --end of: MT_create( "3"  )
  --textmacro instance: MT_create( "4"  )
  if (4 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x4(m, s__s__MonsterTeleport_X[4])
    sg__MonsterTeleport_set_y4(m, s__s__MonsterTeleport_Y[4])
  end
  --end of: MT_create( "4"  )
  --textmacro instance: MT_create( "5"  )
  if (5 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x5(m, s__s__MonsterTeleport_X[5])
    sg__MonsterTeleport_set_y5(m, s__s__MonsterTeleport_Y[5])
  end
  --end of: MT_create( "5"  )
  --textmacro instance: MT_create( "6"  )
  if (6 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x6(m, s__s__MonsterTeleport_X[6])
    sg__MonsterTeleport_set_y6(m, s__s__MonsterTeleport_Y[6])
  end
  --end of: MT_create( "6"  )
  --textmacro instance: MT_create( "7"  )
  if (7 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x7(m, s__s__MonsterTeleport_X[7])
    sg__MonsterTeleport_set_y7(m, s__s__MonsterTeleport_Y[7])
  end
  --end of: MT_create( "7"  )
  --textmacro instance: MT_create( "8"  )
  if (8 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x8(m, s__s__MonsterTeleport_X[8])
    sg__MonsterTeleport_set_y8(m, s__s__MonsterTeleport_Y[8])
  end
  --end of: MT_create( "8"  )
  --textmacro instance: MT_create( "9"  )
  if (9 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x9(m, s__s__MonsterTeleport_X[9])
    sg__MonsterTeleport_set_y9(m, s__s__MonsterTeleport_Y[9])
  end
  --end of: MT_create( "9"  )
  --textmacro instance: MT_create( "10" )
  if (10 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x10(m, s__s__MonsterTeleport_X[10])
    sg__MonsterTeleport_set_y10(m, s__s__MonsterTeleport_Y[10])
  end
  --end of: MT_create( "10" )
  --textmacro instance: MT_create( "11" )
  if (11 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x11(m, s__s__MonsterTeleport_X[11])
    sg__MonsterTeleport_set_y11(m, s__s__MonsterTeleport_Y[11])
  end
  --end of: MT_create( "11" )
  --textmacro instance: MT_create( "12" )
  if (12 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x12(m, s__s__MonsterTeleport_X[12])
    sg__MonsterTeleport_set_y12(m, s__s__MonsterTeleport_Y[12])
  end
  --end of: MT_create( "12" )
  --textmacro instance: MT_create( "13" )
  if (13 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x13(m, s__s__MonsterTeleport_X[13])
    sg__MonsterTeleport_set_y13(m, s__s__MonsterTeleport_Y[13])
  end
  --end of: MT_create( "13" )
  --textmacro instance: MT_create( "14" )
  if (14 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x14(m, s__s__MonsterTeleport_X[14])
    sg__MonsterTeleport_set_y14(m, s__s__MonsterTeleport_Y[14])
  end
  --end of: MT_create( "14" )
  --textmacro instance: MT_create( "15" )
  if (15 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x15(m, s__s__MonsterTeleport_X[15])
    sg__MonsterTeleport_set_y15(m, s__s__MonsterTeleport_Y[15])
  end
  --end of: MT_create( "15" )
  --textmacro instance: MT_create( "16" )
  if (16 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x16(m, s__s__MonsterTeleport_X[16])
    sg__MonsterTeleport_set_y16(m, s__s__MonsterTeleport_Y[16])
  end
  --end of: MT_create( "16" )
  --textmacro instance: MT_create( "17" )
  if (17 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x17(m, s__s__MonsterTeleport_X[17])
    sg__MonsterTeleport_set_y17(m, s__s__MonsterTeleport_Y[17])
  end
  --end of: MT_create( "17" )
  --textmacro instance: MT_create( "18" )
  if (18 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x18(m, s__s__MonsterTeleport_X[18])
    sg__MonsterTeleport_set_y18(m, s__s__MonsterTeleport_Y[18])
  end
  --end of: MT_create( "18" )
  --textmacro instance: MT_create( "19" )
  if (19 <= s__MonsterTeleport_staticLastLocInd) then
    sg__MonsterTeleport_set_x19(m, s__s__MonsterTeleport_X[19])
    sg__MonsterTeleport_set_y19(m, s__s__MonsterTeleport_Y[19])
  end
  --end of: MT_create( "19" )

  sg__MonsterTeleport_set_lastLocInd(m, s__MonsterTeleport_staticLastLocInd)
  --call Text_A("test, lastLocInd == " + I2S(m.lastLocInd))
  sg__MonsterTeleport_set_currentLoc(m, -1)
  s__MonsterTeleport_staticLastLocInd = -1
  -- INLINED!!
  sg__Monster_set_life(m, 0)
  sg__Monster_set_id(m, GetNextMonsterId())
  MonsterHashtableSetMonsterId(m, NO_ID, sg__Monster_get_id(m))
  sg__Monster_set_disablingTimer(m, nil)
  --color
  sg__Monster_set_baseColorId(m, -1)
  sg__Monster_set_vcRed(m, 100)
  sg__Monster_set_vcGreen(m, 100)
  sg__Monster_set_vcBlue(m, 100)
  sg__Monster_set_vcTransparency(m, 0)
  return m
end

function s__MonsterTeleport_setPeriod(this, period)
  if (period < MONSTER_TELEPORT_PERIOD_MIN or period > MONSTER_TELEPORT_PERIOD_MAX) then
    return false
  end
  sg__MonsterTeleport_set_period(this, period)
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    TimerStart(sg__MonsterTeleport_get_t(this), sg__MonsterTeleport_get_period(this), true, MonsterTeleport_move_Actions)
  end
  return true
end

function s__MonsterTeleport_getPeriod(this)
  return sg__MonsterTeleport_get_period(this)
end

function s__MonsterTeleport_createUnit(this)
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Monster_get_disablingTimer(this)
  local previouslyEnabled = sg__Monster_get_u(this) ~= nil
  local isMonsterAlive = IsUnitAliveBJ(sg__Monster_get_u(this))
  if (previouslyEnabled) then
    s__MonsterTeleport_removeUnit(this)
  end
  if (sg__MonsterTeleport_get_lastLocInd(this) <= 0) then
    return
  end
  sg__Monster_set_u(this, NewImmobileMonster(sg__Monster_get_mt(this), sg__MonsterTeleport_get_x0(this), sg__MonsterTeleport_get_y0(this), sg__MonsterTeleport_get_angle(this)))
  SetUnitUserData(sg__Monster_get_u(this), sg__Monster_get_id(this))
  sg__MonsterTeleport_set_currentLoc(this, 0)
  if (sg__MonsterTeleport_get_sens(this) == 2) then
    sg__MonsterTeleport_set_sens(this, 1)
  end
  TimerStart(sg__MonsterTeleport_get_t(this), sg__MonsterTeleport_get_period(this), true, MonsterTeleport_move_Actions)
  if ((s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
    -- INLINED!!
    sg__Monster_set_life(this, (s__MonsterType_maxLife[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    GroupAddUnit(monstersClickable, sg__Monster_get_u(this))
  end
  if (previouslyEnabled) then
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__MonsterTeleport_temporarilyDisable(this, disablingTimer)
    end
    if (not isMonsterAlive) then
      s__MonsterTeleport_killUnit(this)
    end
    if (sg__Monster_get_baseColorId(this) ~= -1) then
      if (sg__Monster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(sg__Monster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
end

function s__MonsterTeleport_nextMove(this)
  local x = nil
  local l__y = nil
  if (sg__MonsterTeleport_get_sens(this) == 0 or sg__MonsterTeleport_get_sens(this) == 1) then
    if (sg__MonsterTeleport_get_currentLoc(this) >= sg__MonsterTeleport_get_lastLocInd(this)) then
      if (sg__MonsterTeleport_get_sens(this) == 0) then
        sg__MonsterTeleport_set_currentLoc(this, 0)
      else
        sg__MonsterTeleport_set_sens(this, 2)
        sg__MonsterTeleport_set_currentLoc(this, sg__MonsterTeleport_get_currentLoc(this) - 1)
      end
    else
      sg__MonsterTeleport_set_currentLoc(this, sg__MonsterTeleport_get_currentLoc(this) + 1)
    end
  else
    --sens == 2
    if (sg__MonsterTeleport_get_currentLoc(this) <= 0) then
      sg__MonsterTeleport_set_sens(this, 1)
      sg__MonsterTeleport_set_currentLoc(this, 1)
    else
      sg__MonsterTeleport_set_currentLoc(this, sg__MonsterTeleport_get_currentLoc(this) - 1)
    end
  end
  x = sc__MonsterTeleport_getX(this, sg__MonsterTeleport_get_currentLoc(this))
  l__y = sc__MonsterTeleport_getY(this, sg__MonsterTeleport_get_currentLoc(this))
  if (x == HIDE and l__y == HIDE) then
    ShowUnit(sg__Monster_get_u(this), false)
  elseif (x ~= WAIT or l__y ~= WAIT) then
    if (IsUnitHidden(sg__Monster_get_u(this))) then
      ShowUnit(sg__Monster_get_u(this), true)
      if (not (s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
        -- INLINED!!
        UnitRemoveAbility(sg__Monster_get_u(this), 1097625443)
        UnitAddAbility(sg__Monster_get_u(this), 1097625443)
      end
    end
    SetUnitX(sg__Monster_get_u(this), x)
    SetUnitY(sg__Monster_get_u(this), l__y)
  end
  --cas autre : wait, on ne fait rien
end

function s__MonsterTeleport_getLife(this)
  return sg__Monster_get_life(this)
end

function s__MonsterTeleport_setLife(this, life)
  sg__Monster_set_life(this, life)
  if (life > 0) then
    SetUnitLifeBJ(sg__Monster_get_u(this), I2R(life) - 0.5)
  else
    s__MonsterTeleport_killUnit(this)
  end
end

function s__MonsterTeleport_getX(this, id)
  --textmacro instance: TM_getX( "0"  )
  if (id == 0) then
    return sg__MonsterTeleport_get_x0(this)
  end
  --end of: TM_getX( "0"  )
  --textmacro instance: TM_getX( "1"  )
  if (id == 1) then
    return sg__MonsterTeleport_get_x1(this)
  end
  --end of: TM_getX( "1"  )
  --textmacro instance: TM_getX( "2"  )
  if (id == 2) then
    return sg__MonsterTeleport_get_x2(this)
  end
  --end of: TM_getX( "2"  )
  --textmacro instance: TM_getX( "3"  )
  if (id == 3) then
    return sg__MonsterTeleport_get_x3(this)
  end
  --end of: TM_getX( "3"  )
  --textmacro instance: TM_getX( "4"  )
  if (id == 4) then
    return sg__MonsterTeleport_get_x4(this)
  end
  --end of: TM_getX( "4"  )
  --textmacro instance: TM_getX( "5"  )
  if (id == 5) then
    return sg__MonsterTeleport_get_x5(this)
  end
  --end of: TM_getX( "5"  )
  --textmacro instance: TM_getX( "6"  )
  if (id == 6) then
    return sg__MonsterTeleport_get_x6(this)
  end
  --end of: TM_getX( "6"  )
  --textmacro instance: TM_getX( "7"  )
  if (id == 7) then
    return sg__MonsterTeleport_get_x7(this)
  end
  --end of: TM_getX( "7"  )
  --textmacro instance: TM_getX( "8"  )
  if (id == 8) then
    return sg__MonsterTeleport_get_x8(this)
  end
  --end of: TM_getX( "8"  )
  --textmacro instance: TM_getX( "9"  )
  if (id == 9) then
    return sg__MonsterTeleport_get_x9(this)
  end
  --end of: TM_getX( "9"  )
  --textmacro instance: TM_getX( "10" )
  if (id == 10) then
    return sg__MonsterTeleport_get_x10(this)
  end
  --end of: TM_getX( "10" )
  --textmacro instance: TM_getX( "11" )
  if (id == 11) then
    return sg__MonsterTeleport_get_x11(this)
  end
  --end of: TM_getX( "11" )
  --textmacro instance: TM_getX( "12" )
  if (id == 12) then
    return sg__MonsterTeleport_get_x12(this)
  end
  --end of: TM_getX( "12" )
  --textmacro instance: TM_getX( "13" )
  if (id == 13) then
    return sg__MonsterTeleport_get_x13(this)
  end
  --end of: TM_getX( "13" )
  --textmacro instance: TM_getX( "14" )
  if (id == 14) then
    return sg__MonsterTeleport_get_x14(this)
  end
  --end of: TM_getX( "14" )
  --textmacro instance: TM_getX( "15" )
  if (id == 15) then
    return sg__MonsterTeleport_get_x15(this)
  end
  --end of: TM_getX( "15" )
  --textmacro instance: TM_getX( "16" )
  if (id == 16) then
    return sg__MonsterTeleport_get_x16(this)
  end
  --end of: TM_getX( "16" )
  --textmacro instance: TM_getX( "17" )
  if (id == 17) then
    return sg__MonsterTeleport_get_x17(this)
  end
  --end of: TM_getX( "17" )
  --textmacro instance: TM_getX( "18" )
  if (id == 18) then
    return sg__MonsterTeleport_get_x18(this)
  end
  --end of: TM_getX( "18" )
  --textmacro instance: TM_getX( "19" )
  if (id == 19) then
    return sg__MonsterTeleport_get_x19(this)
  end
  --end of: TM_getX( "19" )
  return 0
end

function s__MonsterTeleport_getY(this, id)
  --textmacro instance: TM_getY( "0"  )
  if (id == 0) then
    return sg__MonsterTeleport_get_y0(this)
  end
  --end of: TM_getY( "0"  )
  --textmacro instance: TM_getY( "1"  )
  if (id == 1) then
    return sg__MonsterTeleport_get_y1(this)
  end
  --end of: TM_getY( "1"  )
  --textmacro instance: TM_getY( "2"  )
  if (id == 2) then
    return sg__MonsterTeleport_get_y2(this)
  end
  --end of: TM_getY( "2"  )
  --textmacro instance: TM_getY( "3"  )
  if (id == 3) then
    return sg__MonsterTeleport_get_y3(this)
  end
  --end of: TM_getY( "3"  )
  --textmacro instance: TM_getY( "4"  )
  if (id == 4) then
    return sg__MonsterTeleport_get_y4(this)
  end
  --end of: TM_getY( "4"  )
  --textmacro instance: TM_getY( "5"  )
  if (id == 5) then
    return sg__MonsterTeleport_get_y5(this)
  end
  --end of: TM_getY( "5"  )
  --textmacro instance: TM_getY( "6"  )
  if (id == 6) then
    return sg__MonsterTeleport_get_y6(this)
  end
  --end of: TM_getY( "6"  )
  --textmacro instance: TM_getY( "7"  )
  if (id == 7) then
    return sg__MonsterTeleport_get_y7(this)
  end
  --end of: TM_getY( "7"  )
  --textmacro instance: TM_getY( "8"  )
  if (id == 8) then
    return sg__MonsterTeleport_get_y8(this)
  end
  --end of: TM_getY( "8"  )
  --textmacro instance: TM_getY( "9"  )
  if (id == 9) then
    return sg__MonsterTeleport_get_y9(this)
  end
  --end of: TM_getY( "9"  )
  --textmacro instance: TM_getY( "10" )
  if (id == 10) then
    return sg__MonsterTeleport_get_y10(this)
  end
  --end of: TM_getY( "10" )
  --textmacro instance: TM_getY( "11" )
  if (id == 11) then
    return sg__MonsterTeleport_get_y11(this)
  end
  --end of: TM_getY( "11" )
  --textmacro instance: TM_getY( "12" )
  if (id == 12) then
    return sg__MonsterTeleport_get_y12(this)
  end
  --end of: TM_getY( "12" )
  --textmacro instance: TM_getY( "13" )
  if (id == 13) then
    return sg__MonsterTeleport_get_y13(this)
  end
  --end of: TM_getY( "13" )
  --textmacro instance: TM_getY( "14" )
  if (id == 14) then
    return sg__MonsterTeleport_get_y14(this)
  end
  --end of: TM_getY( "14" )
  --textmacro instance: TM_getY( "15" )
  if (id == 15) then
    return sg__MonsterTeleport_get_y15(this)
  end
  --end of: TM_getY( "15" )
  --textmacro instance: TM_getY( "16" )
  if (id == 16) then
    return sg__MonsterTeleport_get_y16(this)
  end
  --end of: TM_getY( "16" )
  --textmacro instance: TM_getY( "17" )
  if (id == 17) then
    return sg__MonsterTeleport_get_y17(this)
  end
  --end of: TM_getY( "17" )
  --textmacro instance: TM_getY( "18" )
  if (id == 18) then
    return sg__MonsterTeleport_get_y18(this)
  end
  --end of: TM_getY( "18" )
  --textmacro instance: TM_getY( "19" )
  if (id == 19) then
    return sg__MonsterTeleport_get_y19(this)
  end
  --end of: TM_getY( "19" )
  return 0
end

function s__MonsterTeleport_addNewLocAt(this, id, x, l__y)
  --textmacro instance: TM_addNewLocAt( "0"  )
  if (id == 0) then
    sg__MonsterTeleport_set_x0(this, x)
    sg__MonsterTeleport_set_y0(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "0"  )
  --textmacro instance: TM_addNewLocAt( "1"  )
  if (id == 1) then
    sg__MonsterTeleport_set_x1(this, x)
    sg__MonsterTeleport_set_y1(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "1"  )
  --textmacro instance: TM_addNewLocAt( "2"  )
  if (id == 2) then
    sg__MonsterTeleport_set_x2(this, x)
    sg__MonsterTeleport_set_y2(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "2"  )
  --textmacro instance: TM_addNewLocAt( "3"  )
  if (id == 3) then
    sg__MonsterTeleport_set_x3(this, x)
    sg__MonsterTeleport_set_y3(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "3"  )
  --textmacro instance: TM_addNewLocAt( "4"  )
  if (id == 4) then
    sg__MonsterTeleport_set_x4(this, x)
    sg__MonsterTeleport_set_y4(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "4"  )
  --textmacro instance: TM_addNewLocAt( "5"  )
  if (id == 5) then
    sg__MonsterTeleport_set_x5(this, x)
    sg__MonsterTeleport_set_y5(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "5"  )
  --textmacro instance: TM_addNewLocAt( "6"  )
  if (id == 6) then
    sg__MonsterTeleport_set_x6(this, x)
    sg__MonsterTeleport_set_y6(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "6"  )
  --textmacro instance: TM_addNewLocAt( "7"  )
  if (id == 7) then
    sg__MonsterTeleport_set_x7(this, x)
    sg__MonsterTeleport_set_y7(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "7"  )
  --textmacro instance: TM_addNewLocAt( "8"  )
  if (id == 8) then
    sg__MonsterTeleport_set_x8(this, x)
    sg__MonsterTeleport_set_y8(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "8"  )
  --textmacro instance: TM_addNewLocAt( "9"  )
  if (id == 9) then
    sg__MonsterTeleport_set_x9(this, x)
    sg__MonsterTeleport_set_y9(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "9"  )
  --textmacro instance: TM_addNewLocAt( "10" )
  if (id == 10) then
    sg__MonsterTeleport_set_x10(this, x)
    sg__MonsterTeleport_set_y10(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "10" )
  --textmacro instance: TM_addNewLocAt( "11" )
  if (id == 11) then
    sg__MonsterTeleport_set_x11(this, x)
    sg__MonsterTeleport_set_y11(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "11" )
  --textmacro instance: TM_addNewLocAt( "12" )
  if (id == 12) then
    sg__MonsterTeleport_set_x12(this, x)
    sg__MonsterTeleport_set_y12(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "12" )
  --textmacro instance: TM_addNewLocAt( "13" )
  if (id == 13) then
    sg__MonsterTeleport_set_x13(this, x)
    sg__MonsterTeleport_set_y13(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "13" )
  --textmacro instance: TM_addNewLocAt( "14" )
  if (id == 14) then
    sg__MonsterTeleport_set_x14(this, x)
    sg__MonsterTeleport_set_y14(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "14" )
  --textmacro instance: TM_addNewLocAt( "15" )
  if (id == 15) then
    sg__MonsterTeleport_set_x15(this, x)
    sg__MonsterTeleport_set_y15(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "15" )
  --textmacro instance: TM_addNewLocAt( "16" )
  if (id == 16) then
    sg__MonsterTeleport_set_x16(this, x)
    sg__MonsterTeleport_set_y16(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "16" )
  --textmacro instance: TM_addNewLocAt( "17" )
  if (id == 17) then
    sg__MonsterTeleport_set_x17(this, x)
    sg__MonsterTeleport_set_y17(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "17" )
  --textmacro instance: TM_addNewLocAt( "18" )
  if (id == 18) then
    sg__MonsterTeleport_set_x18(this, x)
    sg__MonsterTeleport_set_y18(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "18" )
  --textmacro instance: TM_addNewLocAt( "19" )
  if (id == 19) then
    sg__MonsterTeleport_set_x19(this, x)
    sg__MonsterTeleport_set_y19(this, l__y)
    return
  end
  --end of: TM_addNewLocAt( "19" )
end

function s__MonsterTeleport_addNewLoc(this, x, l__y)
  if (sg__MonsterTeleport_get_lastLocInd(this) >= s__MonsterTeleport_NB_MAX_LOC - 1) then
    --nombre limite de points atteint
    return false
    --erreur
  end
  sg__MonsterTeleport_set_lastLocInd(this, sg__MonsterTeleport_get_lastLocInd(this) + 1)
  s__MonsterTeleport_addNewLocAt(this, sg__MonsterTeleport_get_lastLocInd(this), x, l__y)
  if (sg__MonsterTeleport_get_lastLocInd(this) == 1) then
    s__MonsterTeleport_createUnit(this)
  end
  return true
  --c'est bon, pas d'erreur
end

function s__MonsterTeleport_destroyLastLoc(this)
  if (sg__MonsterTeleport_get_lastLocInd(this) == 1) then
    PauseTimer(sg__MonsterTeleport_get_t(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
  end
  if (sg__MonsterTeleport_get_lastLocInd(this) < 0) then
    return false
  end
  sg__MonsterTeleport_set_lastLocInd(this, sg__MonsterTeleport_get_lastLocInd(this) - 1)
  return true
end

function s__MonsterTeleport_getMonsterType(this)
  return sg__Monster_get_mt(this)
end

function s__MonsterTeleport_setMonsterType(this, mt)
  if (mt == 0 or mt == sg__Monster_get_mt(this)) then
    return false
  end
  sg__Monster_set_mt(this, mt)
  s__MonsterTeleport_createUnit(this)
  return true
end

function s__MonsterTeleport_temporarilyDisable(this, disablingTimer)
  if (sg__Monster_get_disablingTimer(this) == nil or sg__Monster_get_disablingTimer(this) == disablingTimer or TimerGetRemaining(disablingTimer) > TimerGetRemaining(sg__Monster_get_disablingTimer(this))) then
    sg__Monster_set_disablingTimer(this, disablingTimer)
    UnitRemoveAbility(sg__Monster_get_u(this), (s__MonsterType_immolationSkill[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), DISABLE_TRANSPARENCY)
    sg__Monster_set_vcTransparency(this, DISABLE_TRANSPARENCY)
  end
end

function s__MonsterTeleport_temporarilyEnable(this, disablingTimer)
  if (sg__Monster_get_disablingTimer(this) == disablingTimer) then
    --on ne réactive le mob que si le disablingTimer correspond bien au bon, celui restant le plus longtemps
    UnitAddAbility(sg__Monster_get_u(this), (s__MonsterType_immolationSkill[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), 0)
    sg__Monster_set_vcTransparency(this, 0)
  end
end

function s__MonsterTeleport_setBaseColor(this, colorString)
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return
    end
    sg__Monster_set_baseColorId(this, baseColorId)
    if (sg__Monster_get_u(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
end

function s__MonsterTeleport_setVertexColor(this, vcRed, vcGreen, vcBlue)
  sg__Monster_set_vcRed(this, vcRed)
  sg__Monster_set_vcGreen(this, vcGreen)
  sg__Monster_set_vcBlue(this, vcBlue)
  if (sg__Monster_get_u(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Monster_get_u(this), vcRed, vcGreen, vcBlue, sg__Monster_get_vcTransparency(this))
  end
end

function s__MonsterTeleport_reinitColor(this)
  local initBaseColorId = nil
  --changement valeurs des champs
  sg__Monster_set_baseColorId(this, -1)
  sg__Monster_set_vcRed(this, 100)
  sg__Monster_set_vcGreen(this, 100)
  sg__Monster_set_vcBlue(this, 100)
  sg__Monster_set_vcTransparency(this, 0)
  --changement couleur du mob actuel
  if (sg__Monster_get_u(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Monster_get_u(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
end

function s__MonsterTeleport_toString(this)
  local str = nil
  if (s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= nil and s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= "") then
    str = s__MonsterType_theAlias[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__MonsterType_label[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Monster_get_id(this)) .. CACHE_SEPARATEUR_PARAM
  if (sg__MonsterTeleport_get_sens(this) > 0) then
    str = str .. "string"
  else
    str = str .. "normal"
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. R2S(sg__MonsterTeleport_get_period(this)) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_angle(this)))
  --textmacro instance: TM_loc_toString( "0"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 0) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x0(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y0(this)))
  --end of: TM_loc_toString( "0"  )
  --textmacro instance: TM_loc_toString( "1"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 1) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x1(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y1(this)))
  --end of: TM_loc_toString( "1"  )
  --textmacro instance: TM_loc_toString( "2"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 2) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x2(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y2(this)))
  --end of: TM_loc_toString( "2"  )
  --textmacro instance: TM_loc_toString( "3"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 3) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x3(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y3(this)))
  --end of: TM_loc_toString( "3"  )
  --textmacro instance: TM_loc_toString( "4"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 4) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x4(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y4(this)))
  --end of: TM_loc_toString( "4"  )
  --textmacro instance: TM_loc_toString( "5"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 5) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x5(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y5(this)))
  --end of: TM_loc_toString( "5"  )
  --textmacro instance: TM_loc_toString( "6"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 6) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x6(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y6(this)))
  --end of: TM_loc_toString( "6"  )
  --textmacro instance: TM_loc_toString( "7"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 7) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x7(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y7(this)))
  --end of: TM_loc_toString( "7"  )
  --textmacro instance: TM_loc_toString( "8"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 8) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x8(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y8(this)))
  --end of: TM_loc_toString( "8"  )
  --textmacro instance: TM_loc_toString( "9"  )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 9) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x9(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y9(this)))
  --end of: TM_loc_toString( "9"  )
  --textmacro instance: TM_loc_toString( "10" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 10) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x10(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y10(this)))
  --end of: TM_loc_toString( "10" )
  --textmacro instance: TM_loc_toString( "11" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 11) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x11(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y11(this)))
  --end of: TM_loc_toString( "11" )
  --textmacro instance: TM_loc_toString( "12" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 12) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x12(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y12(this)))
  --end of: TM_loc_toString( "12" )
  --textmacro instance: TM_loc_toString( "13" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 13) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x13(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y13(this)))
  --end of: TM_loc_toString( "13" )
  --textmacro instance: TM_loc_toString( "14" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 14) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x14(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y14(this)))
  --end of: TM_loc_toString( "14" )
  --textmacro instance: TM_loc_toString( "15" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 15) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x15(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y15(this)))
  --end of: TM_loc_toString( "15" )
  --textmacro instance: TM_loc_toString( "16" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 16) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x16(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y16(this)))
  --end of: TM_loc_toString( "16" )
  --textmacro instance: TM_loc_toString( "17" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 17) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x17(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y17(this)))
  --end of: TM_loc_toString( "17" )
  --textmacro instance: TM_loc_toString( "18" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 18) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x18(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y18(this)))
  --end of: TM_loc_toString( "18" )
  --textmacro instance: TM_loc_toString( "19" )
  if (sg__MonsterTeleport_get_lastLocInd(this) < 19) then
    return str
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x19(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y19(this)))
  --end of: TM_loc_toString( "19" )
  return str
end


function InitMonsterTeleport()
  MonsterTeleport_monsterTeleportHashtable = InitHashtable()
end




--library MonsterTeleport ends
--library Caster:






--color


function s__Caster_isEnabled(this)
  return sg__Caster_get_enabled(this)
end

function s__Caster_getId(this)
  return sg__Caster_get_id(this)
end

function s__Caster_setId(this, id)
  if (id == sg__Caster_get_id(this)) then
    return this
  end
  CasterHashtableSetCasterId(this, sg__Caster_get_id(this), id)
  sg__Caster_set_id(this, id)
  return this
end

function s__Caster_getX(this)
  return sg__Caster_get_x(this)
end

function s__Caster_getY(this)
  return sg__Caster_get_y(this)
end

function s__Caster_getRange(this)
  return (s__CasterType_range[(sg__Caster_get_casterType(this))])
  -- INLINED!!
end

function s__Caster_getProjectileSpeed(this)
  return (s__CasterType_projectileSpeed[(sg__Caster_get_casterType(this))])
  -- INLINED!!
end

function s__Caster_getCasterUnit(this)
  return sg__Caster_get_casterUnit(this)
end

function s__Caster_getProjectileMonsterType(this)
  return (s__CasterType_projectileMonsterType[(sg__Caster_get_casterType(this))])
  -- INLINED!!
end

function s__Caster_getLoadTime(this)
  return (s__CasterType_loadTime[(sg__Caster_get_casterType(this))])
  -- INLINED!!
end

function s__Caster_getCasterType(this)
  return sg__Caster_get_casterType(this)
end

function s__Caster_getAnimation(this)
  return (s__CasterType_animation[(sg__Caster_get_casterType(this))])
  -- INLINED!!
end


function s__Caster_create(casterType, x, l__y, angle)
  local c = s__Caster__allocate()
  sg__Caster_set_casterType(c, casterType)
  sg__Caster_set_x(c, x)
  sg__Caster_set_y(c, l__y)
  sg__Caster_set_angle(c, angle)
  sg__Caster_set_id(c, GetNextMonsterId())
  CasterHashtableSetCasterId(c, NO_ID, sg__Caster_get_id(c))
  sg__Caster_set_disablingTimer(c, nil)
  --color
  sg__Caster_set_baseColorId(c, -1)
  sg__Caster_set_vcRed(c, 100)
  sg__Caster_set_vcGreen(c, 100)
  sg__Caster_set_vcBlue(c, 100)
  sg__Caster_set_vcTransparency(c, 0)
  return c
end


function s__Caster_enable(this)
  sg__Caster_set_nbEscapersInRange(this, 0)
  sg__Caster_set_canShoot(this, true)
  sg__Caster_set_casterUnit(this, NewImmobileMonster((s__CasterType_casterMonsterType[(sg__Caster_get_casterType(this))]), sg__Caster_get_x(this), sg__Caster_get_y(this), sg__Caster_get_angle(this)))
  -- INLINED!!
  SetUnitUserData(sg__Caster_get_casterUnit(this), sg__Caster_get_id(this))
  sg__Caster_set_trg_unitWithinRange(this, CreateTrigger())
  TriggerRegisterUnitInRangeSimple(sg__Caster_get_trg_unitWithinRange(this), (s__CasterType_range[(sg__Caster_get_casterType(this))]), sg__Caster_get_casterUnit(this))
  -- INLINED!!
  TriggerAddAction(sg__Caster_get_trg_unitWithinRange(this), CasterUnitWithinRange_Actions)
  SaveInteger(Caster_casterHashtable, 0, GetHandleId(sg__Caster_get_trg_unitWithinRange(this)), (this))
  sg__Caster_set_t(this, CreateTimer())
  SaveInteger(Caster_casterHashtable, 1, GetHandleId(sg__Caster_get_t(this)), (this))
  sg__Caster_set_enabled(this, true)
end

function s__Caster_disable(this)
  RemoveSavedInteger(Caster_casterHashtable, 0, GetHandleId(sg__Caster_get_trg_unitWithinRange(this)))
  DestroyTrigger(sg__Caster_get_trg_unitWithinRange(this))
  sg__Caster_set_trg_unitWithinRange(this, nil)
  RemoveUnit(sg__Caster_get_casterUnit(this))
  sg__Caster_set_casterUnit(this, nil)
  RemoveSavedInteger(Caster_casterHashtable, 1, GetHandleId(sg__Caster_get_t(this)))
  DestroyTimer(sg__Caster_get_t(this))
  sg__Caster_set_t(this, nil)
  sg__Caster_set_disablingTimer(this, nil)
end

function s__Caster_killUnit(this)
  KillUnit(sg__Caster_get_casterUnit(this))
  RemoveSavedInteger(Caster_casterHashtable, 0, GetHandleId(sg__Caster_get_trg_unitWithinRange(this)))
  DestroyTrigger(sg__Caster_get_trg_unitWithinRange(this))
  sg__Caster_set_trg_unitWithinRange(this, nil)
  RemoveSavedInteger(Caster_casterHashtable, 1, GetHandleId(sg__Caster_get_t(this)))
  DestroyTimer(sg__Caster_get_t(this))
  sg__Caster_set_t(this, nil)
end

function s__Caster_refresh(this)
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Caster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Caster_get_disablingTimer(this)
  local isCasterAlive = IsUnitAliveBJ(sg__Caster_get_casterUnit(this))
  if (sg__Caster_get_casterUnit(this) ~= nil) then
    s__Caster_disable(this)
    s__Caster_enable(this)
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__Caster_temporarilyDisable(this, disablingTimer)
    end
    if (not isCasterAlive) then
      s__Caster_killUnit(this)
    end
    if (sg__Caster_get_baseColorId(this) ~= -1) then
      if (sg__Caster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Caster_get_casterUnit(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Caster_get_casterUnit(this), ConvertPlayerColor(sg__Caster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Caster_get_casterUnit(this), sg__Caster_get_vcRed(this), sg__Caster_get_vcGreen(this), sg__Caster_get_vcBlue(this), sg__Caster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
end

function s__Caster_onDestroy(this)
  s__Caster_disable(this)
  sc__CasterArray_setCasterNull(s__Level_casters[sg__Caster_get_level(this)], sg__Caster_get_arrayId(this))
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Caster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Caster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__CASTER, (sg__Caster_get_id(this)))
  -- INLINED!!
end

--Generated destructor of Caster
function s__Caster_deallocate(this)
  if this == nil then
    return
  elseif (si__Caster_V[this] ~= -1) then
    return
  end
  s__Caster_onDestroy(this)
  si__Caster_V[this] = si__Caster_F
  si__Caster_F = this
end

function s__Caster_escaperOutOfRangeOrDead(this, escaper)
  local i = 0
  while true do
    if (escaper == sg___Caster_escapersInRange_get(sg__Caster_get_escapersInRange(this) + i) or i == sg__Caster_get_nbEscapersInRange(this)) then
      break
    end
    i = i + 1
  end
  if (i < sg__Caster_get_nbEscapersInRange(this)) then
    while true do
      if (i == sg__Caster_get_nbEscapersInRange(this) - 1) then
        break
      end
      sg___Caster_escapersInRange_set(sg__Caster_get_escapersInRange(this) + i, sg___Caster_escapersInRange_get(sg__Caster_get_escapersInRange(this) + i + 1))
      i = i + 1
    end
    sg__Caster_set_nbEscapersInRange(this, sg__Caster_get_nbEscapersInRange(this) - 1)
  end
end

function s__Caster_temporarilyDisable(this, disablingTimer)
  if (sg__Caster_get_disablingTimer(this) == nil or sg__Caster_get_disablingTimer(this) == disablingTimer or TimerGetRemaining(disablingTimer) > TimerGetRemaining(sg__Caster_get_disablingTimer(this))) then
    sg__Caster_set_disablingTimer(this, disablingTimer)
    UnitRemoveAbility(sg__Caster_get_casterUnit(this), (s__MonsterType_immolationSkill[((s__CasterType_casterMonsterType[(sg__Caster_get_casterType(this))]))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Caster_get_casterUnit(this), sg__Caster_get_vcRed(this), sg__Caster_get_vcGreen(this), sg__Caster_get_vcBlue(this), DISABLE_TRANSPARENCY)
    sg__Caster_set_vcTransparency(this, DISABLE_TRANSPARENCY)
    sg__Caster_set_enabled(this, false)
  end
end

function s__Caster_temporarilyEnable(this, disablingTimer)
  if (sg__Caster_get_disablingTimer(this) == disablingTimer) then
    --on ne réactive le mob que si le disablingTimer correspond bien au bon, celui restant le plus longtemps
    UnitAddAbility(sg__Caster_get_casterUnit(this), (s__MonsterType_immolationSkill[((s__CasterType_casterMonsterType[(sg__Caster_get_casterType(this))]))]))
    -- INLINED!!
    SetUnitVertexColorBJ(sg__Caster_get_casterUnit(this), sg__Caster_get_vcRed(this), sg__Caster_get_vcGreen(this), sg__Caster_get_vcBlue(this), 0)
    sg__Caster_set_vcTransparency(this, 0)
    sg__Caster_set_enabled(this, true)
  end
end

function s__Caster_setBaseColor(this, colorString)
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return
    end
    sg__Caster_set_baseColorId(this, baseColorId)
    if (sg__Caster_get_casterUnit(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Caster_get_casterUnit(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Caster_get_casterUnit(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
end

function s__Caster_setVertexColor(this, vcRed, vcGreen, vcBlue)
  sg__Caster_set_vcRed(this, vcRed)
  sg__Caster_set_vcGreen(this, vcGreen)
  sg__Caster_set_vcBlue(this, vcBlue)
  if (sg__Caster_get_casterUnit(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Caster_get_casterUnit(this), vcRed, vcGreen, vcBlue, sg__Caster_get_vcTransparency(this))
  end
end

function s__Caster_reinitColor(this)
  local initBaseColorId = nil
  --changement valeurs des champs
  sg__Caster_set_baseColorId(this, -1)
  sg__Caster_set_vcRed(this, 100)
  sg__Caster_set_vcGreen(this, 100)
  sg__Caster_set_vcBlue(this, 100)
  sg__Caster_set_vcTransparency(this, 0)
  --changement couleur du mob actuel
  if (sg__Caster_get_casterUnit(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Caster_get_casterUnit(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Caster_get_casterUnit(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Caster_get_casterUnit(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Caster_get_casterUnit(this), sg__Caster_get_vcRed(this), sg__Caster_get_vcGreen(this), sg__Caster_get_vcBlue(this), sg__Caster_get_vcTransparency(this))
  end
end

function s__Caster_toString(this)
  local str = nil
  if (s__CasterType_theAlias[sg__Caster_get_casterType(this)] ~= nil and s__CasterType_theAlias[sg__Caster_get_casterType(this)] ~= "") then
    str = s__CasterType_theAlias[sg__Caster_get_casterType(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__CasterType_label[sg__Caster_get_casterType(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Caster_get_id(this)) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__Caster_get_x(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__Caster_get_y(this)))
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__Caster_get_angle(this)))
  return str
end



function InitCaster()
  Caster_casterHashtable = InitHashtable()
end


--library Caster ends
--library ClearMobArray:




function s__ClearMobArray_create()
  local cma = s__ClearMobArray__allocate()
  s__ClearMobArray_lastInstance[cma] = -1
  return cma
end

function s__ClearMobArray_getFirstEmpty(this)
  local i = 0
  while true do
    if (i > s__ClearMobArray_lastInstance[this] or s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] == 0) then
      break
    end
    i = i + 1
  end
  return i
end

function s__ClearMobArray_get(this, arrayId)
  if (arrayId < 0 or arrayId > s__ClearMobArray_lastInstance[this]) then
    return 0
  end
  return s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + arrayId]
end

function s__ClearMobArray_getLastInstanceId(this)
  return s__ClearMobArray_lastInstance[this]
end

function s__ClearMobArray_new(this, triggerMobId, disableDuration, initialize)
  --local integer n = .getFirstEmpty()
  local n = s__ClearMobArray_lastInstance[this] + 1
  if (n >= MAX_NB_CLEAR_MOB_BY_LEVEL) then
    return 0
  end
  --if (n > .lastInstance) then
  s__ClearMobArray_lastInstance[this] = n
  --endif
  s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + n] = s__ClearMob_create(triggerMobId, disableDuration)
  if (initialize) then
    s__ClearMob_initialize(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + n])
  end
  s__ClearMob_level[s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + n]] = s__LevelArray_getLevelFromClearMobArray(udg_levels, this)
  s__ClearMob_arrayId[s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + n]] = n
  return s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + n]
end

function s__ClearMobArray_count(this)
  local nb = 0
  local i = 0
  while true do
    if (i > s__ClearMobArray_lastInstance[this]) then
      break
    end
    if (s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  return nb
end

function s__ClearMobArray_onDestroy(this)
  local i = 0
  while true do
    if (i > s__ClearMobArray_lastInstance[this]) then
      break
    end
    if (s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] ~= 0) then
      s__ClearMob_deallocate(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])
    end
    i = i + 1
  end
  s__ClearMobArray_lastInstance[this] = -1
end

--Generated destructor of ClearMobArray
function s__ClearMobArray_deallocate(this)
  if this == nil then
    return
  elseif (si__ClearMobArray_V[this] ~= -1) then
    return
  end
  s__ClearMobArray_onDestroy(this)
  si__ClearMobArray_V[this] = si__ClearMobArray_F
  si__ClearMobArray_F = this
end

function s__ClearMobArray_setClearMobNull(this, clearMobArrayId)
  s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + clearMobArrayId] = 0
end

function s__ClearMobArray_clearClearMob(this, clearMobId)
  local i = 0
  while true do
    if (s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] == (clearMobId) or i > s__ClearMobArray_lastInstance[this]) then
      break
    end
    i = i + 1
  end
  if (i > s__ClearMobArray_lastInstance[this]) then
    return false
  end
  s__ClearMob_deallocate(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])
  return true
end

function s__ClearMobArray_getClearMobNear(this, x, l__y)
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > s__ClearMobArray_lastInstance[this]) then
      break
    end
    if (s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] ~= 0 and s__MonsterOrCaster_getUnit((s__ClearMob_triggerMob[(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])])) ~= nil) then
      -- INLINED!!
      xMob = GetUnitX(s__MonsterOrCaster_getUnit((s__ClearMob_triggerMob[(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])])))
      -- INLINED!!
      yMob = GetUnitY(s__MonsterOrCaster_getUnit((s__ClearMob_triggerMob[(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])])))
      -- INLINED!!
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        return s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i]
      end
    end
    i = i + 1
  end
  return 0
end

function s__ClearMobArray_initializeClearMobs(this)
  local i = 0
  while true do
    if (i > s__ClearMobArray_lastInstance[this]) then
      break
    end
    if (s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] ~= 0) then
      s__ClearMob_initialize(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])
    end
    i = i + 1
  end
end

function s__ClearMobArray_closeClearMobs(this)
  local i = 0
  while true do
    if (i > s__ClearMobArray_lastInstance[this]) then
      break
    end
    if (s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] ~= 0) then
      s__ClearMob_close(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])
    end
    i = i + 1
  end
end



--library ClearMobArray ends
--library CommandExecution:




function ExecuteCommandSingle(escaper, cmd)
  if (not ExecuteCommandAll(escaper, cmd)) then
    if (not (((s__Escaper_p[(escaper)]) == Player(0) and udg_areRedRightsOn) or (s__Escaper_canCheatB[(escaper)]))) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown command or not enough rights"))
      -- INLINED!!
      return
    end
    if (not ExecuteCommandRed(escaper, cmd)) then
      if (not (s__Escaper_canCheatB[(escaper)])) then
        -- INLINED!!
        Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown command or not enough rights"))
        -- INLINED!!
        return
      end
      if (not ExecuteCommandCheat(escaper, cmd)) then
        if (not ExecuteCommandMake(escaper, cmd)) then
          if (not (s__Escaper_isMaximaxouB[(escaper)])) then
            -- INLINED!!
            Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown command or not enough rights"))
            -- INLINED!!
            return
          end
          if (not ExecuteCommandMax(escaper, cmd)) then
            if (not (s__Escaper_isTrueMaximaxouB[(escaper)])) then
              -- INLINED!!
              Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown command or not enough rights"))
              -- INLINED!!
              return
            end
            if (not ExecuteCommandTrueMax(escaper, cmd)) then
              Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(escaper)])), -1, ERROR_TEXT_COLORCODE, ("unknown command"))
              -- INLINED!!
            end
          end
        end
      end
    end
  end
end


function ExecuteCommand(escaper, cmd)
  local singleCommands = __jarray("")
  local char = nil
  local i = nil
  local nbParenthesesNonFermees = 0
  local singleCommandId = 0
  local charId = nil

  --ex : "-(abc def)" --> "-abc def"
  if (SubStringBJ(cmd, 2, 2) == "(" and SubStringBJ(cmd, StringLength(cmd), StringLength(cmd)) == ")") then
    cmd = SubStringBJ(cmd, 1, 1) .. SubStringBJ(cmd, 3, StringLength(cmd) - 1)
  end

  charId = 2
  while true do
    if (charId > StringLength(cmd)) then
      break
    end
    char = SubStringBJ(cmd, charId, charId)
    if (char == ",") then
      if (nbParenthesesNonFermees <= 0) then
        singleCommandId = singleCommandId + 1
        charId = charId + 1
        --on saute un caractère pour ne pas prendre en compte l'espace après la virgule
      end
    else
      if (char == "(") then
        nbParenthesesNonFermees = nbParenthesesNonFermees + 1
      else
        if (char == ")") then
          nbParenthesesNonFermees = nbParenthesesNonFermees - 1
        end
      end
    end
    if (char ~= "," or nbParenthesesNonFermees > 0) then
      singleCommands[singleCommandId] = singleCommands[singleCommandId] .. char
    end
    charId = charId + 1
  end
  i = 0
  while true do
    if (i > singleCommandId) then
      break
    end
    if (singleCommands[i] ~= nil and singleCommands[i] ~= "") then
      ExecuteCommandSingle(escaper, "-" .. singleCommands[i])
    end
    i = i + 1
  end
end


function Trig_Command_execution_Actions()
  if (not (CmdName((GetEventPlayerChatString())) ~= nil)) then
    -- INLINED!!
    return
  end
  ExecuteCommand((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (GetPlayerId(GetTriggerPlayer()))]), GetEventPlayerChatString())
  -- INLINED!!
end



--===========================================================================
function Init_Command_execution()
  gg_trg_Command_execution = CreateTrigger()
  TriggerAddAction(gg_trg_Command_execution, Trig_Command_execution_Actions)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(0), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(1), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(2), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(3), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(4), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(5), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(6), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(7), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(8), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(9), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(10), "-", false)
  TriggerRegisterPlayerChatEvent(gg_trg_Command_execution, Player(11), "-", false)
end




--library CommandExecution ends
--library MakeClearMob:




function s__MakeClearMob_create(maker, disableDuration)
  local m = nil
  if (maker == nil or (disableDuration ~= 0 and (disableDuration > CLEAR_MOB_MAX_DURATION or disableDuration < ClearMob_FRONT_MONTANT_DURATION))) then
    return 0
  end
  m = s__MakeClearMob__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "createClearMob"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  s__MakeClearMob_lastClickedMobInd[m] = -1
  s__MakeClearMob_pointeurClickedMob[m] = -1
  s__MakeClearMob_disableDuration[m] = disableDuration
  s__MakeClearMob_clearMob[m] = 0
  return m
end

function s__MakeClearMob_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeClearMob_clickMade(this, monsterOrCasterId)
  local escaper = Hero2Escaper(s__Make_maker[this])
  if (s__MakeClearMob_pointeurClickedMob[this] == -1) then
    if ((LoadInteger(ClearMob__htClearMob, 0, (monsterOrCasterId))) ~= 0) then
      --le mob est déjà trigger mob d'un clear mob // INLINED!!
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("this monster is already a trigger mob of a clear mob"))
      -- INLINED!!
      return
    else
      s__MakeClearMob_clearMob[this] = s__ClearMobArray_new(s__Level_clearMobs[s__Escaper_getMakingLevel(escaper)], monsterOrCasterId, s__MakeClearMob_disableDuration[this], true)
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("trigger mob added for a new clear mob"))
      -- INLINED!!
    end
  else
    --le trigger mob est créé, essai d'ajout d'un block mob
    --vérification que le clear mob existe toujours
    if ((s__ClearMob_triggerMob[(s__MakeClearMob_clearMob[this])]) == 0) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("the clear mob you are working on has been removed"))
      -- INLINED!!
      s__Escaper_destroyMake(escaper)
      return
    end
    if (s__MonsterOrCasterStack_containsMob((s__ClearMob_blockMobs[(s__MakeClearMob_clearMob[this])]), monsterOrCasterId)) then
      --le mob est déjà block mob du clear mob // INLINED!!
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("this monster is already a block mob of this clear mob"))
      -- INLINED!!
      return
    else
      s__ClearMob_addBlockMob(s__MakeClearMob_clearMob[this], monsterOrCasterId)
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("block mob added"))
      -- INLINED!!
    end
  end
  s__MakeClearMob_pointeurClickedMob[this] = s__MakeClearMob_pointeurClickedMob[this] + 1
  s__MakeClearMob_lastClickedMobInd[this] = s__MakeClearMob_pointeurClickedMob[this]
end

function s__MakeClearMob_cancelLastAction(this)
  if (s__MakeClearMob_pointeurClickedMob[this] > 0) then
    --cas où un block mob doit être annulé
    if (s__ClearMob_removeLastBlockMob(s__MakeClearMob_clearMob[this])) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("last block mob removed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("error, couldn't remove the last block mob"))
      -- INLINED!!
    end
  elseif (s__MakeClearMob_pointeurClickedMob[this] == 0) then
    --cas où le trigger mob est à supprimer, et donc le clear mob en entier
    s__ClearMob_deallocate(s__MakeClearMob_clearMob[this])
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("clear mob removed"))
    -- INLINED!!
  else
    return false
  end
  s__MakeClearMob_pointeurClickedMob[this] = s__MakeClearMob_pointeurClickedMob[this] - 1
  return true
end

function s__MakeClearMob_redoLastAction(this)
  local escaper = Hero2Escaper(s__Make_maker[this])
  if (s__MakeClearMob_pointeurClickedMob[this] == s__MakeClearMob_lastClickedMobInd[this]) then
    return false
  end
  s__MakeClearMob_pointeurClickedMob[this] = s__MakeClearMob_pointeurClickedMob[this] + 1
  if (s__MakeClearMob_pointeurClickedMob[this] > 0) then
    --cas où un block mob doit être annulé
    if (s__ClearMob_addBlockMob(s__MakeClearMob_clearMob[this], s___MakeClearMob_clickedMobs[s__MakeClearMob_clickedMobs[this] + s__MakeClearMob_pointeurClickedMob[this]])) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("block mob added"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("error, couldn't add the block mob"))
      -- INLINED!!
    end
  else
    --cas où le trigger mob est à recréer, et donc le clear mob en entier
    s__MakeClearMob_clearMob[this] = s__ClearMobArray_new(s__Level_clearMobs[s__Escaper_getMakingLevel(escaper)], s___MakeClearMob_clickedMobs[s__MakeClearMob_clickedMobs[this] + s__MakeClearMob_pointeurClickedMob[this]], s__MakeClearMob_disableDuration[this], true)
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("trigger mob added for a new clear mob"))
    -- INLINED!!
  end
  return true
end




--library MakeClearMob ends
--library MakeDeleteClearMob:



function s__MakeDeleteClearMob_create(maker)
  local m = nil
  if (maker == nil) then
    return 0
  end
  m = s__MakeDeleteClearMob__allocate()
  s__Make_maker[m] = maker
  s__Make_makerOwner[m] = GetOwningPlayer(maker)
  s__Make_kind[m] = "deleteClearMob"
  s__Make_t[m] = CreateTrigger()
  TriggerAddAction(s__Make_t[m], Make_GetActions(s__Make_kind[m]))
  TriggerRegisterUnitEvent(s__Make_t[m], maker, EVENT_UNIT_ISSUED_POINT_ORDER)
  return m
end

function s__MakeDeleteClearMob_onDestroy(this)
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
end

function s__MakeDeleteClearMob_clickMade(this, monsterOrCasterId)
  local escaper = Hero2Escaper(s__Make_maker[this])
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (monsterOrCasterId)))
  -- INLINED!!
  if (clearMob ~= 0) then
    --le mob est trigger mob d'un clear mob, c'est bon, delete du clear mob
    s__ClearMob_deallocate(clearMob)
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("clear mob removed"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("this monster is not a trigger mob of a clear mob"))
    -- INLINED!!
  end
end

function s__MakeDeleteClearMob_cancelLastAction(this)
  return false
end

function s__MakeDeleteClearMob_redoLastAction(this)
  return false
end




--library MakeDeleteClearMob ends
--library MonsterMultiplePatrolsArray:



function s__MonsterMultiplePatrolsArray_create()
  local ma = s__MonsterMultiplePatrolsArray__allocate()
  sg__MonsterMultiplePatrolsArray_set_lastInstance(ma, -1)
  return ma
end

function s__MonsterMultiplePatrolsArray_getFirstEmpty(this)
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this) or sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) == 0) then
      break
    end
    i = i + 1
  end
  return i
end

function s__MonsterMultiplePatrolsArray_get(this, arrayId)
  if (arrayId < 0 or arrayId > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
    return 0
  end
  return sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + arrayId)
end

function s__MonsterMultiplePatrolsArray_getLastInstanceId(this)
  return sg__MonsterMultiplePatrolsArray_get_lastInstance(this)
end

function s__MonsterMultiplePatrolsArray_new(this, mt, mode, createUnit)
  local n = nil
  if (mode ~= "normal" and mode ~= "string") then
    return 0
  end
  --set n = .getFirstEmpty()
  n = sg__MonsterMultiplePatrolsArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    return 0
  end
  --if (n > .lastInstance) then
  sg__MonsterMultiplePatrolsArray_set_lastInstance(this, n)
  --endif
  sg___MonsterMultiplePatrolsArray_monsters_set(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n, s__MonsterMultiplePatrols_create(mt, mode))
  if (createUnit) then
    s__MonsterMultiplePatrols_createUnit(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n))
  end
  sg__Monster_set_level(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n), s__LevelArray_getLevelFromMonsterMultiplePatrolsArray(udg_levels, this))
  sg__Monster_set_arrayId(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n), n)
  return sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n)
end

function s__MonsterMultiplePatrolsArray_count(this)
  local nb = 0
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  return nb
end

function s__MonsterMultiplePatrolsArray_onDestroy(this)
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0) then
      sc__Monster_deallocate(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  sg__MonsterMultiplePatrolsArray_set_lastInstance(this, -1)
end

--Generated destructor of MonsterMultiplePatrolsArray
function s__MonsterMultiplePatrolsArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterMultiplePatrolsArray_V[this] ~= -1) then
    return
  end
  s__MonsterMultiplePatrolsArray_onDestroy(this)
  si__MonsterMultiplePatrolsArray_V[this] = si__MonsterMultiplePatrolsArray_F
  si__MonsterMultiplePatrolsArray_F = this
end

function s__MonsterMultiplePatrolsArray_setMonsterNull(this, monsterArrayId)
  sg___MonsterMultiplePatrolsArray_monsters_set(sg__MonsterMultiplePatrolsArray_get_monsters(this) + monsterArrayId, 0)
end

function s__MonsterMultiplePatrolsArray_clearMonster(this, monsterId)
  local i = 0
  while true do
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) == (monsterId) or i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    i = i + 1
  end
  if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
    return false
  end
  sc__Monster_deallocate(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
  return true
end

function s__MonsterMultiplePatrolsArray_getMonsterNear(this, x, l__y)
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0 and sg__Monster_get_u(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)) ~= nil) then
      xMob = GetUnitX(sg__Monster_get_u(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)))
      yMob = GetUnitY(sg__Monster_get_u(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)))
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        return sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)
      end
    end
    i = i + 1
  end
  return 0
end

function s__MonsterMultiplePatrolsArray_createMonsters(this)
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0) then
      s__MonsterMultiplePatrols_createUnit(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterMultiplePatrolsArray_removeMonsters(this)
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0) then
      s__MonsterMultiplePatrols_removeUnit(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterMultiplePatrolsArray_recreateMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)))) == mt and sg__Monster_get_u(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)) ~= nil) then
      -- INLINED!!
      s__MonsterMultiplePatrols_createUnit(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterMultiplePatrolsArray_removeMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)))) == mt) then
      -- INLINED!!
      sc__Monster_deallocate(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end



--library MonsterMultiplePatrolsArray ends
--library MonsterNoMoveArray:



function s__MonsterNoMoveArray_create()
  local ma = s__MonsterNoMoveArray__allocate()
  sg__MonsterNoMoveArray_set_lastInstance(ma, -1)
  return ma
end

function s__MonsterNoMoveArray_getFirstEmpty(this)
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this) or sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) == 0) then
      break
    end
    i = i + 1
  end
  return i
end

function s__MonsterNoMoveArray_get(this, arrayId)
  if (arrayId < 0 or arrayId > sg__MonsterNoMoveArray_get_lastInstance(this)) then
    return 0
  end
  return sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + arrayId)
end

function s__MonsterNoMoveArray_getLastInstanceId(this)
  return sg__MonsterNoMoveArray_get_lastInstance(this)
end

function s__MonsterNoMoveArray_new(this, mt, x, l__y, angle, createUnit)
  --local integer n = .getFirstEmpty()
  local n = sg__MonsterNoMoveArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    return 0
  end
  --if (n > .lastInstance) then
  sg__MonsterNoMoveArray_set_lastInstance(this, n)
  --endif
  sg___MonsterNoMoveArray_monsters_set(sg__MonsterNoMoveArray_get_monsters(this) + n, s__MonsterNoMove_create(mt, x, l__y, angle))
  if (createUnit) then
    s__MonsterNoMove_createUnit(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + n))
  end
  sg__Monster_set_level(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + n), s__LevelArray_getLevelFromMonsterNoMoveArray(udg_levels, this))
  sg__Monster_set_arrayId(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + n), n)
  return sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + n)
end

function s__MonsterNoMoveArray_count(this)
  local nb = 0
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  return nb
end

function s__MonsterNoMoveArray_onDestroy(this)
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0) then
      sc__Monster_deallocate(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  sg__MonsterNoMoveArray_set_lastInstance(this, -1)
end

--Generated destructor of MonsterNoMoveArray
function s__MonsterNoMoveArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterNoMoveArray_V[this] ~= -1) then
    return
  end
  s__MonsterNoMoveArray_onDestroy(this)
  si__MonsterNoMoveArray_V[this] = si__MonsterNoMoveArray_F
  si__MonsterNoMoveArray_F = this
end

function s__MonsterNoMoveArray_setMonsterNull(this, monsterArrayId)
  sg___MonsterNoMoveArray_monsters_set(sg__MonsterNoMoveArray_get_monsters(this) + monsterArrayId, 0)
end

function s__MonsterNoMoveArray_clearMonster(this, monsterId)
  local i = 0
  while true do
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) == (monsterId) or i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    i = i + 1
  end
  if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
    return false
  end
  sc__Monster_deallocate(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
  return true
end

function s__MonsterNoMoveArray_getMonsterNear(this, x, l__y)
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0 and sg__Monster_get_u(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)) ~= nil) then
      xMob = GetUnitX(sg__Monster_get_u(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)))
      yMob = GetUnitY(sg__Monster_get_u(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)))
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        return sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)
      end
    end
    i = i + 1
  end
  return 0
end

function s__MonsterNoMoveArray_createMonsters(this)
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0) then
      s__MonsterNoMove_createUnit(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterNoMoveArray_removeMonsters(this)
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0) then
      s__MonsterNoMove_removeUnit(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterNoMoveArray_recreateMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)))) == mt and sg__Monster_get_u(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)) ~= nil) then
      -- INLINED!!
      s__MonsterNoMove_createUnit(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterNoMoveArray_removeMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)))) == mt) then
      -- INLINED!!
      sc__Monster_deallocate(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end



--library MonsterNoMoveArray ends
--library MonsterSimplePatrolArray:




function s__MonsterSimplePatrolArray_create()
  local ma = s__MonsterSimplePatrolArray__allocate()
  sg__MonsterSimplePatrolArray_set_lastInstance(ma, -1)
  return ma
end

function s__MonsterSimplePatrolArray_getFirstEmpty(this)
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this) or sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) == 0) then
      break
    end
    i = i + 1
  end
  return i
end

function s__MonsterSimplePatrolArray_get(this, arrayId)
  if (arrayId < 0 or arrayId > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
    return 0
  end
  return sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + arrayId)
end

function s__MonsterSimplePatrolArray_getLastInstanceId(this)
  return sg__MonsterSimplePatrolArray_get_lastInstance(this)
end

function s__MonsterSimplePatrolArray_new(this, mt, x1, y1, x2, y2, createUnit)
  --local integer n = .getFirstEmpty()
  local n = sg__MonsterSimplePatrolArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    return 0
  end
  --if (n > .lastInstance) then
  sg__MonsterSimplePatrolArray_set_lastInstance(this, n)
  --endif
  sg___MonsterSimplePatrolArray_monsters_set(sg__MonsterSimplePatrolArray_get_monsters(this) + n, s__MonsterSimplePatrol_create(mt, x1, y1, x2, y2))
  if (createUnit) then
    s__MonsterSimplePatrol_createUnit(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + n))
  end
  sg__Monster_set_level(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + n), s__LevelArray_getLevelFromMonsterSimplePatrolArray(udg_levels, this))
  sg__Monster_set_arrayId(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + n), n)
  return sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + n)
end

function s__MonsterSimplePatrolArray_count(this)
  local nb = 0
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  return nb
end

function s__MonsterSimplePatrolArray_onDestroy(this)
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0) then
      sc__Monster_deallocate(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  sg__MonsterSimplePatrolArray_set_lastInstance(this, -1)
end

--Generated destructor of MonsterSimplePatrolArray
function s__MonsterSimplePatrolArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterSimplePatrolArray_V[this] ~= -1) then
    return
  end
  s__MonsterSimplePatrolArray_onDestroy(this)
  si__MonsterSimplePatrolArray_V[this] = si__MonsterSimplePatrolArray_F
  si__MonsterSimplePatrolArray_F = this
end

function s__MonsterSimplePatrolArray_setMonsterNull(this, monsterArrayId)
  sg___MonsterSimplePatrolArray_monsters_set(sg__MonsterSimplePatrolArray_get_monsters(this) + monsterArrayId, 0)
end

function s__MonsterSimplePatrolArray_clearMonster(this, monsterId)
  local i = 0
  while true do
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) == (monsterId) or i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    i = i + 1
  end
  if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
    return false
  end
  sc__Monster_deallocate(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
  return true
end

function s__MonsterSimplePatrolArray_getMonsterNear(this, x, l__y)
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0 and sg__Monster_get_u(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)) ~= nil) then
      xMob = GetUnitX(sg__Monster_get_u(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)))
      yMob = GetUnitY(sg__Monster_get_u(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)))
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        return sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)
      end
    end
    i = i + 1
  end
  return 0
end

function s__MonsterSimplePatrolArray_createMonsters(this)
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0) then
      s__MonsterSimplePatrol_createUnit(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterSimplePatrolArray_removeMonsters(this)
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0) then
      s__MonsterSimplePatrol_removeUnit(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterSimplePatrolArray_recreateMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)))) == mt and sg__Monster_get_u(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)) ~= nil) then
      -- INLINED!!
      s__MonsterSimplePatrol_createUnit(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterSimplePatrolArray_removeMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)))) == mt) then
      -- INLINED!!
      sc__Monster_deallocate(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end



--library MonsterSimplePatrolArray ends
--library MonsterTeleportArray:



function s__MonsterTeleportArray_create()
  local ma = s__MonsterTeleportArray__allocate()
  sg__MonsterTeleportArray_set_lastInstance(ma, -1)
  return ma
end

function s__MonsterTeleportArray_getFirstEmpty(this)
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this) or sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) == 0) then
      break
    end
    i = i + 1
  end
  return i
end

function s__MonsterTeleportArray_get(this, arrayId)
  if (arrayId < 0 or arrayId > sg__MonsterTeleportArray_get_lastInstance(this)) then
    return 0
  end
  return sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + arrayId)
end

function s__MonsterTeleportArray_getLastInstanceId(this)
  return sg__MonsterTeleportArray_get_lastInstance(this)
end

function s__MonsterTeleportArray_new(this, mt, period, angle, mode, createUnit)
  local n = nil
  if ((mode ~= "normal" and mode ~= "string") or period < MONSTER_TELEPORT_PERIOD_MIN or period > MONSTER_TELEPORT_PERIOD_MAX) then
    return 0
  end
  --set n = .getFirstEmpty()
  n = sg__MonsterTeleportArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    return 0
  end
  --if (n > .lastInstance) then
  sg__MonsterTeleportArray_set_lastInstance(this, n)
  --endif
  sg___MonsterTeleportArray_monsters_set(sg__MonsterTeleportArray_get_monsters(this) + n, s__MonsterTeleport_create(mt, period, angle, mode))
  if (createUnit) then
    s__MonsterTeleport_createUnit(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + n))
  end
  sg__Monster_set_level(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + n), s__LevelArray_getLevelFromMonsterTeleportArray(udg_levels, this))
  sg__Monster_set_arrayId(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + n), n)
  return sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + n)
end

function s__MonsterTeleportArray_count(this)
  local nb = 0
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  return nb
end

function s__MonsterTeleportArray_onDestroy(this)
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0) then
      sc__Monster_deallocate(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  sg__MonsterTeleportArray_set_lastInstance(this, -1)
end

--Generated destructor of MonsterTeleportArray
function s__MonsterTeleportArray_deallocate(this)
  if this == nil then
    return
  elseif (si__MonsterTeleportArray_V[this] ~= -1) then
    return
  end
  s__MonsterTeleportArray_onDestroy(this)
  si__MonsterTeleportArray_V[this] = si__MonsterTeleportArray_F
  si__MonsterTeleportArray_F = this
end

function s__MonsterTeleportArray_setMonsterNull(this, monsterArrayId)
  sg___MonsterTeleportArray_monsters_set(sg__MonsterTeleportArray_get_monsters(this) + monsterArrayId, 0)
end

function s__MonsterTeleportArray_clearMonster(this, monsterId)
  local i = 0
  while true do
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) == (monsterId) or i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    i = i + 1
  end
  if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
    return false
  end
  sc__Monster_deallocate(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
  return true
end

function s__MonsterTeleportArray_getMonsterNear(this, x, l__y)
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0 and sg__Monster_get_u(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)) ~= nil) then
      xMob = GetUnitX(sg__Monster_get_u(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)))
      yMob = GetUnitY(sg__Monster_get_u(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)))
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        return sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)
      end
    end
    i = i + 1
  end
  return 0
end

function s__MonsterTeleportArray_createMonsters(this)
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0) then
      s__MonsterTeleport_createUnit(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterTeleportArray_removeMonsters(this)
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0) then
      s__MonsterTeleport_removeUnit(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterTeleportArray_recreateMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)))) == mt and sg__Monster_get_u(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)) ~= nil) then
      -- INLINED!!
      s__MonsterTeleport_createUnit(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end

function s__MonsterTeleportArray_removeMonstersOfType(this, mt)
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)))) == mt) then
      -- INLINED!!
      sc__Monster_deallocate(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
end



--library MonsterTeleportArray ends
--library CasterArray:



function s__CasterArray_create()
  local ca = s__CasterArray__allocate()
  sg__CasterArray_set_lastInstance(ca, -1)
  return ca
end

function s__CasterArray_getFirstEmpty(this)
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this) or sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) == 0) then
      break
    end
    i = i + 1
  end
  return i
end

function s__CasterArray_get(this, arrayId)
  if (arrayId < 0 or arrayId > sg__CasterArray_get_lastInstance(this)) then
    return 0
  end
  return sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + arrayId)
end

function s__CasterArray_getLastInstanceId(this)
  return sg__CasterArray_get_lastInstance(this)
end

function s__CasterArray_new(this, casterType, x, l__y, angle, enable)
  --local integer n = .getFirstEmpty()
  local n = sg__CasterArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    return 0
  end
  --if (n > .lastInstance) then
  sg__CasterArray_set_lastInstance(this, n)
  --endif
  sg___CasterArray_casters_set(sg__CasterArray_get_casters(this) + n, s__Caster_create(casterType, x, l__y, angle))
  if (enable) then
    s__Caster_enable(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + n))
  end
  sg__Caster_set_level(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + n), s__LevelArray_getLevelFromCasterArray(udg_levels, this))
  sg__Caster_set_arrayId(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + n), n)
  return sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + n)
end

function s__CasterArray_count(this)
  local nb = 0
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  return nb
end

function s__CasterArray_onDestroy(this)
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0) then
      s__Caster_deallocate(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
  sg__CasterArray_set_lastInstance(this, -1)
end

--Generated destructor of CasterArray
function s__CasterArray_deallocate(this)
  if this == nil then
    return
  elseif (si__CasterArray_V[this] ~= -1) then
    return
  end
  s__CasterArray_onDestroy(this)
  si__CasterArray_V[this] = si__CasterArray_F
  si__CasterArray_F = this
end

function s__CasterArray_setCasterNull(this, casterArrayId)
  sg___CasterArray_casters_set(sg__CasterArray_get_casters(this) + casterArrayId, 0)
end

function s__CasterArray_clearCaster(this, casterId)
  local i = 0
  while true do
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) == (casterId) or i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    i = i + 1
  end
  if (i > sg__CasterArray_get_lastInstance(this)) then
    return false
  end
  s__Caster_deallocate(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
  return true
end

function s__CasterArray_getCasterNear(this, x, l__y)
  local xCaster = nil
  local yCaster = nil
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0 and sg__Caster_get_casterUnit(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)) ~= nil) then
      xCaster = GetUnitX(sg__Caster_get_casterUnit(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)))
      yCaster = GetUnitY(sg__Caster_get_casterUnit(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)))
      if (RAbsBJ(x - xCaster) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yCaster) < MONSTER_NEAR_DIFF_MAX) then
        return sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)
      end
    end
    i = i + 1
  end
  return 0
end

function s__CasterArray_createCasters(this)
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0) then
      s__Caster_enable(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
end

function s__CasterArray_removeCasters(this)
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0) then
      s__Caster_disable(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
end

function s__CasterArray_refreshCastersOfType(this, casterType)
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0 and (sg__Caster_get_casterType((sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)))) == casterType and sg__Caster_get_casterUnit(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)) ~= nil) then
      -- INLINED!!
      s__Caster_refresh(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
end

function s__CasterArray_removeCastersOfType(this, casterType)
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0 and (sg__Caster_get_casterType((sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)))) == casterType) then
      -- INLINED!!
      s__Caster_deallocate(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
end




--library CasterArray ends
--library EscaperSavedCommands:






function s__EscaperSavedCommands_create()
  local sc = s__EscaperSavedCommands__allocate()
  s__EscaperSavedCommands_savedCommands[sc] = InitHashtable()
  return sc
end

function s__EscaperSavedCommands_new(this, escaper, commandName, command)
  SaveStr(s__EscaperSavedCommands_savedCommands[this], escaper, StringHash(commandName), command)
end

function s__EscaperSavedCommands_execute(this, escaper, commandName)
  local cmd = LoadStr(s__EscaperSavedCommands_savedCommands[this], escaper, StringHash(commandName))
  if (cmd == nil) then
    return false
  else
    ExecuteCommand(escaper, cmd)
  end
  return true
end


function Init_EscaperSavedCommands()
  udg_savedCommands = s__EscaperSavedCommands_create()
end



--library EscaperSavedCommands ends
--===========================================================================
-- 
-- Magic
-- 
--   Warcraft III map script
--   Generated by the Warcraft III World Editor
--   Map Author: Stan#0448@Discord
-- 
--===========================================================================

--***************************************************************************
--*
--*  Global Variables
--*
--***************************************************************************


function InitGlobals()
  local i = 0
  i = 0
  while true do
    if (i > 12) then
      break
    end
    udg_has_max_name[i] = false
    i = i + 1
  end

  udg_tripleKillSoundOn = true
  i = 0
  while true do
    if (i > 20) then
      break
    end
    udg_used_terrain_types[i] = 0
    i = i + 1
  end

  udg_nb_used_terrains = 0
  udg_cheatsUsed = false
  udg_areRedRightsOn = true
  i = 0
  while true do
    if (i > 1) then
      break
    end
    udg_is_circleing_j[i] = false
    i = i + 1
  end

  i = 0
  while true do
    if (i > 1) then
      break
    end
    udg_loc_x[i] = 0
    i = i + 1
  end

  i = 0
  while true do
    if (i > 1) then
      break
    end
    udg_loc_y[i] = 0
    i = i + 1
  end

  udg_terrain_slide = 0
  udg_x = 0
end

--***************************************************************************
--*
--*  Custom Script Code
--*
--***************************************************************************

--***************************************************************************
--*
--*  Sound Assets
--*
--***************************************************************************

function InitSounds()
  gg_snd_noob = CreateSound("war3mapImported\\Noob.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_noob, 1021)
  SetSoundChannel(gg_snd_noob, 0)
  SetSoundVolume(gg_snd_noob, 127)
  SetSoundPitch(gg_snd_noob, 1.0)
  gg_snd_multisquish = CreateSound("war3mapImported\\triple_kill.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_multisquish, 1827)
  SetSoundChannel(gg_snd_multisquish, 0)
  SetSoundVolume(gg_snd_multisquish, 127)
  SetSoundPitch(gg_snd_multisquish, 1.0)
  gg_snd_questCompleted = CreateSound("Sound\\Interface\\QuestCompleted.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_questCompleted, 5154)
  SetSoundChannel(gg_snd_questCompleted, 0)
  SetSoundVolume(gg_snd_questCompleted, -1)
  SetSoundPitch(gg_snd_questCompleted, 1.0)
  gg_snd_questFailed = CreateSound("Sound\\Interface\\QuestFailed.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_questFailed, 4690)
  SetSoundChannel(gg_snd_questFailed, 0)
  SetSoundVolume(gg_snd_questFailed, -1)
  SetSoundPitch(gg_snd_questFailed, 1.0)
  gg_snd_goodJob = CreateSound("Sound\\Interface\\GoodJob.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_goodJob, 2954)
  SetSoundChannel(gg_snd_goodJob, 0)
  SetSoundVolume(gg_snd_goodJob, -1)
  SetSoundPitch(gg_snd_goodJob, 1.0)
  gg_snd_warning = CreateSound("Sound\\Interface\\Warning.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_warning, 1903)
  SetSoundChannel(gg_snd_warning, 0)
  SetSoundVolume(gg_snd_warning, -1)
  SetSoundPitch(gg_snd_warning, 1.0)
  gg_snd_start = CreateSound("Sound\\Interface\\NewTournament.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_start, 7987)
  SetSoundChannel(gg_snd_start, 0)
  SetSoundVolume(gg_snd_start, -1)
  SetSoundPitch(gg_snd_start, 1.0)
  gg_snd_allyHeroDies0 = CreateSound("Sound\\Interface\\Warning\\Human\\KnightAllyHeroDies1.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_allyHeroDies0, 2537)
  SetSoundChannel(gg_snd_allyHeroDies0, 0)
  SetSoundVolume(gg_snd_allyHeroDies0, -1)
  SetSoundPitch(gg_snd_allyHeroDies0, 1.0)
  gg_snd_heroDies0 = CreateSound("Sound\\Interface\\Warning\\Human\\KnightHeroDies1.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_heroDies0, 1904)
  SetSoundChannel(gg_snd_heroDies0, 0)
  SetSoundVolume(gg_snd_heroDies0, -1)
  SetSoundPitch(gg_snd_heroDies0, 1.0)
  gg_snd_allyHeroDies1 = CreateSound("Sound\\Interface\\Warning\\NightElf\\SentinelAllyHeroDies1.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_allyHeroDies1, 2462)
  SetSoundChannel(gg_snd_allyHeroDies1, 0)
  SetSoundVolume(gg_snd_allyHeroDies1, -1)
  SetSoundPitch(gg_snd_allyHeroDies1, 1.0)
  gg_snd_heroDies1 = CreateSound("Sound\\Interface\\Warning\\NightElf\\SentinelHeroDies1.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_heroDies1, 2177)
  SetSoundChannel(gg_snd_heroDies1, 0)
  SetSoundVolume(gg_snd_heroDies1, -1)
  SetSoundPitch(gg_snd_heroDies1, 1.0)
  gg_snd_allyHeroDies2 = CreateSound("Sound\\Interface\\Warning\\Orc\\GruntAllyHeroDies1.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_allyHeroDies2, 2731)
  SetSoundChannel(gg_snd_allyHeroDies2, 0)
  SetSoundVolume(gg_snd_allyHeroDies2, -1)
  SetSoundPitch(gg_snd_allyHeroDies2, 1.0)
  gg_snd_heroDies2 = CreateSound("Sound\\Interface\\Warning\\Orc\\GruntHeroDies1.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_heroDies2, 2415)
  SetSoundChannel(gg_snd_heroDies2, 0)
  SetSoundVolume(gg_snd_heroDies2, -1)
  SetSoundPitch(gg_snd_heroDies2, 1.0)
  gg_snd_allyHeroDies3 = CreateSound("Sound\\Interface\\Warning\\Undead\\NecromancerAllyHeroDies1.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_allyHeroDies3, 2433)
  SetSoundChannel(gg_snd_allyHeroDies3, 0)
  SetSoundVolume(gg_snd_allyHeroDies3, -1)
  SetSoundPitch(gg_snd_allyHeroDies3, 1.0)
  gg_snd_heroDies3 = CreateSound("Sound\\Interface\\Warning\\Undead\\NecromancerHeroDies1.wav", false, false, false, 10, 10, "DefaultEAXON")
  SetSoundDuration(gg_snd_heroDies3, 2096)
  SetSoundChannel(gg_snd_heroDies3, 0)
  SetSoundVolume(gg_snd_heroDies3, -1)
  SetSoundPitch(gg_snd_heroDies3, 1.0)
end

--***************************************************************************
--*
--*  Regions
--*
--***************************************************************************

function CreateRegions()
  local we = nil

  gg_rct_departLvl_0 = Rect(-224.0, -320.0, 96.0, -64.0)
end

--***************************************************************************
--*
--*  Custom Script Code
--*
--***************************************************************************
--TESH.scrollpos=0
--TESH.alwaysfold=0

--***************************************************************************
--*
--*  Triggers
--*
--***************************************************************************

--===========================================================================
-- Trigger: Version
--===========================================================================

--===========================================================================
-- Trigger: Constants
--===========================================================================
--TESH.scrollpos=24
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Text
--
-- 58 lignes
--===========================================================================
--TESH.scrollpos=57
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Init terrain limit variables
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function InitTrig_Init_terrain_limit_variables()
  MAP_MIN_X = GetRectMinX(GetWorldBounds())
  MAP_MAX_X = GetRectMaxX(GetWorldBounds())
  MAP_MIN_Y = GetRectMinY(GetWorldBounds())
  MAP_MAX_Y = GetRectMaxY(GetWorldBounds())
end
--===========================================================================
-- Trigger: Init colorCodes
--===========================================================================
--TESH.scrollpos=6
--TESH.alwaysfold=0



function Trig_init_colorCodes_Actions()

  udg_colorCode[0] = "|cffff0303"
  --red
  udg_colorCode[1] = "|cff0042ff"
  --blue
  udg_colorCode[2] = "|cff1ce6b9"
  --teal
  udg_colorCode[3] = "|cff540081"
  --purple
  udg_colorCode[4] = "|cfffffc01"
  --yellow
  udg_colorCode[5] = "|cfffeba0e"
  --orange
  udg_colorCode[6] = "|cff20c000"
  --green
  udg_colorCode[7] = "|cffe55bb0"
  --pink
  udg_colorCode[8] = "|cff959697"
  --grey
  udg_colorCode[9] = "|cff7ebff1"
  --lightblue
  udg_colorCode[10] = "|cff106246"
  --darkgreen
  udg_colorCode[11] = "|cFF4A2800"
  --brown
  udg_colorCode[12] = "|c33333333"
  --black

  udg_baseColorString[0] = udg_colorCode[0] .. "red"
  udg_baseColorString[1] = udg_colorCode[1] .. "blue"
  udg_baseColorString[2] = udg_colorCode[2] .. "teal"
  udg_baseColorString[3] = udg_colorCode[3] .. "purple"
  udg_baseColorString[4] = udg_colorCode[4] .. "yellow"
  udg_baseColorString[5] = udg_colorCode[5] .. "orange"
  udg_baseColorString[6] = udg_colorCode[6] .. "green"
  udg_baseColorString[7] = udg_colorCode[7] .. "pink"
  udg_baseColorString[8] = udg_colorCode[8] .. "grey"
  udg_baseColorString[9] = udg_colorCode[9] .. "lightblue"
  udg_baseColorString[10] = udg_colorCode[10] .. "darkgreen"
  udg_baseColorString[11] = udg_colorCode[11] .. "brown"
  udg_baseColorString[12] = udg_colorCode[12] .. "black"

  COLOR_TERRAIN_SLIDE = udg_colorCode[TEAL]
  COLOR_TERRAIN_WALK = udg_colorCode[GREEN]
  COLOR_TERRAIN_DEATH = udg_colorCode[ORANGE]

end

--===========================================================================
function InitTrig_Init_colorCodes()
  gg_trg_Init_colorCodes = CreateTrigger()
  TriggerAddAction(gg_trg_Init_colorCodes, Trig_init_colorCodes_Actions)
end


--===========================================================================
-- Trigger: Basic functions
--===========================================================================
--TESH.scrollpos=66
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Functions on numbers
--===========================================================================
--TESH.scrollpos=10
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Ascii
--===========================================================================
--TESH.scrollpos=46
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Decode string
--===========================================================================
--TESH.scrollpos=37
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: ZLibrary
--===========================================================================
--TESH.scrollpos=67
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: StringUtils
--===========================================================================
--TESH.scrollpos=81
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Stack
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: TimerUtils
--===========================================================================
--TESH.scrollpos=192
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: SoundUtils
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: View all hide all
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Immolation skills
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterType
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterTypeArray
--===========================================================================
--TESH.scrollpos=55
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Monster creation functions
--
-- 
--         if (.height == -1) then
--             set heightDisplay = "default"
--         else
--             set heightDisplay = I2S(R2I(.height))
--         endif
--===========================================================================
--TESH.scrollpos=15
--TESH.alwaysfold=0



--===========================================================================
-- Trigger: MonsterInterface
--===========================================================================
--TESH.scrollpos=3
--TESH.alwaysfold=0





--===========================================================================
-- Trigger:    trig Monsters clickable set life
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterNoMove
--===========================================================================
--TESH.scrollpos=68
--TESH.alwaysfold=0




--===========================================================================
-- Trigger: MonsterNoMoveArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0




--===========================================================================
-- Trigger: MonsterSimplePatrol
--===========================================================================
--TESH.scrollpos=99
--TESH.alwaysfold=0



--===========================================================================
-- Trigger: MonsterSimplePatrolArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterMultiplePatrols
--===========================================================================
--TESH.scrollpos=293
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: MonsterMultiplePatrolsArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterTeleport
--===========================================================================
--TESH.scrollpos=183
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: MonsterTeleportArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: CasterType
--===========================================================================
--TESH.scrollpos=52
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: CasterTypeArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Caster functions
--===========================================================================
--TESH.scrollpos=198
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Caster
--
-- interface Monster [600000] //200 niveaux * 1000 monstres par type * 3 types
--     static integer nbInstances = 0
-- 	unit u = null
-- 	MonsterType mt
--     Level level
--     integer arrayId
--     integer life
-- 	//static method count takes nothing returns integer
-- 	method createUnit takes nothing returns nothing
-- 	method removeUnit takes nothing returns nothing
--     method killUnit takes nothing returns nothing
--     method getMonsterType takes nothing returns MonsterType
--     method setMonsterType takes MonsterType mt returns boolean
--     method toString takes nothing returns string
--     method getLife takes nothing returns integer
--     method setLife takes integer life returns nothing
-- endinterface
--===========================================================================
--TESH.scrollpos=111
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: CasterArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: CasterShot
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterOrCaster
--===========================================================================
--TESH.scrollpos=52
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterOrCasterStack
--===========================================================================
--TESH.scrollpos=35
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: ClearMob
--===========================================================================
--TESH.scrollpos=93
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: ClearMobArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterSpawn
--===========================================================================
--TESH.scrollpos=30
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MonsterSpawnArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Terrain type functions
--===========================================================================
--TESH.scrollpos=1
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: TerrainType
--===========================================================================
--TESH.scrollpos=54
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: TerrainTypeWalk
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: TerrainTypeDeath functions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: TerrainTypeDeath KillingTimers
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: TerrainTypeDeath
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: TerrainTypeSlide
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: TerrainTypeArray
--===========================================================================
--TESH.scrollpos=98
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Time of game trigger
--===========================================================================
--TESH.scrollpos=16
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Lives and game time
--===========================================================================
--TESH.scrollpos=52
--TESH.alwaysfold=0




--===========================================================================
-- Trigger: Meteor
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: MeteorArray
--===========================================================================
--TESH.scrollpos=94
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Meteor functions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0



--===========================================================================
-- Trigger: Right click on widget
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_right_click_on_widget_Conditions()
  return (IsHero(GetTriggerUnit()) and IsIssuedOrder("smart"))
end


function Trig_right_click_on_widget_Actions()
  if (GetOrderTargetUnit() ~= nil) then
    ExecuteRightClicOnUnit(GetTriggerUnit(), GetOrderTargetUnit())
  end
end


--===========================================================================
function InitTrig_Right_click_on_widget()
  gg_trg_Right_click_on_widget = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_Right_click_on_widget, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
  TriggerAddAction(gg_trg_Right_click_on_widget, Trig_right_click_on_widget_Actions)
  TriggerAddCondition(gg_trg_Right_click_on_widget, Condition(Trig_right_click_on_widget_Conditions))
end


--===========================================================================
-- Trigger: Meteor being used
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_meteor_being_used_Actions()
  SetUnitAnimation(GetTriggerUnit(), "attack")
  if (GetItemTypeId(GetManipulatedItem()) == METEOR_NORMAL) then
    DisableTrigger(GetTriggeringTrigger())
    EnableTrigger(gg_trg_Stop_using_normal_meteor)
    s__Meteor_removeMeteor((GetItemUserData(GetManipulatedItem())))
    s__Escaper_removeEffectMeteor(Hero2Escaper(GetTriggerUnit()))
    TriggerSleepAction(1)
    EnableTrigger(GetTriggeringTrigger())
    DisableTrigger(gg_trg_Stop_using_normal_meteor)
  end
end

--===========================================================================
function InitTrig_Meteor_being_used()
  gg_trg_Meteor_being_used = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_Meteor_being_used, EVENT_PLAYER_UNIT_USE_ITEM)
  TriggerAddAction(gg_trg_Meteor_being_used, Trig_meteor_being_used_Actions)
end


--===========================================================================
-- Trigger: Stop using normal meteor
--===========================================================================
function Trig_Stop_using_normal_meteor_Conditions()
  if (not (GetSpellAbilityId() == 1093677106)) then
    return false
  end
  return true
end

function Trig_Stop_using_normal_meteor_Actions()
  IssueImmediateOrderBJ(GetTriggerUnit(), "stop")
end

--===========================================================================
function InitTrig_Stop_using_normal_meteor()
  gg_trg_Stop_using_normal_meteor = CreateTrigger()
  DisableTrigger(gg_trg_Stop_using_normal_meteor)
  TriggerRegisterAnyUnitEventBJ(gg_trg_Stop_using_normal_meteor, EVENT_PLAYER_UNIT_SPELL_CAST)
  TriggerAddCondition(gg_trg_Stop_using_normal_meteor, Condition(Trig_Stop_using_normal_meteor_Conditions))
  TriggerAddAction(gg_trg_Stop_using_normal_meteor, Trig_Stop_using_normal_meteor_Actions)
end

--===========================================================================
-- Trigger: Effect meteor on pick up
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_Effect_meteor_on_pick_up_Conditions()
  return GetItemTypeId(UnitItemInSlotBJ(GetTriggerUnit(), 1)) == METEOR_NORMAL
end

function Trig_Effect_meteor_on_pick_up_Actions()
  s__Escaper_addEffectMeteor(Hero2Escaper(GetTriggerUnit()))
end

--===========================================================================
function InitTrig_Effect_meteor_on_pick_up()
  gg_trg_Effect_meteor_on_pick_up = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_Effect_meteor_on_pick_up, EVENT_PLAYER_UNIT_PICKUP_ITEM)
  TriggerAddCondition(gg_trg_Effect_meteor_on_pick_up, Condition(Trig_Effect_meteor_on_pick_up_Conditions))
  TriggerAddAction(gg_trg_Effect_meteor_on_pick_up, Trig_Effect_meteor_on_pick_up_Actions)
end


--===========================================================================
-- Trigger: Effect meteor on pick down
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_Effect_meteor_on_pick_down_Actions()
  if (not (GetUnitTypeId(GetTriggerUnit()) == HERO_TYPE_ID and (GetItemTypeId(GetManipulatedItem()) == METEOR_NORMAL or GetItemTypeId(GetManipulatedItem()) == METEOR_CHEAT))) then
    return
  end
  s__Escaper_removeEffectMeteor(Hero2Escaper(GetTriggerUnit()))
end

--===========================================================================
function InitTrig_Effect_meteor_on_pick_down()
  gg_trg_Effect_meteor_on_pick_down = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_Effect_meteor_on_pick_down, EVENT_PLAYER_UNIT_DROP_ITEM)
  TriggerAddAction(gg_trg_Effect_meteor_on_pick_down, Trig_Effect_meteor_on_pick_down_Actions)
end


--===========================================================================
-- Trigger: VisibilityModifier
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: VisibilityModifierArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: StartAndEnd
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Triggers
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Level
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger:    Level functions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger:    Trig checkpoint revive heroes
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: LevelArray
--===========================================================================
--TESH.scrollpos=72
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: EscaperEffect functions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: EscaperEffect
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0




--===========================================================================
-- Trigger: EscaperEffectArray
--===========================================================================
--TESH.scrollpos=35
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Escaper functions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Escaper disco
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Escaper
--===========================================================================
--TESH.scrollpos=1017
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: EscaperArray
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: EscaperSavedCommands
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Make
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0



--===========================================================================
-- Trigger: Monster making no move Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeMonsterNoMove
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Monster making simple patrol Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeMonsterSimplePatrol
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Monster making multiple patrols Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeMonsterMultiplePatrols
--===========================================================================
--TESH.scrollpos=69
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Monster making teleport Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeMonsterTeleport
--===========================================================================
--TESH.scrollpos=60
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Monster spawn making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeMonsterSpawn
--===========================================================================
--TESH.scrollpos=42
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Monster delete Actions
--
-- if (Msp != 0 and Msp.u != null and IsUnitBetweenLocs(Msp.u, mk.lastX, mk.lastY, x, y)) then
--                         call Msp.removeUnit()
--                         call SaveInteger(suppressionHashTable, 0, nbMonstersRemoved, integer(Msp))
--                         set nbMonstersRemoved = nbMonstersRemoved + 1
--                     endif
--===========================================================================
--TESH.scrollpos=105
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeDeleteMonsters
--
--                 if Monster( monsters[ i ] ).getType() == MonsterNoMove.typeid then
--                     call MonsterNoMove( monsters[ i ] ).createUnit()
--                 endif
--                 if Monster( monsters[ i ] ).getType() == MonsterSimplePatrol.typeid then
--                     call MonsterSimplePatrol( monsters[ i ] ).createUnit()
--                 endif
--                 if Monster( monsters[ i ] ).getType() == MonsterMultiplePatrols.typeid then
--                     call Text.A("Mmp")
--                     call MonsterMultiplePatrols( monsters[ i ] ).createUnit()
--                 endif
--===========================================================================
--TESH.scrollpos=15
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Make set unit monster type Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeSetUnitMonsterType
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Make set unit teleport period Actions
--===========================================================================
--TESH.scrollpos=3
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeSetUnitTeleportPeriod
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Make get unit teleport period Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeGetUnitTeleportPeriod
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Meteor making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeMeteor
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Meteor delete Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeDeleteMeteors
--
--                 if Monster( monsters[ i ] ).getType() == MonsterNoMove.typeid then
--                     call MonsterNoMove( monsters[ i ] ).createUnit()
--                 endif
--                 if Monster( monsters[ i ] ).getType() == MonsterSimplePatrol.typeid then
--                     call MonsterSimplePatrol( monsters[ i ] ).createUnit()
--                 endif
--                 if Monster( monsters[ i ] ).getType() == MonsterMultiplePatrols.typeid then
--                     call Text.A("Mmp")
--                     call MonsterMultiplePatrols( monsters[ i ] ).createUnit()
--                 endif
--===========================================================================
--TESH.scrollpos=49
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Caster making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeCaster
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Caster delete Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeDeleteCasters
--
--                 if Monster( monsters[ i ] ).getType() == MonsterNoMove.typeid then
--                     call MonsterNoMove( monsters[ i ] ).createUnit()
--                 endif
--                 if Monster( monsters[ i ] ).getType() == MonsterSimplePatrol.typeid then
--                     call MonsterSimplePatrol( monsters[ i ] ).createUnit()
--                 endif
--                 if Monster( monsters[ i ] ).getType() == MonsterMultiplePatrols.typeid then
--                     call Text.A("Mmp")
--                     call MonsterMultiplePatrols( monsters[ i ] ).createUnit()
--                 endif
--===========================================================================
--TESH.scrollpos=29
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: ClearMob making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeClearMob
--===========================================================================
--TESH.scrollpos=12
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: ClearMob delete Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: MakeDeleteClearMob
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Terrain making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainCreate
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Terrain copy paste Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainCopyPaste
--===========================================================================
--TESH.scrollpos=106
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Terrain vertical symmetry Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainVerticalSymmetry
--===========================================================================
--TESH.scrollpos=18
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Terrain horizontal symmetry Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainHorizontalSymmetry
--===========================================================================
--TESH.scrollpos=38
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Terrain height making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainHeight
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Make exchange terrains Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: MakeExchangeTerrains
--===========================================================================
--TESH.scrollpos=39
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Start making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: MakeStart
--===========================================================================
--TESH.scrollpos=39
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: End making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeEnd
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: VisibilityModifier making Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeVisibilityModifier
--===========================================================================
--TESH.scrollpos=38
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Getting terrain type info Actions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeGetTerrainType
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeAction
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeMonsterAction
--===========================================================================
--TESH.scrollpos=6
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeDeleteMonstersAction
--===========================================================================
--TESH.scrollpos=30
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeMeteorAction
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeDeleteMeteorsAction
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeCasterAction
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeDeleteCastersAction
--===========================================================================
--TESH.scrollpos=51
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainCreateAction
--===========================================================================
--TESH.scrollpos=95
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainCopyPasteAction
--===========================================================================
--TESH.scrollpos=141
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainVerticalSymmetryAction
--===========================================================================
--TESH.scrollpos=8
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainHorizontalSymmetryAction
--===========================================================================
--TESH.scrollpos=38
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeTerrainHeightAction
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeVisibilityModifierAction
--===========================================================================
--TESH.scrollpos=17
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: MakeLastActions
--===========================================================================
--TESH.scrollpos=93
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Command functions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Teleport once only
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Teleport
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_teleport_Conditions()
  return (IsHero(GetTriggerUnit()) and (s__Escaper_canTeleportB[(Hero2Escaper(GetTriggerUnit()))]))
  -- INLINED!!
end

function Trig_teleport_Actions()
  StopUnit(GetTriggerUnit())
  SetUnitX(GetTriggerUnit(), GetOrderPointX())
  SetUnitY(GetTriggerUnit(), GetOrderPointY())
end

--===========================================================================
function InitTrig_Teleport()
  gg_trg_Teleport = CreateTrigger()
  DisableTrigger(gg_trg_Teleport)
  TriggerRegisterAnyUnitEventBJ(gg_trg_Teleport, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
  TriggerAddCondition(gg_trg_Teleport, Condition(Trig_teleport_Conditions))
  TriggerAddAction(gg_trg_Teleport, Trig_teleport_Actions)
end


--===========================================================================
-- Trigger: Autorevive
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0



function Trig_autorevive_Conditions()
  return IsHero(GetTriggerUnit())
end

function Trig_autorevive_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  if ((s__Escaper_hasAutoreviveB[(escaper)])) then
    -- INLINED!!
    TriggerSleepAction(udg_autoreviveDelay)
    s__Escaper_reviveAtStart(escaper)
    s__Escaper_selectHero(escaper)
  end
end


--===========================================================================
function InitTrig_Autorevive()
  gg_trg_Autorevive = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_Autorevive, EVENT_PLAYER_UNIT_DEATH)
  TriggerAddCondition(gg_trg_Autorevive, Condition(Trig_autorevive_Conditions))
  TriggerAddAction(gg_trg_Autorevive, Trig_autorevive_Actions)
end


--===========================================================================
-- Trigger: Command all
--===========================================================================
--TESH.scrollpos=21
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Command red
--===========================================================================
--TESH.scrollpos=57
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Command cheat
--===========================================================================
--TESH.scrollpos=459
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Command make
--===========================================================================
--TESH.scrollpos=967
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Command max
--===========================================================================
--TESH.scrollpos=314
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Command true max
--===========================================================================
--TESH.scrollpos=19
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Command execution
--===========================================================================
--TESH.scrollpos=70
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Gravity
--===========================================================================
--TESH.scrollpos=2
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Slide
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: To turn on slide
--===========================================================================
--TESH.scrollpos=108
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Auto continue after sliding
--===========================================================================
--TESH.scrollpos=14
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: CheckTerrain
--===========================================================================
--TESH.scrollpos=74
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: All terrain functions
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Terrain type ascii conversion
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Terrain type max
--===========================================================================
--TESH.scrollpos=206
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Terrain type grass
--===========================================================================
--TESH.scrollpos=21
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Terrain type names and data
--===========================================================================
--TESH.scrollpos=122
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Terrain functions
--===========================================================================
--TESH.scrollpos=73
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Terrain type from string
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Modify terrain functions
--===========================================================================
--TESH.scrollpos=12
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Terrain modifying trig
--===========================================================================
--TESH.scrollpos=11
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Change one terrain
--===========================================================================
--TESH.scrollpos=35
--TESH.alwaysfold=0




--===========================================================================
-- Trigger: Change all terrains
--===========================================================================
--TESH.scrollpos=177
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Exchange terrains
--===========================================================================
--TESH.scrollpos=31
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Randomize terrains
--===========================================================================
--TESH.scrollpos=84
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Reinit terrains
--===========================================================================
--TESH.scrollpos=74
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Reinit terrains position Change variations and ut at beginning
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Save load terrain without name
--===========================================================================
--TESH.scrollpos=54
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Save load terrain with name
--===========================================================================
--TESH.scrollpos=81
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: struct StringArrayForCache
--===========================================================================
--TESH.scrollpos=12
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Save terrain config
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Save terrain
--===========================================================================
--TESH.scrollpos=48
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Save terrain heights and cliffs
--===========================================================================
--===========================================================================
-- Trigger: Save terrain ramps
--===========================================================================
--===========================================================================
-- Trigger: Save water
--===========================================================================
--===========================================================================
-- Trigger: Save monster types
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Save caster types
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Save levels
--===========================================================================
--TESH.scrollpos=129
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: SAVE MAP in cache
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Init lives
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


function Trig_init_lives_Actions()
  udg_lives = s__Lives_create()
end



--===========================================================================
function InitTrig_Init_lives()
  gg_trg_Init_lives = CreateTrigger()
  TriggerAddAction(gg_trg_Init_lives, Trig_init_lives_Actions)
  TriggerRegisterTimerEvent(gg_trg_Init_lives, 0.0001, false)
end


--===========================================================================
-- Trigger: Init escapers
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0




--===========================================================================
function InitTrig_Init_escapers()
  udg_escapers = s__EscaperArray_create()
end


--===========================================================================
-- Trigger: Init struct levels
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
function InitTrig_Init_struct_levels()
  if (udg_levels == 0) then
    udg_levels = s__LevelArray_create()
  end
end


--===========================================================================
-- Trigger: Forces ally
--===========================================================================
function Trig_Forces_ally_Actions()
  bj_forLoopAIndex = 1
  bj_forLoopAIndexEnd = 11
  while true do
    if bj_forLoopAIndex > bj_forLoopAIndexEnd then
      break
    end
    SetPlayerAllianceStateBJ(Player(11), ConvertedPlayer(GetForLoopIndexA()), bj_ALLIANCE_ALLIED_VISION)
    SetPlayerAllianceStateBJ(ConvertedPlayer(GetForLoopIndexA()), Player(11), bj_ALLIANCE_ALLIED_VISION)
    bj_forLoopAIndex = bj_forLoopAIndex + 1
  end
end

--===========================================================================
function InitTrig_Forces_ally()
  gg_trg_Forces_ally = CreateTrigger()
  TriggerAddAction(gg_trg_Forces_ally, Trig_Forces_ally_Actions)
end

--===========================================================================
-- Trigger: Camera
--===========================================================================
function Trig_Camera_Actions()
  SetCameraField(CAMERA_FIELD_TARGET_DISTANCE, DEFAULT_CAMERA_FIELD, 0)
end

--===========================================================================
function InitTrig_Camera()
  gg_trg_Camera = CreateTrigger()
  TriggerAddAction(gg_trg_Camera, Trig_Camera_Actions)
end

--===========================================================================
-- Trigger: No selection circle
--===========================================================================
function Trig_No_selection_circle_Actions()
  EnableSelect(true, false)
end

--===========================================================================
function InitTrig_No_selection_circle()
  gg_trg_No_selection_circle = CreateTrigger()
  TriggerRegisterGameLoadedEventBJ(gg_trg_No_selection_circle)
  TriggerAddAction(gg_trg_No_selection_circle, Trig_No_selection_circle_Actions)
end

--===========================================================================
-- Trigger: Allways day
--===========================================================================
function Trig_Allways_day_Actions()
  SetTimeOfDay(12)
  UseTimeOfDayBJ(false)
end

--===========================================================================
function InitTrig_Allways_day()
  gg_trg_Allways_day = CreateTrigger()
  TriggerAddAction(gg_trg_Allways_day, Trig_Allways_day_Actions)
end

--===========================================================================
-- Trigger: Message heroDies
--===========================================================================
--TESH.scrollpos=24
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Start sound
--===========================================================================
function Trig_Start_sound_Actions()
  PlaySoundBJ(gg_snd_start)
end

--===========================================================================
function InitTrig_Start_sound()
  gg_trg_Start_sound = CreateTrigger()
  TriggerRegisterTimerEventSingle(gg_trg_Start_sound, 2.00)
  TriggerAddAction(gg_trg_Start_sound, Trig_Start_sound_Actions)
end

--===========================================================================
-- Trigger: Heroes
--===========================================================================
--TESH.scrollpos=54
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: coop init sounds
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


function Trig_coop_init_sounds_Actions()
  udg_coop_index_son = (s__SoundUtils___soundhelper_create((("war3mapImported\\goutte.wav")), ((COOP_DUREE_SON)), ((false)), ((true)), (true), (10), (10), ("CombatSoundsEAX")))
  -- INLINED!!
end

--===========================================================================
function InitTrig_coop_init_sounds()
  gg_trg_coop_init_sounds = CreateTrigger()
  TriggerAddAction(gg_trg_coop_init_sounds, Trig_coop_init_sounds_Actions)
end


--===========================================================================
-- Trigger: creation dialogue
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


function CreationDialogue_Actions()
  dialChoixModeCoop = DialogCreate()
  dialTimerTempLimite = CreateTimer()
  DialogSetMessageBJ(dialChoixModeCoop, "Choose a game mode for everybody")
  btnChoixCoop = DialogAddButton(dialChoixModeCoop, "Coop (you can revive allies)", 0)
  btnChoixSolo = DialogAddButton(dialChoixModeCoop, "Solo", 0)
  TriggerRegisterDialogEventBJ(gg_trg_appui_sur_bouton_dialogue, dialChoixModeCoop)
end

function InitTrig_creation_dialogue()
  gg_trg_creation_dialogue = CreateTrigger()
  TriggerAddAction(gg_trg_creation_dialogue, CreationDialogue_Actions)
  TriggerRegisterTimerEvent(gg_trg_creation_dialogue, 0, false)
end

--===========================================================================
-- Trigger: apparition dialogue et fermeture automatique
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function FermerDialogueAutomatiquement()
  if (not dialBoutonAppuye) then
    DialogDisplay(udg_joueurDialogue, dialChoixModeCoop, false)
    if (udg_coopModeActive) then
      DisplayTextToForce(GetPlayersAll(), "coop mode automatically chosen")
    else
      DisplayTextToForce(GetPlayersAll(), "solo mode automatically chosen")
    end
  end
end



function Trig_apparition_dialogue_Actions()
  --détermination du premier joueur
  local i = 0
  while true do
    if (GetPlayerController(Player(i)) == MAP_CONTROL_USER and GetPlayerSlotState(Player(i)) == PLAYER_SLOT_STATE_PLAYING) or i > 11 then
      break
    end
    i = i + 1
  end
  if (i > 11) then
    return
  end
  udg_joueurDialogue = Player(i)
  DialogDisplay(udg_joueurDialogue, dialChoixModeCoop, true)
  dialBoutonAppuye = false
  TimerStart(dialTimerTempLimite, DIAL_TIME_TO_ANSWER, false, FermerDialogueAutomatiquement)
end

--===========================================================================
function InitTrig_apparition_dialogue_et_fermeture_automatique()
  gg_trg_apparition_dialogue_et_fermeture_automatique = CreateTrigger()
  TriggerRegisterTimerEventSingle(gg_trg_apparition_dialogue_et_fermeture_automatique, 1)
  TriggerAddAction(gg_trg_apparition_dialogue_et_fermeture_automatique, Trig_apparition_dialogue_Actions)
end


--===========================================================================
-- Trigger: appui sur bouton dialogue
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function TrigAppuiBoutonDialogue_Actions()
  udg_coopModeActive = GetClickedButton() == btnChoixCoop
  dialBoutonAppuye = true
  if (udg_coopModeActive) then
    DisplayTextToForce(GetPlayersAll(), "coop mode chosen by first player")
  else
    DisplayTextToForce(GetPlayersAll(), "solo mode chosen by first player")
  end
end





function InitTrig_appui_sur_bouton_dialogue()
  gg_trg_appui_sur_bouton_dialogue = CreateTrigger()
  --évènement défini dans le trigger "creation dialogue"
  TriggerAddAction(gg_trg_appui_sur_bouton_dialogue, TrigAppuiBoutonDialogue_Actions)
end
--===========================================================================
-- Trigger: deplacement heros hors death path
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Command shortcuts functions
--===========================================================================
--TESH.scrollpos=124
--TESH.alwaysfold=0

--===========================================================================
-- Trigger: Using shortcut
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_using_shortcut_Conditions()
  return IsHero(GetTriggerUnit())
end



function Trig_using_shortcut_Actions()
  local escaper = Hero2Escaper(GetTriggerUnit())
  local p = (s__Escaper_p[(escaper)])
  -- INLINED!!


  --textmacro instance: UsingShortcut("A")
  if (GetSpellAbilityId() == 1396916591) then
    Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(p)] .. GetPlayerName(p) .. ":|r " .. A_shortcutCommand[GetPlayerId(p)]))
    -- INLINED!!
    ExecuteCommand(escaper, A_shortcutCommand[GetPlayerId(p)])
    return
  end
  --end of: UsingShortcut("A")
  --textmacro instance: UsingShortcut("Z")
  if (GetSpellAbilityId() == 1396922991) then
    Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(p)] .. GetPlayerName(p) .. ":|r " .. Z_shortcutCommand[GetPlayerId(p)]))
    -- INLINED!!
    ExecuteCommand(escaper, Z_shortcutCommand[GetPlayerId(p)])
    return
  end
  --end of: UsingShortcut("Z")
  --textmacro instance: UsingShortcut("E")
  if (GetSpellAbilityId() == 1396917615) then
    Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(p)] .. GetPlayerName(p) .. ":|r " .. E_shortcutCommand[GetPlayerId(p)]))
    -- INLINED!!
    ExecuteCommand(escaper, E_shortcutCommand[GetPlayerId(p)])
    return
  end
  --end of: UsingShortcut("E")
  --textmacro instance: UsingShortcut("R")
  if (GetSpellAbilityId() == 1396920943) then
    Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(p)] .. GetPlayerName(p) .. ":|r " .. R_shortcutCommand[GetPlayerId(p)]))
    -- INLINED!!
    ExecuteCommand(escaper, R_shortcutCommand[GetPlayerId(p)])
    return
  end
  --end of: UsingShortcut("R")
  --textmacro instance: UsingShortcut("Q")
  if (GetSpellAbilityId() == 1396920687) then
    Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(p)] .. GetPlayerName(p) .. ":|r " .. Q_shortcutCommand[GetPlayerId(p)]))
    -- INLINED!!
    ExecuteCommand(escaper, Q_shortcutCommand[GetPlayerId(p)])
    return
  end
  --end of: UsingShortcut("Q")
  --textmacro instance: UsingShortcut("S")
  if (GetSpellAbilityId() == 1396921199) then
    Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(p)] .. GetPlayerName(p) .. ":|r " .. S_shortcutCommand[GetPlayerId(p)]))
    -- INLINED!!
    ExecuteCommand(escaper, S_shortcutCommand[GetPlayerId(p)])
    return
  end
  --end of: UsingShortcut("S")
  --textmacro instance: UsingShortcut("D")
  if (GetSpellAbilityId() == 1396917359) then
    Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(p)] .. GetPlayerName(p) .. ":|r " .. D_shortcutCommand[GetPlayerId(p)]))
    -- INLINED!!
    ExecuteCommand(escaper, D_shortcutCommand[GetPlayerId(p)])
    return
  end
  --end of: UsingShortcut("D")
  --textmacro instance: UsingShortcut("F")
  if (GetSpellAbilityId() == 1396917871) then
    Text___ForPlayer_timed_withColorCode((p), -1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId(p)] .. GetPlayerName(p) .. ":|r " .. F_shortcutCommand[GetPlayerId(p)]))
    -- INLINED!!
    ExecuteCommand(escaper, F_shortcutCommand[GetPlayerId(p)])
    return
  end
  --end of: UsingShortcut("F")
end


--===========================================================================
function InitTrig_Using_shortcut()
  gg_trg_Using_shortcut = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_Using_shortcut, EVENT_PLAYER_UNIT_SPELL_CAST)
  TriggerAddCondition(gg_trg_Using_shortcut, Condition(Trig_using_shortcut_Conditions))
  TriggerAddAction(gg_trg_Using_shortcut, Trig_using_shortcut_Actions)
end


--===========================================================================
-- Trigger: Camera reset
--===========================================================================
function Trig_Camera_reset_Actions()
  local TP = GetTriggerPlayer()
  local TPN = GetPlayerId(TP)
  s__Escaper_resetCamera((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (TPN)]))
  -- INLINED!!
end

--===========================================================================
function InitTrig_Camera_reset()
  gg_trg_Camera_reset = CreateTrigger()
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(0))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(1))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(2))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(3))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(4))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(5))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(6))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(7))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(8))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(9))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(10))
  TriggerRegisterPlayerEventEndCinematic(gg_trg_Camera_reset, Player(11))
  TriggerAddAction(gg_trg_Camera_reset, Trig_Camera_reset_Actions)
end

--===========================================================================
-- Trigger: Apm
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
--===========================================================================
-- Trigger: Afk mode
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Afk mode ordre recu
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_afk_mode_ordre_recu_Actions()
  local n = nil
  if (IsHero(GetTriggerUnit())) then
    n = GetUnitUserData(GetTriggerUnit())
    StopAfk(n)
    TimerStart(afkModeTimers[n], timeMinAfk, false, GetAfkModeTimeExpiresCodeFromId(n))
  end
end

--===========================================================================
function InitTrig_Afk_mode_ordre_recu()
  gg_trg_Afk_mode_ordre_recu = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_Afk_mode_ordre_recu, EVENT_PLAYER_UNIT_ISSUED_TARGET_ORDER)
  TriggerRegisterAnyUnitEventBJ(gg_trg_Afk_mode_ordre_recu, EVENT_PLAYER_UNIT_ISSUED_POINT_ORDER)
  TriggerAddAction(gg_trg_Afk_mode_ordre_recu, Trig_afk_mode_ordre_recu_Actions)
end


--===========================================================================
-- Trigger: A player leaves
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_a_player_leaves_Actions()
  local n = GetPlayerId(GetTriggerPlayer())
  s__EscaperArray_remove(udg_escapers, n)
  StopAfk(n)
  DisplayTextToForce(GetPlayersAll(), udg_colorCode[n] .. "This is too difficult for " .. GetPlayerName(GetTriggerPlayer()) .. ", (s)he has left the game.")
  StartSound(gg_snd_noob)
  --set NbPlayersMinimumThree_nbPlayers = NbPlayersMinimumThree_nbPlayers - 1
end



--===========================================================================
function InitTrig_A_player_leaves()
  local i = 0
  gg_trg_A_player_leaves = CreateTrigger()
  while true do
    if i > 11 then
      break
    end
    TriggerRegisterPlayerEventLeave(gg_trg_A_player_leaves, Player(i))
    i = i + 1
  end
  TriggerAddAction(gg_trg_A_player_leaves, Trig_a_player_leaves_Actions)
end


--===========================================================================
-- Trigger: InvisUnit is getting damage
--===========================================================================
--TESH.scrollpos=32
--TESH.alwaysfold=0
--évènement ajouté à la création de l'unité invisible




function Trig_invisUnit_dies_Actions()
  local invisUnit = GetTriggerUnit()
  local n = GetUnitUserData(invisUnit)
  local escaper = (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)])
  -- INLINED!!
  local killingUnit = GetEventDamageSource()
  local clearMob = nil
  local moc = nil
  local effectStr = nil
  local eff = nil
  local x = nil
  local l__y = nil
  local heroPos = GetUnitLoc((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local hauteurHero = GetLocationZ(heroPos) + GetUnitFlyHeight((s__Escaper_hero[(escaper)]))
  -- INLINED!!
  local killingUnitPos = GetUnitLoc(killingUnit)
  local hauteurKillingUnit = GetLocationZ(killingUnitPos) + GetUnitFlyHeight(killingUnit)

  RemoveLocation(heroPos)
  RemoveLocation(killingUnitPos)
  heroPos = nil
  killingUnitPos = nil

  if (not (IsUnitAliveBJ(s__Escaper_hero[(escaper)]))) then
    -- INLINED!!
    invisUnit = nil
    killingUnit = nil
    return
  end


  if (RAbsBJ(hauteurHero - hauteurKillingUnit) < TAILLE_UNITE) then
    if (GetUnitTypeId(killingUnit) == 1684236658) then
      --on vient de toucher un héros mort, on va le ressusciter
      s__Escaper_coopReviveHero((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (GetUnitUserData(killingUnit))]))
      -- INLINED!!
      invisUnit = nil
      killingUnit = nil
      return
    else
      clearMob = (LoadInteger(ClearMob__htClearMob, 0, (GetUnitUserData(killingUnit))))
      -- INLINED!!
      if (clearMob ~= 0) then
        --cas de l'activation d'un clear mob
        s__ClearMob_activate(clearMob)
      elseif ((s__Escaper_godMode[(escaper)])) then
        --cas d'une immolation classique // INLINED!!
        if ((s__Escaper_godModeKills[(escaper)])) then
          -- INLINED!!
          if (GetUnitUserData(killingUnit) ~= 0) then
            moc = s__MonsterOrCaster_create(GetUnitUserData(killingUnit))
            s__MonsterOrCaster_killUnit(moc)
            --on ne tue pas directement le monstre, pour pouvoir exécuter des actions secondaires
            s__MonsterOrCaster_deallocate(moc)
          else
            KillUnit(killingUnit)
            --c'est un simple monstre de spawn ou invoqué, on le tue directement
          end
        end
        x = GetUnitX(killingUnit)
        l__y = GetUnitY(killingUnit)
        eff = AddSpecialEffect(GM_KILLING_EFFECT, x, l__y)
        DestroyEffect(eff)
        eff = nil
        invisUnit = nil
        killingUnit = nil
        return
      end

      if (not (s__Escaper_coopInvul[(escaper)])) then
        --don't kill if the escaper was just revived by a friend // INLINED!!
        s__Escaper_kill(escaper)

        --effet de tuation du héros par le monstre, suivant le type du monstre
        effectStr = s__MonsterTypeArray_monsterUnit2KillEffectStr(udg_monsterTypes, killingUnit)
        if (effectStr ~= nil) then
          x = GetUnitX(invisUnit)
          l__y = GetUnitY(invisUnit)
          eff = AddSpecialEffect(effectStr, x, l__y)
          TriggerSleepAction(3)
          DestroyEffect(eff)
          eff = nil
        end
      end
    end
  end

  invisUnit = nil
  killingUnit = nil
end

--===========================================================================
function InitTrig_InvisUnit_is_getting_damage()
  gg_trg_InvisUnit_is_getting_damage = CreateTrigger()
  TriggerAddAction(gg_trg_InvisUnit_is_getting_damage, Trig_invisUnit_dies_Actions)
end


--===========================================================================
-- Trigger: A hero dies check if all dead and sounds
--===========================================================================
--TESH.scrollpos=11
--TESH.alwaysfold=0


function Trig_a_hero_dies_Conditions()
  return IsHero(GetTriggerUnit())
end


function Trig_a_hero_dies_Actions()
  local hero = GetTriggerUnit()
  local n = GetUnitUserData(hero)
  local nbAlive = 0
  local last = false
  local i = nil
  local diffX = nil
  local diffY = nil

  udg_nbKilled = udg_nbKilled + 1
  if (udg_nbKilled == 3 and udg_tripleKillSoundOn) then
    StartSound(gg_snd_multisquish)
    udg_nbKilled = 0
  end

  i = 0
  while true do
    if (i > 11) then
      break
    end
    if ((IsUnitAliveBJ(s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))]))) then
      -- INLINED!!
      nbAlive = nbAlive + 1
    end
    i = i + 1
  end

  if (nbAlive == 0) then
    TriggerExecute(gg_trg_Lose_a_life_and_res)
    TriggerSleepAction(2)
    StartSound(gg_snd_questFailed)
    last = true
  else
    if (nbAlive == 1) then
      StartSound(gg_snd_warning)
    end
  end

  if (isAfk[n]) then
    DestroyTextTag(afkModeTextTags[n])
  else
    PauseTimer(afkModeTimers[n])
  end

  if (AreAllAliveHeroesAfk()) then
    TimerStart(killAllAfkTimer, 5, false, KillAllHeroesIfAfk)
    -- INLINED!!
  end

  if (last) then
    --à cause du sleepAction plus haut
    TriggerSleepAction(3)
  else
    --coop
    if (udg_coopModeActive) then
      TriggerSleepAction(1.3)

      --si héros déjà vivant, inutile de le ressuciter
      if (IsUnitAliveBJ(hero)) then
        TriggerSleepAction(3.7)
        udg_nbKilled = udg_nbKilled - 1
        return
      end

      --déplacement du héros si mort sur le death path
      if ((s__TerrainType_kind[(s__TerrainTypeArray_getTerrainType(udg_terrainTypes, GetUnitX(hero), GetUnitY(hero)))]) == "death") then
        -- INLINED!!
        DeplacementHeroHorsDeathPath(hero)
      end

      --revive si autre héros (vivant) au même endroit
      i = 0
      while true do
        if i > 11 then
          break
        end
        if (i ~= n and (IsUnitAliveBJ(s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))]))) then
          -- INLINED!!
          diffX = GetUnitX((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))])) - GetUnitX(hero)
          -- INLINED!!
          diffY = GetUnitY((s__Escaper_hero[((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))])) - GetUnitY(hero)
          -- INLINED!!
          if (SquareRoot(diffX * diffX + diffY * diffY) < COOP_REVIVE_DIST) then
            s__Escaper_coopReviveHero((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))
            -- INLINED!!
            TriggerSleepAction(3.7)
            udg_nbKilled = udg_nbKilled - 1
            return
          end
        end
        i = i + 1
      end

      s__Escaper_enableTrigCoopRevive((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (n)]))
      -- INLINED!!
      TriggerSleepAction(3.7)
    else
      TriggerSleepAction(5)
    end
  end

  SetUnitAnimation(hero, "stand")
  udg_nbKilled = udg_nbKilled - 1
end

--===========================================================================
function InitTrig_A_hero_dies_check_if_all_dead_and_sounds()
  gg_trg_A_hero_dies_check_if_all_dead_and_sounds = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_A_hero_dies_check_if_all_dead_and_sounds, EVENT_PLAYER_UNIT_DEATH)
  TriggerAddCondition(gg_trg_A_hero_dies_check_if_all_dead_and_sounds, Condition(Trig_a_hero_dies_Conditions))
  TriggerAddAction(gg_trg_A_hero_dies_check_if_all_dead_and_sounds, Trig_a_hero_dies_Actions)
end


--===========================================================================
-- Trigger: Lose a life and res
--
-- actions when the last hero alive dies
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


function Trig_Lose_a_life_and_res_Actions()
  local i = nil
  s__Lives_loseALife(udg_lives)
  if ((s__Lives_nb[(udg_lives)]) < 0) then
    -- INLINED!!
    if (not udg_gameIsLost) then
      udg_gameIsLost = true
      DisplayTextToForce(GetPlayersAll(), "You have no more lives !")
      TriggerSleepAction(2)
      DisplayTextToForce(GetPlayersAll(), "The game will restart in 10 seconds.")
      TriggerSleepAction(10.00)
      s__LevelArray_restartTheGame(udg_levels)
      udg_gameIsLost = false
    end
  else
    if (udg_changeAllTerrainsAtRevive) then
      TriggerSleepAction(6.00)
      ChangeAllTerrains("normal")
      TriggerSleepAction(2.00)
    else
      TriggerSleepAction(8.00)
    end
    i = 0
    while true do
      if (i > 11) then
        break
      end
      if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]) ~= 0) then
        -- INLINED!!
        s__Escaper_reviveAtStart((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (i)]))
        -- INLINED!!
      end
      i = i + 1
    end
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("|cff5c2e2eYou have lost a life !"))
    -- INLINED!!
    --set AnticheatTeleport_justRevived = true
  end
end

--===========================================================================
function InitTrig_Lose_a_life_and_res()
  gg_trg_Lose_a_life_and_res = CreateTrigger()
  TriggerAddAction(gg_trg_Lose_a_life_and_res, Trig_Lose_a_life_and_res_Actions)
end


--===========================================================================
-- Trigger: Sound monster dies
--===========================================================================
function Trig_Sound_monster_dies_Conditions()
  if (not (GetOwningPlayer(GetTriggerUnit()) == Player(PLAYER_NEUTRAL_AGGRESSIVE))) then
    return false
  end
  return true
end

function Trig_Sound_monster_dies_Actions()
  PlaySoundBJ(gg_snd_goodJob)
end

--===========================================================================
function InitTrig_Sound_monster_dies()
  gg_trg_Sound_monster_dies = CreateTrigger()
  TriggerRegisterAnyUnitEventBJ(gg_trg_Sound_monster_dies, EVENT_PLAYER_UNIT_DEATH)
  TriggerAddCondition(gg_trg_Sound_monster_dies, Condition(Trig_Sound_monster_dies_Conditions))
  TriggerAddAction(gg_trg_Sound_monster_dies, Trig_Sound_monster_dies_Actions)
end

--===========================================================================
-- Trigger: Select hero
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_Select_hero_Actions()
  if (IsHero(GetTriggerUnit())) then
    s__Escaper_setIsHeroSelectedForPlayer(Hero2Escaper(GetTriggerUnit()), GetTriggerPlayer(), true)
  end
end

--===========================================================================
function InitTrig_Select_hero()
  gg_trg_Select_hero = CreateTrigger()
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(0), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(1), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(2), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(3), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(4), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(5), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(6), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(7), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(8), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(9), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(10), true)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Select_hero, Player(11), true)
  TriggerAddAction(gg_trg_Select_hero, Trig_Select_hero_Actions)
end


--===========================================================================
-- Trigger: Unselect hero
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_Unselect_hero_Actions()
  if (IsHero(GetTriggerUnit())) then
    s__Escaper_setIsHeroSelectedForPlayer(Hero2Escaper(GetTriggerUnit()), GetTriggerPlayer(), false)
  end
end

--===========================================================================
function InitTrig_Unselect_hero()
  gg_trg_Unselect_hero = CreateTrigger()
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(0), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(1), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(2), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(3), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(4), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(5), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(6), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(7), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(8), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(9), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(10), false)
  TriggerRegisterPlayerSelectionEventBJ(gg_trg_Unselect_hero, Player(11), false)
  TriggerAddAction(gg_trg_Unselect_hero, Trig_Unselect_hero_Actions)
end


--===========================================================================
-- Trigger: Giving making rights
--
-- Disable or delete this trigger when your map is finished
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_Giving_making_rights_Actions()
  local playerId = 0
  --giving admin rights to the first player
  while true do
    if (s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (playerId)]) ~= 0 then
      break
    end
    -- INLINED!!
    playerId = playerId + 1
  end
  s__Escaper_setIsTrueMaximaxou((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (playerId)]), true)
  -- INLINED!!
  --giving other players make rights
  while true do
    playerId = playerId + 1
    if playerId > 11 then
      break
    end
    if ((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (playerId)]) ~= 0) then
      -- INLINED!!
      s__Escaper_setCanCheat((s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (playerId)]), true)
      -- INLINED!!
    end
  end
end

--===========================================================================
function InitTrig_Giving_making_rights()
  gg_trg_Giving_making_rights = CreateTrigger()
  TriggerRegisterTimerEventSingle(gg_trg_Giving_making_rights, 0.00)
  TriggerAddAction(gg_trg_Giving_making_rights, Trig_Giving_making_rights_Actions)
end


--===========================================================================
-- Trigger: Welcome message
--===========================================================================
function Trig_Welcome_message_Actions()
  DisplayTimedTextToForce(GetPlayersAll(), 45.00, "TRIGSTR_190")
  DisplayTimedTextToForce(GetPlayersAll(), 45.00, "TRIGSTR_191")
  FlashQuestDialogButtonBJ()
end

--===========================================================================
function InitTrig_Welcome_message()
  gg_trg_Welcome_message = CreateTrigger()
  TriggerAddAction(gg_trg_Welcome_message, Trig_Welcome_message_Actions)
end

--===========================================================================
-- Trigger: Commands 1
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


--===========================================================================
-- Trigger: Commands 2
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0






--===========================================================================
function InitTrig_Commands_2()
end


--===========================================================================
-- Trigger: Colors
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
















--===========================================================================
function InitTrig_Colors()
end


--===========================================================================
-- Trigger: Effects
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
















--===========================================================================
function InitTrig_Effects()
end


--===========================================================================
-- Trigger: Red commands
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
















--===========================================================================
function InitTrig_Red_commands()
end


--===========================================================================
-- Trigger: Map description
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
















--===========================================================================
function InitTrig_Map_description()
end


--===========================================================================
-- Trigger: Contact
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
















--===========================================================================
function InitTrig_Contact()
end


--===========================================================================
-- Trigger: Command shortcuts
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0







--===========================================================================
function InitTrig_Command_shortcuts()
end


--===========================================================================
-- Trigger: Adding quests
--===========================================================================
--TESH.scrollpos=6
--TESH.alwaysfold=0
function Trig_adding_quests_Actions()

  --GAUCHE

  --Commands1
  CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED, "Commands 1", Commands1, "ReplaceableTextures\\CommandButtons\\BTNEnt.blp")
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), Commands1Requirement1)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), Commands1Requirement2)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), Commands1Requirement3)

  --Commands2
  CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED, "Commands 2", Commands2, "ReplaceableTextures\\CommandButtons\\BTNEnt.blp")
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), Commands2Requirement1)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), Commands2Requirement2)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), Commands2Requirement3)

  -- Colors
  CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED, "Colors", Colors, "ReplaceableTextures\\CommandButtons\\BTNAmbush.blp")
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), ColorsRequirement1)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), ColorsRequirement2)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), ColorsRequirement3)

  -- Effects
  CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED, "Effects", Effects, "ReplaceableTextures\\CommandButtons\\BTNDevotion.blp")
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), EffectsRequirement1)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), EffectsRequirement2)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), EffectsRequirement3)

  -- Red commands
  CreateQuestBJ(bj_QUESTTYPE_REQ_DISCOVERED, "Red commands", RedCommands, "ReplaceableTextures\\CommandButtons\\BTNAncientOfLore.blp")
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), RedCommandsRequirement1)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), RedCommandsRequirement2)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), RedCommandsRequirement3)




  --DROITE

  -- Map description
  CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "Map description", MapDescription, "ReplaceableTextures\\CommandButtons\\BTNCOP.blp")
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), MapDescriptionRequirement1)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), MapDescriptionRequirement2)

  -- Contact
  CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "Contact", Contact, "ReplaceableTextures\\CommandButtons\\BTNEvilIllidan.blp")
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), ContactRequirement1)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), ContactRequirement2)

  --Command shortcuts
  CreateQuestBJ(bj_QUESTTYPE_OPT_DISCOVERED, "Command shortcuts", CommandShortcuts, "ReplaceableTextures\\CommandButtons\\BTNImmolationOff.blp")
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), CommandShortcutsRequirement1)
  CreateQuestItemBJ(GetLastCreatedQuestBJ(), CommandShortcutsRequirement2)


end

--===========================================================================
function InitTrig_Adding_quests()
  gg_trg_Adding_quests = CreateTrigger()
  TriggerAddAction(gg_trg_Adding_quests, Trig_adding_quests_Actions)
end

--===========================================================================
-- Trigger: Antisave
--===========================================================================
function Trig_Antisave_Actions()
  TriggerExecute(GetTriggeringTrigger())
end

--===========================================================================
function InitTrig_Antisave()
  gg_trg_Antisave = CreateTrigger()
  DisableTrigger(gg_trg_Antisave)
  TriggerRegisterGameLoadedEventBJ(gg_trg_Antisave)
  TriggerAddAction(gg_trg_Antisave, Trig_Antisave_Actions)
end

--===========================================================================
-- Trigger: Antisave warning
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0
function Trig_antisave_warning_Actions()
  if (IsTriggerEnabled(gg_trg_Antisave)) then
    DisplayTextToForce(GetPlayersAll(), udg_colorCode[RED] .. "Warning ! Loading the game won't work !")
  else
    DisplayTextToForce(GetPlayersAll(), udg_colorCode[RED] .. "Don't forget to type -saveTerrain to save the whole terrain before saving the game. (load with -loadTerrain)")
  end
end


--===========================================================================
function InitTrig_Antisave_warning()
  gg_trg_Antisave_warning = CreateTrigger()
  TriggerRegisterGameSavedEventBJ(gg_trg_Antisave_warning)
  TriggerAddAction(gg_trg_Antisave_warning, Trig_antisave_warning_Actions)
end


--===========================================================================
-- Trigger: Init terrain types
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


function InitTrig_Init_terrain_types()
  if (udg_terrainTypes == 0) then
    udg_terrainTypes = s__TerrainTypeArray_create()
  end
end


--===========================================================================
-- Trigger: Init monster and caster types
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0


function InitTrig_Init_monster_and_caster_types()
  if (udg_monsterTypes == 0) then
    udg_monsterTypes = s__MonsterTypeArray_create()
  end

  if (udg_casterTypes == 0) then
    udg_casterTypes = s__CasterTypeArray_create()
  end
end


--===========================================================================
-- Trigger: Init levels
--===========================================================================
--TESH.scrollpos=0
--TESH.alwaysfold=0

--===========================================================================
function InitCustomTriggers()
  --Function not found: call InitTrig_Version()
  --Function not found: call InitTrig_Constants()
  --Function not found: call InitTrig_Text()
  InitTrig_Init_terrain_limit_variables()
  InitTrig_Init_colorCodes()
  --Function not found: call InitTrig_Basic_functions()
  --Function not found: call InitTrig_Functions_on_numbers()
  --Function not found: call InitTrig_Ascii()
  --Function not found: call InitTrig_Decode_string()
  --Function not found: call InitTrig_ZLibrary()
  --Function not found: call InitTrig_StringUtils()
  --Function not found: call InitTrig_Stack()
  --Function not found: call InitTrig_TimerUtils()
  --Function not found: call InitTrig_SoundUtils()
  --Function not found: call InitTrig_View_all_hide_all()
  --Function not found: call InitTrig_Immolation_skills()
  --Function not found: call InitTrig_MonsterType()
  --Function not found: call InitTrig_MonsterTypeArray()
  --Function not found: call InitTrig_Monster_creation_functions()
  --Function not found: call InitTrig_MonsterInterface()
  --Function not found: call InitTrig____trig_Monsters_clickable_set_life()
  --Function not found: call InitTrig_MonsterNoMove()
  --Function not found: call InitTrig_MonsterNoMoveArray()
  --Function not found: call InitTrig_MonsterSimplePatrol()
  --Function not found: call InitTrig_MonsterSimplePatrolArray()
  --Function not found: call InitTrig_MonsterMultiplePatrols()
  --Function not found: call InitTrig_MonsterMultiplePatrolsArray()
  --Function not found: call InitTrig_MonsterTeleport()
  --Function not found: call InitTrig_MonsterTeleportArray()
  --Function not found: call InitTrig_CasterType()
  --Function not found: call InitTrig_CasterTypeArray()
  --Function not found: call InitTrig_Caster_functions()
  --Function not found: call InitTrig_Caster()
  --Function not found: call InitTrig_CasterArray()
  --Function not found: call InitTrig_CasterShot()
  --Function not found: call InitTrig_MonsterOrCaster()
  --Function not found: call InitTrig_MonsterOrCasterStack()
  --Function not found: call InitTrig_ClearMob()
  --Function not found: call InitTrig_ClearMobArray()
  --Function not found: call InitTrig_MonsterSpawn()
  --Function not found: call InitTrig_MonsterSpawnArray()
  --Function not found: call InitTrig_Terrain_type_functions()
  --Function not found: call InitTrig_TerrainType()
  --Function not found: call InitTrig_TerrainTypeWalk()
  --Function not found: call InitTrig_TerrainTypeDeath_functions()
  --Function not found: call InitTrig_TerrainTypeDeath_KillingTimers()
  --Function not found: call InitTrig_TerrainTypeDeath()
  --Function not found: call InitTrig_TerrainTypeSlide()
  --Function not found: call InitTrig_TerrainTypeArray()
  --Function not found: call InitTrig_Time_of_game_trigger()
  --Function not found: call InitTrig_Lives_and_game_time()
  --Function not found: call InitTrig_Meteor()
  --Function not found: call InitTrig_MeteorArray()
  --Function not found: call InitTrig_Meteor_functions()
  InitTrig_Right_click_on_widget()
  InitTrig_Meteor_being_used()
  InitTrig_Stop_using_normal_meteor()
  InitTrig_Effect_meteor_on_pick_up()
  InitTrig_Effect_meteor_on_pick_down()
  --Function not found: call InitTrig_VisibilityModifier()
  --Function not found: call InitTrig_VisibilityModifierArray()
  --Function not found: call InitTrig_StartAndEnd()
  --Function not found: call InitTrig_Triggers()
  --Function not found: call InitTrig_Level()
  --Function not found: call InitTrig____Level_functions()
  --Function not found: call InitTrig____Trig_checkpoint_revive_heroes()
  --Function not found: call InitTrig_LevelArray()
  --Function not found: call InitTrig_EscaperEffect_functions()
  --Function not found: call InitTrig_EscaperEffect()
  --Function not found: call InitTrig_EscaperEffectArray()
  --Function not found: call InitTrig_Escaper_functions()
  --Function not found: call InitTrig_Escaper_disco()
  --Function not found: call InitTrig_Escaper()
  --Function not found: call InitTrig_EscaperArray()
  --Function not found: call InitTrig_EscaperSavedCommands()
  --Function not found: call InitTrig_Make()
  --Function not found: call InitTrig_Monster_making_no_move_Actions()
  --Function not found: call InitTrig_MakeMonsterNoMove()
  --Function not found: call InitTrig_Monster_making_simple_patrol_Actions()
  --Function not found: call InitTrig_MakeMonsterSimplePatrol()
  --Function not found: call InitTrig_Monster_making_multiple_patrols_Actions()
  --Function not found: call InitTrig_MakeMonsterMultiplePatrols()
  --Function not found: call InitTrig_Monster_making_teleport_Actions()
  --Function not found: call InitTrig_MakeMonsterTeleport()
  --Function not found: call InitTrig_Monster_spawn_making_Actions()
  --Function not found: call InitTrig_MakeMonsterSpawn()
  --Function not found: call InitTrig_Monster_delete_Actions()
  --Function not found: call InitTrig_MakeDeleteMonsters()
  --Function not found: call InitTrig_Make_set_unit_monster_type_Actions()
  --Function not found: call InitTrig_MakeSetUnitMonsterType()
  --Function not found: call InitTrig_Make_set_unit_teleport_period_Actions()
  --Function not found: call InitTrig_MakeSetUnitTeleportPeriod()
  --Function not found: call InitTrig_Make_get_unit_teleport_period_Actions()
  --Function not found: call InitTrig_MakeGetUnitTeleportPeriod()
  --Function not found: call InitTrig_Meteor_making_Actions()
  --Function not found: call InitTrig_MakeMeteor()
  --Function not found: call InitTrig_Meteor_delete_Actions()
  --Function not found: call InitTrig_MakeDeleteMeteors()
  --Function not found: call InitTrig_Caster_making_Actions()
  --Function not found: call InitTrig_MakeCaster()
  --Function not found: call InitTrig_Caster_delete_Actions()
  --Function not found: call InitTrig_MakeDeleteCasters()
  --Function not found: call InitTrig_ClearMob_making_Actions()
  --Function not found: call InitTrig_MakeClearMob()
  --Function not found: call InitTrig_ClearMob_delete_Actions()
  --Function not found: call InitTrig_MakeDeleteClearMob()
  --Function not found: call InitTrig_Terrain_making_Actions()
  --Function not found: call InitTrig_MakeTerrainCreate()
  --Function not found: call InitTrig_Terrain_copy_paste_Actions()
  --Function not found: call InitTrig_MakeTerrainCopyPaste()
  --Function not found: call InitTrig_Terrain_vertical_symmetry_Actions()
  --Function not found: call InitTrig_MakeTerrainVerticalSymmetry()
  --Function not found: call InitTrig_Terrain_horizontal_symmetry_Actions()
  --Function not found: call InitTrig_MakeTerrainHorizontalSymmetry()
  --Function not found: call InitTrig_Terrain_height_making_Actions()
  --Function not found: call InitTrig_MakeTerrainHeight()
  --Function not found: call InitTrig_Make_exchange_terrains_Actions()
  --Function not found: call InitTrig_MakeExchangeTerrains()
  --Function not found: call InitTrig_Start_making_Actions()
  --Function not found: call InitTrig_MakeStart()
  --Function not found: call InitTrig_End_making_Actions()
  --Function not found: call InitTrig_MakeEnd()
  --Function not found: call InitTrig_VisibilityModifier_making_Actions()
  --Function not found: call InitTrig_MakeVisibilityModifier()
  --Function not found: call InitTrig_Getting_terrain_type_info_Actions()
  --Function not found: call InitTrig_MakeGetTerrainType()
  --Function not found: call InitTrig_MakeAction()
  --Function not found: call InitTrig_MakeMonsterAction()
  --Function not found: call InitTrig_MakeDeleteMonstersAction()
  --Function not found: call InitTrig_MakeMeteorAction()
  --Function not found: call InitTrig_MakeDeleteMeteorsAction()
  --Function not found: call InitTrig_MakeCasterAction()
  --Function not found: call InitTrig_MakeDeleteCastersAction()
  --Function not found: call InitTrig_MakeTerrainCreateAction()
  --Function not found: call InitTrig_MakeTerrainCopyPasteAction()
  --Function not found: call InitTrig_MakeTerrainVerticalSymmetryAction()
  --Function not found: call InitTrig_MakeTerrainHorizontalSymmetryAction()
  --Function not found: call InitTrig_MakeTerrainHeightAction()
  --Function not found: call InitTrig_MakeVisibilityModifierAction()
  --Function not found: call InitTrig_MakeLastActions()
  --Function not found: call InitTrig_Command_functions()
  --Function not found: call InitTrig_Teleport_once_only()
  InitTrig_Teleport()
  InitTrig_Autorevive()
  --Function not found: call InitTrig_Command_all()
  --Function not found: call InitTrig_Command_red()
  --Function not found: call InitTrig_Command_cheat()
  --Function not found: call InitTrig_Command_make()
  --Function not found: call InitTrig_Command_max()
  --Function not found: call InitTrig_Command_true_max()
  --Function not found: call InitTrig_Command_execution()
  --Function not found: call InitTrig_Gravity()
  --Function not found: call InitTrig_Slide()
  --Function not found: call InitTrig_To_turn_on_slide()
  --Function not found: call InitTrig_Auto_continue_after_sliding()
  --Function not found: call InitTrig_CheckTerrain()
  --Function not found: call InitTrig_All_terrain_functions()
  --Function not found: call InitTrig_Terrain_type_ascii_conversion()
  --Function not found: call InitTrig_Terrain_type_max()
  --Function not found: call InitTrig_Terrain_type_grass()
  --Function not found: call InitTrig_Terrain_type_names_and_data()
  --Function not found: call InitTrig_Terrain_functions()
  --Function not found: call InitTrig_Terrain_type_from_string()
  --Function not found: call InitTrig_Modify_terrain_functions()
  --Function not found: call InitTrig_Terrain_modifying_trig()
  --Function not found: call InitTrig_Change_one_terrain()
  --Function not found: call InitTrig_Change_all_terrains()
  --Function not found: call InitTrig_Exchange_terrains()
  --Function not found: call InitTrig_Randomize_terrains()
  --Function not found: call InitTrig_Reinit_terrains()
  --Function not found: call InitTrig_Reinit_terrains_position_Change_variations_and_ut_at_beginning()
  --Function not found: call InitTrig_Save_load_terrain_without_name()
  --Function not found: call InitTrig_Save_load_terrain_with_name()
  --Function not found: call InitTrig_struct_StringArrayForCache()
  --Function not found: call InitTrig_Save_terrain_config()
  --Function not found: call InitTrig_Save_terrain()
  --Function not found: call InitTrig_Save_terrain_heights_and_cliffs()
  --Function not found: call InitTrig_Save_terrain_ramps()
  --Function not found: call InitTrig_Save_water()
  --Function not found: call InitTrig_Save_monster_types()
  --Function not found: call InitTrig_Save_caster_types()
  --Function not found: call InitTrig_Save_levels()
  --Function not found: call InitTrig_SAVE_MAP_in_cache()
  InitTrig_Init_lives()
  udg_escapers = s__EscaperArray_create()
  -- INLINED!!
  InitTrig_Init_struct_levels()
  InitTrig_Forces_ally()
  InitTrig_Camera()
  InitTrig_No_selection_circle()
  InitTrig_Allways_day()
  --Function not found: call InitTrig_Message_heroDies()
  InitTrig_Start_sound()
  --Function not found: call InitTrig_Heroes()
  InitTrig_coop_init_sounds()
  InitTrig_creation_dialogue()
  InitTrig_apparition_dialogue_et_fermeture_automatique()
  InitTrig_appui_sur_bouton_dialogue()
  --Function not found: call InitTrig_deplacement_heros_hors_death_path()
  --Function not found: call InitTrig_Command_shortcuts_functions()
  InitTrig_Using_shortcut()
  InitTrig_Camera_reset()
  --Function not found: call InitTrig_Apm()
  --Function not found: call InitTrig_Afk_mode()
  InitTrig_Afk_mode_ordre_recu()
  InitTrig_A_player_leaves()
  InitTrig_InvisUnit_is_getting_damage()
  InitTrig_A_hero_dies_check_if_all_dead_and_sounds()
  InitTrig_Lose_a_life_and_res()
  InitTrig_Sound_monster_dies()
  InitTrig_Select_hero()
  InitTrig_Unselect_hero()
  InitTrig_Giving_making_rights()
  InitTrig_Welcome_message()
  --Function not found: call InitTrig_Commands_1()
  InitTrig_Commands_2()
  InitTrig_Colors()
  InitTrig_Effects()
  InitTrig_Red_commands()
  InitTrig_Map_description()
  InitTrig_Contact()
  InitTrig_Command_shortcuts()
  InitTrig_Adding_quests()
  InitTrig_Antisave()
  InitTrig_Antisave_warning()
  InitTrig_Init_terrain_types()
  InitTrig_Init_monster_and_caster_types()
  --Function not found: call InitTrig_Init_levels()
end

--===========================================================================
function RunInitializationTriggers()
  ConditionalTriggerExecute(gg_trg_Init_terrain_limit_variables)
  ConditionalTriggerExecute(gg_trg_Init_colorCodes)
  ConditionalTriggerExecute(gg_trg_Forces_ally)
  ConditionalTriggerExecute(gg_trg_Camera)
  ConditionalTriggerExecute(gg_trg_No_selection_circle)
  ConditionalTriggerExecute(gg_trg_Allways_day)
  ConditionalTriggerExecute(gg_trg_coop_init_sounds)
  ConditionalTriggerExecute(gg_trg_Welcome_message)
  ConditionalTriggerExecute(gg_trg_Adding_quests)
end

--***************************************************************************
--*
--*  Players
--*
--***************************************************************************

function InitCustomPlayerSlots()

  -- Player 0
  SetPlayerStartLocation(Player(0), 0)
  SetPlayerColor(Player(0), ConvertPlayerColor(0))
  SetPlayerRacePreference(Player(0), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(0), true)
  SetPlayerController(Player(0), MAP_CONTROL_USER)

  -- Player 1
  SetPlayerStartLocation(Player(1), 1)
  SetPlayerColor(Player(1), ConvertPlayerColor(1))
  SetPlayerRacePreference(Player(1), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(1), true)
  SetPlayerController(Player(1), MAP_CONTROL_USER)

  -- Player 2
  SetPlayerStartLocation(Player(2), 2)
  SetPlayerColor(Player(2), ConvertPlayerColor(2))
  SetPlayerRacePreference(Player(2), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(2), true)
  SetPlayerController(Player(2), MAP_CONTROL_USER)

  -- Player 3
  SetPlayerStartLocation(Player(3), 3)
  SetPlayerColor(Player(3), ConvertPlayerColor(3))
  SetPlayerRacePreference(Player(3), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(3), true)
  SetPlayerController(Player(3), MAP_CONTROL_USER)

  -- Player 4
  SetPlayerStartLocation(Player(4), 4)
  SetPlayerColor(Player(4), ConvertPlayerColor(4))
  SetPlayerRacePreference(Player(4), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(4), true)
  SetPlayerController(Player(4), MAP_CONTROL_USER)

  -- Player 5
  SetPlayerStartLocation(Player(5), 5)
  SetPlayerColor(Player(5), ConvertPlayerColor(5))
  SetPlayerRacePreference(Player(5), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(5), true)
  SetPlayerController(Player(5), MAP_CONTROL_USER)

  -- Player 6
  SetPlayerStartLocation(Player(6), 6)
  SetPlayerColor(Player(6), ConvertPlayerColor(6))
  SetPlayerRacePreference(Player(6), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(6), true)
  SetPlayerController(Player(6), MAP_CONTROL_USER)

  -- Player 7
  SetPlayerStartLocation(Player(7), 7)
  SetPlayerColor(Player(7), ConvertPlayerColor(7))
  SetPlayerRacePreference(Player(7), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(7), true)
  SetPlayerController(Player(7), MAP_CONTROL_USER)

  -- Player 8
  SetPlayerStartLocation(Player(8), 8)
  SetPlayerColor(Player(8), ConvertPlayerColor(8))
  SetPlayerRacePreference(Player(8), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(8), true)
  SetPlayerController(Player(8), MAP_CONTROL_USER)

  -- Player 9
  SetPlayerStartLocation(Player(9), 9)
  SetPlayerColor(Player(9), ConvertPlayerColor(9))
  SetPlayerRacePreference(Player(9), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(9), true)
  SetPlayerController(Player(9), MAP_CONTROL_USER)

  -- Player 10
  SetPlayerStartLocation(Player(10), 10)
  SetPlayerColor(Player(10), ConvertPlayerColor(10))
  SetPlayerRacePreference(Player(10), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(10), true)
  SetPlayerController(Player(10), MAP_CONTROL_USER)

  -- Player 11
  SetPlayerStartLocation(Player(11), 11)
  SetPlayerColor(Player(11), ConvertPlayerColor(11))
  SetPlayerRacePreference(Player(11), RACE_PREF_RANDOM)
  SetPlayerRaceSelectable(Player(11), true)
  SetPlayerController(Player(11), MAP_CONTROL_USER)

end

function InitCustomTeams()
  -- Force: TRIGSTR_187
  SetPlayerTeam(Player(0), 0)
  SetPlayerState(Player(0), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(1), 0)
  SetPlayerState(Player(1), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(2), 0)
  SetPlayerState(Player(2), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(3), 0)
  SetPlayerState(Player(3), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(4), 0)
  SetPlayerState(Player(4), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(5), 0)
  SetPlayerState(Player(5), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(6), 0)
  SetPlayerState(Player(6), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(7), 0)
  SetPlayerState(Player(7), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(8), 0)
  SetPlayerState(Player(8), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(9), 0)
  SetPlayerState(Player(9), PLAYER_STATE_ALLIED_VICTORY, 1)
  SetPlayerTeam(Player(10), 0)
  SetPlayerState(Player(10), PLAYER_STATE_ALLIED_VICTORY, 1)

  --   Allied
  SetPlayerAllianceStateAllyBJ(Player(0), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(0), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(1), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(2), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(3), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(4), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(5), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(6), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(7), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(9), true)
  SetPlayerAllianceStateAllyBJ(Player(8), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(9), Player(10), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(0), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(1), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(2), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(3), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(4), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(5), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(6), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(7), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(8), true)
  SetPlayerAllianceStateAllyBJ(Player(10), Player(9), true)

  --   Shared Vision
  SetPlayerAllianceStateVisionBJ(Player(0), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(0), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(1), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(2), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(3), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(4), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(5), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(6), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(7), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(9), true)
  SetPlayerAllianceStateVisionBJ(Player(8), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(9), Player(10), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(0), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(1), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(2), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(3), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(4), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(5), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(6), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(7), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(8), true)
  SetPlayerAllianceStateVisionBJ(Player(10), Player(9), true)

  -- Force: TRIGSTR_187
  SetPlayerTeam(Player(11), 1)
  SetPlayerState(Player(11), PLAYER_STATE_ALLIED_VICTORY, 1)

end

function InitAllyPriorities()

  SetStartLocPrioCount(0, 2)
  SetStartLocPrio(0, 0, 3, MAP_LOC_PRIO_HIGH)
  SetStartLocPrio(0, 1, 4, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(1, 3)
  SetStartLocPrio(1, 0, 4, MAP_LOC_PRIO_LOW)
  SetStartLocPrio(1, 1, 7, MAP_LOC_PRIO_HIGH)
  SetStartLocPrio(1, 2, 8, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(2, 1)
  SetStartLocPrio(2, 0, 6, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(3, 3)
  SetStartLocPrio(3, 0, 0, MAP_LOC_PRIO_HIGH)
  SetStartLocPrio(3, 1, 10, MAP_LOC_PRIO_HIGH)
  SetStartLocPrio(3, 2, 11, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(4, 1)
  SetStartLocPrio(4, 0, 0, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(5, 3)
  SetStartLocPrio(5, 0, 9, MAP_LOC_PRIO_LOW)
  SetStartLocPrio(5, 1, 10, MAP_LOC_PRIO_HIGH)
  SetStartLocPrio(5, 2, 11, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(6, 2)
  SetStartLocPrio(6, 0, 2, MAP_LOC_PRIO_LOW)
  SetStartLocPrio(6, 1, 9, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(7, 1)
  SetStartLocPrio(7, 0, 8, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(8, 1)
  SetStartLocPrio(8, 0, 7, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(9, 1)
  SetStartLocPrio(9, 0, 6, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(10, 1)
  SetStartLocPrio(10, 0, 11, MAP_LOC_PRIO_HIGH)

  SetStartLocPrioCount(11, 1)
  SetStartLocPrio(11, 0, 10, MAP_LOC_PRIO_HIGH)
end

--***************************************************************************
--*
--*  Main Initialization
--*
--***************************************************************************

--===========================================================================
function main()
  SetCameraBounds(-4096.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), -4096.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM), 4096.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), 4096.0 - GetCameraMargin(CAMERA_MARGIN_TOP), -4096.0 + GetCameraMargin(CAMERA_MARGIN_LEFT), 4096.0 - GetCameraMargin(CAMERA_MARGIN_TOP), 4096.0 - GetCameraMargin(CAMERA_MARGIN_RIGHT), -4096.0 + GetCameraMargin(CAMERA_MARGIN_BOTTOM))
  SetDayNightModels("Environment\\DNC\\DNCLordaeron\\DNCLordaeronTerrain\\DNCLordaeronTerrain.mdl", "Environment\\DNC\\DNCLordaeron\\DNCLordaeronUnit\\DNCLordaeronUnit.mdl")
  NewSoundEnvironment("Default")
  SetAmbientDaySound("BlackCitadelDay")
  SetAmbientNightSound("BlackCitadelNight")
  SetMapMusic("Music", true, 0)
  InitSounds()
  CreateRegions()
  InitBlizzard()

  ExecuteFunc("jasshelper__initstructs1517943906")
  ExecuteFunc("Init_AfkMode")
  ExecuteFunc("Init_AutoContinueAfterSliding")
  ExecuteFunc("Init_GameTime")
  ExecuteFunc("InitGravity")
  ExecuteFunc("Init_ImmolationSkills")
  ExecuteFunc("Init_MonstersClickableSetLife")
  ExecuteFunc("StringLib___Init")
  ExecuteFunc("Init_TerrainModifyingTrig")
  ExecuteFunc("TimerUtils___init")
  ExecuteFunc("Init_ViewAllHideAll")
  ExecuteFunc("Init_MonsterType")
  ExecuteFunc("InitStartSaveNextLevel")
  ExecuteFunc("Init_Apm")
  ExecuteFunc("Init_TerrainTypeNamesAndData")
  ExecuteFunc("InitCasterShot")
  ExecuteFunc("Init_ReinitTerrains")
  ExecuteFunc("Init_Reinit_terrains_position_Change_variations_and_ut_at_beginning")
  ExecuteFunc("Init_Trig_checkpoint_revive_heroes")
  ExecuteFunc("Init_Heroes")
  ExecuteFunc("Init_StartAndEnd")
  ExecuteFunc("Init_ToTurnOnSlide")
  ExecuteFunc("MonsterInterface__InitHtMonster")
  ExecuteFunc("Init_SaveMapInCache")
  ExecuteFunc("ClearMob__InitClearMob")
  ExecuteFunc("Init_MonsterSimplePatrol")
  ExecuteFunc("InitMonsterTeleport")
  ExecuteFunc("InitCaster")
  ExecuteFunc("Init_Command_execution")
  ExecuteFunc("Init_EscaperSavedCommands")

  InitGlobals()
  InitCustomTriggers()
  RunInitializationTriggers()

end

--***************************************************************************
--*
--*  Map Configuration
--*
--***************************************************************************

function config()
  SetMapName("TRIGSTR_018")
  SetMapDescription("")
  SetPlayers(12)
  SetTeams(12)
  SetGamePlacement(MAP_PLACEMENT_TEAMS_TOGETHER)

  DefineStartLocation(0, 1024.0, 768.0)
  DefineStartLocation(1, 896.0, -1024.0)
  DefineStartLocation(2, -896.0, -512.0)
  DefineStartLocation(3, 384.0, 768.0)
  DefineStartLocation(4, 1024.0, 256.0)
  DefineStartLocation(5, -640.0, 768.0)
  DefineStartLocation(6, -576.0, -384.0)
  DefineStartLocation(7, -256.0, -960.0)
  DefineStartLocation(8, -128.0, -1088.0)
  DefineStartLocation(9, -512.0, -128.0)
  DefineStartLocation(10, -128.0, 448.0)
  DefineStartLocation(11, 0.0, 384.0)

  -- Player setup
  InitCustomPlayerSlots()
  InitCustomTeams()
  InitAllyPriorities()
end




--Struct method generated initializers/callers:

--Functions for BigArrays:
function sa__EscaperSavedCommands_new()
  local this = f__arg_this
  local escaper = f__arg_integer1
  local commandName = f__arg_string1
  local command = f__arg_string2
  SaveStr(s__EscaperSavedCommands_savedCommands[this], escaper, StringHash(commandName), command)
  return true
end
function sa__EscaperSavedCommands_execute()
  local this = f__arg_this
  local escaper = f__arg_integer1
  local commandName = f__arg_string1
  local cmd = LoadStr(s__EscaperSavedCommands_savedCommands[this], escaper, StringHash(commandName))
  if (cmd == nil) then
    f__result_boolean = false
    return true
  else
    ExecuteCommand(escaper, cmd)
  end
  f__result_boolean = true
  return true
end
function sa__CasterArray_create()

  local ca = s__CasterArray__allocate()
  sg__CasterArray_set_lastInstance(ca, -1)
  f__result_integer = ca
  return true
end
function sa__CasterArray_get()
  local this = f__arg_this
  local arrayId = f__arg_integer1
  if (arrayId < 0 or arrayId > sg__CasterArray_get_lastInstance(this)) then
    f__result_integer = 0
    return true
  end
  f__result_integer = sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + arrayId)
  return true
end
function sa__CasterArray_getLastInstanceId()
  local this = f__arg_this
  f__result_integer = sg__CasterArray_get_lastInstance(this)
  return true
end
function sa__CasterArray_new()
  local this = f__arg_this
  local casterType = f__arg_integer1
  local x = f__arg_real1
  local l__y = f__arg_real2
  local angle = f__arg_real3
  local enable = f__arg_boolean1
  local n = sg__CasterArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    f__result_integer = 0
    return true
  end
  sg__CasterArray_set_lastInstance(this, n)
  sg___CasterArray_casters_set(sg__CasterArray_get_casters(this) + n, s__Caster_create(casterType, x, l__y, angle))
  if (enable) then
    s__Caster_enable(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + n))
  end
  sg__Caster_set_level(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + n), s__LevelArray_getLevelFromCasterArray(udg_levels, this))
  sg__Caster_set_arrayId(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + n), n)
  f__result_integer = sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + n)
  return true
end
function sa__CasterArray_count()
  local this = f__arg_this
  local nb = 0
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  f__result_integer = nb
  return true
end
function sa__CasterArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0) then
      s__Caster_deallocate(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
  sg__CasterArray_set_lastInstance(this, -1)
  return true
end
function sa__CasterArray_setCasterNull()
  local this = f__arg_this
  local casterArrayId = f__arg_integer1
  sg___CasterArray_casters_set(sg__CasterArray_get_casters(this) + casterArrayId, 0)
  return true
end
function sa__CasterArray_getCasterNear()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  local xCaster = nil
  local yCaster = nil
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0 and sg__Caster_get_casterUnit(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)) ~= nil) then
      xCaster = GetUnitX(sg__Caster_get_casterUnit(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)))
      yCaster = GetUnitY(sg__Caster_get_casterUnit(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)))
      if (RAbsBJ(x - xCaster) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yCaster) < MONSTER_NEAR_DIFF_MAX) then
        f__result_integer = sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)
        return true
      end
    end
    i = i + 1
  end
  f__result_integer = 0
  return true
end
function sa__CasterArray_createCasters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0) then
      s__Caster_enable(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__CasterArray_removeCasters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0) then
      s__Caster_disable(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__CasterArray_refreshCastersOfType()
  local this = f__arg_this
  local casterType = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0 and (sg__Caster_get_casterType((sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)))) == casterType and sg__Caster_get_casterUnit(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)) ~= nil) then
      -- INLINED!!
      s__Caster_refresh(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__CasterArray_removeCastersOfType()
  local this = f__arg_this
  local casterType = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__CasterArray_get_lastInstance(this)) then
      break
    end
    if (sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i) ~= 0 and (sg__Caster_get_casterType((sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i)))) == casterType) then
      -- INLINED!!
      s__Caster_deallocate(sg___CasterArray_casters_get(sg__CasterArray_get_casters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterTeleportArray_create()

  local ma = s__MonsterTeleportArray__allocate()
  sg__MonsterTeleportArray_set_lastInstance(ma, -1)
  f__result_integer = ma
  return true
end
function sa__MonsterTeleportArray_get()
  local this = f__arg_this
  local arrayId = f__arg_integer1
  if (arrayId < 0 or arrayId > sg__MonsterTeleportArray_get_lastInstance(this)) then
    f__result_integer = 0
    return true
  end
  f__result_integer = sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + arrayId)
  return true
end
function sa__MonsterTeleportArray_getLastInstanceId()
  local this = f__arg_this
  f__result_integer = sg__MonsterTeleportArray_get_lastInstance(this)
  return true
end
function sa__MonsterTeleportArray_new()
  local this = f__arg_this
  local mt = f__arg_integer1
  local period = f__arg_real1
  local angle = f__arg_real2
  local mode = f__arg_string1
  local createUnit = f__arg_boolean1
  local n = nil
  if ((mode ~= "normal" and mode ~= "string") or period < MONSTER_TELEPORT_PERIOD_MIN or period > MONSTER_TELEPORT_PERIOD_MAX) then
    f__result_integer = 0
    return true
  end
  n = sg__MonsterTeleportArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    f__result_integer = 0
    return true
  end
  sg__MonsterTeleportArray_set_lastInstance(this, n)
  sg___MonsterTeleportArray_monsters_set(sg__MonsterTeleportArray_get_monsters(this) + n, s__MonsterTeleport_create(mt, period, angle, mode))
  if (createUnit) then
    s__MonsterTeleport_createUnit(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + n))
  end
  sg__Monster_set_level(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + n), s__LevelArray_getLevelFromMonsterTeleportArray(udg_levels, this))
  sg__Monster_set_arrayId(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + n), n)
  f__result_integer = sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + n)
  return true
end
function sa__MonsterTeleportArray_count()
  local this = f__arg_this
  local nb = 0
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  f__result_integer = nb
  return true
end
function sa__MonsterTeleportArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0) then
      sc__Monster_deallocate(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  sg__MonsterTeleportArray_set_lastInstance(this, -1)
  return true
end
function sa__MonsterTeleportArray_setMonsterNull()
  local this = f__arg_this
  local monsterArrayId = f__arg_integer1
  sg___MonsterTeleportArray_monsters_set(sg__MonsterTeleportArray_get_monsters(this) + monsterArrayId, 0)
  return true
end
function sa__MonsterTeleportArray_getMonsterNear()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0 and sg__Monster_get_u(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)) ~= nil) then
      xMob = GetUnitX(sg__Monster_get_u(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)))
      yMob = GetUnitY(sg__Monster_get_u(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)))
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        f__result_integer = sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)
        return true
      end
    end
    i = i + 1
  end
  f__result_integer = 0
  return true
end
function sa__MonsterTeleportArray_createMonsters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0) then
      s__MonsterTeleport_createUnit(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterTeleportArray_removeMonsters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0) then
      s__MonsterTeleport_removeUnit(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterTeleportArray_recreateMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)))) == mt and sg__Monster_get_u(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)) ~= nil) then
      -- INLINED!!
      s__MonsterTeleport_createUnit(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterTeleportArray_removeMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__MonsterTeleportArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i)))) == mt) then
      -- INLINED!!
      sc__Monster_deallocate(sg___MonsterTeleportArray_monsters_get(sg__MonsterTeleportArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterSimplePatrolArray_create()

  local ma = s__MonsterSimplePatrolArray__allocate()
  sg__MonsterSimplePatrolArray_set_lastInstance(ma, -1)
  f__result_integer = ma
  return true
end
function sa__MonsterSimplePatrolArray_get()
  local this = f__arg_this
  local arrayId = f__arg_integer1
  if (arrayId < 0 or arrayId > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
    f__result_integer = 0
    return true
  end
  f__result_integer = sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + arrayId)
  return true
end
function sa__MonsterSimplePatrolArray_getLastInstanceId()
  local this = f__arg_this
  f__result_integer = sg__MonsterSimplePatrolArray_get_lastInstance(this)
  return true
end
function sa__MonsterSimplePatrolArray_new()
  local this = f__arg_this
  local mt = f__arg_integer1
  local x1 = f__arg_real1
  local y1 = f__arg_real2
  local x2 = f__arg_real3
  local y2 = f__arg_real4
  local createUnit = f__arg_boolean1
  local n = sg__MonsterSimplePatrolArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    f__result_integer = 0
    return true
  end
  sg__MonsterSimplePatrolArray_set_lastInstance(this, n)
  sg___MonsterSimplePatrolArray_monsters_set(sg__MonsterSimplePatrolArray_get_monsters(this) + n, s__MonsterSimplePatrol_create(mt, x1, y1, x2, y2))
  if (createUnit) then
    s__MonsterSimplePatrol_createUnit(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + n))
  end
  sg__Monster_set_level(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + n), s__LevelArray_getLevelFromMonsterSimplePatrolArray(udg_levels, this))
  sg__Monster_set_arrayId(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + n), n)
  f__result_integer = sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + n)
  return true
end
function sa__MonsterSimplePatrolArray_count()
  local this = f__arg_this
  local nb = 0
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  f__result_integer = nb
  return true
end
function sa__MonsterSimplePatrolArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0) then
      sc__Monster_deallocate(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  sg__MonsterSimplePatrolArray_set_lastInstance(this, -1)
  return true
end
function sa__MonsterSimplePatrolArray_setMonsterNull()
  local this = f__arg_this
  local monsterArrayId = f__arg_integer1
  sg___MonsterSimplePatrolArray_monsters_set(sg__MonsterSimplePatrolArray_get_monsters(this) + monsterArrayId, 0)
  return true
end
function sa__MonsterSimplePatrolArray_getMonsterNear()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0 and sg__Monster_get_u(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)) ~= nil) then
      xMob = GetUnitX(sg__Monster_get_u(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)))
      yMob = GetUnitY(sg__Monster_get_u(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)))
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        f__result_integer = sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)
        return true
      end
    end
    i = i + 1
  end
  f__result_integer = 0
  return true
end
function sa__MonsterSimplePatrolArray_createMonsters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0) then
      s__MonsterSimplePatrol_createUnit(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterSimplePatrolArray_removeMonsters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0) then
      s__MonsterSimplePatrol_removeUnit(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterSimplePatrolArray_recreateMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)))) == mt and sg__Monster_get_u(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)) ~= nil) then
      -- INLINED!!
      s__MonsterSimplePatrol_createUnit(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterSimplePatrolArray_removeMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__MonsterSimplePatrolArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i)))) == mt) then
      -- INLINED!!
      sc__Monster_deallocate(sg___MonsterSimplePatrolArray_monsters_get(sg__MonsterSimplePatrolArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterNoMoveArray_create()

  local ma = s__MonsterNoMoveArray__allocate()
  sg__MonsterNoMoveArray_set_lastInstance(ma, -1)
  f__result_integer = ma
  return true
end
function sa__MonsterNoMoveArray_get()
  local this = f__arg_this
  local arrayId = f__arg_integer1
  if (arrayId < 0 or arrayId > sg__MonsterNoMoveArray_get_lastInstance(this)) then
    f__result_integer = 0
    return true
  end
  f__result_integer = sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + arrayId)
  return true
end
function sa__MonsterNoMoveArray_getLastInstanceId()
  local this = f__arg_this
  f__result_integer = sg__MonsterNoMoveArray_get_lastInstance(this)
  return true
end
function sa__MonsterNoMoveArray_new()
  local this = f__arg_this
  local mt = f__arg_integer1
  local x = f__arg_real1
  local l__y = f__arg_real2
  local angle = f__arg_real3
  local createUnit = f__arg_boolean1
  local n = sg__MonsterNoMoveArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    f__result_integer = 0
    return true
  end
  sg__MonsterNoMoveArray_set_lastInstance(this, n)
  sg___MonsterNoMoveArray_monsters_set(sg__MonsterNoMoveArray_get_monsters(this) + n, s__MonsterNoMove_create(mt, x, l__y, angle))
  if (createUnit) then
    s__MonsterNoMove_createUnit(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + n))
  end
  sg__Monster_set_level(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + n), s__LevelArray_getLevelFromMonsterNoMoveArray(udg_levels, this))
  sg__Monster_set_arrayId(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + n), n)
  f__result_integer = sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + n)
  return true
end
function sa__MonsterNoMoveArray_count()
  local this = f__arg_this
  local nb = 0
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  f__result_integer = nb
  return true
end
function sa__MonsterNoMoveArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0) then
      sc__Monster_deallocate(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  sg__MonsterNoMoveArray_set_lastInstance(this, -1)
  return true
end
function sa__MonsterNoMoveArray_setMonsterNull()
  local this = f__arg_this
  local monsterArrayId = f__arg_integer1
  sg___MonsterNoMoveArray_monsters_set(sg__MonsterNoMoveArray_get_monsters(this) + monsterArrayId, 0)
  return true
end
function sa__MonsterNoMoveArray_getMonsterNear()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0 and sg__Monster_get_u(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)) ~= nil) then
      xMob = GetUnitX(sg__Monster_get_u(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)))
      yMob = GetUnitY(sg__Monster_get_u(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)))
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        f__result_integer = sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)
        return true
      end
    end
    i = i + 1
  end
  f__result_integer = 0
  return true
end
function sa__MonsterNoMoveArray_createMonsters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0) then
      s__MonsterNoMove_createUnit(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterNoMoveArray_removeMonsters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0) then
      s__MonsterNoMove_removeUnit(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterNoMoveArray_recreateMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)))) == mt and sg__Monster_get_u(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)) ~= nil) then
      -- INLINED!!
      s__MonsterNoMove_createUnit(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterNoMoveArray_removeMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__MonsterNoMoveArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i)))) == mt) then
      -- INLINED!!
      sc__Monster_deallocate(sg___MonsterNoMoveArray_monsters_get(sg__MonsterNoMoveArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterMultiplePatrolsArray_create()

  local ma = s__MonsterMultiplePatrolsArray__allocate()
  sg__MonsterMultiplePatrolsArray_set_lastInstance(ma, -1)
  f__result_integer = ma
  return true
end
function sa__MonsterMultiplePatrolsArray_get()
  local this = f__arg_this
  local arrayId = f__arg_integer1
  if (arrayId < 0 or arrayId > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
    f__result_integer = 0
    return true
  end
  f__result_integer = sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + arrayId)
  return true
end
function sa__MonsterMultiplePatrolsArray_getLastInstanceId()
  local this = f__arg_this
  f__result_integer = sg__MonsterMultiplePatrolsArray_get_lastInstance(this)
  return true
end
function sa__MonsterMultiplePatrolsArray_new()
  local this = f__arg_this
  local mt = f__arg_integer1
  local mode = f__arg_string1
  local createUnit = f__arg_boolean1
  local n = nil
  if (mode ~= "normal" and mode ~= "string") then
    f__result_integer = 0
    return true
  end
  n = sg__MonsterMultiplePatrolsArray_get_lastInstance(this) + 1
  if (n >= MAX_NB_MONSTERS) then
    f__result_integer = 0
    return true
  end
  sg__MonsterMultiplePatrolsArray_set_lastInstance(this, n)
  sg___MonsterMultiplePatrolsArray_monsters_set(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n, s__MonsterMultiplePatrols_create(mt, mode))
  if (createUnit) then
    s__MonsterMultiplePatrols_createUnit(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n))
  end
  sg__Monster_set_level(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n), s__LevelArray_getLevelFromMonsterMultiplePatrolsArray(udg_levels, this))
  sg__Monster_set_arrayId(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n), n)
  f__result_integer = sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + n)
  return true
end
function sa__MonsterMultiplePatrolsArray_count()
  local this = f__arg_this
  local nb = 0
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0) then
      nb = nb + 1
    end
    i = i + 1
  end
  f__result_integer = nb
  return true
end
function sa__MonsterMultiplePatrolsArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0) then
      sc__Monster_deallocate(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  sg__MonsterMultiplePatrolsArray_set_lastInstance(this, -1)
  return true
end
function sa__MonsterMultiplePatrolsArray_setMonsterNull()
  local this = f__arg_this
  local monsterArrayId = f__arg_integer1
  sg___MonsterMultiplePatrolsArray_monsters_set(sg__MonsterMultiplePatrolsArray_get_monsters(this) + monsterArrayId, 0)
  return true
end
function sa__MonsterMultiplePatrolsArray_getMonsterNear()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  local xMob = nil
  local yMob = nil
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0 and sg__Monster_get_u(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)) ~= nil) then
      xMob = GetUnitX(sg__Monster_get_u(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)))
      yMob = GetUnitY(sg__Monster_get_u(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)))
      if (RAbsBJ(x - xMob) < MONSTER_NEAR_DIFF_MAX and RAbsBJ(l__y - yMob) < MONSTER_NEAR_DIFF_MAX) then
        f__result_integer = sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)
        return true
      end
    end
    i = i + 1
  end
  f__result_integer = 0
  return true
end
function sa__MonsterMultiplePatrolsArray_createMonsters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0) then
      s__MonsterMultiplePatrols_createUnit(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterMultiplePatrolsArray_removeMonsters()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0) then
      s__MonsterMultiplePatrols_removeUnit(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterMultiplePatrolsArray_recreateMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)))) == mt and sg__Monster_get_u(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)) ~= nil) then
      -- INLINED!!
      s__MonsterMultiplePatrols_createUnit(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__MonsterMultiplePatrolsArray_removeMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > sg__MonsterMultiplePatrolsArray_get_lastInstance(this)) then
      break
    end
    if (sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i) ~= 0 and (sg__Monster_get_mt((sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i)))) == mt) then
      -- INLINED!!
      sc__Monster_deallocate(sg___MonsterMultiplePatrolsArray_monsters_get(sg__MonsterMultiplePatrolsArray_get_monsters(this) + i))
    end
    i = i + 1
  end
  return true
end
function sa__Meteor_onDestroy()
  local this = f__arg_this
  if (s__Meteor_meteor[this] ~= nil) then
    s__Meteor_removeMeteor(this)
    s__Meteor_meteor[this] = nil
  end
  s___MeteorArray_meteors[s__MeteorArray_meteors[(s__Level_meteors[s__Meteor_level[this]])] + (s__Meteor_arrayId[this])] = 0
  -- INLINED!!
  return true
end
function sa__MonsterOrCasterStack_onDestroy()
  local this = f__arg_this
  s__MonsterOrCaster_deallocate(sg__MonsterOrCasterStack_get_monsterOrCaster(this))
  if (sg__MonsterOrCasterStack_get_nextElement(this) ~= 0) then
    sc__MonsterOrCasterStack_deallocate(sg__MonsterOrCasterStack_get_nextElement(this))
  end
  return true
end
function sa__ClearMobArray_create()

  local cma = s__ClearMobArray__allocate()
  s__ClearMobArray_lastInstance[cma] = -1
  f__result_integer = cma
  return true
end
function sa__ClearMobArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > s__ClearMobArray_lastInstance[this]) then
      break
    end
    if (s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] ~= 0) then
      s__ClearMob_deallocate(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])
    end
    i = i + 1
  end
  s__ClearMobArray_lastInstance[this] = -1
  return true
end
function sa__ClearMobArray_setClearMobNull()
  local this = f__arg_this
  local clearMobArrayId = f__arg_integer1
  s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + clearMobArrayId] = 0
  return true
end
function sa__ClearMobArray_initializeClearMobs()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > s__ClearMobArray_lastInstance[this]) then
      break
    end
    if (s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i] ~= 0) then
      s__ClearMob_initialize(s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[this] + i])
    end
    i = i + 1
  end
  return true
end
function sa__Caster_isEnabled()
  local this = f__arg_this
  f__result_boolean = sg__Caster_get_enabled(this)
  return true
end
function sa__Caster_getId()
  local this = f__arg_this
  f__result_integer = sg__Caster_get_id(this)
  return true
end
function sa__Caster_getX()
  local this = f__arg_this
  f__result_real = sg__Caster_get_x(this)
  return true
end
function sa__Caster_getY()
  local this = f__arg_this
  f__result_real = sg__Caster_get_y(this)
  return true
end
function sa__Caster_getRange()
  local this = f__arg_this
  f__result_real = (s__CasterType_range[(sg__Caster_get_casterType(this))])
  -- INLINED!!
  return true
end
function sa__Caster_getProjectileSpeed()
  local this = f__arg_this
  f__result_real = (s__CasterType_projectileSpeed[(sg__Caster_get_casterType(this))])
  -- INLINED!!
  return true
end
function sa__Caster_getCasterUnit()
  local this = f__arg_this
  f__result_unit = sg__Caster_get_casterUnit(this)
  return true
end
function sa__Caster_getProjectileMonsterType()
  local this = f__arg_this
  f__result_integer = (s__CasterType_projectileMonsterType[(sg__Caster_get_casterType(this))])
  -- INLINED!!
  return true
end
function sa__Caster_getLoadTime()
  local this = f__arg_this
  f__result_real = (s__CasterType_loadTime[(sg__Caster_get_casterType(this))])
  -- INLINED!!
  return true
end
function sa__Caster_getCasterType()
  local this = f__arg_this
  f__result_integer = sg__Caster_get_casterType(this)
  return true
end
function sa__Caster_getAnimation()
  local this = f__arg_this
  f__result_string = (s__CasterType_animation[(sg__Caster_get_casterType(this))])
  -- INLINED!!
  return true
end
function sa__Caster_enable()
  local this = f__arg_this
  sg__Caster_set_nbEscapersInRange(this, 0)
  sg__Caster_set_canShoot(this, true)
  sg__Caster_set_casterUnit(this, NewImmobileMonster((s__CasterType_casterMonsterType[(sg__Caster_get_casterType(this))]), sg__Caster_get_x(this), sg__Caster_get_y(this), sg__Caster_get_angle(this)))
  -- INLINED!!
  SetUnitUserData(sg__Caster_get_casterUnit(this), sg__Caster_get_id(this))
  sg__Caster_set_trg_unitWithinRange(this, CreateTrigger())
  TriggerRegisterUnitInRangeSimple(sg__Caster_get_trg_unitWithinRange(this), (s__CasterType_range[(sg__Caster_get_casterType(this))]), sg__Caster_get_casterUnit(this))
  -- INLINED!!
  TriggerAddAction(sg__Caster_get_trg_unitWithinRange(this), CasterUnitWithinRange_Actions)
  SaveInteger(Caster_casterHashtable, 0, GetHandleId(sg__Caster_get_trg_unitWithinRange(this)), (this))
  sg__Caster_set_t(this, CreateTimer())
  SaveInteger(Caster_casterHashtable, 1, GetHandleId(sg__Caster_get_t(this)), (this))
  sg__Caster_set_enabled(this, true)
  return true
end
function sa__Caster_disable()
  local this = f__arg_this
  RemoveSavedInteger(Caster_casterHashtable, 0, GetHandleId(sg__Caster_get_trg_unitWithinRange(this)))
  DestroyTrigger(sg__Caster_get_trg_unitWithinRange(this))
  sg__Caster_set_trg_unitWithinRange(this, nil)
  RemoveUnit(sg__Caster_get_casterUnit(this))
  sg__Caster_set_casterUnit(this, nil)
  RemoveSavedInteger(Caster_casterHashtable, 1, GetHandleId(sg__Caster_get_t(this)))
  DestroyTimer(sg__Caster_get_t(this))
  sg__Caster_set_t(this, nil)
  sg__Caster_set_disablingTimer(this, nil)
  return true
end
function sa__Caster_killUnit()
  local this = f__arg_this
  KillUnit(sg__Caster_get_casterUnit(this))
  RemoveSavedInteger(Caster_casterHashtable, 0, GetHandleId(sg__Caster_get_trg_unitWithinRange(this)))
  DestroyTrigger(sg__Caster_get_trg_unitWithinRange(this))
  sg__Caster_set_trg_unitWithinRange(this, nil)
  RemoveSavedInteger(Caster_casterHashtable, 1, GetHandleId(sg__Caster_get_t(this)))
  DestroyTimer(sg__Caster_get_t(this))
  sg__Caster_set_t(this, nil)
  return true
end
function sa__Caster_onDestroy()
  local this = f__arg_this
  s__Caster_disable(this)
  sc__CasterArray_setCasterNull(s__Level_casters[sg__Caster_get_level(this)], sg__Caster_get_arrayId(this))
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Caster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Caster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__CASTER, (sg__Caster_get_id(this)))
  -- INLINED!!
  return true
end
function sa__Caster_escaperOutOfRangeOrDead()
  local this = f__arg_this
  local escaper = f__arg_integer1
  local i = 0
  while true do
    if (escaper == sg___Caster_escapersInRange_get(sg__Caster_get_escapersInRange(this) + i) or i == sg__Caster_get_nbEscapersInRange(this)) then
      break
    end
    i = i + 1
  end
  if (i < sg__Caster_get_nbEscapersInRange(this)) then
    while true do
      if (i == sg__Caster_get_nbEscapersInRange(this) - 1) then
        break
      end
      sg___Caster_escapersInRange_set(sg__Caster_get_escapersInRange(this) + i, sg___Caster_escapersInRange_get(sg__Caster_get_escapersInRange(this) + i + 1))
      i = i + 1
    end
    sg__Caster_set_nbEscapersInRange(this, sg__Caster_get_nbEscapersInRange(this) - 1)
  end
  return true
end
function sa__Caster_temporarilyDisable()
  s__Caster_temporarilyDisable(f__arg_this, f__arg_timer1)
  return true
end
function sa__Caster_temporarilyEnable()
  s__Caster_temporarilyEnable(f__arg_this, f__arg_timer1)
  return true
end
function sa__Caster_setBaseColor()
  local this = f__arg_this
  local colorString = f__arg_string1
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return true
    end
    sg__Caster_set_baseColorId(this, baseColorId)
    if (sg__Caster_get_casterUnit(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Caster_get_casterUnit(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Caster_get_casterUnit(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
  return true
end
function sa__Caster_setVertexColor()
  local this = f__arg_this
  local vcRed = f__arg_real1
  local vcGreen = f__arg_real2
  local vcBlue = f__arg_real3
  sg__Caster_set_vcRed(this, vcRed)
  sg__Caster_set_vcGreen(this, vcGreen)
  sg__Caster_set_vcBlue(this, vcBlue)
  if (sg__Caster_get_casterUnit(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Caster_get_casterUnit(this), vcRed, vcGreen, vcBlue, sg__Caster_get_vcTransparency(this))
  end
  return true
end
function sa__Caster_reinitColor()
  local this = f__arg_this
  local initBaseColorId = nil
  sg__Caster_set_baseColorId(this, -1)
  sg__Caster_set_vcRed(this, 100)
  sg__Caster_set_vcGreen(this, 100)
  sg__Caster_set_vcBlue(this, 100)
  sg__Caster_set_vcTransparency(this, 0)
  if (sg__Caster_get_casterUnit(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Caster_get_casterUnit(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Caster_get_casterUnit(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Caster_get_casterUnit(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Caster_get_casterUnit(this), sg__Caster_get_vcRed(this), sg__Caster_get_vcGreen(this), sg__Caster_get_vcBlue(this), sg__Caster_get_vcTransparency(this))
  end
  return true
end
function sa__Caster_toString()
  local this = f__arg_this
  local str = nil
  if (s__CasterType_theAlias[sg__Caster_get_casterType(this)] ~= nil and s__CasterType_theAlias[sg__Caster_get_casterType(this)] ~= "") then
    str = s__CasterType_theAlias[sg__Caster_get_casterType(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__CasterType_label[sg__Caster_get_casterType(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Caster_get_id(this)) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__Caster_get_x(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__Caster_get_y(this)))
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__Caster_get_angle(this)))
  f__result_string = str
  return true
end
function sa__Stack_onDestroy()
  local this = f__arg_this
  local n = nil
  while true do
    n = s__Stack_top[this]
    if n == 0 then
      break
    end
    s__Stack_top[this] = s__Stack_next[n]
    s__Stack_next[n] = s__Stack_free
    s__Stack_free = n
  end
  return true
end
function sa__MonsterOrCaster_create()
  local mobId = f__arg_integer1
  local moc = nil
  local monster = (LoadInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (mobId)))
  -- INLINED!!
  local caster = nil
  if (monster ~= 0) then
    moc = s__MonsterOrCaster__allocate()
    sg__MonsterOrCaster_set_monster(moc, monster)
    sg__MonsterOrCaster_set_caster(moc, 0)
  else
    caster = (LoadInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__CASTER, (mobId)))
    -- INLINED!!
    if (caster ~= 0) then
      moc = s__MonsterOrCaster__allocate()
      sg__MonsterOrCaster_set_monster(moc, 0)
      sg__MonsterOrCaster_set_caster(moc, caster)
    else
      moc = 0
    end
  end
  f__result_integer = moc
  return true
end
function sa__MonsterOrCaster_getId()
  local this = f__arg_this
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    f__result_integer = sc__Monster_getId(sg__MonsterOrCaster_get_monster(this))
    return true
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    f__result_integer = sc__Caster_getId(sg__MonsterOrCaster_get_caster(this))
    return true
  end
  f__result_integer = 0
  return true
end
function sa__MonsterOrCaster_killUnit()
  local this = f__arg_this
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_killUnit(sg__MonsterOrCaster_get_monster(this))
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_killUnit(sg__MonsterOrCaster_get_caster(this))
  end
  return true
end
function sa__MonsterOrCaster_temporarilyDisable()
  s__MonsterOrCaster_temporarilyDisable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterOrCaster_temporarilyEnable()
  s__MonsterOrCaster_temporarilyEnable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterOrCaster_setBaseColor()
  local this = f__arg_this
  local colorString = f__arg_string1
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_setBaseColor(sg__MonsterOrCaster_get_monster(this), colorString)
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_setBaseColor(sg__MonsterOrCaster_get_caster(this), colorString)
  end
  return true
end
function sa__MonsterOrCaster_setVertexColor()
  local this = f__arg_this
  local vcRed = f__arg_real1
  local vcGreen = f__arg_real2
  local vcBlue = f__arg_real3
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_setVertexColor(sg__MonsterOrCaster_get_monster(this), vcRed, vcGreen, vcBlue)
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_setVertexColor(sg__MonsterOrCaster_get_caster(this), vcRed, vcGreen, vcBlue)
  end
  return true
end
function sa__MonsterOrCaster_reinitColor()
  local this = f__arg_this
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    sc__Monster_reinitColor(sg__MonsterOrCaster_get_monster(this))
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    sc__Caster_reinitColor(sg__MonsterOrCaster_get_caster(this))
  end
  return true
end
function sa__MonsterOrCaster_getUnit()
  local this = f__arg_this
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    f__result_unit = sg__Monster_get_u(sg__MonsterOrCaster_get_monster(this))
    return true
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    f__result_unit = sg__Caster_get_casterUnit(sg__MonsterOrCaster_get_caster(this))
    return true
  end
  f__result_unit = nil
  return true
end
function sa__MonsterOrCaster_copy()
  local this = f__arg_this
  f__result_integer = s__MonsterOrCaster_create(s__MonsterOrCaster_getId(this))
  return true
end
function sa__MonsterOrCaster_getMonsterType()
  local this = f__arg_this
  if (sg__MonsterOrCaster_get_monster(this) ~= 0) then
    f__result_integer = sc__Monster_getMonsterType(sg__MonsterOrCaster_get_monster(this))
    return true
  elseif (sg__MonsterOrCaster_get_caster(this) ~= 0) then
    f__result_integer = (s__CasterType_casterMonsterType[(sc__Caster_getCasterType(sg__MonsterOrCaster_get_caster(this)))])
    -- INLINED!!
    return true
  end
  f__result_integer = 0
  return true
end
function sa__Trigger_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Trigger_t[this])
  s__Trigger_t[this] = nil
  return true
end
function sa__TriggerArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > s__TriggerArray_lastInstance[this]) then
      break
    end
    s__Trigger_deallocate(s___TriggerArray_triggers[s__TriggerArray_triggers[this] + i])
    i = i + 1
  end
  s__TriggerArray_lastInstance[this] = -1
  return true
end
function sa__VisibilityModifier_onDestroy()
  local this = f__arg_this
  DestroyFogModifier(s__VisibilityModifier_fm[this])
  s__VisibilityModifier_fm[this] = nil
  sc__VisibilityModifierArray_setNull(s__Level_visibilities[s__VisibilityModifier_level[this]], s__VisibilityModifier_arrayId[this])
  return true
end
function sa__CasterType_onDestroy()
  local this = f__arg_this
  sc__LevelArray_removeCastersOfType(udg_levels, this)
  return true
end
function sa__MakeCasterAction_onDestroy()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    --si le caster a été supprimé
    sc__Caster_deallocate(s__MakeCasterAction_caster[this])
  end
  f__arg_this = this
  return true
end
function sa__MakeCasterAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  sc__Caster_disable(s__MakeCasterAction_caster[this])
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("caster creation cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeCasterAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  sc__Caster_enable(s__MakeCasterAction_caster[this])
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor creation redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeDeleteCastersAction_onDestroy()
  local this = f__arg_this
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    i = 0
    while true do
      if (not HaveSavedInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)) then
        break
      end
      sc__Caster_deallocate((LoadInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)))
      i = i + 1
    end
  end
  FlushChildHashtable(s__MakeDeleteCastersAction_suppressions, (s__MakeDeleteCastersAction_suppressionId[this]))
  -- INLINED!!
  f__arg_this = this
  return true
end
function sa__MakeDeleteCastersAction_cancel()
  local this = f__arg_this
  local i = nil
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)) then
      break
    end
    sc__Caster_enable((LoadInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("caster deleting cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeDeleteCastersAction_redo()
  local this = f__arg_this
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)) then
      break
    end
    sc__Caster_disable((LoadInteger(s__MakeDeleteCastersAction_suppressions, s__MakeDeleteCastersAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("caster deleting redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeDeleteMeteorsAction_onDestroy()
  local this = f__arg_this
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    i = 0
    while true do
      if (not HaveSavedInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)) then
        break
      end
      s__Meteor_deallocate((LoadInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)))
      i = i + 1
    end
  end
  FlushChildHashtable(s__MakeDeleteMeteorsAction_suppressions, (s__MakeDeleteMeteorsAction_suppressionId[this]))
  -- INLINED!!
  f__arg_this = this
  return true
end
function sa__MakeDeleteMeteorsAction_cancel()
  local this = f__arg_this
  local i = nil
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)) then
      break
    end
    s__Meteor_createMeteor((LoadInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor deleting cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeDeleteMeteorsAction_redo()
  local this = f__arg_this
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)) then
      break
    end
    s__Meteor_removeMeteor((LoadInteger(s__MakeDeleteMeteorsAction_suppressions, s__MakeDeleteMeteorsAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor deleting redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeDeleteMonstersAction_onDestroy()
  local this = f__arg_this
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    i = 0
    while true do
      if (not HaveSavedInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)) then
        break
      end
      sc__Monster_deallocate((LoadInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)))
      i = i + 1
    end
  end
  FlushChildHashtable(s__MakeDeleteMonstersAction_suppressions, (s__MakeDeleteMonstersAction_suppressionId[this]))
  -- INLINED!!
  f__arg_this = this
  return true
end
function sa__MakeDeleteMonstersAction_cancel()
  local this = f__arg_this
  local i = nil
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)) then
      break
    end
    sc__Monster_createUnit((LoadInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("monster deleting cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeDeleteMonstersAction_redo()
  local this = f__arg_this
  local i = nil
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  i = 0
  while true do
    if (not HaveSavedInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)) then
      break
    end
    sc__Monster_removeUnit((LoadInteger(s__MakeDeleteMonstersAction_suppressions, s__MakeDeleteMonstersAction_suppressionId[this], i)))
    i = i + 1
  end
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("monster deleting redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeLastActions_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > s__MakeLastActions_lastActionId[this]) then
      break
    end
    sc__MakeAction_deallocate(s___MakeLastActions_lastActions[s__MakeLastActions_lastActions[this] + i])
    i = i + 1
  end
  return true
end
function sa__MakeMeteorAction_getLevel()
  local this = f__arg_this
  f__result_integer = s__MakeMeteorAction_level[this]
  return true
end
function sa__MakeMeteorAction_onDestroy()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    --si la météore a été supprimée
    s__Meteor_deallocate(s__MakeMeteorAction_meteor[this])
  end
  f__arg_this = this
  return true
end
function sa__MakeMeteorAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__Meteor_removeMeteor(s__MakeMeteorAction_meteor[this])
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor creation cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeMeteorAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__Meteor_createMeteor(s__MakeMeteorAction_meteor[this])
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("meteor creation redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeMonsterAction_getLevel()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterAction_level[this]
  return true
end
function sa__MakeMonsterAction_onDestroy()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    --si le monstre a été supprimé
    sc__Monster_deallocate(s__MakeMonsterAction_monster[this])
  end
  f__arg_this = this
  return true
end
function sa__MakeMonsterAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  sc__Monster_removeUnit(s__MakeMonsterAction_monster[this])
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("monster creation cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeMonsterAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  sc__Monster_createUnit(s__MakeMonsterAction_monster[this])
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("monster creation redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainHeightAction_apply()
  local this = f__arg_this
  s__MakeTerrainHeightAction_terrainDeform[this] = TerrainDeformCrater(s__MakeTerrainHeightAction_x[this], s__MakeTerrainHeightAction_y[this], s__MakeTerrainHeightAction_radius[this], -s__MakeTerrainHeightAction_height[this], 0, true)
  return true
end
function sa__MakeTerrainHeightAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  TerrainDeformStop(s__MakeTerrainHeightAction_terrainDeform[this], 0)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain height cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainHeightAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainHeightAction_apply(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain height redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeVisibilityModifierAction_getLevel()
  local this = f__arg_this
  f__result_integer = s__MakeVisibilityModifierAction_level[this]
  return true
end
function sa__MakeVisibilityModifierAction_onDestroy()
  local this = f__arg_this
  if (s__MakeVisibilityModifierAction_visibilityModifierSave[this] ~= 0) then
    s__VisibilityModifier_deallocate(s__MakeVisibilityModifierAction_visibilityModifierSave[this])
  end
  f__arg_this = this
  return true
end
function sa__MakeVisibilityModifierAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeVisibilityModifierAction_visibilityModifierSave[this] = s__VisibilityModifier_copy(s__MakeVisibilityModifierAction_visibilityModifierPointeur[this])
  s__VisibilityModifier_deallocate(s__MakeVisibilityModifierAction_visibilityModifierPointeur[this])
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("visibility creation cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeVisibilityModifierAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeVisibilityModifierAction_visibilityModifierPointeur[this] = sc__Level_newVisibilityModifierFromExisting(s__MakeVisibilityModifierAction_level[this], s__MakeVisibilityModifierAction_visibilityModifierSave[this])
  if (s__MakeVisibilityModifierAction_visibilityModifierPointeur[this] == 0) then
    Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, ERROR_TEXT_COLORCODE, ("can't recreate visibility, full for this level"))
    -- INLINED!!
  else
    s__VisibilityModifier_activate(s__MakeVisibilityModifierAction_visibilityModifierPointeur[this], true)
  end
  s__MakeVisibilityModifierAction_visibilityModifierSave[this] = 0
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("visibility creation redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MeteorArray_setMeteorNull()
  local this = f__arg_this
  local arrayId = f__arg_integer1
  s___MeteorArray_meteors[s__MeteorArray_meteors[this] + arrayId] = 0
  return true
end
function sa__MeteorArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > s__MeteorArray_lastInstance[this]) then
      break
    end
    if (s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i] ~= 0) then
      s__Meteor_deallocate(s___MeteorArray_meteors[s__MeteorArray_meteors[this] + i])
    end
    i = i + 1
  end
  s__MeteorArray_lastInstance[this] = -1
  return true
end
function sa__MonsterType_onDestroy()
  local this = f__arg_this
  sc__LevelArray_removeMonstersOfType(udg_levels, this)
  return true
end
function sa__SoundUtils___soundrecycler_onDestroy()
  local this = f__arg_this
  RemoveSavedInteger(SoundUtils___rt, s__SoundUtils___soundrecycler_sh[this], GetHandleId(s__SoundUtils___soundrecycler_s[this]))
  ReleaseTimer(s__SoundUtils___soundrecycler_t[this])
  return true
end
function sa__StringArrayForCache_create()
  local category = f__arg_string1
  local variableName = f__arg_string2
  local avecSeparateur = f__arg_boolean1
  local sa = nil
  if (stringArrayForCache ~= 0) then
    s__StringArrayForCache_deallocate(stringArrayForCache)
  end
  sa = s__StringArrayForCache__allocate()
  s__StringArrayForCache_lastStringId[sa] = -1
  s__StringArrayForCache_category[sa] = category
  s__StringArrayForCache_variableName[sa] = variableName
  s__StringArrayForCache_avecSeparateur[sa] = avecSeparateur
  f__result_integer = sa
  return true
end
function sa__StringArrayForCache_push()
  local this = f__arg_this
  local str = f__arg_string1
  local length = nil
  local nbCharsDispoForCurrentString = nil
  if (s__StringArrayForCache_lastStringId[this] == -1) then
    s__StringArrayForCache_nextString(this)
  else
    if (StringLength(s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]]) == StringArrayForCache___MAX_STRING_LENGTH) then
      s__StringArrayForCache_nextString(this)
    end
    if (s__StringArrayForCache_avecSeparateur[this]) then
      s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] = s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] .. CACHE_SEPARATEUR_ITEM
    end
  end
  nbCharsDispoForCurrentString = StringArrayForCache___MAX_STRING_LENGTH - StringLength(s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]])
  length = StringLength(str)
  while true do
    if (length == 0) then
      break
    end
    if (length > nbCharsDispoForCurrentString) then
      s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] = s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] .. SubStringBJ(str, 1, nbCharsDispoForCurrentString)
      s__StringArrayForCache_nextString(this)
      str = SubStringBJ(str, nbCharsDispoForCurrentString + 1, length)
    else
      s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] = s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]] .. str
      str = ""
    end
    nbCharsDispoForCurrentString = StringArrayForCache___MAX_STRING_LENGTH - StringLength(s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + s__StringArrayForCache_lastStringId[this]])
    length = StringLength(str)
  end
  return true
end
function sa__StringArrayForCache_writeInCache()
  local this = f__arg_this
  local i = nil
  if (s__StringArrayForCache_lastStringId[this] > 0) then
    i = 0
    while true do
      if (i > s__StringArrayForCache_lastStringId[this]) then
        break
      end
      StoreString(saveMap_cache, s__StringArrayForCache_category[this], s__StringArrayForCache_variableName[this] .. I2S(i), s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this] + i])
      i = i + 1
    end
  else
    if (s__StringArrayForCache_lastStringId[this] == 0) then
      StoreString(saveMap_cache, s__StringArrayForCache_category[this], s__StringArrayForCache_variableName[this], s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this]])
      Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this]]))
      -- INLINED!!
      Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, ("longueur chaîne : " .. I2S(StringLength(s___StringArrayForCache_stringArray[s__StringArrayForCache_stringArray[this]]))))
      -- INLINED!!
    end
  end
  Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (s__StringArrayForCache_category[this] .. ", " .. s__StringArrayForCache_variableName[this] .. " : finish write in cache"))
  -- INLINED!!
  return true
end
function sa__VisibilityModifierArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > s__VisibilityModifierArray_lastInstance[this]) then
      break
    end
    s__VisibilityModifier_deallocate(s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + i])
    i = i + 1
  end
  s__VisibilityModifierArray_lastInstance[this] = -1
  return true
end
function sa__VisibilityModifierArray_count()
  local this = f__arg_this
  local n = 0
  local i = 0
  while true do
    if (i > s__VisibilityModifierArray_lastInstance[this]) then
      break
    end
    if (s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + i] ~= 0) then
      n = n + 1
    end
    i = i + 1
  end
  f__result_integer = n
  return true
end
function sa__VisibilityModifierArray_get()
  local this = f__arg_this
  local visibilityId = f__arg_integer1
  if (visibilityId < 0 or visibilityId > s__VisibilityModifierArray_lastInstance[this]) then
    f__result_integer = 0
    return true
  end
  f__result_integer = s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + visibilityId]
  return true
end
function sa__VisibilityModifierArray_getLastInstanceId()
  local this = f__arg_this
  f__result_integer = s__VisibilityModifierArray_lastInstance[this]
  return true
end
function sa__VisibilityModifierArray_setNull()
  local this = f__arg_this
  local arrayId = f__arg_integer1
  if (arrayId >= 0 and arrayId <= s__VisibilityModifierArray_lastInstance[this]) then
    s___VisibilityModifierArray_vms[s__VisibilityModifierArray_vms[this] + arrayId] = 0
  end
  return true
end
function sa__LevelArray_goToLevel()
  local this = f__arg_this
  local finisher = f__arg_integer1
  local levelId = f__arg_integer2
  local xCam = nil
  local yCam = nil
  local i = nil
  local previousLevelId = s__LevelArray_currentLevel[this]
  if (levelId < 0 or levelId > s__LevelArray_lastInstance[this] or levelId == s__LevelArray_currentLevel[this]) then
    f__result_boolean = false
    return true
  end
  s__LevelArray_currentLevel[this] = levelId
  if (previousLevelId ~= NB_MAX_LEVELS) then
    --cas spécial restart de la game
    if (not IsLevelBeingMade(s___LevelArray_levels[s__LevelArray_levels[this] + previousLevelId])) then
      s__EscaperArray_destroyMakesIfForSpecificLevel_currentLevel(udg_escapers)
      s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this] + previousLevelId], false)
    end
  end
  s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]], true)
  s__Level_checkpointReviveHeroes(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]], finisher)
  if (previousLevelId ~= NB_MAX_LEVELS) then
    if (levelId > previousLevelId + 1) then
      i = previousLevelId + 1
      while true do
        if (i >= levelId) then
          break
        end
        s__VisibilityModifierArray_activate(s__Level_visibilities[(s___LevelArray_levels[s__LevelArray_levels[this] + i])], (true))
        -- INLINED!!
        i = i + 1
      end
    else
      if (levelId < previousLevelId) then
        i = levelId + 1
        while true do
          if (i > previousLevelId) then
            break
          end
          s__VisibilityModifierArray_activate(s__Level_visibilities[(s___LevelArray_levels[s__LevelArray_levels[this] + i])], (false))
          -- INLINED!!
          i = i + 1
        end
      end
    end
  end
  xCam = (GetRectCenterX(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this] + levelId])]))]))
  -- INLINED!!
  yCam = (GetRectCenterY(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this] + levelId])]))]))
  -- INLINED!!
  if (finisher ~= 0) then
    MoveCamExceptForPlayer((s__Escaper_p[(finisher)]), xCam, yCam)
    -- INLINED!!
  else
    SetCameraPosition(xCam, yCam)
  end
  f__result_boolean = true
  return true
end
function sa__LevelArray_goToNextLevel()
  local this = f__arg_this
  local finisher = f__arg_integer1
  local xCam = nil
  local yCam = nil
  if (s__LevelArray_currentLevel[this] >= s__LevelArray_lastInstance[this]) then
    f__result_boolean = false
    return true
  end
  s__LevelArray_currentLevel[this] = s__LevelArray_currentLevel[this] + 1
  if (not IsLevelBeingMade(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this] - 1])) then
    s__EscaperArray_destroyMakesIfForSpecificLevel_currentLevel(udg_escapers)
    s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this] - 1], false)
  end
  s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]], true)
  s__Level_checkpointReviveHeroes(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]], finisher)
  xCam = (GetRectCenterX(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]])]))]))
  -- INLINED!!
  yCam = (GetRectCenterY(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]])]))]))
  -- INLINED!!
  if (finisher ~= 0) then
    MoveCamExceptForPlayer((s__Escaper_p[(finisher)]), xCam, yCam)
    -- INLINED!!
    Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (udg_colorCode[GetPlayerId((s__Escaper_p[(finisher)]))] .. "Good job " .. GetPlayerName((s__Escaper_p[(finisher)])) .. " !"))
    -- INLINED!!
  else
    SetCameraPosition(xCam, yCam)
  end
  f__result_boolean = true
  return true
end
function sa__LevelArray_restartTheGame()
  local this = f__arg_this
  if (s__LevelArray_currentLevel[this] == 0) then
    s__LevelArray_currentLevel[this] = NB_MAX_LEVELS
    --pour assurer le changement de niveau
    s__Level_activate(s___LevelArray_levels[s__LevelArray_levels[this]], false)
  end
  s__LevelArray_goToLevel(this, 0, 0)
  s__Lives_setNb(udg_lives, (s__Level_livesEarnedAtBeginning[(s___LevelArray_levels[s__LevelArray_levels[this]])]))
  -- INLINED!!
  SetCameraPosition((GetRectCenterX(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this]])]))])), (GetRectCenterY(s__RectInterface_r[((s__Level_start[(s___LevelArray_levels[s__LevelArray_levels[this]])]))])))
  -- INLINED!!
  TriggerExecute(gg_trg_apparition_dialogue_et_fermeture_automatique)
  return true
end
function sa__LevelArray_new()
  local this = f__arg_this
  if (s__LevelArray_lastInstance[this] >= NB_MAX_LEVELS - 1) then
    f__result_boolean = false
    return true
  end
  s__LevelArray_lastInstance[this] = s__LevelArray_lastInstance[this] + 1
  s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_lastInstance[this]] = s__Level_create()
  f__result_boolean = true
  return true
end
function sa__LevelArray_destroyLastLevel()
  local this = f__arg_this
  if (s__LevelArray_lastInstance[this] <= 0) then
    f__result_boolean = false
    return true
  end
  s__Level_deallocate(s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_lastInstance[this]])
  s__LevelArray_lastInstance[this] = s__LevelArray_lastInstance[this] - 1
  f__result_boolean = true
  return true
end
function sa__LevelArray_count()
  local this = f__arg_this
  f__result_integer = s__LevelArray_lastInstance[this] + 1
  return true
end
function sa__LevelArray_getCurrentLevel()
  local this = f__arg_this
  f__result_integer = s___LevelArray_levels[s__LevelArray_levels[this] + s__LevelArray_currentLevel[this]]
  return true
end
function sa__LevelArray_get()
  local this = f__arg_this
  local levelId = f__arg_integer1
  if (levelId > s__LevelArray_lastInstance[this] or levelId < 0) then
    f__result_integer = 0
    return true
  end
  f__result_integer = s___LevelArray_levels[s__LevelArray_levels[this] + levelId]
  return true
end
function sa__LevelArray_getLevelFromMonsterSpawnArray()
  local this = f__arg_this
  local msa = f__arg_integer1
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_monsterSpawns[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == msa) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    f__result_integer = 0
    return true
  end
  f__result_integer = s___LevelArray_levels[s__LevelArray_levels[this] + i]
  return true
end
function sa__LevelArray_getLevelFromMeteorArray()
  local this = f__arg_this
  local ma = f__arg_integer1
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_meteors[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == ma) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    f__result_integer = 0
    return true
  end
  f__result_integer = s___LevelArray_levels[s__LevelArray_levels[this] + i]
  return true
end
function sa__LevelArray_getLevelFromVisibilityModifierArray()
  local this = f__arg_this
  local vma = f__arg_integer1
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this] or s__Level_visibilities[s___LevelArray_levels[s__LevelArray_levels[this] + i]] == vma) then
      break
    end
    i = i + 1
  end
  if (i > s__LevelArray_lastInstance[this]) then
    f__result_integer = 0
    return true
  end
  f__result_integer = s___LevelArray_levels[s__LevelArray_levels[this] + i]
  return true
end
function sa__LevelArray_removeMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this]) then
      break
    end
    s__Level_removeMonstersOfType(s___LevelArray_levels[s__LevelArray_levels[this] + i], mt)
    i = i + 1
  end
  return true
end
function sa__LevelArray_removeCastersOfType()
  local this = f__arg_this
  local ct = f__arg_integer1
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this]) then
      break
    end
    sc__CasterArray_removeCastersOfType(s__Level_casters[(s___LevelArray_levels[s__LevelArray_levels[this] + i])], (ct))
    -- INLINED!!
    i = i + 1
  end
  return true
end
function sa__LevelArray_getLastLevelId()
  local this = f__arg_this
  f__result_integer = s__LevelArray_lastInstance[this]
  return true
end
function sa__LevelArray_getNbMonsters()
  local this = f__arg_this
  local mode = f__arg_string1
  local nb = 0
  local i = 0
  while true do
    if (i > s__LevelArray_lastInstance[this]) then
      break
    end
    nb = nb + s__Level_getNbMonsters(s___LevelArray_levels[s__LevelArray_levels[this] + i], mode)
    i = i + 1
  end
  f__result_integer = nb
  return true
end
function sa__ClearMob_getTriggerMob()
  local this = f__arg_this
  f__result_integer = s__ClearMob_triggerMob[this]
  return true
end
function sa__ClearMob_getBlockMobs()
  local this = f__arg_this
  f__result_integer = s__ClearMob_blockMobs[this]
  return true
end
function sa__ClearMob_initialize()
  local this = f__arg_this
  sc__MonsterOrCaster_setBaseColor(s__ClearMob_triggerMob[this], "blue")
  sc__MonsterOrCaster_setVertexColor(s__ClearMob_triggerMob[this], 30, 60, 100)
  if (s__ClearMob_triggerMobPermanentEffect[this] == nil) then
    s__ClearMob_triggerMobPermanentEffect[this] = AddSpecialEffectTarget(ClearMob__TRIGGER_MOB_PERMANENT_EFFECT, sc__MonsterOrCaster_getUnit(s__ClearMob_triggerMob[this]), "origin")
  end
  s__ClearMob_enabled[this] = true
  return true
end
function sa__ClearMob_onDestroy()
  local this = f__arg_this
  RemoveSavedInteger(ClearMob__htClearMob, ClearMob__TRIGGER_MOB, sc__MonsterOrCaster_getId(s__ClearMob_triggerMob[this]))
  RemoveSavedInteger(ClearMob__htClearMob, ClearMob__TIMER_ACTIVATED, GetHandleId(s__ClearMob_timerActivated[this]))
  RemoveSavedInteger(ClearMob__htClearMob, ClearMob__TIMER_FRONT_MONTANT, GetHandleId(s__ClearMob_timerFrontMontant[this]))
  s__ClearMob_close(this)
  sc__MonsterOrCaster_reinitColor(s__ClearMob_triggerMob[this])
  s__MonsterOrCaster_deallocate(s__ClearMob_triggerMob[this])
  s__ClearMob_triggerMob[this] = 0
  ClearMob__udp_currentTimer = s__ClearMob_timerActivated[this]
  s__MonsterOrCasterStack_executeForAll(s__ClearMob_blockMobs[this], "TemporarilyEnableMonsterOrCasterEach")
  s__MonsterOrCasterStack_deallocate(s__ClearMob_blockMobs[this])
  DestroyTimer(s__ClearMob_timerActivated[this])
  s__ClearMob_timerActivated[this] = nil
  DestroyTimer(s__ClearMob_timerFrontMontant[this])
  s__ClearMob_timerFrontMontant[this] = nil
  s___ClearMobArray_clearMobs[s__ClearMobArray_clearMobs[(s__Level_clearMobs[s__ClearMob_level[this]])] + (s__ClearMob_arrayId[this])] = 0
  -- INLINED!!
  return true
end
function sa__ClearMob_isBeingActivated()
  local this = f__arg_this
  f__result_boolean = TimerGetRemaining(s__ClearMob_timerActivated[this]) > 0
  return true
end
function sa__TerrainTypeArray_get()
  local this = f__arg_this
  local label = f__arg_string1
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    if (s__TerrainType_label[s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]] == label) then
      f__result_integer = s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]
      return true
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    if (s__TerrainType_label[s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]] == label) then
      f__result_integer = s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]
      return true
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    if (s__TerrainType_label[s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]] == label or s__TerrainType_theAlias[s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]] == label) then
      f__result_integer = s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]
      return true
    end
    i = i + 1
  end
  f__result_integer = 0
  return true
end
function sa__TerrainTypeArray_getTerrainType()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  local terrainTypeId = GetTerrainType(x, l__y)
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i])]) == terrainTypeId) then
      -- INLINED!!
      f__result_integer = s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]
      return true
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i])]) == terrainTypeId) then
      -- INLINED!!
      f__result_integer = s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]
      return true
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    if ((s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i])]) == terrainTypeId) then
      -- INLINED!!
      f__result_integer = s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]
      return true
    end
    i = i + 1
  end
  f__result_integer = 0
  return true
end
function sa__TerrainTypeArray_isTerrainTypeIdAlreadyUsed()
  local this = f__arg_this
  local terrainTypeId = f__arg_integer1
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    if (terrainTypeId == (s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i])])) then
      -- INLINED!!
      f__result_boolean = true
      return true
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    if (terrainTypeId == (s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i])])) then
      -- INLINED!!
      f__result_boolean = true
      return true
    end
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    if (terrainTypeId == (s__TerrainType_terrainTypeId[(s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i])])) then
      -- INLINED!!
      f__result_boolean = true
      return true
    end
    i = i + 1
  end
  f__result_boolean = false
  return true
end
function sa__TerrainTypeArray_isLabelAlreadyUsed()
  local this = f__arg_this
  local label = f__arg_string1
  f__result_boolean = (s__TerrainTypeArray_get(this, label) ~= 0)
  return true
end
function sa__TerrainTypeArray_newWalk()
  local this = f__arg_this
  local label = f__arg_string1
  local terrainTypeId = f__arg_integer1
  local walkspeed = f__arg_real1
  local n = s__TerrainTypeArray_numberOfWalk[this]
  if (sc__TerrainTypeArray_count(this) >= 16 or (s__TerrainTypeArray_get((this), (label)) ~= 0) or s__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(this, terrainTypeId) or terrainTypeId == 0) then
    -- INLINED!!
    f__result_integer = 0
    return true
  end
  s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + n] = s__TerrainTypeWalk_create(label, terrainTypeId, walkspeed)
  if (s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + n] ~= 0) then
    s__TerrainTypeArray_numberOfWalk[this] = s__TerrainTypeArray_numberOfWalk[this] + 1
  end
  f__result_integer = s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + n]
  return true
end
function sa__TerrainTypeArray_newDeath()
  local this = f__arg_this
  local label = f__arg_string1
  local terrainTypeId = f__arg_integer1
  local killingEffectStr = f__arg_string2
  local timeToKill = f__arg_real1
  local toleranceDist = f__arg_real2
  local n = s__TerrainTypeArray_numberOfDeath[this]
  if (sc__TerrainTypeArray_count(this) >= 16 or (s__TerrainTypeArray_get((this), (label)) ~= 0) or s__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(this, terrainTypeId) or terrainTypeId == 0) then
    -- INLINED!!
    f__result_integer = 0
    return true
  end
  s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + n] = s__TerrainTypeDeath_create(label, terrainTypeId, killingEffectStr, timeToKill, toleranceDist)
  if (s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + n] ~= 0) then
    s__TerrainTypeArray_numberOfDeath[this] = s__TerrainTypeArray_numberOfDeath[this] + 1
  end
  f__result_integer = s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + n]
  return true
end
function sa__TerrainTypeArray_newSlide()
  local this = f__arg_this
  local label = f__arg_string1
  local terrainTypeId = f__arg_integer1
  local slideSpeed = f__arg_real1
  local canTurn = f__arg_boolean1
  local n = s__TerrainTypeArray_numberOfSlide[this]
  if (sc__TerrainTypeArray_count(this) >= 16 or (s__TerrainTypeArray_get((this), (label)) ~= 0) or s__TerrainTypeArray_isTerrainTypeIdAlreadyUsed(this, terrainTypeId) or terrainTypeId == 0) then
    -- INLINED!!
    f__result_integer = 0
    return true
  end
  s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + n] = s__TerrainTypeSlide_create(label, terrainTypeId, slideSpeed, canTurn)
  if (s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + n] ~= 0) then
    s__TerrainTypeArray_numberOfSlide[this] = s__TerrainTypeArray_numberOfSlide[this] + 1
  end
  f__result_integer = s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + n]
  return true
end
function sa__TerrainTypeArray_getWalk()
  local this = f__arg_this
  local id = f__arg_integer1
  f__result_integer = s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + id]
  return true
end
function sa__TerrainTypeArray_getDeath()
  local this = f__arg_this
  local id = f__arg_integer1
  f__result_integer = s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + id]
  return true
end
function sa__TerrainTypeArray_getSlide()
  local this = f__arg_this
  local id = f__arg_integer1
  f__result_integer = s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + id]
  return true
end
function sa__TerrainTypeArray_displayForPlayer()
  local this = f__arg_this
  local p = f__arg_player1
  local i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    s__TerrainType_displayForPlayer(s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i], p)
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    s__TerrainType_displayForPlayer(s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i], p)
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    s__TerrainType_displayForPlayer(s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i], p)
    i = i + 1
  end
  if (s__TerrainTypeArray_numberOfSlide[this] + s__TerrainTypeArray_numberOfWalk[this] + s__TerrainTypeArray_numberOfDeath[this] == 0) then
    Text___ForPlayer_timed_withColorCode((p), -1, ERROR_TEXT_COLORCODE, ("no terrain saved"))
    -- INLINED!!
  end
  return true
end
function sa__TerrainTypeArray_saveInCache()
  local this = f__arg_this
  local i = nil
  stringArrayForCache = s__StringArrayForCache_create("terrain", "mainTileset", false)
  s__StringArrayForCache_push(stringArrayForCache, s__TerrainTypeArray_mainTileset[this])
  s__StringArrayForCache_writeInCache(stringArrayForCache)
  stringArrayForCache = s__StringArrayForCache_create("terrain", "terrainConfig", true)
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfSlide[this]) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, s__TerrainType_toString(s___TerrainTypeArray_ttSlide[s__TerrainTypeArray_ttSlide[this] + i]))
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfWalk[this]) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, s__TerrainType_toString(s___TerrainTypeArray_ttWalk[s__TerrainTypeArray_ttWalk[this] + i]))
    i = i + 1
  end
  i = 0
  while true do
    if (i >= s__TerrainTypeArray_numberOfDeath[this]) then
      break
    end
    s__StringArrayForCache_push(stringArrayForCache, s__TerrainType_toString(s___TerrainTypeArray_ttDeath[s__TerrainTypeArray_ttDeath[this] + i]))
    i = i + 1
  end
  s__StringArrayForCache_writeInCache(stringArrayForCache)
  return true
end
function sa__TerrainTypeArray_count()
  local this = f__arg_this
  f__result_integer = s__TerrainTypeArray_numberOfWalk[this] + s__TerrainTypeArray_numberOfSlide[this] + s__TerrainTypeArray_numberOfDeath[this]
  return true
end
function sa__TerrainTypeArray_getMainTileset()
  local this = f__arg_this
  f__result_string = s__TerrainTypeArray_mainTileset[this]
  return true
end
function sa__Level_activate()
  local this = f__arg_this
  local activ = f__arg_boolean1
  if (s__Level_isActivatedB[this] == activ) then
    return true
  end
  s__End_activate(s__Level_end[this], activ)
  s__TriggerArray_activate(s__Level_triggers[this], activ)
  if (activ) then
    if (s__Level_startMessage[this] ~= nil and s__Level_startMessage[this] ~= "" and Level_earningLivesActivated) then
      Text___ForAll_timed_withColorCode(-1, NORMAL_TEXT_COLORCODE, (s__Level_startMessage[this]))
      -- INLINED!!
    end
    s__VisibilityModifierArray_activate(s__Level_visibilities[this], true)
    sc__MonsterNoMoveArray_createMonsters(s__Level_monstersNoMove[this])
    sc__MonsterSimplePatrolArray_createMonsters(s__Level_monstersSimplePatrol[this])
    sc__MonsterMultiplePatrolsArray_createMonsters(s__Level_monstersMultiplePatrols[this])
    sc__MonsterTeleportArray_createMonsters(s__Level_monstersTeleport[this])
    s__MonsterSpawnArray_activate(s__Level_monsterSpawns[this])
    s__MeteorArray_createMeteors(s__Level_meteors[this])
    sc__CasterArray_createCasters(s__Level_casters[this])
    sc__ClearMobArray_initializeClearMobs(s__Level_clearMobs[this])
    if (Level_earningLivesActivated and sc__Level_getId(this) > 0) then
      s__Lives_add(udg_lives, s__Level_livesEarnedAtBeginning[this])
    end
  else
    sc__MonsterNoMoveArray_removeMonsters(s__Level_monstersNoMove[this])
    sc__MonsterSimplePatrolArray_removeMonsters(s__Level_monstersSimplePatrol[this])
    sc__MonsterMultiplePatrolsArray_removeMonsters(s__Level_monstersMultiplePatrols[this])
    sc__MonsterTeleportArray_removeMonsters(s__Level_monstersTeleport[this])
    s__MonsterSpawnArray_desactivate(s__Level_monsterSpawns[this])
    s__MeteorArray_removeMeteors(s__Level_meteors[this])
    sc__CasterArray_removeCasters(s__Level_casters[this])
    s__EscaperArray_deleteSpecificActionsForLevel(udg_escapers, this)
  end
  s__Level_isActivatedB[this] = activ
  return true
end
function sa__Level_getStart()
  local this = f__arg_this
  f__result_integer = s__Level_start[this]
  return true
end
function sa__Level_getStartRandomX()
  local this = f__arg_this
  f__result_real = s__Start_getRandomX(s__Level_start[this])
  return true
end
function sa__Level_getStartRandomY()
  local this = f__arg_this
  f__result_real = s__Start_getRandomY(s__Level_start[this])
  return true
end
function sa__Level_newStart()
  local this = f__arg_this
  local x1 = f__arg_real1
  local y1 = f__arg_real2
  local x2 = f__arg_real3
  local y2 = f__arg_real4
  sc__RectInterface_deallocate(s__Level_start[this])
  s__Level_start[this] = s__Start_create(x1, y1, x2, y2)
  return true
end
function sa__Level_newEnd()
  local this = f__arg_this
  local x1 = f__arg_real1
  local y1 = f__arg_real2
  local x2 = f__arg_real3
  local y2 = f__arg_real4
  sc__RectInterface_deallocate(s__Level_end[this])
  s__Level_end[this] = s__End_create(x1, y1, x2, y2)
  if (s__Level_isActivatedB[this]) then
    s__End_activate(s__Level_end[this], true)
  end
  return true
end
function sa__Level_getEnd()
  local this = f__arg_this
  f__result_integer = s__Level_end[this]
  return true
end
function sa__Level_getNbMonsters()
  local this = f__arg_this
  local mode = f__arg_string1
  local nb = 0
  if (mode == "all" or mode == "not moving") then
    nb = nb + sc__MonsterNoMoveArray_count(s__Level_monstersNoMove[this]) + sc__CasterArray_count(s__Level_casters[this])
  end
  if (mode == "all" or mode == "moving") then
    nb = nb + sc__MonsterSimplePatrolArray_count(s__Level_monstersSimplePatrol[this]) + sc__MonsterMultiplePatrolsArray_count(s__Level_monstersMultiplePatrols[this])
  end
  if (mode == "all") then
    nb = nb + sc__MonsterTeleportArray_count(s__Level_monstersTeleport[this])
  end
  f__result_integer = nb
  return true
end
function sa__Level_onDestroy()
  local this = f__arg_this
  sc__RectInterface_deallocate(s__Level_start[this])
  sc__RectInterface_deallocate(s__Level_end[this])
  s__VisibilityModifierArray_deallocate(s__Level_visibilities[this])
  s__TriggerArray_deallocate(s__Level_triggers[this])
  sc__MonsterNoMoveArray_deallocate(s__Level_monstersNoMove[this])
  sc__MonsterSimplePatrolArray_deallocate(s__Level_monstersSimplePatrol[this])
  sc__MonsterMultiplePatrolsArray_deallocate(s__Level_monstersMultiplePatrols[this])
  sc__MonsterTeleportArray_deallocate(s__Level_monstersTeleport[this])
  return true
end
function sa__Level_recreateMonstersOfType()
  local this = f__arg_this
  local mt = f__arg_integer1
  sc__MonsterNoMoveArray_recreateMonstersOfType(s__Level_monstersNoMove[this], mt)
  sc__MonsterSimplePatrolArray_recreateMonstersOfType(s__Level_monstersSimplePatrol[this], mt)
  sc__MonsterMultiplePatrolsArray_recreateMonstersOfType(s__Level_monstersMultiplePatrols[this], mt)
  sc__MonsterTeleportArray_recreateMonstersOfType(s__Level_monstersTeleport[this], mt)
  return true
end
function sa__Level_refreshCastersOfType()
  local this = f__arg_this
  local ct = f__arg_integer1
  sc__CasterArray_refreshCastersOfType(s__Level_casters[this], ct)
  return true
end
function sa__Level_getId()
  local this = f__arg_this
  local i = 0
  while true do
    if (sc__LevelArray_get(udg_levels, i) == 0) then
      break
    end
    if (sc__LevelArray_get(udg_levels, i) == this) then
      f__result_integer = i
      return true
    end
    i = i + 1
  end
  f__result_integer = -1
  return true
end
function sa__Level_setNbLivesEarned()
  local this = f__arg_this
  local nbLives = f__arg_integer1
  if (nbLives < 0) then
    f__result_boolean = false
    return true
  end
  s__Level_livesEarnedAtBeginning[this] = nbLives
  f__result_boolean = true
  return true
end
function sa__Level_getNbLives()
  local this = f__arg_this
  f__result_integer = s__Level_livesEarnedAtBeginning[this]
  return true
end
function sa__Level_newVisibilityModifier()
  local this = f__arg_this
  local x1 = f__arg_real1
  local y1 = f__arg_real2
  local x2 = f__arg_real3
  local y2 = f__arg_real4
  f__result_integer = s__VisibilityModifierArray_new(s__Level_visibilities[this], x1, y1, x2, y2)
  return true
end
function sa__Level_newVisibilityModifierFromExisting()
  local this = f__arg_this
  local vm = f__arg_integer1
  f__result_integer = s__VisibilityModifierArray_newFromExisting(s__Level_visibilities[this], vm)
  return true
end
function sa__Level_removeVisibilities()
  local this = f__arg_this
  s__VisibilityModifierArray_removeAllVisibilityModifiers(s__Level_visibilities[this])
  return true
end
function sa__Level_activateVisibilities()
  local this = f__arg_this
  local activate = f__arg_boolean1
  s__VisibilityModifierArray_activate(s__Level_visibilities[this], activate)
  return true
end
function sa__Level_setStartMessage()
  local this = f__arg_this
  local str = f__arg_string1
  if (str == "") then
    str = nil
  end
  s__Level_startMessage[this] = str
  return true
end
function sa__Level_getStartMessage()
  local this = f__arg_this
  f__result_string = s__Level_startMessage[this]
  return true
end
function sa__Lives_getLeaderboard()
  local this = f__arg_this
  f__result_leaderboard = s__Lives_lb[this]
  return true
end
function sa__Lives_onDestroy()
  local this = f__arg_this
  DestroyLeaderboard(s__Lives_lb[this])
  s__Lives_lb[this] = nil
  return true
end
function sa__EscaperArray_get()
  local this = f__arg_this
  local id = f__arg_integer1
  f__result_integer = s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id]
  return true
end
function sa__EscaperArray_nullify()
  local this = f__arg_this
  local id = f__arg_integer1
  s___EscaperArray_escapers[s__EscaperArray_escapers[this] + id] = 0
  return true
end
function sa__Escaper_onDestroy()
  local this = f__arg_this
  s__Escaper_removeHero(this)
  DestroyEffect(s__Escaper_terrainKillEffect[this])
  s__Escaper_terrainKillEffect[this] = nil
  s__EscaperEffectArray_deallocate(s__Escaper_effects[this])
  DestroyTrigger(s__Escaper_slide[this])
  s__Escaper_slide[this] = nil
  DestroyTrigger(s__Escaper_checkTerrain[this])
  s__Escaper_checkTerrain[this] = nil
  DestroyTrigger(s__Escaper_discoTrigger[this])
  s__Escaper_discoTrigger[this] = nil
  s___EscaperArray_escapers[s__EscaperArray_escapers[(udg_escapers)] + (GetPlayerId(s__Escaper_p[this]))] = 0
  -- INLINED!!
  RemoveUnit(s__Escaper_powerCircle[this])
  s__Escaper_powerCircle[this] = nil
  RemoveUnit(s__Escaper_dummyPowerCircle[this])
  s__Escaper_dummyPowerCircle[this] = nil
  return true
end
function sa__Escaper_enableSlide()
  local this = f__arg_this
  local doEnable = f__arg_boolean1
  local heroPos = nil
  if (IsTriggerEnabled(s__Escaper_slide[this]) == doEnable) then
    f__result_boolean = false
    return true
  end
  if (doEnable) then
    EnableTrigger(s__Escaper_slide[this])
    StopUnit(s__Escaper_hero[this])
    heroPos = GetUnitLoc(s__Escaper_hero[this])
    s__Escaper_lastZ[(this)] = ((GetLocationZ(heroPos) + GetUnitFlyHeight(s__Escaper_hero[this])) * 1.0)
    -- INLINED!!
    RemoveLocation(heroPos)
    heroPos = nil
  else
    DisableTrigger(s__Escaper_slide[this])
    s__Escaper_slideLastAngleOrder[this] = -1
  end
  f__result_boolean = true
  return true
end
function sa__Escaper_enableCheckTerrain()
  local this = f__arg_this
  local doEnable = f__arg_boolean1
  if (IsTriggerEnabled(s__Escaper_checkTerrain[this]) == doEnable) then
    f__result_boolean = false
    return true
  end
  if (doEnable) then
    EnableTrigger(s__Escaper_checkTerrain[this])
  else
    DisableTrigger(s__Escaper_checkTerrain[this])
  end
  f__result_boolean = true
  return true
end
function sa__Escaper_isSliding()
  local this = f__arg_this
  f__result_boolean = IsTriggerEnabled(s__Escaper_slide[this])
  return true
end
function sa__Escaper_doesCheckTerrain()
  local this = f__arg_this
  f__result_boolean = IsTriggerEnabled(s__Escaper_checkTerrain[this])
  return true
end
function sa__Escaper_moveHero()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  SetUnitX(s__Escaper_hero[this], x)
  SetUnitY(s__Escaper_hero[this], l__y)
  return true
end
function sa__Escaper_moveInvisUnit()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  SetUnitX(s__Escaper_invisUnit[this], x)
  SetUnitY(s__Escaper_invisUnit[this], l__y)
  return true
end
function sa__Escaper_getHero()
  local this = f__arg_this
  f__result_unit = s__Escaper_hero[this]
  return true
end
function sa__Escaper_isAlive()
  local this = f__arg_this
  f__result_boolean = IsUnitAliveBJ(s__Escaper_hero[this])
  return true
end
function sa__Escaper_kill()
  local this = f__arg_this
  if ((IsUnitAliveBJ(s__Escaper_hero[(this)]))) then
    -- INLINED!!
    s__Escaper_resetItem(this)
    KillUnit(s__Escaper_hero[this])
    s__Escaper_lastTerrainType[this] = 0
    ShowUnit(s__Escaper_invisUnit[this], false)
    s__Escaper_enableCheckTerrain(this, false)
    StopAfk(GetPlayerId(s__Escaper_p[this]))
    DisplayDeathMessagePlayer(s__Escaper_p[this])
    s__Escaper_isHeroSelectedB[this] = false
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__Escaper_pause()
  local this = f__arg_this
  local doPause = f__arg_boolean1
  if ((IsUnitPaused(s__Escaper_hero[(this)])) == doPause) then
    -- INLINED!!
    f__result_boolean = false
    return true
  end
  PauseUnit(s__Escaper_hero[this], doPause)
  f__result_boolean = true
  return true
end
function sa__Escaper_reverse()
  local this = f__arg_this
  local angle = GetUnitFacing(s__Escaper_hero[this]) + 180
  s__Escaper_turnInstantly(this, angle)
  if (s__Escaper_slideLastAngleOrder[this] ~= -1) then
    s__Escaper_slideLastAngleOrder[this] = s__Escaper_slideLastAngleOrder[this] + 180
    SetUnitFacing(s__Escaper_hero[this], s__Escaper_slideLastAngleOrder[this])
  end
  return true
end
function sa__Escaper_setIsHeroSelectedForPlayer()
  local this = f__arg_this
  local p = f__arg_player1
  local heroSelected = f__arg_boolean1
  if (GetLocalPlayer() == p) then
    s__Escaper_isHeroSelectedB[this] = heroSelected
  end
  return true
end
function sa__Escaper_destroyTerrainKillEffect()
  local this = f__arg_this
  DestroyEffect(s__Escaper_terrainKillEffect[this])
  s__Escaper_terrainKillEffect[this] = nil
  return true
end
function sa__Escaper_getLastTerrainType()
  local this = f__arg_this
  f__result_integer = s__Escaper_lastTerrainType[this]
  return true
end
function sa__Escaper_setLastTerrainType()
  local this = f__arg_this
  local terrainType = f__arg_integer1
  s__Escaper_lastTerrainType[this] = terrainType
  return true
end
function sa__Escaper_setSlideSpeed()
  local this = f__arg_this
  local slideSpeed = f__arg_real1
  s__Escaper_slideSpeed[this] = slideSpeed
  return true
end
function sa__Escaper_setWalkSpeed()
  local this = f__arg_this
  local walkSpeed = f__arg_real1
  s__Escaper_walkSpeed[this] = walkSpeed
  SetUnitMoveSpeed(s__Escaper_hero[this], walkSpeed)
  return true
end
function sa__Escaper_getSlideSpeed()
  local this = f__arg_this
  f__result_real = s__Escaper_slideSpeed[this]
  return true
end
function sa__Escaper_getRealSlideSpeed()
  local this = f__arg_this
  f__result_real = s__Escaper_slideSpeed[this] / SLIDE_PERIOD
  return true
end
function sa__Escaper_getWalkSpeed()
  local this = f__arg_this
  f__result_real = s__Escaper_walkSpeed[this]
  return true
end
function sa__Escaper_isAbsoluteSlideSpeed()
  local this = f__arg_this
  f__result_boolean = s__Escaper_slideSpeedAbsolute[this]
  return true
end
function sa__Escaper_isAbsoluteWalkSpeed()
  local this = f__arg_this
  f__result_boolean = s__Escaper_walkSpeedAbsolute[this]
  return true
end
function sa__Escaper_isGodModeOn()
  local this = f__arg_this
  f__result_boolean = s__Escaper_godMode[this]
  return true
end
function sa__Escaper_setBaseColorDisco()
  local this = f__arg_this
  local baseColorId = f__arg_integer1
  if (baseColorId < 0 or baseColorId > 12) then
    f__result_boolean = false
    return true
  end
  s__Escaper_baseColorId[this] = baseColorId
  if (s__Escaper_hero[this] ~= nil) then
    if (baseColorId == 0) then
      SetUnitColor(s__Escaper_hero[this], PLAYER_COLOR_RED)
    else
      SetUnitColor(s__Escaper_hero[this], ConvertPlayerColor(baseColorId))
    end
  end
  f__result_boolean = true
  return true
end
function sa__Escaper_getBaseColor()
  local this = f__arg_this
  f__result_integer = s__Escaper_baseColorId[this]
  return true
end
function sa__Escaper_setVcRed()
  local this = f__arg_this
  local vcRed = f__arg_real1
  if (vcRed < 0 or vcRed > 100) then
    f__result_boolean = false
    return true
  end
  s__Escaper_vcRed[this] = vcRed
  f__result_boolean = true
  return true
end
function sa__Escaper_setVcGreen()
  local this = f__arg_this
  local vcGreen = f__arg_real1
  if (vcGreen < 0 or vcGreen > 100) then
    f__result_boolean = false
    return true
  end
  s__Escaper_vcGreen[this] = vcGreen
  f__result_boolean = true
  return true
end
function sa__Escaper_setVcBlue()
  local this = f__arg_this
  local vcBlue = f__arg_real1
  if (vcBlue < 0 or vcBlue > 100) then
    f__result_boolean = false
    return true
  end
  s__Escaper_vcBlue[this] = vcBlue
  f__result_boolean = true
  return true
end
function sa__Escaper_setVcTransparency()
  local this = f__arg_this
  local vcTransparency = f__arg_real1
  if (vcTransparency < 0 or vcTransparency > 100) then
    f__result_boolean = false
    return true
  end
  s__Escaper_vcTransparency[this] = vcTransparency
  f__result_boolean = true
  return true
end
function sa__Escaper_getVcRed()
  local this = f__arg_this
  f__result_real = s__Escaper_vcRed[this]
  return true
end
function sa__Escaper_getVcGreen()
  local this = f__arg_this
  f__result_real = s__Escaper_vcGreen[this]
  return true
end
function sa__Escaper_getVcBlue()
  local this = f__arg_this
  f__result_real = s__Escaper_vcBlue[this]
  return true
end
function sa__Escaper_getVcTransparency()
  local this = f__arg_this
  f__result_real = s__Escaper_vcTransparency[this]
  return true
end
function sa__Escaper_getPlayer()
  local this = f__arg_this
  f__result_player = s__Escaper_p[this]
  return true
end
function sa__Escaper_getMakingLevel()
  local this = f__arg_this
  if (s__Escaper_makingLevel[this] == 0) then
    f__result_integer = sc__LevelArray_getCurrentLevel(udg_levels)
    return true
  end
  f__result_integer = s__Escaper_makingLevel[this]
  return true
end
function sa__Escaper_destroyMake()
  local this = f__arg_this
  if (s__Escaper_make[this] == 0) then
    f__result_boolean = false
    return true
  end
  sc__Make_deallocate(s__Escaper_make[this])
  s__Escaper_make[this] = 0
  f__result_boolean = true
  return true
end
function sa__Escaper_destroyAllSavedActions()
  local this = f__arg_this
  s__MakeLastActions_destroyAllActions(s__Escaper_makeLastActions[this])
  return true
end
function sa__Escaper_getLastZ()
  local this = f__arg_this
  f__result_real = s__Escaper_lastZ[this]
  return true
end
function sa__Escaper_setLastZ()
  local this = f__arg_this
  local lastZ = f__arg_real1
  s__Escaper_lastZ[this] = lastZ
  return true
end
function sa__Escaper_getOldDiffZ()
  local this = f__arg_this
  f__result_real = s__Escaper_oldDiffZ[this]
  return true
end
function sa__Escaper_setOldDiffZ()
  local this = f__arg_this
  local oldDiffZ = f__arg_real1
  s__Escaper_oldDiffZ[this] = oldDiffZ
  return true
end
function sa__Escaper_getSpeedZ()
  local this = f__arg_this
  f__result_real = s__Escaper_speedZ[this]
  return true
end
function sa__Escaper_setSpeedZ()
  local this = f__arg_this
  local speedZ = f__arg_real1
  s__Escaper_speedZ[this] = speedZ
  return true
end
function sa__Escaper_setCoopInvul()
  local this = f__arg_this
  local invul = f__arg_boolean1
  s__Escaper_coopInvul[this] = invul
  return true
end
function sa__Escaper_refreshCerclePosition()
  local this = f__arg_this
  if (not IsUnitHidden(s__Escaper_powerCircle[this])) then
    SetUnitPosition(s__Escaper_powerCircle[this], GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
    SetUnitPosition(s__Escaper_dummyPowerCircle[this], GetUnitX(s__Escaper_hero[this]), GetUnitY(s__Escaper_hero[this]))
  end
  return true
end
function sa__KillingTimers_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > 11) then
      break
    end
    DestroyTimer(s___KillingTimers_timers[s__KillingTimers_timers[this] + i])
    s___KillingTimers_timers[s__KillingTimers_timers[this] + i] = nil
    i = i + 1
  end
  return true
end
function sa__MonsterSpawnArray_get()
  local this = f__arg_this
  local arrayId = f__arg_integer1
  if (arrayId < 0 or arrayId > s__MonsterSpawnArray_lastInstance[this]) then
    f__result_integer = 0
    return true
  end
  f__result_integer = s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + arrayId]
  return true
end
function sa__MonsterSpawnArray_getLastInstanceId()
  local this = f__arg_this
  f__result_integer = s__MonsterSpawnArray_lastInstance[this]
  return true
end
function sa__MonsterSpawnArray_count()
  local this = f__arg_this
  local n = 0
  local i = 0
  while true do
    if (i > s__MonsterSpawnArray_lastInstance[this]) then
      break
    end
    if (s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i] ~= 0) then
      n = n + 1
    end
    i = i + 1
  end
  f__result_integer = n
  return true
end
function sa__MonsterSpawnArray_onDestroy()
  local this = f__arg_this
  local i = 0
  while true do
    if (i > s__MonsterSpawnArray_lastInstance[this]) then
      break
    end
    if (s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i] ~= 0) then
      s__MonsterSpawn_deallocate(s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + i])
    end
    i = i + 1
  end
  s__MonsterSpawnArray_lastInstance[this] = -1
  return true
end
function sa__MonsterSpawnArray_setMonsterSpawnNull()
  local this = f__arg_this
  local monsterSpawnArrayId = f__arg_integer1
  s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[this] + monsterSpawnArrayId] = 0
  return true
end
function sa__EscaperEffectArray_onDestroy()
  local this = f__arg_this
  while true do
    if (s__EscaperEffectArray_lastInstance[this] < 0) then
      break
    end
    s__EscaperEffect_deallocate(s___EscaperEffectArray_efs[s__EscaperEffectArray_efs[this] + s__EscaperEffectArray_lastInstance[this]])
    s__EscaperEffectArray_lastInstance[this] = s__EscaperEffectArray_lastInstance[this] - 1
  end
  return true
end
function sa__TerrainType_getTerrainTypeId()
  local this = f__arg_this
  f__result_integer = s__TerrainType_terrainTypeId[this]
  return true
end
function sa__TerrainType_getKind()
  local this = f__arg_this
  f__result_string = s__TerrainType_kind[this]
  return true
end
function sa__TerrainType_onDestroy()
  local this = f__arg_this
  s__TerrainType_label[this] = nil
  s__TerrainType_theAlias[this] = nil
  s__TerrainType_kind[this] = nil
  s__TerrainType_terrainTypeId[this] = 0
  return true
end
function sa__MonsterSpawn_onDestroy()
  local this = f__arg_this
  s__MonsterSpawn_desactivate(this)
  s___MonsterSpawnArray_monsterSpawns[s__MonsterSpawnArray_monsterSpawns[(s__Level_monsterSpawns[s__MonsterSpawn_level[this]])] + (s__MonsterSpawn_arrayId[this])] = 0
  -- INLINED!!
  return true
end
function sa__MonsterSpawn_startMobMovement()
  s__MonsterSpawn_startMobMovement(f__arg_this, f__arg_unit1)
  return true
end
function sa__MonsterSpawn_createMob()
  local this = f__arg_this
  local angle = nil
  if (s__MonsterSpawn_sens[this] == "leftToRight") then
    angle = 180
  elseif (s__MonsterSpawn_sens[this] == "upToDown") then
    angle = 90
  elseif (s__MonsterSpawn_sens[this] == "rightToLeft") then
    angle = 0
  else
    --downToUp
    angle = -90
  end
  f__result_unit = NewImmobileMonsterForPlayer(s__MonsterSpawn_mt[this], ENNEMY_PLAYER, (s__MonsterSpawn_minX[this] + s__MonsterSpawn_maxX[this]) / 2, (s__MonsterSpawn_minY[this] + s__MonsterSpawn_maxY[this]) / 2, angle)
  return true
end
function sa__MonsterSpawn_toString()
  local this = f__arg_this
  local str = s__MonsterSpawn_label[this] .. CACHE_SEPARATEUR_PARAM
  if (s__MonsterType_theAlias[s__MonsterSpawn_mt[this]] ~= nil and s__MonsterType_theAlias[s__MonsterSpawn_mt[this]] ~= "") then
    str = str .. s__MonsterType_theAlias[s__MonsterSpawn_mt[this]] .. CACHE_SEPARATEUR_PARAM
  else
    str = str .. s__MonsterType_label[s__MonsterSpawn_mt[this]] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. s__MonsterSpawn_sens[this] .. CACHE_SEPARATEUR_PARAM .. R2S(s__MonsterSpawn_frequence[this]) .. CACHE_SEPARATEUR_PARAM
  str = str .. I2S(R2I(s__MonsterSpawn_minX[this])) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(s__MonsterSpawn_minY[this])) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(s__MonsterSpawn_maxX[this])) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(s__MonsterSpawn_maxY[this]))
  f__result_string = str
  return true
end
function sa__MakeTerrainVerticalSymmetryAction_applySymmetry()
  local this = f__arg_this
  local i = nil
  local x = nil
  local l__y = nil
  local terrainTypeIds = __jarray(0)
  i = 0
  x = s__MakeTerrainVerticalSymmetryAction_minX[this]
  l__y = s__MakeTerrainVerticalSymmetryAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainVerticalSymmetryAction_maxY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainVerticalSymmetryAction_maxX[this]) then
        break
      end
      terrainTypeIds[i] = GetTerrainType(x, l__y)
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainVerticalSymmetryAction_minX[this]
    l__y = l__y + LARGEUR_CASE
  end
  i = 0
  x = s__MakeTerrainVerticalSymmetryAction_minX[this]
  l__y = s__MakeTerrainVerticalSymmetryAction_maxY[this]
  while true do
    if (l__y < s__MakeTerrainVerticalSymmetryAction_minY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainVerticalSymmetryAction_maxX[this]) then
        break
      end
      SetTerrainType(((x) * 1.0), ((l__y) * 1.0), (terrainTypeIds[i]), -1, 1, 0)
      -- INLINED!!
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainVerticalSymmetryAction_minX[this]
    l__y = l__y - LARGEUR_CASE
  end
  return true
end
function sa__MakeTerrainVerticalSymmetryAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainVerticalSymmetryAction_applySymmetry(this)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain vertical symmetry cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainVerticalSymmetryAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainVerticalSymmetryAction_applySymmetry(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain vertical symmetry redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainHorizontalSymmetryAction_applySymmetry()
  local this = f__arg_this
  local i = nil
  local x = nil
  local l__y = nil
  local terrainTypeIds = __jarray(0)
  i = 0
  x = s__MakeTerrainHorizontalSymmetryAction_minX[this]
  l__y = s__MakeTerrainHorizontalSymmetryAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainHorizontalSymmetryAction_maxY[this]) then
      break
    end
    while true do
      if (x > s__MakeTerrainHorizontalSymmetryAction_maxX[this]) then
        break
      end
      terrainTypeIds[i] = GetTerrainType(x, l__y)
      i = i + 1
      x = x + LARGEUR_CASE
    end
    x = s__MakeTerrainHorizontalSymmetryAction_minX[this]
    l__y = l__y + LARGEUR_CASE
  end
  i = 0
  x = s__MakeTerrainHorizontalSymmetryAction_maxX[this]
  l__y = s__MakeTerrainHorizontalSymmetryAction_minY[this]
  while true do
    if (l__y > s__MakeTerrainHorizontalSymmetryAction_maxY[this]) then
      break
    end
    while true do
      if (x < s__MakeTerrainHorizontalSymmetryAction_minX[this]) then
        break
      end
      SetTerrainType(((x) * 1.0), ((l__y) * 1.0), (terrainTypeIds[i]), -1, 1, 0)
      -- INLINED!!
      i = i + 1
      x = x - LARGEUR_CASE
    end
    x = s__MakeTerrainHorizontalSymmetryAction_maxX[this]
    l__y = l__y + LARGEUR_CASE
  end
  return true
end
function sa__MakeTerrainHorizontalSymmetryAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainHorizontalSymmetryAction_applySymmetry(this)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain vertical symmetry cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainHorizontalSymmetryAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainHorizontalSymmetryAction_applySymmetry(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain vertical symmetry redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainCreateAction_onDestroy()
  local this = f__arg_this
  FlushChildHashtable(s__MakeTerrainCreateAction_terrainSaves, (s__MakeTerrainCreateAction_terrainSaveId[this]))
  -- INLINED!!
  f__arg_this = this
  return true
end
function sa__MakeTerrainCreateAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainCreateAction_terrainModificationCancel(this)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain creation cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainCreateAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainCreateAction_terrainModificationRedo(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain creation redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainCopyPasteAction_onDestroy()
  local this = f__arg_this
  s__MakeTerrainCopyPasteAction_removeTerrainSave(s__MakeTerrainCopyPasteAction_terrainSaveId[this])
  f__arg_this = this
  return true
end
function sa__MakeTerrainCopyPasteAction_cancel()
  local this = f__arg_this
  if (not s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainCopyPasteAction_terrainModificationCancel(this)
  s__MakeAction_isActionMadeB[this] = false
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain copy/paste cancelled"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeTerrainCopyPasteAction_redo()
  local this = f__arg_this
  if (s__MakeAction_isActionMadeB[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeTerrainCopyPasteAction_terrainModificationRedo(this)
  s__MakeAction_isActionMadeB[this] = true
  Text___ForPlayer_timed_withColorCode(((s__Escaper_p[(s__MakeAction_owner[this])])), -1, MAKE_TEXT_COLORCODE, ("terrain copy/paste redone"))
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__EscaperEffect_onDestroy()
  local this = f__arg_this
  if (s__EscaperEffect_ef[this] ~= nil) then
    DestroyEffect(s__EscaperEffect_ef[this])
    s__EscaperEffect_ef[this] = nil
  end
  return true
end
function sa__CasterShot_create()
  local monsterType = f__arg_integer1
  local Xdep = f__arg_real1
  local Ydep = f__arg_real2
  local angle = f__arg_real3
  local speed = f__arg_real4
  local portee = f__arg_real5
  local t = s__CasterShot__allocate()
  s__CasterShot_x[t] = Xdep
  s__CasterShot_y[t] = Ydep
  s__CasterShot_diffX[t] = speed * CosBJ(angle) * CasterShot__PERIOD
  s__CasterShot_diffY[t] = speed * SinBJ(angle) * CasterShot__PERIOD
  s__CasterShot_nbTeleportationsRestantes[t] = R2I((portee / speed) / CasterShot__PERIOD)
  s__CasterShot_unite[t] = NewImmobileMonster(monsterType, Xdep, Ydep, angle)
  s__CasterShot_trig[t] = CreateTrigger()
  TriggerRegisterTimerEvent(s__CasterShot_trig[t], CasterShot__PERIOD, true)
  TriggerAddAction(s__CasterShot_trig[t], CasterShot__CasterShot_Actions)
  SaveInteger(CasterShot__shotsHashtable, 0, GetHandleId(s__CasterShot_trig[t]), t)
  f__result_integer = t
  return true
end
function sa__CasterShot_onDestroy()
  local this = f__arg_this
  RemoveUnit(s__CasterShot_unite[this])
  s__CasterShot_unite[this] = nil
  DestroyTrigger(s__CasterShot_trig[this])
  s__CasterShot_trig[this] = nil
  return true
end
function sa__MakeDeleteClearMob_create()
  f__result_integer = s__MakeDeleteClearMob_create(f__arg_unit1)
  return true
end
function sa__MakeDeleteClearMob_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeDeleteClearMob_clickMade()
  local this = f__arg_this
  local monsterOrCasterId = f__arg_integer1
  local escaper = Hero2Escaper(s__Make_maker[this])
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (monsterOrCasterId)))
  -- INLINED!!
  if (clearMob ~= 0) then
    --le mob est trigger mob d'un clear mob, c'est bon, delete du clear mob
    s__ClearMob_deallocate(clearMob)
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("clear mob removed"))
    -- INLINED!!
  else
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("this monster is not a trigger mob of a clear mob"))
    -- INLINED!!
  end
  return true
end
function sa__MakeDeleteClearMob_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeDeleteClearMob_redoLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__TerrainTypeSlide_getSlideSpeed()
  local this = f__arg_this
  f__result_real = s__TerrainTypeSlide_slideSpeed[this]
  return true
end
function sa__TerrainTypeSlide_getCanTurn()
  local this = f__arg_this
  f__result_boolean = s__TerrainTypeSlide_canTurn[this]
  return true
end
function sa__TerrainTypeWalk_getWalkSpeed()
  local this = f__arg_this
  f__result_real = s__TerrainTypeWalk_walkSpeed[this]
  return true
end
function sa__TerrainTypeDeath_onDestroy()
  local this = f__arg_this
  s__KillingTimers_deallocate(s__TerrainTypeDeath_killingTimers[this])
  f__arg_this = this
  return true
end
function sa__TerrainTypeDeath_getKillingEffectStr()
  local this = f__arg_this
  f__result_string = s__TerrainTypeDeath_killingEffectStr[this]
  return true
end
function sa__TerrainTypeDeath_getTimeToKill()
  local this = f__arg_this
  f__result_real = s__TerrainTypeDeath_timeToKill[this]
  return true
end
function sa__TerrainTypeDeath_killEscaper()
  local this = f__arg_this
  local escaper = f__arg_integer1
  s__Escaper_enableCheckTerrain(escaper, false)
  s__Escaper_enableSlide(escaper, false)
  s__Escaper_pause(escaper, true)
  s__Escaper_createTerrainKillEffect(escaper, s__TerrainTypeDeath_killingEffectStr[this])
  s__KillingTimers_start(s__TerrainTypeDeath_killingTimers[this], s__Escaper_getId(escaper), s__TerrainTypeDeath_timeToKill[this])
  return true
end
function sa__TerrainTypeDeath_getTimer()
  local this = f__arg_this
  local escaperId = f__arg_integer1
  f__result_timer = (s___KillingTimers_timers[s__KillingTimers_timers[(s__TerrainTypeDeath_killingTimers[this])] + (escaperId)])
  -- INLINED!!
  return true
end
function sa__TerrainTypeDeath_getToleranceDist()
  local this = f__arg_this
  f__result_real = s__TerrainTypeDeath_toleranceDist[this]
  return true
end
function sa__Start_onDestroy()
  local this = f__arg_this
  RemoveRect(s__RectInterface_r[this])
  s__RectInterface_r[this] = nil
  f__arg_this = this
  return true
end
function sa__Start_getRandomX()
  local this = f__arg_this
  f__result_real = GetRandomReal(s__RectInterface_minX[this], s__RectInterface_maxX[this])
  return true
end
function sa__Start_getRandomY()
  local this = f__arg_this
  f__result_real = GetRandomReal(s__RectInterface_minY[this], s__RectInterface_maxY[this])
  return true
end
function sa__Start_toString()
  local this = f__arg_this
  local minX = I2S(R2I(s__RectInterface_minX[this]))
  local minY = I2S(R2I(s__RectInterface_minY[this]))
  local maxX = I2S(R2I(s__RectInterface_maxX[this]))
  local maxY = I2S(R2I(s__RectInterface_maxY[this]))
  f__result_string = (minX .. CACHE_SEPARATEUR_PARAM .. minY .. CACHE_SEPARATEUR_PARAM .. maxX .. CACHE_SEPARATEUR_PARAM .. maxY)
  return true
end
function sa__End_onDestroy()
  local this = f__arg_this
  RemoveRect(s__RectInterface_r[this])
  s__RectInterface_r[this] = nil
  DestroyTrigger(s__End_endReaching[this])
  s__End_endReaching[this] = nil
  f__arg_this = this
  return true
end
function sa__End_toString()
  local this = f__arg_this
  local minX = I2S(R2I(s__RectInterface_minX[this]))
  local minY = I2S(R2I(s__RectInterface_minY[this]))
  local maxX = I2S(R2I(s__RectInterface_maxX[this]))
  local maxY = I2S(R2I(s__RectInterface_maxY[this]))
  f__result_string = (minX .. CACHE_SEPARATEUR_PARAM .. minY .. CACHE_SEPARATEUR_PARAM .. maxX .. CACHE_SEPARATEUR_PARAM .. maxY)
  return true
end
function sa__MakeCaster_getCasterType()
  local this = f__arg_this
  f__result_integer = s__MakeCaster_casterType[this]
  return true
end
function sa__MakeCaster_getAngle()
  local this = f__arg_this
  f__result_real = s__MakeCaster_angle[this]
  return true
end
function sa__MakeCaster_create()
  f__result_integer = s__MakeCaster_create(f__arg_unit1, f__arg_integer1, f__arg_real1)
  return true
end
function sa__MakeCaster_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeCaster_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeCaster_redoLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeDeleteCasters_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeDeleteCasters_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeDeleteCasters_create()
  f__result_integer = s__MakeDeleteCasters_create(f__arg_unit1, f__arg_string1)
  return true
end
function sa__MakeDeleteCasters_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteCasters_unitLastClic[this])
  s__MakeDeleteCasters_unitLastClic[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeDeleteCasters_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeDeleteCasters_lastX[this] = x
  s__MakeDeleteCasters_lastY[this] = l__y
  s__MakeDeleteCasters_lastLocIsSaved[this] = true
  s__MakeDeleteCasters_lastLocSavedIsUsed[this] = true
  if (s__MakeDeleteCasters_unitLastClic[this] == nil) then
    s__MakeDeleteCasters_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeDeleteCasters_unitLastClic[this], x)
    SetUnitY(s__MakeDeleteCasters_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeDeleteCasters_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeDeleteCasters_unsaveLoc(this)
  s__MakeDeleteCasters_lastLocIsSaved[this] = false
  return true
end
function sa__MakeDeleteCasters_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeDeleteCasters_unsaveLoc(this)
  return true
end
function sa__MakeDeleteCasters_redoLastAction()
  local this = f__arg_this
  if (s__MakeDeleteCasters_lastLocIsSaved[this] and not s__MakeDeleteCasters_lastLocSavedIsUsed[this]) then
    s__MakeDeleteCasters_saveLoc(this, s__MakeDeleteCasters_lastX[this], s__MakeDeleteCasters_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeDeleteCasters_getMode()
  local this = f__arg_this
  f__result_string = s__MakeDeleteCasters_mode[this]
  return true
end
function sa__MakeDeleteMeteors_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeDeleteMeteors_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeDeleteMeteors_create()
  f__result_integer = s__MakeDeleteMeteors_create(f__arg_unit1, f__arg_string1)
  return true
end
function sa__MakeDeleteMeteors_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteMeteors_unitLastClic[this])
  s__MakeDeleteMeteors_unitLastClic[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeDeleteMeteors_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeDeleteMeteors_lastX[this] = x
  s__MakeDeleteMeteors_lastY[this] = l__y
  s__MakeDeleteMeteors_lastLocIsSaved[this] = true
  s__MakeDeleteMeteors_lastLocSavedIsUsed[this] = true
  if (s__MakeDeleteMeteors_unitLastClic[this] == nil) then
    s__MakeDeleteMeteors_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeDeleteMeteors_unitLastClic[this], x)
    SetUnitY(s__MakeDeleteMeteors_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeDeleteMeteors_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeDeleteMeteors_unsaveLoc(this)
  s__MakeDeleteMeteors_lastLocIsSaved[this] = false
  return true
end
function sa__MakeDeleteMeteors_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeDeleteMeteors_unsaveLoc(this)
  return true
end
function sa__MakeDeleteMeteors_redoLastAction()
  local this = f__arg_this
  if (s__MakeDeleteMeteors_lastLocIsSaved[this] and not s__MakeDeleteMeteors_lastLocSavedIsUsed[this]) then
    s__MakeDeleteMeteors_saveLoc(this, s__MakeDeleteMeteors_lastX[this], s__MakeDeleteMeteors_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeDeleteMeteors_getMode()
  local this = f__arg_this
  f__result_string = s__MakeDeleteMeteors_mode[this]
  return true
end
function sa__MakeDeleteMonsters_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeDeleteMonsters_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeDeleteMonsters_create()
  f__result_integer = s__MakeDeleteMonsters_create(f__arg_unit1, f__arg_string1)
  return true
end
function sa__MakeDeleteMonsters_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeDeleteMonsters_unitLastClic[this])
  s__MakeDeleteMonsters_unitLastClic[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeDeleteMonsters_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeDeleteMonsters_lastX[this] = x
  s__MakeDeleteMonsters_lastY[this] = l__y
  s__MakeDeleteMonsters_lastLocIsSaved[this] = true
  s__MakeDeleteMonsters_lastLocSavedIsUsed[this] = true
  if (s__MakeDeleteMonsters_unitLastClic[this] == nil) then
    s__MakeDeleteMonsters_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeDeleteMonsters_unitLastClic[this], x)
    SetUnitY(s__MakeDeleteMonsters_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeDeleteMonsters_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeDeleteMonsters_unsaveLoc(this)
  s__MakeDeleteMonsters_lastLocIsSaved[this] = false
  return true
end
function sa__MakeDeleteMonsters_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeDeleteMonsters_unsaveLoc(this)
  return true
end
function sa__MakeDeleteMonsters_redoLastAction()
  local this = f__arg_this
  if (s__MakeDeleteMonsters_lastLocIsSaved[this] and not s__MakeDeleteMonsters_lastLocSavedIsUsed[this]) then
    s__MakeDeleteMonsters_saveLoc(this, s__MakeDeleteMonsters_lastX[this], s__MakeDeleteMonsters_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeDeleteMonsters_getMode()
  local this = f__arg_this
  f__result_string = s__MakeDeleteMonsters_mode[this]
  return true
end
function sa__MakeEnd_create()
  f__result_integer = s__MakeEnd_create(f__arg_unit1)
  return true
end
function sa__MakeEnd_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeEnd_unitLastClic[this])
  s__MakeEnd_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeEnd_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeEnd_lastX[this] = x
  s__MakeEnd_lastY[this] = l__y
  s__MakeEnd_lastLocIsSaved[this] = true
  s__MakeEnd_lastLocSavedIsUsed[this] = true
  if (s__MakeEnd_unitLastClic[this] == nil) then
    s__MakeEnd_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeEnd_unitLastClic[this], x)
    SetUnitY(s__MakeEnd_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeEnd_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeEnd_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeEnd_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeEnd_unsaveLoc(this)
  return true
end
function sa__MakeEnd_redoLastAction()
  local this = f__arg_this
  if (not s__MakeEnd_lastLocSavedIsUsed[this] and s__MakeEnd_lastLocIsSaved[this]) then
    s__MakeEnd_saveLoc(this, s__MakeEnd_lastX[this], s__MakeEnd_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeExchangeTerrains_create()
  f__result_integer = s__MakeExchangeTerrains_create(f__arg_unit1)
  return true
end
function sa__MakeExchangeTerrains_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeExchangeTerrains_unitLastClic[this])
  s__MakeExchangeTerrains_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeExchangeTerrains_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeExchangeTerrains_lastX[this] = x
  s__MakeExchangeTerrains_lastY[this] = l__y
  s__MakeExchangeTerrains_lastLocIsSaved[this] = true
  s__MakeExchangeTerrains_lastLocSavedIsUsed[this] = true
  if (s__MakeExchangeTerrains_unitLastClic[this] == nil) then
    s__MakeExchangeTerrains_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeExchangeTerrains_unitLastClic[this], x)
    SetUnitY(s__MakeExchangeTerrains_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeExchangeTerrains_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeExchangeTerrains_unsaveLoc(this)
  s__MakeExchangeTerrains_lastLocIsSaved[this] = false
  return true
end
function sa__MakeExchangeTerrains_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeExchangeTerrains_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeExchangeTerrains_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeExchangeTerrains_unsaveLoc(this)
  return true
end
function sa__MakeExchangeTerrains_redoLastAction()
  local this = f__arg_this
  if (s__MakeExchangeTerrains_lastLocIsSaved[this] and not s__MakeExchangeTerrains_lastLocSavedIsUsed[this]) then
    s__MakeExchangeTerrains_saveLoc(this, s__MakeExchangeTerrains_lastX[this], s__MakeExchangeTerrains_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeGetTerrainType_create()
  f__result_integer = s__MakeGetTerrainType_create(f__arg_unit1)
  return true
end
function sa__MakeGetTerrainType_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeGetTerrainType_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeGetTerrainType_redoLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeGetUnitTeleportPeriod_create()
  f__result_integer = s__MakeGetUnitTeleportPeriod_create(f__arg_unit1)
  return true
end
function sa__MakeGetUnitTeleportPeriod_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeGetUnitTeleportPeriod_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeGetUnitTeleportPeriod_redoLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeMeteor_create()
  f__result_integer = s__MakeMeteor_create(f__arg_unit1)
  return true
end
function sa__MakeMeteor_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeMeteor_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeMeteor_redoLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeMonsterMultiplePatrols__disposeArrays()
  local this = f__arg_this
  local kthis = nil
  si__MakeMonsterMultiplePatrols_arrN = si__MakeMonsterMultiplePatrols_arrN + 1
  kthis = si__MakeMonsterMultiplePatrols_arr[this]
  si__MakeMonsterMultiplePatrols_arrV[si__MakeMonsterMultiplePatrols_arrN] = kthis
  return true
end
function sa__MakeMonsterMultiplePatrols_getMonsterType()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterMultiplePatrols_mt[this]
  return true
end
function sa__MakeMonsterMultiplePatrols_getMode()
  local this = f__arg_this
  f__result_string = s__MakeMonsterMultiplePatrols_mode[this]
  return true
end
function sa__MakeMonsterMultiplePatrols_getMonster()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterMultiplePatrols_monster[this]
  return true
end
function sa__MakeMonsterMultiplePatrols_create()
  f__result_integer = s__MakeMonsterMultiplePatrols_create(f__arg_unit1, f__arg_string1, f__arg_integer1)
  return true
end
function sa__MakeMonsterMultiplePatrols_onDestroy()
  local this = f__arg_this
  local escaper = nil
  if (s__MakeMonsterMultiplePatrols_monster[this] ~= 0 and sg__Monster_get_u(s__MakeMonsterMultiplePatrols_monster[this]) ~= nil) then
    escaper = Hero2Escaper(s__Make_maker[this])
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), s__MakeMonsterMultiplePatrols_monster[this])))
    -- INLINED!!
  else
    sc__Monster_deallocate(s__MakeMonsterMultiplePatrols_monster[this])
  end
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterMultiplePatrols_unitLastClic[this])
  s__MakeMonsterMultiplePatrols_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeMonsterMultiplePatrols_nextMonster()
  local this = f__arg_this
  local escaper = nil
  s__MakeMonsterMultiplePatrols_lastLocId[this] = -1
  s__MakeMonsterMultiplePatrols_locPointeur[this] = -1
  RemoveUnit(s__MakeMonsterMultiplePatrols_unitLastClic[this])
  s__MakeMonsterMultiplePatrols_unitLastClic[this] = nil
  if (s__MakeMonsterMultiplePatrols_monster[this] ~= 0 and sg__Monster_get_u(s__MakeMonsterMultiplePatrols_monster[this]) ~= nil) then
    escaper = Hero2Escaper(s__Make_maker[this])
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), s__MakeMonsterMultiplePatrols_monster[this])))
    -- INLINED!!
  else
    sc__Monster_deallocate(s__MakeMonsterMultiplePatrols_monster[this])
  end
  s__MakeMonsterMultiplePatrols_monster[this] = 0
  return true
end
function sa__MakeMonsterMultiplePatrols_getLocPointeur()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterMultiplePatrols_locPointeur[this]
  return true
end
function sa__MakeMonsterMultiplePatrols_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  if (s__MakeMonsterMultiplePatrols_locPointeur[this] >= s__MonsterMultiplePatrols_NB_MAX_LOC - 1) then
    return true
  end
  s__MakeMonsterMultiplePatrols_locPointeur[this] = s__MakeMonsterMultiplePatrols_locPointeur[this] + 1
  s___MakeMonsterMultiplePatrols_lastX[s__MakeMonsterMultiplePatrols_lastX[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]] = x
  s___MakeMonsterMultiplePatrols_lastY[s__MakeMonsterMultiplePatrols_lastY[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]] = l__y
  s__MakeMonsterMultiplePatrols_lastLocId[this] = s__MakeMonsterMultiplePatrols_locPointeur[this]
  s__MakeMonsterMultiplePatrols_setUnitLastClicPosition(this, x, l__y)
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeMonsterMultiplePatrols_setMonster()
  local this = f__arg_this
  local monster = f__arg_integer1
  if (s__MakeMonsterMultiplePatrols_monster[this] ~= 0) then
    sc__Monster_deallocate(s__MakeMonsterMultiplePatrols_monster[this])
  end
  s__MakeMonsterMultiplePatrols_monster[this] = monster
  return true
end
function sa__MakeMonsterMultiplePatrols_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeMonsterMultiplePatrols_unsaveLoc(this)
  return true
end
function sa__MakeMonsterMultiplePatrols_redoLastAction()
  local this = f__arg_this
  if (s__MakeMonsterMultiplePatrols_locPointeur[this] < s__MakeMonsterMultiplePatrols_lastLocId[this]) then
    s__MakeMonsterMultiplePatrols_locPointeur[this] = s__MakeMonsterMultiplePatrols_locPointeur[this] + 1
    sc__MonsterMultiplePatrols_addNewLoc(s__MakeMonsterMultiplePatrols_monster[this], s___MakeMonsterMultiplePatrols_lastX[s__MakeMonsterMultiplePatrols_lastX[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]], s___MakeMonsterMultiplePatrols_lastY[s__MakeMonsterMultiplePatrols_lastY[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]])
    s__MakeMonsterMultiplePatrols_setUnitLastClicPosition(this, s___MakeMonsterMultiplePatrols_lastX[s__MakeMonsterMultiplePatrols_lastX[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]], s___MakeMonsterMultiplePatrols_lastY[s__MakeMonsterMultiplePatrols_lastY[this] + s__MakeMonsterMultiplePatrols_locPointeur[this]])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeMonsterNoMove_getMonsterType()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterNoMove_mt[this]
  return true
end
function sa__MakeMonsterNoMove_getFacingAngle()
  local this = f__arg_this
  f__result_real = s__MakeMonsterNoMove_facingAngle[this]
  return true
end
function sa__MakeMonsterNoMove_create()
  f__result_integer = s__MakeMonsterNoMove_create(f__arg_unit1, f__arg_integer1, f__arg_real1)
  return true
end
function sa__MakeMonsterNoMove_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeMonsterNoMove_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeMonsterNoMove_redoLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeMonsterSimplePatrol_getMonsterType()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterSimplePatrol_mt[this]
  return true
end
function sa__MakeMonsterSimplePatrol_create()
  f__result_integer = s__MakeMonsterSimplePatrol_create(f__arg_unit1, f__arg_string1, f__arg_integer1)
  return true
end
function sa__MakeMonsterSimplePatrol_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterSimplePatrol_unitLastClic[this])
  s__MakeMonsterSimplePatrol_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeMonsterSimplePatrol_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeMonsterSimplePatrol_lastX[this] = x
  s__MakeMonsterSimplePatrol_lastY[this] = l__y
  s__MakeMonsterSimplePatrol_lastLocIsSaved[this] = true
  s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this] = true
  if (s__MakeMonsterSimplePatrol_unitLastClic[this] == nil) then
    s__MakeMonsterSimplePatrol_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeMonsterSimplePatrol_unitLastClic[this], x)
    SetUnitY(s__MakeMonsterSimplePatrol_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeMonsterSimplePatrol_unsaveLoc()
  local this = f__arg_this
  if (not s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this]) then
    f__result_boolean = false
    return true
  end
  RemoveUnit(s__MakeMonsterSimplePatrol_unitLastClic[this])
  s__MakeMonsterSimplePatrol_unitLastClic[this] = nil
  s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this] = false
  f__result_boolean = true
  return true
end
function sa__MakeMonsterSimplePatrol_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeMonsterSimplePatrol_unsaveLoc(this)
  s__MakeMonsterSimplePatrol_lastLocIsSaved[this] = false
  return true
end
function sa__MakeMonsterSimplePatrol_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeMonsterSimplePatrol_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeMonsterSimplePatrol_unsaveLoc(this)
  return true
end
function sa__MakeMonsterSimplePatrol_redoLastAction()
  local this = f__arg_this
  if (s__MakeMonsterSimplePatrol_lastLocIsSaved[this] and not s__MakeMonsterSimplePatrol_lastLocSavedIsUsed[this]) then
    s__MakeMonsterSimplePatrol_saveLoc(this, s__MakeMonsterSimplePatrol_lastX[this], s__MakeMonsterSimplePatrol_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeMonsterSimplePatrol_getMode()
  local this = f__arg_this
  f__result_string = s__MakeMonsterSimplePatrol_mode[this]
  return true
end
function sa__MakeMonsterSpawn_create()
  f__result_integer = s__MakeMonsterSpawn_create(f__arg_unit1, f__arg_string1, f__arg_integer1, f__arg_string2, f__arg_real1)
  return true
end
function sa__MakeMonsterSpawn_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterSpawn_unitLastClic[this])
  s__MakeMonsterSpawn_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeMonsterSpawn_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeMonsterSpawn_lastX[this] = x
  s__MakeMonsterSpawn_lastY[this] = l__y
  s__MakeMonsterSpawn_lastLocIsSaved[this] = true
  s__MakeMonsterSpawn_lastLocSavedIsUsed[this] = true
  if (s__MakeMonsterSpawn_unitLastClic[this] == nil) then
    s__MakeMonsterSpawn_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeMonsterSpawn_unitLastClic[this], x)
    SetUnitY(s__MakeMonsterSpawn_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeMonsterSpawn_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeMonsterSpawn_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeMonsterSpawn_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeMonsterSpawn_unsaveLoc(this)
  return true
end
function sa__MakeMonsterSpawn_redoLastAction()
  local this = f__arg_this
  if (not s__MakeMonsterSpawn_lastLocSavedIsUsed[this] and s__MakeMonsterSpawn_lastLocIsSaved[this]) then
    s__MakeMonsterSpawn_saveLoc(this, s__MakeMonsterSpawn_lastX[this], s__MakeMonsterSpawn_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeMonsterTeleport__disposeArrays()
  local this = f__arg_this
  local kthis = nil
  si__MakeMonsterTeleport_arrN = si__MakeMonsterTeleport_arrN + 1
  kthis = si__MakeMonsterTeleport_arr[this]
  si__MakeMonsterTeleport_arrV[si__MakeMonsterTeleport_arrN] = kthis
  return true
end
function sa__MakeMonsterTeleport_getMonsterType()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterTeleport_mt[this]
  return true
end
function sa__MakeMonsterTeleport_getPeriod()
  local this = f__arg_this
  f__result_real = s__MakeMonsterTeleport_period[this]
  return true
end
function sa__MakeMonsterTeleport_getAngle()
  local this = f__arg_this
  f__result_real = s__MakeMonsterTeleport_angle[this]
  return true
end
function sa__MakeMonsterTeleport_getMode()
  local this = f__arg_this
  f__result_string = s__MakeMonsterTeleport_mode[this]
  return true
end
function sa__MakeMonsterTeleport_getMonster()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterTeleport_monster[this]
  return true
end
function sa__MakeMonsterTeleport_create()
  f__result_integer = s__MakeMonsterTeleport_create(f__arg_unit1, f__arg_string1, f__arg_integer1, f__arg_real1, f__arg_real2)
  return true
end
function sa__MakeMonsterTeleport_onDestroy()
  local this = f__arg_this
  local escaper = nil
  if (s__MakeMonsterTeleport_monster[this] ~= 0 and sg__Monster_get_u(s__MakeMonsterTeleport_monster[this]) ~= nil) then
    escaper = Hero2Escaper(s__Make_maker[this])
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), s__MakeMonsterTeleport_monster[this])))
    -- INLINED!!
  else
    sc__Monster_deallocate(s__MakeMonsterTeleport_monster[this])
  end
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeMonsterTeleport_unitLastClic[this])
  s__MakeMonsterTeleport_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeMonsterTeleport_nextMonster()
  local this = f__arg_this
  local escaper = nil
  s__MakeMonsterTeleport_lastLocId[this] = -1
  s__MakeMonsterTeleport_locPointeur[this] = -1
  RemoveUnit(s__MakeMonsterTeleport_unitLastClic[this])
  s__MakeMonsterTeleport_unitLastClic[this] = nil
  if (s__MakeMonsterTeleport_monster[this] ~= 0 and sg__Monster_get_u(s__MakeMonsterTeleport_monster[this]) ~= nil) then
    escaper = Hero2Escaper(s__Make_maker[this])
    s__MakeLastActions_newAction(s__Escaper_makeLastActions[(escaper)], (s__MakeMonsterAction_create(s__Escaper_getMakingLevel(escaper), s__MakeMonsterTeleport_monster[this])))
    -- INLINED!!
  else
    sc__Monster_deallocate(s__MakeMonsterTeleport_monster[this])
  end
  s__MakeMonsterTeleport_monster[this] = 0
  return true
end
function sa__MakeMonsterTeleport_addWaitPeriod()
  local this = f__arg_this
  if (s__MakeMonsterTeleport_locPointeur[this] < 0) then
    f__result_boolean = false
    --un wait sans point au préalable est interdit
    return true
  end
  if (sc__MakeMonsterTeleport_saveLoc(this, WAIT, WAIT)) then
    sc__MonsterTeleport_addNewLoc((s__MakeMonsterTeleport_monster[(this)]), WAIT, WAIT)
    -- INLINED!!
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeMonsterTeleport_addHidePeriod()
  local this = f__arg_this
  if (s__MakeMonsterTeleport_locPointeur[this] < 0) then
    f__result_boolean = false
    --un hide sans point au préalable est interdit
    return true
  end
  if (sc__MakeMonsterTeleport_saveLoc(this, HIDE, HIDE)) then
    sc__MonsterTeleport_addNewLoc((s__MakeMonsterTeleport_monster[(this)]), HIDE, HIDE)
    -- INLINED!!
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeMonsterTeleport_getLocPointeur()
  local this = f__arg_this
  f__result_integer = s__MakeMonsterTeleport_locPointeur[this]
  return true
end
function sa__MakeMonsterTeleport_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  if (s__MakeMonsterTeleport_locPointeur[this] >= s__MonsterTeleport_NB_MAX_LOC - 1) then
    f__result_boolean = false
    return true
  end
  s__MakeMonsterTeleport_locPointeur[this] = s__MakeMonsterTeleport_locPointeur[this] + 1
  s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + s__MakeMonsterTeleport_locPointeur[this]] = x
  s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + s__MakeMonsterTeleport_locPointeur[this]] = l__y
  s__MakeMonsterTeleport_lastLocId[this] = s__MakeMonsterTeleport_locPointeur[this]
  if (not (x == l__y and (x == WAIT or x == HIDE))) then
    s__MakeMonsterTeleport_setUnitLastClicPosition(this, x, l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  f__result_boolean = true
  return true
end
function sa__MakeMonsterTeleport_setMonster()
  local this = f__arg_this
  local monster = f__arg_integer1
  if (s__MakeMonsterTeleport_monster[this] ~= 0) then
    sc__Monster_deallocate(s__MakeMonsterTeleport_monster[this])
  end
  s__MakeMonsterTeleport_monster[this] = monster
  return true
end
function sa__MakeMonsterTeleport_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeMonsterTeleport_unsaveLoc(this)
  return true
end
function sa__MakeMonsterTeleport_redoLastAction()
  local this = f__arg_this
  if (s__MakeMonsterTeleport_locPointeur[this] < s__MakeMonsterTeleport_lastLocId[this]) then
    s__MakeMonsterTeleport_locPointeur[this] = s__MakeMonsterTeleport_locPointeur[this] + 1
    sc__MonsterTeleport_addNewLoc(s__MakeMonsterTeleport_monster[this], s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + s__MakeMonsterTeleport_locPointeur[this]], s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + s__MakeMonsterTeleport_locPointeur[this]])
    s__MakeMonsterTeleport_setUnitLastClicPosition(this, s___MakeMonsterTeleport_lastX[s__MakeMonsterTeleport_lastX[this] + s__MakeMonsterTeleport_locPointeur[this]], s___MakeMonsterTeleport_lastY[s__MakeMonsterTeleport_lastY[this] + s__MakeMonsterTeleport_locPointeur[this]])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeSetUnitMonsterType_getMonsterType()
  local this = f__arg_this
  f__result_integer = s__MakeSetUnitMonsterType_mt[this]
  return true
end
function sa__MakeSetUnitMonsterType_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeSetUnitMonsterType_create()
  f__result_integer = s__MakeSetUnitMonsterType_create(f__arg_unit1, f__arg_string1, f__arg_integer1)
  return true
end
function sa__MakeSetUnitMonsterType_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeSetUnitMonsterType_unitLastClic[this])
  s__MakeSetUnitMonsterType_unitLastClic[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeSetUnitMonsterType_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeSetUnitMonsterType_lastX[this] = x
  s__MakeSetUnitMonsterType_lastY[this] = l__y
  s__MakeSetUnitMonsterType_lastLocIsSaved[this] = true
  s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this] = true
  if (s__MakeSetUnitMonsterType_unitLastClic[this] == nil) then
    s__MakeSetUnitMonsterType_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeSetUnitMonsterType_unitLastClic[this], x)
    SetUnitY(s__MakeSetUnitMonsterType_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeSetUnitMonsterType_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeSetUnitMonsterType_unsaveLoc(this)
  s__MakeSetUnitMonsterType_lastLocIsSaved[this] = false
  return true
end
function sa__MakeSetUnitMonsterType_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeSetUnitMonsterType_unsaveLoc(this)
  return true
end
function sa__MakeSetUnitMonsterType_redoLastAction()
  local this = f__arg_this
  if (s__MakeSetUnitMonsterType_lastLocIsSaved[this] and not s__MakeSetUnitMonsterType_lastLocSavedIsUsed[this]) then
    s__MakeSetUnitMonsterType_saveLoc(this, s__MakeSetUnitMonsterType_lastX[this], s__MakeSetUnitMonsterType_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeSetUnitMonsterType_getMode()
  local this = f__arg_this
  f__result_string = s__MakeSetUnitMonsterType_mode[this]
  return true
end
function sa__MakeSetUnitTeleportPeriod_getPeriod()
  local this = f__arg_this
  f__result_real = s__MakeSetUnitTeleportPeriod_period[this]
  return true
end
function sa__MakeSetUnitTeleportPeriod_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeSetUnitTeleportPeriod_create()
  f__result_integer = s__MakeSetUnitTeleportPeriod_create(f__arg_unit1, f__arg_string1, f__arg_real1)
  return true
end
function sa__MakeSetUnitTeleportPeriod_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  RemoveUnit(s__MakeSetUnitTeleportPeriod_unitLastClic[this])
  s__MakeSetUnitTeleportPeriod_unitLastClic[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeSetUnitTeleportPeriod_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeSetUnitTeleportPeriod_lastX[this] = x
  s__MakeSetUnitTeleportPeriod_lastY[this] = l__y
  s__MakeSetUnitTeleportPeriod_lastLocIsSaved[this] = true
  s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this] = true
  if (s__MakeSetUnitTeleportPeriod_unitLastClic[this] == nil) then
    s__MakeSetUnitTeleportPeriod_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeSetUnitTeleportPeriod_unitLastClic[this], x)
    SetUnitY(s__MakeSetUnitTeleportPeriod_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeSetUnitTeleportPeriod_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeSetUnitTeleportPeriod_unsaveLoc(this)
  s__MakeSetUnitTeleportPeriod_lastLocIsSaved[this] = false
  return true
end
function sa__MakeSetUnitTeleportPeriod_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeSetUnitTeleportPeriod_unsaveLoc(this)
  return true
end
function sa__MakeSetUnitTeleportPeriod_redoLastAction()
  local this = f__arg_this
  if (s__MakeSetUnitTeleportPeriod_lastLocIsSaved[this] and not s__MakeSetUnitTeleportPeriod_lastLocSavedIsUsed[this]) then
    s__MakeSetUnitTeleportPeriod_saveLoc(this, s__MakeSetUnitTeleportPeriod_lastX[this], s__MakeSetUnitTeleportPeriod_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeSetUnitTeleportPeriod_getMode()
  local this = f__arg_this
  f__result_string = s__MakeSetUnitTeleportPeriod_mode[this]
  return true
end
function sa__MakeStart_create()
  f__result_integer = s__MakeStart_create(f__arg_unit1, f__arg_boolean1)
  return true
end
function sa__MakeStart_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeStart_unitLastClic[this])
  s__MakeStart_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeStart_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeStart_lastX[this] = x
  s__MakeStart_lastY[this] = l__y
  s__MakeStart_lastLocIsSaved[this] = true
  s__MakeStart_lastLocSavedIsUsed[this] = true
  if (s__MakeStart_unitLastClic[this] == nil) then
    s__MakeStart_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeStart_unitLastClic[this], x)
    SetUnitY(s__MakeStart_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeStart_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeStart_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeStart_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeStart_unsaveLoc(this)
  return true
end
function sa__MakeStart_redoLastAction()
  local this = f__arg_this
  if (not s__MakeStart_lastLocSavedIsUsed[this] and s__MakeStart_lastLocIsSaved[this]) then
    s__MakeStart_saveLoc(this, s__MakeStart_lastX[this], s__MakeStart_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeStart_forNext()
  local this = f__arg_this
  f__result_boolean = s__MakeStart_forNextB[this]
  return true
end
function sa__MakeTerrainCopyPaste_create()
  f__result_integer = s__MakeTerrainCopyPaste_create(f__arg_unit1)
  return true
end
function sa__MakeTerrainCopyPaste_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic1[this])
  s__MakeTerrainCopyPaste_unitLastClic1[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic2[this])
  s__MakeTerrainCopyPaste_unitLastClic2[this] = nil
  RemoveUnit(s__MakeTerrainCopyPaste_unitLastClic3[this])
  s__MakeTerrainCopyPaste_unitLastClic3[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeTerrainCopyPaste_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  local action = nil
  if (not s__MakeTerrainCopyPaste_isPoint1Used[this]) then
    s__MakeTerrainCopyPaste_unitLastClic1[this] = s__MakeTerrainCopyPaste_createUnitClic(this, s__MakeTerrainCopyPaste_unitLastClic1[this], x, l__y)
    s__MakeTerrainCopyPaste_x1[this] = x
    s__MakeTerrainCopyPaste_y1[this] = l__y
    s__MakeTerrainCopyPaste_isPoint1Saved[this] = true
    s__MakeTerrainCopyPaste_isPoint1Used[this] = true
    s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 2)
    s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 3)
  else
    if (not s__MakeTerrainCopyPaste_isPoint2Used[this]) then
      if (GetNbCaseBetween(s__MakeTerrainCopyPaste_x1[this], s__MakeTerrainCopyPaste_y1[this], x, l__y) > NB_MAX_TILES_MODIFIED) then
        Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("Too big zone !"))
        -- INLINED!!
        return true
      end
      s__MakeTerrainCopyPaste_unitLastClic2[this] = s__MakeTerrainCopyPaste_createUnitClic(this, s__MakeTerrainCopyPaste_unitLastClic2[this], x, l__y)
      s__MakeTerrainCopyPaste_x2[this] = x
      s__MakeTerrainCopyPaste_y2[this] = l__y
      s__MakeTerrainCopyPaste_isPoint2Saved[this] = true
      s__MakeTerrainCopyPaste_isPoint2Used[this] = true
      s__MakeTerrainCopyPaste_unsaveLocDefinitely(this, 3)
    else
      if (not s__MakeTerrainCopyPaste_isPoint3Used[this]) then
        s__MakeTerrainCopyPaste_unitLastClic3[this] = s__MakeTerrainCopyPaste_createUnitClic(this, s__MakeTerrainCopyPaste_unitLastClic3[this], x, l__y)
        s__MakeTerrainCopyPaste_x3[this] = x
        s__MakeTerrainCopyPaste_y3[this] = l__y
        s__MakeTerrainCopyPaste_isPoint3Saved[this] = true
        s__MakeTerrainCopyPaste_isPoint3Used[this] = true
      else
        action = s__MakeTerrainCopyPasteAction_create(s__MakeTerrainCopyPaste_x1[this], s__MakeTerrainCopyPaste_y1[this], s__MakeTerrainCopyPaste_x2[this], s__MakeTerrainCopyPaste_y2[this], s__MakeTerrainCopyPaste_x3[this], s__MakeTerrainCopyPaste_y3[this], x, l__y)
        if (action ~= 0) then
          s__MakeTerrainCopyPaste_unsaveLocsDefinitely(this)
          s__MakeLastActions_newAction(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))], (action))
          -- INLINED!!
        else
          Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("paste zone out of bounds"))
          -- INLINED!!
        end
      end
    end
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeTerrainCopyPaste_cancelLastAction()
  local this = f__arg_this
  if (s__MakeTerrainCopyPaste_isPoint3Used[this]) then
    s__MakeTerrainCopyPaste_unsaveLoc(this, 3)
    f__result_boolean = true
    return true
  else
    if (s__MakeTerrainCopyPaste_isPoint2Used[this]) then
      s__MakeTerrainCopyPaste_unsaveLoc(this, 2)
      f__result_boolean = true
      return true
    else
      if (s__MakeTerrainCopyPaste_isPoint1Used[this]) then
        s__MakeTerrainCopyPaste_unsaveLoc(this, 1)
        f__result_boolean = true
        return true
      end
    end
  end
  f__result_boolean = false
  return true
end
function sa__MakeTerrainCopyPaste_redoLastAction()
  local this = f__arg_this
  if (s__MakeTerrainCopyPaste_isPoint1Saved[this] and not s__MakeTerrainCopyPaste_isPoint1Used[this]) then
    s__MakeTerrainCopyPaste_saveLoc(this, s__MakeTerrainCopyPaste_x1[this], s__MakeTerrainCopyPaste_y1[this])
    f__result_boolean = true
    return true
  else
    if (s__MakeTerrainCopyPaste_isPoint2Saved[this] and not s__MakeTerrainCopyPaste_isPoint2Used[this]) then
      s__MakeTerrainCopyPaste_saveLoc(this, s__MakeTerrainCopyPaste_x2[this], s__MakeTerrainCopyPaste_y2[this])
      f__result_boolean = true
      return true
    else
      if (s__MakeTerrainCopyPaste_isPoint3Saved[this] and not s__MakeTerrainCopyPaste_isPoint3Used[this]) then
        s__MakeTerrainCopyPaste_saveLoc(this, s__MakeTerrainCopyPaste_x3[this], s__MakeTerrainCopyPaste_y3[this])
        f__result_boolean = true
        return true
      end
    end
  end
  f__result_boolean = false
  return true
end
function sa__MakeTerrainCreate_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeTerrainCreate_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeTerrainCreate_getTerrainType()
  local this = f__arg_this
  f__result_integer = s__MakeTerrainCreate_terrainType[this]
  return true
end
function sa__MakeTerrainCreate_create()
  f__result_integer = s__MakeTerrainCreate_create(f__arg_unit1, f__arg_integer1)
  return true
end
function sa__MakeTerrainCreate_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainCreate_unitLastClic[this])
  s__MakeTerrainCreate_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeTerrainCreate_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeTerrainCreate_lastX[this] = x
  s__MakeTerrainCreate_lastY[this] = l__y
  s__MakeTerrainCreate_lastLocIsSaved[this] = true
  s__MakeTerrainCreate_lastLocSavedIsUsed[this] = true
  if (s__MakeTerrainCreate_unitLastClic[this] == nil) then
    s__MakeTerrainCreate_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeTerrainCreate_unitLastClic[this], x)
    SetUnitY(s__MakeTerrainCreate_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeTerrainCreate_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeTerrainCreate_unsaveLoc(this)
  s__MakeTerrainCreate_lastLocIsSaved[this] = false
  return true
end
function sa__MakeTerrainCreate_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeTerrainCreate_unsaveLoc(this)
  return true
end
function sa__MakeTerrainCreate_redoLastAction()
  local this = f__arg_this
  if (s__MakeTerrainCreate_lastLocIsSaved[this] and not s__MakeTerrainCreate_lastLocSavedIsUsed[this]) then
    s__MakeTerrainCreate_saveLoc(this, s__MakeTerrainCreate_lastX[this], s__MakeTerrainCreate_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeTerrainHeight_create()
  f__result_integer = s__MakeTerrainHeight_create(f__arg_unit1, f__arg_real1, f__arg_real2)
  return true
end
function sa__MakeTerrainHeight_getRadius()
  local this = f__arg_this
  f__result_real = s__MakeTerrainHeight_radius[this]
  return true
end
function sa__MakeTerrainHeight_getHeight()
  local this = f__arg_this
  f__result_real = s__MakeTerrainHeight_height[this]
  return true
end
function sa__MakeTerrainHeight_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeTerrainHeight_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeTerrainHeight_redoLastAction()
  local this = f__arg_this
  f__result_boolean = false
  return true
end
function sa__MakeTerrainHorizontalSymmetry_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeTerrainHorizontalSymmetry_create()
  f__result_integer = s__MakeTerrainHorizontalSymmetry_create(f__arg_unit1)
  return true
end
function sa__MakeTerrainHorizontalSymmetry_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainHorizontalSymmetry_unitLastClic[this])
  s__MakeTerrainHorizontalSymmetry_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeTerrainHorizontalSymmetry_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeTerrainHorizontalSymmetry_lastX[this] = x
  s__MakeTerrainHorizontalSymmetry_lastY[this] = l__y
  s__MakeTerrainHorizontalSymmetry_lastLocIsSaved[this] = true
  s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this] = true
  if (s__MakeTerrainHorizontalSymmetry_unitLastClic[this] == nil) then
    s__MakeTerrainHorizontalSymmetry_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeTerrainHorizontalSymmetry_unitLastClic[this], x)
    SetUnitY(s__MakeTerrainHorizontalSymmetry_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeTerrainHorizontalSymmetry_unsaveLoc(this)
  s__MakeTerrainHorizontalSymmetry_lastLocIsSaved[this] = false
  return true
end
function sa__MakeTerrainHorizontalSymmetry_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeTerrainHorizontalSymmetry_unsaveLoc(this)
  return true
end
function sa__MakeTerrainHorizontalSymmetry_redoLastAction()
  local this = f__arg_this
  if (s__MakeTerrainHorizontalSymmetry_lastLocIsSaved[this] and not s__MakeTerrainHorizontalSymmetry_lastLocSavedIsUsed[this]) then
    s__MakeTerrainHorizontalSymmetry_saveLoc(this, s__MakeTerrainHorizontalSymmetry_lastX[this], s__MakeTerrainHorizontalSymmetry_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeTerrainVerticalSymmetry_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeTerrainVerticalSymmetry_create()
  f__result_integer = s__MakeTerrainVerticalSymmetry_create(f__arg_unit1)
  return true
end
function sa__MakeTerrainVerticalSymmetry_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeTerrainVerticalSymmetry_unitLastClic[this])
  s__MakeTerrainVerticalSymmetry_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeTerrainVerticalSymmetry_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeTerrainVerticalSymmetry_lastX[this] = x
  s__MakeTerrainVerticalSymmetry_lastY[this] = l__y
  s__MakeTerrainVerticalSymmetry_lastLocIsSaved[this] = true
  s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this] = true
  if (s__MakeTerrainVerticalSymmetry_unitLastClic[this] == nil) then
    s__MakeTerrainVerticalSymmetry_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeTerrainVerticalSymmetry_unitLastClic[this], x)
    SetUnitY(s__MakeTerrainVerticalSymmetry_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeTerrainVerticalSymmetry_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeTerrainVerticalSymmetry_unsaveLoc(this)
  s__MakeTerrainVerticalSymmetry_lastLocIsSaved[this] = false
  return true
end
function sa__MakeTerrainVerticalSymmetry_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeTerrainVerticalSymmetry_unsaveLoc(this)
  return true
end
function sa__MakeTerrainVerticalSymmetry_redoLastAction()
  local this = f__arg_this
  if (s__MakeTerrainVerticalSymmetry_lastLocIsSaved[this] and not s__MakeTerrainVerticalSymmetry_lastLocSavedIsUsed[this]) then
    s__MakeTerrainVerticalSymmetry_saveLoc(this, s__MakeTerrainVerticalSymmetry_lastX[this], s__MakeTerrainVerticalSymmetry_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MakeVisibilityModifier_create()
  f__result_integer = s__MakeVisibilityModifier_create(f__arg_unit1)
  return true
end
function sa__MakeVisibilityModifier_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  RemoveUnit(s__MakeVisibilityModifier_unitLastClic[this])
  s__MakeVisibilityModifier_unitLastClic[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeVisibilityModifier_saveLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  s__MakeVisibilityModifier_lastX[this] = x
  s__MakeVisibilityModifier_lastY[this] = l__y
  s__MakeVisibilityModifier_lastLocIsSaved[this] = true
  s__MakeVisibilityModifier_lastLocSavedIsUsed[this] = true
  if (s__MakeVisibilityModifier_unitLastClic[this] == nil) then
    s__MakeVisibilityModifier_unitLastClic[this] = CreateUnit(s__Make_makerOwner[this], MAKE_LAST_CLIC_UNIT_ID, x, l__y, GetRandomDirectionDeg())
  else
    SetUnitX(s__MakeVisibilityModifier_unitLastClic[this], x)
    SetUnitY(s__MakeVisibilityModifier_unitLastClic[this], l__y)
  end
  s__MakeLastActions_destroyCancelledActions(s__Escaper_makeLastActions[(Hero2Escaper(s__Make_maker[this]))])
  -- INLINED!!
  return true
end
function sa__MakeVisibilityModifier_unsaveLocDefinitely()
  local this = f__arg_this
  s__MakeVisibilityModifier_unsaveLoc(this)
  s__MakeVisibilityModifier_lastLocIsSaved[this] = false
  return true
end
function sa__MakeVisibilityModifier_isLastLocSavedUsed()
  local this = f__arg_this
  f__result_boolean = s__MakeVisibilityModifier_lastLocSavedIsUsed[this]
  return true
end
function sa__MakeVisibilityModifier_cancelLastAction()
  local this = f__arg_this
  f__result_boolean = s__MakeVisibilityModifier_unsaveLoc(this)
  return true
end
function sa__MakeVisibilityModifier_redoLastAction()
  local this = f__arg_this
  if (not s__MakeVisibilityModifier_lastLocSavedIsUsed[this] and s__MakeVisibilityModifier_lastLocIsSaved[this]) then
    s__MakeVisibilityModifier_saveLoc(this, s__MakeVisibilityModifier_lastX[this], s__MakeVisibilityModifier_lastY[this])
    f__result_boolean = true
    return true
  end
  f__result_boolean = false
  return true
end
function sa__MonsterMultiplePatrols_storeNewLoc()
  local x = f__arg_real1
  local l__y = f__arg_real2
  if (s__MonsterMultiplePatrols_staticLastLocInd >= s__MonsterMultiplePatrols_NB_MAX_LOC - 1) then
    f__result_boolean = false
    return true
  end
  s__MonsterMultiplePatrols_staticLastLocInd = s__MonsterMultiplePatrols_staticLastLocInd + 1
  s__s__MonsterMultiplePatrols_X[s__MonsterMultiplePatrols_staticLastLocInd] = x
  s__s__MonsterMultiplePatrols_Y[s__MonsterMultiplePatrols_staticLastLocInd] = l__y
  f__result_boolean = true
  return true
end
function sa__MonsterMultiplePatrols_destroyLocs()

  s__MonsterMultiplePatrols_staticLastLocInd = -1
  return true
end
function sa__MonsterMultiplePatrols_getId()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_id(this)
  return true
end
function sa__MonsterMultiplePatrols_getCurrentTrigger()
  local this = f__arg_this
  f__result_trigger = sg__MonsterMultiplePatrols_get_currentTrigger(this)
  return true
end
function sa__MonsterMultiplePatrols_removeUnit()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil) then
    GroupRemoveUnit(monstersClickable, sg__Monster_get_u(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
  end
  return true
end
function sa__MonsterMultiplePatrols_killUnit()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    KillUnit(sg__Monster_get_u(this))
  end
  return true
end
function sa__MonsterMultiplePatrols_onDestroy()
  local this = f__arg_this
  while true do
    if (not sc__MonsterMultiplePatrols_destroyLastLoc(this)) then
      break
    end
  end
  if (sg__Monster_get_u(this) ~= nil) then
    s__MonsterMultiplePatrols_removeUnit(this)
  end
  sc__MonsterMultiplePatrolsArray_setMonsterNull(s__Level_monstersMultiplePatrols[sg__Monster_get_level(this)], sg__Monster_get_arrayId(this))
  s__Monster_nbInstances = s__Monster_nbInstances - 1
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (sg__Monster_get_id(this)))
  -- INLINED!!
  f__arg_this = this
  return true
end
function sa__MonsterMultiplePatrols_nextMove()
  local this = f__arg_this
  s__MonsterMultiplePatrols_disableTrigger(this, sg__MonsterMultiplePatrols_get_currentMove(this))
  if (sg__MonsterMultiplePatrols_get_sens(this) == 0 or sg__MonsterMultiplePatrols_get_sens(this) == 1) then
    if (sg__MonsterMultiplePatrols_get_currentMove(this) >= sg__MonsterMultiplePatrols_get_lastLocInd(this)) then
      if (sg__MonsterMultiplePatrols_get_sens(this) == 0) then
        sg__MonsterMultiplePatrols_set_currentMove(this, 0)
      else
        sg__MonsterMultiplePatrols_set_sens(this, 2)
        sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      end
    else
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) + 1)
    end
  else
    --sens == 2
    if (sg__MonsterMultiplePatrols_get_currentMove(this) <= 0) then
      sg__MonsterMultiplePatrols_set_sens(this, 1)
      sg__MonsterMultiplePatrols_set_currentMove(this, 1)
    else
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
    end
  end
  s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
  return true
end
function sa__MonsterMultiplePatrols_createUnit()
  local this = f__arg_this
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Monster_get_disablingTimer(this)
  local previouslyEnabled = sg__Monster_get_u(this) ~= nil
  local isMonsterAlive = IsUnitAliveBJ(sg__Monster_get_u(this))
  if (previouslyEnabled) then
    s__MonsterMultiplePatrols_removeUnit(this)
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) <= 0) then
    return true
  end
  sg__Monster_set_u(this, NewPatrolMonster(sg__Monster_get_mt(this), sg__MonsterMultiplePatrols_get_x0(this), sg__MonsterMultiplePatrols_get_y0(this), sg__MonsterMultiplePatrols_get_x1(this), sg__MonsterMultiplePatrols_get_y1(this)))
  SetUnitUserData(sg__Monster_get_u(this), sg__Monster_get_id(this))
  sg__MonsterMultiplePatrols_set_currentMove(this, 1)
  if (sg__MonsterMultiplePatrols_get_sens(this) == 2) then
    sg__MonsterMultiplePatrols_set_sens(this, 1)
  end
  EnableTrigger(sg__MonsterMultiplePatrols_get_t1(this))
  sg__MonsterMultiplePatrols_set_currentTrigger(this, sg__MonsterMultiplePatrols_get_t1(this))
  if ((s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
    -- INLINED!!
    sg__Monster_set_life(this, (s__MonsterType_maxLife[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    GroupAddUnit(monstersClickable, sg__Monster_get_u(this))
  end
  if (previouslyEnabled) then
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__MonsterMultiplePatrols_temporarilyDisable(this, disablingTimer)
    end
    if (not isMonsterAlive) then
      s__MonsterMultiplePatrols_killUnit(this)
    end
    if (sg__Monster_get_baseColorId(this) ~= -1) then
      if (sg__Monster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(sg__Monster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
  return true
end
function sa__MonsterMultiplePatrols_getLife()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_life(this)
  return true
end
function sa__MonsterMultiplePatrols_setLife()
  local this = f__arg_this
  local life = f__arg_integer1
  sg__Monster_set_life(this, life)
  if (life > 0) then
    SetUnitLifeBJ(sg__Monster_get_u(this), I2R(life) - 0.5)
  else
    s__MonsterMultiplePatrols_killUnit(this)
  end
  return true
end
function sa__MonsterMultiplePatrols_destroyLastLoc()
  local this = f__arg_this
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 1) then
    DisableTrigger(sg__MonsterMultiplePatrols_get_t0(this))
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t1(this))
    sg__MonsterMultiplePatrols_set_t1(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r1(this))
    sg__MonsterMultiplePatrols_set_r1(this, nil)
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 0) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t0(this))
    sg__MonsterMultiplePatrols_set_t0(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r0(this))
    sg__MonsterMultiplePatrols_set_r0(this, nil)
    if (0 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 2) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t2(this))
    sg__MonsterMultiplePatrols_set_t2(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r2(this))
    sg__MonsterMultiplePatrols_set_r2(this, nil)
    if (2 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 3) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t3(this))
    sg__MonsterMultiplePatrols_set_t3(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r3(this))
    sg__MonsterMultiplePatrols_set_r3(this, nil)
    if (3 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 4) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t4(this))
    sg__MonsterMultiplePatrols_set_t4(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r4(this))
    sg__MonsterMultiplePatrols_set_r4(this, nil)
    if (4 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 5) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t5(this))
    sg__MonsterMultiplePatrols_set_t5(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r5(this))
    sg__MonsterMultiplePatrols_set_r5(this, nil)
    if (5 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 6) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t6(this))
    sg__MonsterMultiplePatrols_set_t6(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r6(this))
    sg__MonsterMultiplePatrols_set_r6(this, nil)
    if (6 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 7) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t7(this))
    sg__MonsterMultiplePatrols_set_t7(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r7(this))
    sg__MonsterMultiplePatrols_set_r7(this, nil)
    if (7 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 8) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t8(this))
    sg__MonsterMultiplePatrols_set_t8(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r8(this))
    sg__MonsterMultiplePatrols_set_r8(this, nil)
    if (8 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 9) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t9(this))
    sg__MonsterMultiplePatrols_set_t9(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r9(this))
    sg__MonsterMultiplePatrols_set_r9(this, nil)
    if (9 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 10) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t10(this))
    sg__MonsterMultiplePatrols_set_t10(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r10(this))
    sg__MonsterMultiplePatrols_set_r10(this, nil)
    if (10 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 11) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t11(this))
    sg__MonsterMultiplePatrols_set_t11(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r11(this))
    sg__MonsterMultiplePatrols_set_r11(this, nil)
    if (11 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 12) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t12(this))
    sg__MonsterMultiplePatrols_set_t12(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r12(this))
    sg__MonsterMultiplePatrols_set_r12(this, nil)
    if (12 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 13) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t13(this))
    sg__MonsterMultiplePatrols_set_t13(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r13(this))
    sg__MonsterMultiplePatrols_set_r13(this, nil)
    if (13 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 14) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t14(this))
    sg__MonsterMultiplePatrols_set_t14(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r14(this))
    sg__MonsterMultiplePatrols_set_r14(this, nil)
    if (14 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 15) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t15(this))
    sg__MonsterMultiplePatrols_set_t15(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r15(this))
    sg__MonsterMultiplePatrols_set_r15(this, nil)
    if (15 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 16) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t16(this))
    sg__MonsterMultiplePatrols_set_t16(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r16(this))
    sg__MonsterMultiplePatrols_set_r16(this, nil)
    if (16 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 17) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t17(this))
    sg__MonsterMultiplePatrols_set_t17(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r17(this))
    sg__MonsterMultiplePatrols_set_r17(this, nil)
    if (17 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 18) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t18(this))
    sg__MonsterMultiplePatrols_set_t18(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r18(this))
    sg__MonsterMultiplePatrols_set_r18(this, nil)
    if (18 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 19) then
    DestroyTrigger(sg__MonsterMultiplePatrols_get_t19(this))
    sg__MonsterMultiplePatrols_set_t19(this, nil)
    RemoveRegion(sg__MonsterMultiplePatrols_get_r19(this))
    sg__MonsterMultiplePatrols_set_r19(this, nil)
    if (19 == sg__MonsterMultiplePatrols_get_currentMove(this)) then
      sg__MonsterMultiplePatrols_set_currentMove(this, sg__MonsterMultiplePatrols_get_currentMove(this) - 1)
      s__MonsterMultiplePatrols_activateMove(this, sg__MonsterMultiplePatrols_get_currentMove(this))
    end
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 0) then
    f__result_boolean = false
    return true
  end
  sg__MonsterMultiplePatrols_set_lastLocInd(this, sg__MonsterMultiplePatrols_get_lastLocInd(this) - 1)
  f__result_boolean = true
  return true
end
function sa__MonsterMultiplePatrols_addNewLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) >= s__MonsterMultiplePatrols_NB_MAX_LOC - 1) then
    --nombre limite de points atteint
    f__result_integer = 3
    --erreur 3
    return true
  end
  if (GetLocDist(s__MonsterMultiplePatrols_getX(this, sg__MonsterMultiplePatrols_get_lastLocInd(this)), s__MonsterMultiplePatrols_getY(this, sg__MonsterMultiplePatrols_get_lastLocInd(this)), x, l__y) <= PATROL_DISTANCE_MIN) then
    f__result_integer = 2
    --erreur 2
    return true
  end
  if (sg__MonsterMultiplePatrols_get_sens(this) == 0 and GetLocDist(sg__MonsterMultiplePatrols_get_x0(this), sg__MonsterMultiplePatrols_get_y0(this), x, l__y) <= PATROL_DISTANCE_MIN) then
    f__result_integer = 1
    --erreur 1
    return true
  end
  sg__MonsterMultiplePatrols_set_lastLocInd(this, sg__MonsterMultiplePatrols_get_lastLocInd(this) + 1)
  s__MonsterMultiplePatrols_addNewLocAt(this, sg__MonsterMultiplePatrols_get_lastLocInd(this), x, l__y)
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) == 1) then
    s__MonsterMultiplePatrols_createUnit(this)
  end
  f__result_integer = 0
  --c'est bon, pas d'erreur
  return true
end
function sa__MonsterMultiplePatrols_getMonsterType()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_mt(this)
  return true
end
function sa__MonsterMultiplePatrols_setMonsterType()
  local this = f__arg_this
  local mt = f__arg_integer1
  if (mt == 0 or mt == sg__Monster_get_mt(this)) then
    f__result_boolean = false
    return true
  end
  sg__Monster_set_mt(this, mt)
  s__MonsterMultiplePatrols_createUnit(this)
  f__result_boolean = true
  return true
end
function sa__MonsterMultiplePatrols_temporarilyDisable()
  s__MonsterMultiplePatrols_temporarilyDisable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterMultiplePatrols_temporarilyEnable()
  s__MonsterMultiplePatrols_temporarilyEnable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterMultiplePatrols_setBaseColor()
  local this = f__arg_this
  local colorString = f__arg_string1
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return true
    end
    sg__Monster_set_baseColorId(this, baseColorId)
    if (sg__Monster_get_u(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
  return true
end
function sa__MonsterMultiplePatrols_setVertexColor()
  local this = f__arg_this
  local vcRed = f__arg_real1
  local vcGreen = f__arg_real2
  local vcBlue = f__arg_real3
  sg__Monster_set_vcRed(this, vcRed)
  sg__Monster_set_vcGreen(this, vcGreen)
  sg__Monster_set_vcBlue(this, vcBlue)
  if (sg__Monster_get_u(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Monster_get_u(this), vcRed, vcGreen, vcBlue, sg__Monster_get_vcTransparency(this))
  end
  return true
end
function sa__MonsterMultiplePatrols_reinitColor()
  local this = f__arg_this
  local initBaseColorId = nil
  sg__Monster_set_baseColorId(this, -1)
  sg__Monster_set_vcRed(this, 100)
  sg__Monster_set_vcGreen(this, 100)
  sg__Monster_set_vcBlue(this, 100)
  sg__Monster_set_vcTransparency(this, 0)
  if (sg__Monster_get_u(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Monster_get_u(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  return true
end
function sa__MonsterMultiplePatrols_toString()
  local this = f__arg_this
  local str = nil
  if (s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= nil and s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= "") then
    str = s__MonsterType_theAlias[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__MonsterType_label[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Monster_get_id(this)) .. CACHE_SEPARATEUR_PARAM
  if (sg__MonsterMultiplePatrols_get_sens(this) > 0) then
    str = str .. "string"
  else
    str = str .. "normal"
  end
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 0) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x0(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y0(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 1) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x1(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y1(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 2) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x2(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y2(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 3) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x3(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y3(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 4) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x4(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y4(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 5) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x5(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y5(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 6) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x6(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y6(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 7) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x7(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y7(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 8) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x8(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y8(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 9) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x9(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y9(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 10) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x10(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y10(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 11) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x11(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y11(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 12) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x12(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y12(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 13) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x13(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y13(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 14) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x14(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y14(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 15) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x15(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y15(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 16) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x16(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y16(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 17) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x17(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y17(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 18) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x18(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y18(this)))
  if (sg__MonsterMultiplePatrols_get_lastLocInd(this) < 19) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_x19(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterMultiplePatrols_get_y19(this)))
  f__result_string = str
  return true
end
function sa__MonsterNoMove_getId()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_id(this)
  return true
end
function sa__MonsterNoMove_removeUnit()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil) then
    GroupRemoveUnit(monstersClickable, sg__Monster_get_u(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
    sg__Monster_set_disablingTimer(this, nil)
  end
  return true
end
function sa__MonsterNoMove_killUnit()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    KillUnit(sg__Monster_get_u(this))
  end
  return true
end
function sa__MonsterNoMove_onDestroy()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil) then
    s__MonsterNoMove_removeUnit(this)
  end
  sc__MonsterNoMoveArray_setMonsterNull(s__Level_monstersNoMove[sg__Monster_get_level(this)], sg__Monster_get_arrayId(this))
  s__Monster_nbInstances = s__Monster_nbInstances - 1
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (sg__Monster_get_id(this)))
  -- INLINED!!
  f__arg_this = this
  return true
end
function sa__MonsterNoMove_createUnit()
  local this = f__arg_this
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Monster_get_disablingTimer(this)
  local previouslyEnabled = sg__Monster_get_u(this) ~= nil
  local isMonsterAlive = IsUnitAliveBJ(sg__Monster_get_u(this))
  if (previouslyEnabled) then
    s__MonsterNoMove_removeUnit(this)
  end
  sg__Monster_set_u(this, NewImmobileMonster(sg__Monster_get_mt(this), sg__MonsterNoMove_get_x(this), sg__MonsterNoMove_get_y(this), sg__MonsterNoMove_get_angle(this)))
  SetUnitUserData(sg__Monster_get_u(this), sg__Monster_get_id(this))
  if ((s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
    -- INLINED!!
    sg__Monster_set_life(this, (s__MonsterType_maxLife[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    GroupAddUnit(monstersClickable, sg__Monster_get_u(this))
  end
  if (previouslyEnabled) then
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__MonsterNoMove_temporarilyDisable(this, disablingTimer)
    end
    if (not isMonsterAlive) then
      s__MonsterNoMove_killUnit(this)
    end
    if (sg__Monster_get_baseColorId(this) ~= -1) then
      if (sg__Monster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(sg__Monster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
  return true
end
function sa__MonsterNoMove_getLife()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_life(this)
  return true
end
function sa__MonsterNoMove_setLife()
  local this = f__arg_this
  local life = f__arg_integer1
  sg__Monster_set_life(this, life)
  if (life > 0) then
    SetUnitLifeBJ(sg__Monster_get_u(this), I2R(life) - 0.5)
  else
    s__MonsterNoMove_killUnit(this)
  end
  return true
end
function sa__MonsterNoMove_getMonsterType()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_mt(this)
  return true
end
function sa__MonsterNoMove_setMonsterType()
  local this = f__arg_this
  local mt = f__arg_integer1
  if (mt == 0 or mt == sg__Monster_get_mt(this)) then
    f__result_boolean = false
    return true
  end
  sg__Monster_set_mt(this, mt)
  s__MonsterNoMove_createUnit(this)
  f__result_boolean = true
  return true
end
function sa__MonsterNoMove_toString()
  local this = f__arg_this
  local str = nil
  if (s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= nil and s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= "") then
    str = s__MonsterType_theAlias[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__MonsterType_label[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Monster_get_id(this)) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterNoMove_get_x(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterNoMove_get_y(this)))
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterNoMove_get_angle(this)))
  f__result_string = str
  return true
end
function sa__MonsterNoMove_temporarilyDisable()
  s__MonsterNoMove_temporarilyDisable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterNoMove_temporarilyEnable()
  s__MonsterNoMove_temporarilyEnable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterNoMove_setBaseColor()
  local this = f__arg_this
  local colorString = f__arg_string1
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return true
    end
    sg__Monster_set_baseColorId(this, baseColorId)
    if (sg__Monster_get_u(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
  return true
end
function sa__MonsterNoMove_setVertexColor()
  local this = f__arg_this
  local vcRed = f__arg_real1
  local vcGreen = f__arg_real2
  local vcBlue = f__arg_real3
  sg__Monster_set_vcRed(this, vcRed)
  sg__Monster_set_vcGreen(this, vcGreen)
  sg__Monster_set_vcBlue(this, vcBlue)
  if (sg__Monster_get_u(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Monster_get_u(this), vcRed, vcGreen, vcBlue, sg__Monster_get_vcTransparency(this))
  end
  return true
end
function sa__MonsterNoMove_reinitColor()
  local this = f__arg_this
  local initBaseColorId = nil
  sg__Monster_set_baseColorId(this, -1)
  sg__Monster_set_vcRed(this, 100)
  sg__Monster_set_vcGreen(this, 100)
  sg__Monster_set_vcBlue(this, 100)
  sg__Monster_set_vcTransparency(this, 0)
  if (sg__Monster_get_u(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Monster_get_u(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  return true
end
function sa__MonsterSimplePatrol_getId()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_id(this)
  return true
end
function sa__MonsterSimplePatrol_removeUnit()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil) then
    GroupRemoveUnit(monstersClickable, sg__Monster_get_u(this))
    GroupRemoveUnit(MonsterSimplePatrol__simplePatrolMobs, sg__Monster_get_u(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
  end
  return true
end
function sa__MonsterSimplePatrol_killUnit()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    GroupRemoveUnit(MonsterSimplePatrol__simplePatrolMobs, sg__Monster_get_u(this))
    KillUnit(sg__Monster_get_u(this))
  end
  return true
end
function sa__MonsterSimplePatrol_onDestroy()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil) then
    s__MonsterSimplePatrol_removeUnit(this)
  end
  sc__MonsterSimplePatrolArray_setMonsterNull(s__Level_monstersSimplePatrol[sg__Monster_get_level(this)], sg__Monster_get_arrayId(this))
  s__Monster_nbInstances = s__Monster_nbInstances - 1
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (sg__Monster_get_id(this)))
  -- INLINED!!
  f__arg_this = this
  return true
end
function sa__MonsterSimplePatrol_createUnit()
  local this = f__arg_this
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Monster_get_disablingTimer(this)
  local previouslyEnabled = sg__Monster_get_u(this) ~= nil
  local isMonsterAlive = IsUnitAliveBJ(sg__Monster_get_u(this))
  if (previouslyEnabled) then
    s__MonsterSimplePatrol_removeUnit(this)
  end
  sg__Monster_set_u(this, NewPatrolMonster(sg__Monster_get_mt(this), sg__MonsterSimplePatrol_get_x1(this), sg__MonsterSimplePatrol_get_y1(this), sg__MonsterSimplePatrol_get_x2(this), sg__MonsterSimplePatrol_get_y2(this)))
  SetUnitUserData(sg__Monster_get_u(this), sg__Monster_get_id(this))
  GroupAddUnit(MonsterSimplePatrol__simplePatrolMobs, sg__Monster_get_u(this))
  if ((s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
    -- INLINED!!
    sg__Monster_set_life(this, (s__MonsterType_maxLife[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    GroupAddUnit(monstersClickable, sg__Monster_get_u(this))
  end
  if (previouslyEnabled) then
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__MonsterSimplePatrol_temporarilyDisable(this, disablingTimer)
    end
    if (not isMonsterAlive) then
      s__MonsterSimplePatrol_killUnit(this)
    end
    if (sg__Monster_get_baseColorId(this) ~= -1) then
      if (sg__Monster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(sg__Monster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
  return true
end
function sa__MonsterSimplePatrol_getLife()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_life(this)
  return true
end
function sa__MonsterSimplePatrol_setLife()
  local this = f__arg_this
  local life = f__arg_integer1
  sg__Monster_set_life(this, life)
  if (life > 0) then
    SetUnitLifeBJ(sg__Monster_get_u(this), I2R(life) - 0.5)
  else
    s__MonsterSimplePatrol_killUnit(this)
  end
  return true
end
function sa__MonsterSimplePatrol_getMonsterType()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_mt(this)
  return true
end
function sa__MonsterSimplePatrol_setMonsterType()
  local this = f__arg_this
  local mt = f__arg_integer1
  if (mt == 0 or mt == sg__Monster_get_mt(this)) then
    f__result_boolean = false
    return true
  end
  sg__Monster_set_mt(this, mt)
  s__MonsterSimplePatrol_createUnit(this)
  f__result_boolean = true
  return true
end
function sa__MonsterSimplePatrol_temporarilyDisable()
  s__MonsterSimplePatrol_temporarilyDisable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterSimplePatrol_temporarilyEnable()
  s__MonsterSimplePatrol_temporarilyEnable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterSimplePatrol_setBaseColor()
  local this = f__arg_this
  local colorString = f__arg_string1
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return true
    end
    sg__Monster_set_baseColorId(this, baseColorId)
    if (sg__Monster_get_u(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
  return true
end
function sa__MonsterSimplePatrol_setVertexColor()
  local this = f__arg_this
  local vcRed = f__arg_real1
  local vcGreen = f__arg_real2
  local vcBlue = f__arg_real3
  sg__Monster_set_vcRed(this, vcRed)
  sg__Monster_set_vcGreen(this, vcGreen)
  sg__Monster_set_vcBlue(this, vcBlue)
  if (sg__Monster_get_u(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Monster_get_u(this), vcRed, vcGreen, vcBlue, sg__Monster_get_vcTransparency(this))
  end
  return true
end
function sa__MonsterSimplePatrol_reinitColor()
  local this = f__arg_this
  local initBaseColorId = nil
  sg__Monster_set_baseColorId(this, -1)
  sg__Monster_set_vcRed(this, 100)
  sg__Monster_set_vcGreen(this, 100)
  sg__Monster_set_vcBlue(this, 100)
  sg__Monster_set_vcTransparency(this, 0)
  if (sg__Monster_get_u(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Monster_get_u(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  return true
end
function sa__MonsterSimplePatrol_toString()
  local this = f__arg_this
  local str = nil
  if (s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= nil and s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= "") then
    str = s__MonsterType_theAlias[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__MonsterType_label[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Monster_get_id(this)) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterSimplePatrol_get_x1(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterSimplePatrol_get_y1(this))) .. CACHE_SEPARATEUR_PARAM
  str = str .. I2S(R2I(sg__MonsterSimplePatrol_get_x2(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterSimplePatrol_get_y2(this)))
  f__result_string = str
  return true
end
function sa__MonsterTeleport_storeNewLoc()
  local x = f__arg_real1
  local l__y = f__arg_real2
  if (s__MonsterTeleport_staticLastLocInd >= s__MonsterTeleport_NB_MAX_LOC - 1) then
    f__result_boolean = false
    return true
  end
  s__MonsterTeleport_staticLastLocInd = s__MonsterTeleport_staticLastLocInd + 1
  s__s__MonsterTeleport_X[s__MonsterTeleport_staticLastLocInd] = x
  s__s__MonsterTeleport_Y[s__MonsterTeleport_staticLastLocInd] = l__y
  f__result_boolean = true
  return true
end
function sa__MonsterTeleport_destroyLocs()

  s__MonsterTeleport_staticLastLocInd = -1
  return true
end
function sa__MonsterTeleport_getId()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_id(this)
  return true
end
function sa__MonsterTeleport_removeUnit()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil) then
    GroupRemoveUnit(monstersClickable, sg__Monster_get_u(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
    PauseTimer(sg__MonsterTeleport_get_t(this))
  end
  return true
end
function sa__MonsterTeleport_killUnit()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    KillUnit(sg__Monster_get_u(this))
    PauseTimer(sg__MonsterTeleport_get_t(this))
  end
  return true
end
function sa__MonsterTeleport_onDestroy()
  local this = f__arg_this
  if (sg__Monster_get_u(this) ~= nil) then
    s__MonsterTeleport_removeUnit(this)
  end
  sc__MonsterTeleportArray_setMonsterNull(s__Level_monstersTeleport[sg__Monster_get_level(this)], sg__Monster_get_arrayId(this))
  s__Monster_nbInstances = s__Monster_nbInstances - 1
  RemoveSavedInteger(MonsterTeleport_monsterTeleportHashtable, 0, GetHandleId(sg__MonsterTeleport_get_t(this)))
  DestroyTimer(sg__MonsterTeleport_get_t(this))
  sg__MonsterTeleport_set_t(this, nil)
  if ((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))) ~= 0) then
    -- INLINED!!
    s__ClearMob_deallocate((LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this)))))
    -- INLINED!!
  end
  RemoveSavedInteger(MonsterInterface__htMonsterId2MonsterHandleId, MonsterInterface__MONSTER, (sg__Monster_get_id(this)))
  -- INLINED!!
  f__arg_this = this
  return true
end
function sa__MonsterTeleport_setPeriod()
  local this = f__arg_this
  local period = f__arg_real1
  if (period < MONSTER_TELEPORT_PERIOD_MIN or period > MONSTER_TELEPORT_PERIOD_MAX) then
    f__result_boolean = false
    return true
  end
  sg__MonsterTeleport_set_period(this, period)
  if (sg__Monster_get_u(this) ~= nil and IsUnitAliveBJ(sg__Monster_get_u(this))) then
    TimerStart(sg__MonsterTeleport_get_t(this), sg__MonsterTeleport_get_period(this), true, MonsterTeleport_move_Actions)
  end
  f__result_boolean = true
  return true
end
function sa__MonsterTeleport_getPeriod()
  local this = f__arg_this
  f__result_real = sg__MonsterTeleport_get_period(this)
  return true
end
function sa__MonsterTeleport_createUnit()
  local this = f__arg_this
  local clearMob = (LoadInteger(ClearMob__htClearMob, 0, (sg__Monster_get_id(this))))
  -- INLINED!!
  local disablingTimer = sg__Monster_get_disablingTimer(this)
  local previouslyEnabled = sg__Monster_get_u(this) ~= nil
  local isMonsterAlive = IsUnitAliveBJ(sg__Monster_get_u(this))
  if (previouslyEnabled) then
    s__MonsterTeleport_removeUnit(this)
  end
  if (sg__MonsterTeleport_get_lastLocInd(this) <= 0) then
    return true
  end
  sg__Monster_set_u(this, NewImmobileMonster(sg__Monster_get_mt(this), sg__MonsterTeleport_get_x0(this), sg__MonsterTeleport_get_y0(this), sg__MonsterTeleport_get_angle(this)))
  SetUnitUserData(sg__Monster_get_u(this), sg__Monster_get_id(this))
  sg__MonsterTeleport_set_currentLoc(this, 0)
  if (sg__MonsterTeleport_get_sens(this) == 2) then
    sg__MonsterTeleport_set_sens(this, 1)
  end
  TimerStart(sg__MonsterTeleport_get_t(this), sg__MonsterTeleport_get_period(this), true, MonsterTeleport_move_Actions)
  if ((s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
    -- INLINED!!
    sg__Monster_set_life(this, (s__MonsterType_maxLife[(sg__Monster_get_mt(this))]))
    -- INLINED!!
    GroupAddUnit(monstersClickable, sg__Monster_get_u(this))
  end
  if (previouslyEnabled) then
    if (disablingTimer ~= nil and TimerGetRemaining(disablingTimer) > 0) then
      sc__MonsterTeleport_temporarilyDisable(this, disablingTimer)
    end
    if (not isMonsterAlive) then
      s__MonsterTeleport_killUnit(this)
    end
    if (sg__Monster_get_baseColorId(this) ~= -1) then
      if (sg__Monster_get_baseColorId(this) == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(sg__Monster_get_baseColorId(this)))
      end
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  if (clearMob ~= 0) then
    s__ClearMob_redoTriggerMobPermanentEffect(clearMob)
  end
  disablingTimer = nil
  return true
end
function sa__MonsterTeleport_nextMove()
  local this = f__arg_this
  local x = nil
  local l__y = nil
  if (sg__MonsterTeleport_get_sens(this) == 0 or sg__MonsterTeleport_get_sens(this) == 1) then
    if (sg__MonsterTeleport_get_currentLoc(this) >= sg__MonsterTeleport_get_lastLocInd(this)) then
      if (sg__MonsterTeleport_get_sens(this) == 0) then
        sg__MonsterTeleport_set_currentLoc(this, 0)
      else
        sg__MonsterTeleport_set_sens(this, 2)
        sg__MonsterTeleport_set_currentLoc(this, sg__MonsterTeleport_get_currentLoc(this) - 1)
      end
    else
      sg__MonsterTeleport_set_currentLoc(this, sg__MonsterTeleport_get_currentLoc(this) + 1)
    end
  else
    --sens == 2
    if (sg__MonsterTeleport_get_currentLoc(this) <= 0) then
      sg__MonsterTeleport_set_sens(this, 1)
      sg__MonsterTeleport_set_currentLoc(this, 1)
    else
      sg__MonsterTeleport_set_currentLoc(this, sg__MonsterTeleport_get_currentLoc(this) - 1)
    end
  end
  x = sc__MonsterTeleport_getX(this, sg__MonsterTeleport_get_currentLoc(this))
  l__y = sc__MonsterTeleport_getY(this, sg__MonsterTeleport_get_currentLoc(this))
  if (x == HIDE and l__y == HIDE) then
    ShowUnit(sg__Monster_get_u(this), false)
  elseif (x ~= WAIT or l__y ~= WAIT) then
    if (IsUnitHidden(sg__Monster_get_u(this))) then
      ShowUnit(sg__Monster_get_u(this), true)
      if (not (s__MonsterType_isClickableB[(sg__Monster_get_mt(this))])) then
        -- INLINED!!
        UnitRemoveAbility(sg__Monster_get_u(this), 1097625443)
        UnitAddAbility(sg__Monster_get_u(this), 1097625443)
      end
    end
    SetUnitX(sg__Monster_get_u(this), x)
    SetUnitY(sg__Monster_get_u(this), l__y)
  end
  --cas autre : wait, on ne fait rien
  return true
end
function sa__MonsterTeleport_getLife()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_life(this)
  return true
end
function sa__MonsterTeleport_setLife()
  local this = f__arg_this
  local life = f__arg_integer1
  sg__Monster_set_life(this, life)
  if (life > 0) then
    SetUnitLifeBJ(sg__Monster_get_u(this), I2R(life) - 0.5)
  else
    s__MonsterTeleport_killUnit(this)
  end
  return true
end
function sa__MonsterTeleport_getX()
  local this = f__arg_this
  local id = f__arg_integer1
  if (id == 0) then
    f__result_real = sg__MonsterTeleport_get_x0(this)
    return true
  end
  if (id == 1) then
    f__result_real = sg__MonsterTeleport_get_x1(this)
    return true
  end
  if (id == 2) then
    f__result_real = sg__MonsterTeleport_get_x2(this)
    return true
  end
  if (id == 3) then
    f__result_real = sg__MonsterTeleport_get_x3(this)
    return true
  end
  if (id == 4) then
    f__result_real = sg__MonsterTeleport_get_x4(this)
    return true
  end
  if (id == 5) then
    f__result_real = sg__MonsterTeleport_get_x5(this)
    return true
  end
  if (id == 6) then
    f__result_real = sg__MonsterTeleport_get_x6(this)
    return true
  end
  if (id == 7) then
    f__result_real = sg__MonsterTeleport_get_x7(this)
    return true
  end
  if (id == 8) then
    f__result_real = sg__MonsterTeleport_get_x8(this)
    return true
  end
  if (id == 9) then
    f__result_real = sg__MonsterTeleport_get_x9(this)
    return true
  end
  if (id == 10) then
    f__result_real = sg__MonsterTeleport_get_x10(this)
    return true
  end
  if (id == 11) then
    f__result_real = sg__MonsterTeleport_get_x11(this)
    return true
  end
  if (id == 12) then
    f__result_real = sg__MonsterTeleport_get_x12(this)
    return true
  end
  if (id == 13) then
    f__result_real = sg__MonsterTeleport_get_x13(this)
    return true
  end
  if (id == 14) then
    f__result_real = sg__MonsterTeleport_get_x14(this)
    return true
  end
  if (id == 15) then
    f__result_real = sg__MonsterTeleport_get_x15(this)
    return true
  end
  if (id == 16) then
    f__result_real = sg__MonsterTeleport_get_x16(this)
    return true
  end
  if (id == 17) then
    f__result_real = sg__MonsterTeleport_get_x17(this)
    return true
  end
  if (id == 18) then
    f__result_real = sg__MonsterTeleport_get_x18(this)
    return true
  end
  if (id == 19) then
    f__result_real = sg__MonsterTeleport_get_x19(this)
    return true
  end
  f__result_real = 0
  return true
end
function sa__MonsterTeleport_getY()
  local this = f__arg_this
  local id = f__arg_integer1
  if (id == 0) then
    f__result_real = sg__MonsterTeleport_get_y0(this)
    return true
  end
  if (id == 1) then
    f__result_real = sg__MonsterTeleport_get_y1(this)
    return true
  end
  if (id == 2) then
    f__result_real = sg__MonsterTeleport_get_y2(this)
    return true
  end
  if (id == 3) then
    f__result_real = sg__MonsterTeleport_get_y3(this)
    return true
  end
  if (id == 4) then
    f__result_real = sg__MonsterTeleport_get_y4(this)
    return true
  end
  if (id == 5) then
    f__result_real = sg__MonsterTeleport_get_y5(this)
    return true
  end
  if (id == 6) then
    f__result_real = sg__MonsterTeleport_get_y6(this)
    return true
  end
  if (id == 7) then
    f__result_real = sg__MonsterTeleport_get_y7(this)
    return true
  end
  if (id == 8) then
    f__result_real = sg__MonsterTeleport_get_y8(this)
    return true
  end
  if (id == 9) then
    f__result_real = sg__MonsterTeleport_get_y9(this)
    return true
  end
  if (id == 10) then
    f__result_real = sg__MonsterTeleport_get_y10(this)
    return true
  end
  if (id == 11) then
    f__result_real = sg__MonsterTeleport_get_y11(this)
    return true
  end
  if (id == 12) then
    f__result_real = sg__MonsterTeleport_get_y12(this)
    return true
  end
  if (id == 13) then
    f__result_real = sg__MonsterTeleport_get_y13(this)
    return true
  end
  if (id == 14) then
    f__result_real = sg__MonsterTeleport_get_y14(this)
    return true
  end
  if (id == 15) then
    f__result_real = sg__MonsterTeleport_get_y15(this)
    return true
  end
  if (id == 16) then
    f__result_real = sg__MonsterTeleport_get_y16(this)
    return true
  end
  if (id == 17) then
    f__result_real = sg__MonsterTeleport_get_y17(this)
    return true
  end
  if (id == 18) then
    f__result_real = sg__MonsterTeleport_get_y18(this)
    return true
  end
  if (id == 19) then
    f__result_real = sg__MonsterTeleport_get_y19(this)
    return true
  end
  f__result_real = 0
  return true
end
function sa__MonsterTeleport_addNewLoc()
  local this = f__arg_this
  local x = f__arg_real1
  local l__y = f__arg_real2
  if (sg__MonsterTeleport_get_lastLocInd(this) >= s__MonsterTeleport_NB_MAX_LOC - 1) then
    --nombre limite de points atteint
    f__result_boolean = false
    --erreur
    return true
  end
  sg__MonsterTeleport_set_lastLocInd(this, sg__MonsterTeleport_get_lastLocInd(this) + 1)
  s__MonsterTeleport_addNewLocAt(this, sg__MonsterTeleport_get_lastLocInd(this), x, l__y)
  if (sg__MonsterTeleport_get_lastLocInd(this) == 1) then
    s__MonsterTeleport_createUnit(this)
  end
  f__result_boolean = true
  --c'est bon, pas d'erreur
  return true
end
function sa__MonsterTeleport_destroyLastLoc()
  local this = f__arg_this
  if (sg__MonsterTeleport_get_lastLocInd(this) == 1) then
    PauseTimer(sg__MonsterTeleport_get_t(this))
    RemoveUnit(sg__Monster_get_u(this))
    sg__Monster_set_u(this, nil)
  end
  if (sg__MonsterTeleport_get_lastLocInd(this) < 0) then
    f__result_boolean = false
    return true
  end
  sg__MonsterTeleport_set_lastLocInd(this, sg__MonsterTeleport_get_lastLocInd(this) - 1)
  f__result_boolean = true
  return true
end
function sa__MonsterTeleport_getMonsterType()
  local this = f__arg_this
  f__result_integer = sg__Monster_get_mt(this)
  return true
end
function sa__MonsterTeleport_setMonsterType()
  local this = f__arg_this
  local mt = f__arg_integer1
  if (mt == 0 or mt == sg__Monster_get_mt(this)) then
    f__result_boolean = false
    return true
  end
  sg__Monster_set_mt(this, mt)
  s__MonsterTeleport_createUnit(this)
  f__result_boolean = true
  return true
end
function sa__MonsterTeleport_temporarilyDisable()
  s__MonsterTeleport_temporarilyDisable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterTeleport_temporarilyEnable()
  s__MonsterTeleport_temporarilyEnable(f__arg_this, f__arg_timer1)
  return true
end
function sa__MonsterTeleport_setBaseColor()
  local this = f__arg_this
  local colorString = f__arg_string1
  local baseColorId = nil
  if ((ColorString2Id((colorString)) <= 12)) then
    -- INLINED!!
    baseColorId = ColorString2Id(colorString)
    if (baseColorId < 0 or baseColorId > 12) then
      return true
    end
    sg__Monster_set_baseColorId(this, baseColorId)
    if (sg__Monster_get_u(this) ~= nil) then
      if (baseColorId == 0) then
        SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
      else
        SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(baseColorId))
      end
    end
  end
  return true
end
function sa__MonsterTeleport_setVertexColor()
  local this = f__arg_this
  local vcRed = f__arg_real1
  local vcGreen = f__arg_real2
  local vcBlue = f__arg_real3
  sg__Monster_set_vcRed(this, vcRed)
  sg__Monster_set_vcGreen(this, vcGreen)
  sg__Monster_set_vcBlue(this, vcBlue)
  if (sg__Monster_get_u(this) ~= nil) then
    SetUnitVertexColorBJ(sg__Monster_get_u(this), vcRed, vcGreen, vcBlue, sg__Monster_get_vcTransparency(this))
  end
  return true
end
function sa__MonsterTeleport_reinitColor()
  local this = f__arg_this
  local initBaseColorId = nil
  sg__Monster_set_baseColorId(this, -1)
  sg__Monster_set_vcRed(this, 100)
  sg__Monster_set_vcGreen(this, 100)
  sg__Monster_set_vcBlue(this, 100)
  sg__Monster_set_vcTransparency(this, 0)
  if (sg__Monster_get_u(this) ~= nil) then
    if (MOBS_VARIOUS_COLORS) then
      initBaseColorId = GetPlayerId(GetOwningPlayer(sg__Monster_get_u(this)))
    else
      initBaseColorId = 12
    end
    if (initBaseColorId == 0) then
      SetUnitColor(sg__Monster_get_u(this), PLAYER_COLOR_RED)
    else
      SetUnitColor(sg__Monster_get_u(this), ConvertPlayerColor(initBaseColorId))
    end
    SetUnitVertexColorBJ(sg__Monster_get_u(this), sg__Monster_get_vcRed(this), sg__Monster_get_vcGreen(this), sg__Monster_get_vcBlue(this), sg__Monster_get_vcTransparency(this))
  end
  return true
end
function sa__MonsterTeleport_toString()
  local this = f__arg_this
  local str = nil
  if (s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= nil and s__MonsterType_theAlias[sg__Monster_get_mt(this)] ~= "") then
    str = s__MonsterType_theAlias[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  else
    str = s__MonsterType_label[sg__Monster_get_mt(this)] .. CACHE_SEPARATEUR_PARAM
  end
  str = str .. I2S(sg__Monster_get_id(this)) .. CACHE_SEPARATEUR_PARAM
  if (sg__MonsterTeleport_get_sens(this) > 0) then
    str = str .. "string"
  else
    str = str .. "normal"
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. R2S(sg__MonsterTeleport_get_period(this)) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_angle(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 0) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x0(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y0(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 1) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x1(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y1(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 2) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x2(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y2(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 3) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x3(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y3(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 4) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x4(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y4(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 5) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x5(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y5(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 6) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x6(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y6(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 7) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x7(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y7(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 8) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x8(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y8(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 9) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x9(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y9(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 10) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x10(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y10(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 11) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x11(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y11(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 12) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x12(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y12(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 13) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x13(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y13(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 14) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x14(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y14(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 15) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x15(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y15(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 16) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x16(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y16(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 17) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x17(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y17(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 18) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x18(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y18(this)))
  if (sg__MonsterTeleport_get_lastLocInd(this) < 19) then
    f__result_string = str
    return true
  end
  str = str .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_x19(this))) .. CACHE_SEPARATEUR_PARAM .. I2S(R2I(sg__MonsterTeleport_get_y19(this)))
  f__result_string = str
  return true
end
function sa__MakeClearMob__disposeArrays()
  local this = f__arg_this
  local kthis = nil
  si__MakeClearMob_arrN = si__MakeClearMob_arrN + 1
  kthis = si__MakeClearMob_arr[this]
  si__MakeClearMob_arrV[si__MakeClearMob_arrN] = kthis
  return true
end
function sa__MakeClearMob_create()
  f__result_integer = s__MakeClearMob_create(f__arg_unit1, f__arg_real1)
  return true
end
function sa__MakeClearMob_onDestroy()
  local this = f__arg_this
  DestroyTrigger(s__Make_t[this])
  s__Make_t[this] = nil
  s__Make_maker[this] = nil
  f__arg_this = this
  return true
end
function sa__MakeClearMob_clickMade()
  local this = f__arg_this
  local monsterOrCasterId = f__arg_integer1
  local escaper = Hero2Escaper(s__Make_maker[this])
  if (s__MakeClearMob_pointeurClickedMob[this] == -1) then
    if ((LoadInteger(ClearMob__htClearMob, 0, (monsterOrCasterId))) ~= 0) then
      --le mob est déjà trigger mob d'un clear mob // INLINED!!
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("this monster is already a trigger mob of a clear mob"))
      -- INLINED!!
      return true
    else
      s__MakeClearMob_clearMob[this] = s__ClearMobArray_new(s__Level_clearMobs[s__Escaper_getMakingLevel(escaper)], monsterOrCasterId, s__MakeClearMob_disableDuration[this], true)
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("trigger mob added for a new clear mob"))
      -- INLINED!!
    end
  else
    --le trigger mob est créé, essai d'ajout d'un block mob
    if ((s__ClearMob_triggerMob[(s__MakeClearMob_clearMob[this])]) == 0) then
      -- INLINED!!
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("the clear mob you are working on has been removed"))
      -- INLINED!!
      s__Escaper_destroyMake(escaper)
      return true
    end
    if (s__MonsterOrCasterStack_containsMob((s__ClearMob_blockMobs[(s__MakeClearMob_clearMob[this])]), monsterOrCasterId)) then
      --le mob est déjà block mob du clear mob // INLINED!!
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("this monster is already a block mob of this clear mob"))
      -- INLINED!!
      return true
    else
      s__ClearMob_addBlockMob(s__MakeClearMob_clearMob[this], monsterOrCasterId)
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("block mob added"))
      -- INLINED!!
    end
  end
  s__MakeClearMob_pointeurClickedMob[this] = s__MakeClearMob_pointeurClickedMob[this] + 1
  s__MakeClearMob_lastClickedMobInd[this] = s__MakeClearMob_pointeurClickedMob[this]
  return true
end
function sa__MakeClearMob_cancelLastAction()
  local this = f__arg_this
  if (s__MakeClearMob_pointeurClickedMob[this] > 0) then
    --cas où un block mob doit être annulé
    if (s__ClearMob_removeLastBlockMob(s__MakeClearMob_clearMob[this])) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("last block mob removed"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("error, couldn't remove the last block mob"))
      -- INLINED!!
    end
  elseif (s__MakeClearMob_pointeurClickedMob[this] == 0) then
    --cas où le trigger mob est à supprimer, et donc le clear mob en entier
    s__ClearMob_deallocate(s__MakeClearMob_clearMob[this])
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("clear mob removed"))
    -- INLINED!!
  else
    f__result_boolean = false
    return true
  end
  s__MakeClearMob_pointeurClickedMob[this] = s__MakeClearMob_pointeurClickedMob[this] - 1
  f__result_boolean = true
  return true
end
function sa__MakeClearMob_redoLastAction()
  local this = f__arg_this
  local escaper = Hero2Escaper(s__Make_maker[this])
  if (s__MakeClearMob_pointeurClickedMob[this] == s__MakeClearMob_lastClickedMobInd[this]) then
    f__result_boolean = false
    return true
  end
  s__MakeClearMob_pointeurClickedMob[this] = s__MakeClearMob_pointeurClickedMob[this] + 1
  if (s__MakeClearMob_pointeurClickedMob[this] > 0) then
    --cas où un block mob doit être annulé
    if (s__ClearMob_addBlockMob(s__MakeClearMob_clearMob[this], s___MakeClearMob_clickedMobs[s__MakeClearMob_clickedMobs[this] + s__MakeClearMob_pointeurClickedMob[this]])) then
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("block mob added"))
      -- INLINED!!
    else
      Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, ERROR_TEXT_COLORCODE, ("error, couldn't add the block mob"))
      -- INLINED!!
    end
  else
    --cas où le trigger mob est à recréer, et donc le clear mob en entier
    s__MakeClearMob_clearMob[this] = s__ClearMobArray_new(s__Level_clearMobs[s__Escaper_getMakingLevel(escaper)], s___MakeClearMob_clickedMobs[s__MakeClearMob_clickedMobs[this] + s__MakeClearMob_pointeurClickedMob[this]], s__MakeClearMob_disableDuration[this], true)
    Text___ForPlayer_timed_withColorCode((s__Make_makerOwner[this]), -1, MAKE_TEXT_COLORCODE, ("trigger mob added for a new clear mob"))
    -- INLINED!!
  end
  f__result_boolean = true
  return true
end
function sa___prototype2_TimerUtils___init()

  local i = 0
  local o = -1
  local oops = false
  if (TimerUtils___didinit) then
    return true
  else
    TimerUtils___didinit = true
  end
  TimerUtils___ht = InitHashtable()
  while true do
    if (i == TimerUtils___QUANTITY) then
      break
    end
    s__TimerUtils___tT[i] = CreateTimer()
    SaveInteger(TimerUtils___ht, 0, GetHandleId((s__TimerUtils___tT[i])), (TimerUtils___HELD))
    -- INLINED!!
    i = i + 1
  end
  TimerUtils___tN = TimerUtils___QUANTITY
  return true
end
function sa___prototype51_SoundUtils___HookStopSound()
  SoundUtils___HookStopSound(f__arg_sound1, f__arg_boolean1, f__arg_boolean2)
  return true
end

function jasshelper__initstructs1517943906()
  st__EscaperSavedCommands_new = CreateTrigger()
  TriggerAddCondition(st__EscaperSavedCommands_new, Condition(sa__EscaperSavedCommands_new))
  st__EscaperSavedCommands_execute = CreateTrigger()
  TriggerAddCondition(st__EscaperSavedCommands_execute, Condition(sa__EscaperSavedCommands_execute))
  st__CasterArray_create = CreateTrigger()
  TriggerAddCondition(st__CasterArray_create, Condition(sa__CasterArray_create))
  st__CasterArray_get = CreateTrigger()
  TriggerAddCondition(st__CasterArray_get, Condition(sa__CasterArray_get))
  st__CasterArray_getLastInstanceId = CreateTrigger()
  TriggerAddCondition(st__CasterArray_getLastInstanceId, Condition(sa__CasterArray_getLastInstanceId))
  st__CasterArray_new = CreateTrigger()
  TriggerAddCondition(st__CasterArray_new, Condition(sa__CasterArray_new))
  st__CasterArray_count = CreateTrigger()
  TriggerAddCondition(st__CasterArray_count, Condition(sa__CasterArray_count))
  st__CasterArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__CasterArray_onDestroy, Condition(sa__CasterArray_onDestroy))
  st__CasterArray_setCasterNull = CreateTrigger()
  TriggerAddCondition(st__CasterArray_setCasterNull, Condition(sa__CasterArray_setCasterNull))
  st__CasterArray_getCasterNear = CreateTrigger()
  TriggerAddCondition(st__CasterArray_getCasterNear, Condition(sa__CasterArray_getCasterNear))
  st__CasterArray_createCasters = CreateTrigger()
  TriggerAddCondition(st__CasterArray_createCasters, Condition(sa__CasterArray_createCasters))
  st__CasterArray_removeCasters = CreateTrigger()
  TriggerAddCondition(st__CasterArray_removeCasters, Condition(sa__CasterArray_removeCasters))
  st__CasterArray_refreshCastersOfType = CreateTrigger()
  TriggerAddCondition(st__CasterArray_refreshCastersOfType, Condition(sa__CasterArray_refreshCastersOfType))
  st__CasterArray_removeCastersOfType = CreateTrigger()
  TriggerAddCondition(st__CasterArray_removeCastersOfType, Condition(sa__CasterArray_removeCastersOfType))
  st__MonsterTeleportArray_create = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_create, Condition(sa__MonsterTeleportArray_create))
  st__MonsterTeleportArray_get = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_get, Condition(sa__MonsterTeleportArray_get))
  st__MonsterTeleportArray_getLastInstanceId = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_getLastInstanceId, Condition(sa__MonsterTeleportArray_getLastInstanceId))
  st__MonsterTeleportArray_new = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_new, Condition(sa__MonsterTeleportArray_new))
  st__MonsterTeleportArray_count = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_count, Condition(sa__MonsterTeleportArray_count))
  st__MonsterTeleportArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_onDestroy, Condition(sa__MonsterTeleportArray_onDestroy))
  st__MonsterTeleportArray_setMonsterNull = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_setMonsterNull, Condition(sa__MonsterTeleportArray_setMonsterNull))
  st__MonsterTeleportArray_getMonsterNear = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_getMonsterNear, Condition(sa__MonsterTeleportArray_getMonsterNear))
  st__MonsterTeleportArray_createMonsters = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_createMonsters, Condition(sa__MonsterTeleportArray_createMonsters))
  st__MonsterTeleportArray_removeMonsters = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_removeMonsters, Condition(sa__MonsterTeleportArray_removeMonsters))
  st__MonsterTeleportArray_recreateMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_recreateMonstersOfType, Condition(sa__MonsterTeleportArray_recreateMonstersOfType))
  st__MonsterTeleportArray_removeMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleportArray_removeMonstersOfType, Condition(sa__MonsterTeleportArray_removeMonstersOfType))
  st__MonsterSimplePatrolArray_create = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_create, Condition(sa__MonsterSimplePatrolArray_create))
  st__MonsterSimplePatrolArray_get = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_get, Condition(sa__MonsterSimplePatrolArray_get))
  st__MonsterSimplePatrolArray_getLastInstanceId = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_getLastInstanceId, Condition(sa__MonsterSimplePatrolArray_getLastInstanceId))
  st__MonsterSimplePatrolArray_new = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_new, Condition(sa__MonsterSimplePatrolArray_new))
  st__MonsterSimplePatrolArray_count = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_count, Condition(sa__MonsterSimplePatrolArray_count))
  st__MonsterSimplePatrolArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_onDestroy, Condition(sa__MonsterSimplePatrolArray_onDestroy))
  st__MonsterSimplePatrolArray_setMonsterNull = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_setMonsterNull, Condition(sa__MonsterSimplePatrolArray_setMonsterNull))
  st__MonsterSimplePatrolArray_getMonsterNear = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_getMonsterNear, Condition(sa__MonsterSimplePatrolArray_getMonsterNear))
  st__MonsterSimplePatrolArray_createMonsters = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_createMonsters, Condition(sa__MonsterSimplePatrolArray_createMonsters))
  st__MonsterSimplePatrolArray_removeMonsters = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_removeMonsters, Condition(sa__MonsterSimplePatrolArray_removeMonsters))
  st__MonsterSimplePatrolArray_recreateMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_recreateMonstersOfType, Condition(sa__MonsterSimplePatrolArray_recreateMonstersOfType))
  st__MonsterSimplePatrolArray_removeMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__MonsterSimplePatrolArray_removeMonstersOfType, Condition(sa__MonsterSimplePatrolArray_removeMonstersOfType))
  st__MonsterNoMoveArray_create = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_create, Condition(sa__MonsterNoMoveArray_create))
  st__MonsterNoMoveArray_get = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_get, Condition(sa__MonsterNoMoveArray_get))
  st__MonsterNoMoveArray_getLastInstanceId = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_getLastInstanceId, Condition(sa__MonsterNoMoveArray_getLastInstanceId))
  st__MonsterNoMoveArray_new = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_new, Condition(sa__MonsterNoMoveArray_new))
  st__MonsterNoMoveArray_count = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_count, Condition(sa__MonsterNoMoveArray_count))
  st__MonsterNoMoveArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_onDestroy, Condition(sa__MonsterNoMoveArray_onDestroy))
  st__MonsterNoMoveArray_setMonsterNull = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_setMonsterNull, Condition(sa__MonsterNoMoveArray_setMonsterNull))
  st__MonsterNoMoveArray_getMonsterNear = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_getMonsterNear, Condition(sa__MonsterNoMoveArray_getMonsterNear))
  st__MonsterNoMoveArray_createMonsters = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_createMonsters, Condition(sa__MonsterNoMoveArray_createMonsters))
  st__MonsterNoMoveArray_removeMonsters = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_removeMonsters, Condition(sa__MonsterNoMoveArray_removeMonsters))
  st__MonsterNoMoveArray_recreateMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_recreateMonstersOfType, Condition(sa__MonsterNoMoveArray_recreateMonstersOfType))
  st__MonsterNoMoveArray_removeMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__MonsterNoMoveArray_removeMonstersOfType, Condition(sa__MonsterNoMoveArray_removeMonstersOfType))
  st__MonsterMultiplePatrolsArray_create = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_create, Condition(sa__MonsterMultiplePatrolsArray_create))
  st__MonsterMultiplePatrolsArray_get = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_get, Condition(sa__MonsterMultiplePatrolsArray_get))
  st__MonsterMultiplePatrolsArray_getLastInstanceId = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_getLastInstanceId, Condition(sa__MonsterMultiplePatrolsArray_getLastInstanceId))
  st__MonsterMultiplePatrolsArray_new = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_new, Condition(sa__MonsterMultiplePatrolsArray_new))
  st__MonsterMultiplePatrolsArray_count = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_count, Condition(sa__MonsterMultiplePatrolsArray_count))
  st__MonsterMultiplePatrolsArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_onDestroy, Condition(sa__MonsterMultiplePatrolsArray_onDestroy))
  st__MonsterMultiplePatrolsArray_setMonsterNull = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_setMonsterNull, Condition(sa__MonsterMultiplePatrolsArray_setMonsterNull))
  st__MonsterMultiplePatrolsArray_getMonsterNear = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_getMonsterNear, Condition(sa__MonsterMultiplePatrolsArray_getMonsterNear))
  st__MonsterMultiplePatrolsArray_createMonsters = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_createMonsters, Condition(sa__MonsterMultiplePatrolsArray_createMonsters))
  st__MonsterMultiplePatrolsArray_removeMonsters = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_removeMonsters, Condition(sa__MonsterMultiplePatrolsArray_removeMonsters))
  st__MonsterMultiplePatrolsArray_recreateMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_recreateMonstersOfType, Condition(sa__MonsterMultiplePatrolsArray_recreateMonstersOfType))
  st__MonsterMultiplePatrolsArray_removeMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrolsArray_removeMonstersOfType, Condition(sa__MonsterMultiplePatrolsArray_removeMonstersOfType))
  st__Meteor_onDestroy = CreateTrigger()
  TriggerAddCondition(st__Meteor_onDestroy, Condition(sa__Meteor_onDestroy))
  st__MonsterOrCasterStack_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCasterStack_onDestroy, Condition(sa__MonsterOrCasterStack_onDestroy))
  st__ClearMobArray_create = CreateTrigger()
  TriggerAddCondition(st__ClearMobArray_create, Condition(sa__ClearMobArray_create))
  st__ClearMobArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__ClearMobArray_onDestroy, Condition(sa__ClearMobArray_onDestroy))
  st__ClearMobArray_setClearMobNull = CreateTrigger()
  TriggerAddCondition(st__ClearMobArray_setClearMobNull, Condition(sa__ClearMobArray_setClearMobNull))
  st__ClearMobArray_initializeClearMobs = CreateTrigger()
  TriggerAddCondition(st__ClearMobArray_initializeClearMobs, Condition(sa__ClearMobArray_initializeClearMobs))
  st__Caster_isEnabled = CreateTrigger()
  TriggerAddCondition(st__Caster_isEnabled, Condition(sa__Caster_isEnabled))
  st__Caster_getId = CreateTrigger()
  TriggerAddCondition(st__Caster_getId, Condition(sa__Caster_getId))
  st__Caster_getX = CreateTrigger()
  TriggerAddCondition(st__Caster_getX, Condition(sa__Caster_getX))
  st__Caster_getY = CreateTrigger()
  TriggerAddCondition(st__Caster_getY, Condition(sa__Caster_getY))
  st__Caster_getRange = CreateTrigger()
  TriggerAddCondition(st__Caster_getRange, Condition(sa__Caster_getRange))
  st__Caster_getProjectileSpeed = CreateTrigger()
  TriggerAddCondition(st__Caster_getProjectileSpeed, Condition(sa__Caster_getProjectileSpeed))
  st__Caster_getCasterUnit = CreateTrigger()
  TriggerAddCondition(st__Caster_getCasterUnit, Condition(sa__Caster_getCasterUnit))
  st__Caster_getProjectileMonsterType = CreateTrigger()
  TriggerAddCondition(st__Caster_getProjectileMonsterType, Condition(sa__Caster_getProjectileMonsterType))
  st__Caster_getLoadTime = CreateTrigger()
  TriggerAddCondition(st__Caster_getLoadTime, Condition(sa__Caster_getLoadTime))
  st__Caster_getCasterType = CreateTrigger()
  TriggerAddCondition(st__Caster_getCasterType, Condition(sa__Caster_getCasterType))
  st__Caster_getAnimation = CreateTrigger()
  TriggerAddCondition(st__Caster_getAnimation, Condition(sa__Caster_getAnimation))
  st__Caster_enable = CreateTrigger()
  TriggerAddCondition(st__Caster_enable, Condition(sa__Caster_enable))
  st__Caster_disable = CreateTrigger()
  TriggerAddCondition(st__Caster_disable, Condition(sa__Caster_disable))
  st__Caster_killUnit = CreateTrigger()
  TriggerAddCondition(st__Caster_killUnit, Condition(sa__Caster_killUnit))
  st__Caster_onDestroy = CreateTrigger()
  TriggerAddCondition(st__Caster_onDestroy, Condition(sa__Caster_onDestroy))
  st__Caster_escaperOutOfRangeOrDead = CreateTrigger()
  TriggerAddCondition(st__Caster_escaperOutOfRangeOrDead, Condition(sa__Caster_escaperOutOfRangeOrDead))
  st__Caster_temporarilyDisable = CreateTrigger()
  TriggerAddCondition(st__Caster_temporarilyDisable, Condition(sa__Caster_temporarilyDisable))
  st__Caster_temporarilyEnable = CreateTrigger()
  TriggerAddCondition(st__Caster_temporarilyEnable, Condition(sa__Caster_temporarilyEnable))
  st__Caster_setBaseColor = CreateTrigger()
  TriggerAddCondition(st__Caster_setBaseColor, Condition(sa__Caster_setBaseColor))
  st__Caster_setVertexColor = CreateTrigger()
  TriggerAddCondition(st__Caster_setVertexColor, Condition(sa__Caster_setVertexColor))
  st__Caster_reinitColor = CreateTrigger()
  TriggerAddCondition(st__Caster_reinitColor, Condition(sa__Caster_reinitColor))
  st__Caster_toString = CreateTrigger()
  TriggerAddCondition(st__Caster_toString, Condition(sa__Caster_toString))
  st__Stack_onDestroy = CreateTrigger()
  TriggerAddCondition(st__Stack_onDestroy, Condition(sa__Stack_onDestroy))
  st__MonsterOrCaster_create = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_create, Condition(sa__MonsterOrCaster_create))
  st__MonsterOrCaster_getId = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_getId, Condition(sa__MonsterOrCaster_getId))
  st__MonsterOrCaster_killUnit = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_killUnit, Condition(sa__MonsterOrCaster_killUnit))
  st__MonsterOrCaster_temporarilyDisable = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_temporarilyDisable, Condition(sa__MonsterOrCaster_temporarilyDisable))
  st__MonsterOrCaster_temporarilyEnable = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_temporarilyEnable, Condition(sa__MonsterOrCaster_temporarilyEnable))
  st__MonsterOrCaster_setBaseColor = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_setBaseColor, Condition(sa__MonsterOrCaster_setBaseColor))
  st__MonsterOrCaster_setVertexColor = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_setVertexColor, Condition(sa__MonsterOrCaster_setVertexColor))
  st__MonsterOrCaster_reinitColor = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_reinitColor, Condition(sa__MonsterOrCaster_reinitColor))
  st__MonsterOrCaster_getUnit = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_getUnit, Condition(sa__MonsterOrCaster_getUnit))
  st__MonsterOrCaster_copy = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_copy, Condition(sa__MonsterOrCaster_copy))
  st__MonsterOrCaster_getMonsterType = CreateTrigger()
  TriggerAddCondition(st__MonsterOrCaster_getMonsterType, Condition(sa__MonsterOrCaster_getMonsterType))
  st__Trigger_onDestroy = CreateTrigger()
  TriggerAddCondition(st__Trigger_onDestroy, Condition(sa__Trigger_onDestroy))
  st__TriggerArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__TriggerArray_onDestroy, Condition(sa__TriggerArray_onDestroy))
  st__VisibilityModifier_onDestroy = CreateTrigger()
  TriggerAddCondition(st__VisibilityModifier_onDestroy, Condition(sa__VisibilityModifier_onDestroy))
  st__CasterType_onDestroy = CreateTrigger()
  TriggerAddCondition(st__CasterType_onDestroy, Condition(sa__CasterType_onDestroy))
  st__MakeAction_cancel[11] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[11], Condition(sa__MakeCasterAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[11], sa__MakeCasterAction_cancel)
  st__MakeAction_redo[11] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[11], Condition(sa__MakeCasterAction_redo))
  TriggerAddAction(st__MakeAction_redo[11], sa__MakeCasterAction_redo)
  st__MakeAction_onDestroy[11] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[11], Condition(sa__MakeCasterAction_onDestroy))
  st__MakeAction_cancel[12] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[12], Condition(sa__MakeDeleteCastersAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[12], sa__MakeDeleteCastersAction_cancel)
  st__MakeAction_redo[12] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[12], Condition(sa__MakeDeleteCastersAction_redo))
  TriggerAddAction(st__MakeAction_redo[12], sa__MakeDeleteCastersAction_redo)
  st__MakeAction_onDestroy[12] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[12], Condition(sa__MakeDeleteCastersAction_onDestroy))
  st__MakeAction_cancel[13] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[13], Condition(sa__MakeDeleteMeteorsAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[13], sa__MakeDeleteMeteorsAction_cancel)
  st__MakeAction_redo[13] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[13], Condition(sa__MakeDeleteMeteorsAction_redo))
  TriggerAddAction(st__MakeAction_redo[13], sa__MakeDeleteMeteorsAction_redo)
  st__MakeAction_onDestroy[13] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[13], Condition(sa__MakeDeleteMeteorsAction_onDestroy))
  st__MakeAction_cancel[14] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[14], Condition(sa__MakeDeleteMonstersAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[14], sa__MakeDeleteMonstersAction_cancel)
  st__MakeAction_redo[14] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[14], Condition(sa__MakeDeleteMonstersAction_redo))
  TriggerAddAction(st__MakeAction_redo[14], sa__MakeDeleteMonstersAction_redo)
  st__MakeAction_onDestroy[14] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[14], Condition(sa__MakeDeleteMonstersAction_onDestroy))
  st__MakeLastActions_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MakeLastActions_onDestroy, Condition(sa__MakeLastActions_onDestroy))
  st__MakeMeteorAction_getLevel = CreateTrigger()
  TriggerAddCondition(st__MakeMeteorAction_getLevel, Condition(sa__MakeMeteorAction_getLevel))
  st__MakeAction_cancel[17] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[17], Condition(sa__MakeMeteorAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[17], sa__MakeMeteorAction_cancel)
  st__MakeAction_redo[17] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[17], Condition(sa__MakeMeteorAction_redo))
  TriggerAddAction(st__MakeAction_redo[17], sa__MakeMeteorAction_redo)
  st__MakeAction_onDestroy[17] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[17], Condition(sa__MakeMeteorAction_onDestroy))
  st__MakeMonsterAction_getLevel = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterAction_getLevel, Condition(sa__MakeMonsterAction_getLevel))
  st__MakeAction_cancel[18] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[18], Condition(sa__MakeMonsterAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[18], sa__MakeMonsterAction_cancel)
  st__MakeAction_redo[18] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[18], Condition(sa__MakeMonsterAction_redo))
  TriggerAddAction(st__MakeAction_redo[18], sa__MakeMonsterAction_redo)
  st__MakeAction_onDestroy[18] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[18], Condition(sa__MakeMonsterAction_onDestroy))
  st__MakeTerrainHeightAction_apply = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHeightAction_apply, Condition(sa__MakeTerrainHeightAction_apply))
  st__MakeAction_cancel[19] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[19], Condition(sa__MakeTerrainHeightAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[19], sa__MakeTerrainHeightAction_cancel)
  st__MakeAction_redo[19] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[19], Condition(sa__MakeTerrainHeightAction_redo))
  TriggerAddAction(st__MakeAction_redo[19], sa__MakeTerrainHeightAction_redo)
  st__MakeAction_onDestroy[19] = nil
  st__MakeVisibilityModifierAction_getLevel = CreateTrigger()
  TriggerAddCondition(st__MakeVisibilityModifierAction_getLevel, Condition(sa__MakeVisibilityModifierAction_getLevel))
  st__MakeAction_cancel[20] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[20], Condition(sa__MakeVisibilityModifierAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[20], sa__MakeVisibilityModifierAction_cancel)
  st__MakeAction_redo[20] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[20], Condition(sa__MakeVisibilityModifierAction_redo))
  TriggerAddAction(st__MakeAction_redo[20], sa__MakeVisibilityModifierAction_redo)
  st__MakeAction_onDestroy[20] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[20], Condition(sa__MakeVisibilityModifierAction_onDestroy))
  st__MeteorArray_setMeteorNull = CreateTrigger()
  TriggerAddCondition(st__MeteorArray_setMeteorNull, Condition(sa__MeteorArray_setMeteorNull))
  st__MeteorArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MeteorArray_onDestroy, Condition(sa__MeteorArray_onDestroy))
  st__MonsterType_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MonsterType_onDestroy, Condition(sa__MonsterType_onDestroy))
  st__SoundUtils___soundrecycler_onDestroy = CreateTrigger()
  TriggerAddCondition(st__SoundUtils___soundrecycler_onDestroy, Condition(sa__SoundUtils___soundrecycler_onDestroy))
  st__StringArrayForCache_create = CreateTrigger()
  TriggerAddCondition(st__StringArrayForCache_create, Condition(sa__StringArrayForCache_create))
  st__StringArrayForCache_push = CreateTrigger()
  TriggerAddCondition(st__StringArrayForCache_push, Condition(sa__StringArrayForCache_push))
  st__StringArrayForCache_writeInCache = CreateTrigger()
  TriggerAddCondition(st__StringArrayForCache_writeInCache, Condition(sa__StringArrayForCache_writeInCache))
  st__VisibilityModifierArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__VisibilityModifierArray_onDestroy, Condition(sa__VisibilityModifierArray_onDestroy))
  st__VisibilityModifierArray_count = CreateTrigger()
  TriggerAddCondition(st__VisibilityModifierArray_count, Condition(sa__VisibilityModifierArray_count))
  st__VisibilityModifierArray_get = CreateTrigger()
  TriggerAddCondition(st__VisibilityModifierArray_get, Condition(sa__VisibilityModifierArray_get))
  st__VisibilityModifierArray_getLastInstanceId = CreateTrigger()
  TriggerAddCondition(st__VisibilityModifierArray_getLastInstanceId, Condition(sa__VisibilityModifierArray_getLastInstanceId))
  st__VisibilityModifierArray_setNull = CreateTrigger()
  TriggerAddCondition(st__VisibilityModifierArray_setNull, Condition(sa__VisibilityModifierArray_setNull))
  st__LevelArray_goToLevel = CreateTrigger()
  TriggerAddCondition(st__LevelArray_goToLevel, Condition(sa__LevelArray_goToLevel))
  st__LevelArray_goToNextLevel = CreateTrigger()
  TriggerAddCondition(st__LevelArray_goToNextLevel, Condition(sa__LevelArray_goToNextLevel))
  st__LevelArray_restartTheGame = CreateTrigger()
  TriggerAddCondition(st__LevelArray_restartTheGame, Condition(sa__LevelArray_restartTheGame))
  st__LevelArray_new = CreateTrigger()
  TriggerAddCondition(st__LevelArray_new, Condition(sa__LevelArray_new))
  st__LevelArray_destroyLastLevel = CreateTrigger()
  TriggerAddCondition(st__LevelArray_destroyLastLevel, Condition(sa__LevelArray_destroyLastLevel))
  st__LevelArray_count = CreateTrigger()
  TriggerAddCondition(st__LevelArray_count, Condition(sa__LevelArray_count))
  st__LevelArray_getCurrentLevel = CreateTrigger()
  TriggerAddCondition(st__LevelArray_getCurrentLevel, Condition(sa__LevelArray_getCurrentLevel))
  st__LevelArray_get = CreateTrigger()
  TriggerAddCondition(st__LevelArray_get, Condition(sa__LevelArray_get))
  st__LevelArray_getLevelFromMonsterSpawnArray = CreateTrigger()
  TriggerAddCondition(st__LevelArray_getLevelFromMonsterSpawnArray, Condition(sa__LevelArray_getLevelFromMonsterSpawnArray))
  st__LevelArray_getLevelFromMeteorArray = CreateTrigger()
  TriggerAddCondition(st__LevelArray_getLevelFromMeteorArray, Condition(sa__LevelArray_getLevelFromMeteorArray))
  st__LevelArray_getLevelFromVisibilityModifierArray = CreateTrigger()
  TriggerAddCondition(st__LevelArray_getLevelFromVisibilityModifierArray, Condition(sa__LevelArray_getLevelFromVisibilityModifierArray))
  st__LevelArray_removeMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__LevelArray_removeMonstersOfType, Condition(sa__LevelArray_removeMonstersOfType))
  st__LevelArray_removeCastersOfType = CreateTrigger()
  TriggerAddCondition(st__LevelArray_removeCastersOfType, Condition(sa__LevelArray_removeCastersOfType))
  st__LevelArray_getLastLevelId = CreateTrigger()
  TriggerAddCondition(st__LevelArray_getLastLevelId, Condition(sa__LevelArray_getLastLevelId))
  st__LevelArray_getNbMonsters = CreateTrigger()
  TriggerAddCondition(st__LevelArray_getNbMonsters, Condition(sa__LevelArray_getNbMonsters))
  st__ClearMob_getTriggerMob = CreateTrigger()
  TriggerAddCondition(st__ClearMob_getTriggerMob, Condition(sa__ClearMob_getTriggerMob))
  st__ClearMob_getBlockMobs = CreateTrigger()
  TriggerAddCondition(st__ClearMob_getBlockMobs, Condition(sa__ClearMob_getBlockMobs))
  st__ClearMob_initialize = CreateTrigger()
  TriggerAddCondition(st__ClearMob_initialize, Condition(sa__ClearMob_initialize))
  st__ClearMob_onDestroy = CreateTrigger()
  TriggerAddCondition(st__ClearMob_onDestroy, Condition(sa__ClearMob_onDestroy))
  st__ClearMob_isBeingActivated = CreateTrigger()
  TriggerAddCondition(st__ClearMob_isBeingActivated, Condition(sa__ClearMob_isBeingActivated))
  st__TerrainTypeArray_get = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_get, Condition(sa__TerrainTypeArray_get))
  st__TerrainTypeArray_getTerrainType = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_getTerrainType, Condition(sa__TerrainTypeArray_getTerrainType))
  st__TerrainTypeArray_isTerrainTypeIdAlreadyUsed = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_isTerrainTypeIdAlreadyUsed, Condition(sa__TerrainTypeArray_isTerrainTypeIdAlreadyUsed))
  st__TerrainTypeArray_isLabelAlreadyUsed = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_isLabelAlreadyUsed, Condition(sa__TerrainTypeArray_isLabelAlreadyUsed))
  st__TerrainTypeArray_newWalk = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_newWalk, Condition(sa__TerrainTypeArray_newWalk))
  st__TerrainTypeArray_newDeath = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_newDeath, Condition(sa__TerrainTypeArray_newDeath))
  st__TerrainTypeArray_newSlide = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_newSlide, Condition(sa__TerrainTypeArray_newSlide))
  st__TerrainTypeArray_getWalk = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_getWalk, Condition(sa__TerrainTypeArray_getWalk))
  st__TerrainTypeArray_getDeath = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_getDeath, Condition(sa__TerrainTypeArray_getDeath))
  st__TerrainTypeArray_getSlide = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_getSlide, Condition(sa__TerrainTypeArray_getSlide))
  st__TerrainTypeArray_displayForPlayer = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_displayForPlayer, Condition(sa__TerrainTypeArray_displayForPlayer))
  st__TerrainTypeArray_saveInCache = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_saveInCache, Condition(sa__TerrainTypeArray_saveInCache))
  st__TerrainTypeArray_count = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_count, Condition(sa__TerrainTypeArray_count))
  st__TerrainTypeArray_getMainTileset = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeArray_getMainTileset, Condition(sa__TerrainTypeArray_getMainTileset))
  st__Level_activate = CreateTrigger()
  TriggerAddCondition(st__Level_activate, Condition(sa__Level_activate))
  st__Level_getStart = CreateTrigger()
  TriggerAddCondition(st__Level_getStart, Condition(sa__Level_getStart))
  st__Level_getStartRandomX = CreateTrigger()
  TriggerAddCondition(st__Level_getStartRandomX, Condition(sa__Level_getStartRandomX))
  st__Level_getStartRandomY = CreateTrigger()
  TriggerAddCondition(st__Level_getStartRandomY, Condition(sa__Level_getStartRandomY))
  st__Level_newStart = CreateTrigger()
  TriggerAddCondition(st__Level_newStart, Condition(sa__Level_newStart))
  st__Level_newEnd = CreateTrigger()
  TriggerAddCondition(st__Level_newEnd, Condition(sa__Level_newEnd))
  st__Level_getEnd = CreateTrigger()
  TriggerAddCondition(st__Level_getEnd, Condition(sa__Level_getEnd))
  st__Level_getNbMonsters = CreateTrigger()
  TriggerAddCondition(st__Level_getNbMonsters, Condition(sa__Level_getNbMonsters))
  st__Level_onDestroy = CreateTrigger()
  TriggerAddCondition(st__Level_onDestroy, Condition(sa__Level_onDestroy))
  st__Level_recreateMonstersOfType = CreateTrigger()
  TriggerAddCondition(st__Level_recreateMonstersOfType, Condition(sa__Level_recreateMonstersOfType))
  st__Level_refreshCastersOfType = CreateTrigger()
  TriggerAddCondition(st__Level_refreshCastersOfType, Condition(sa__Level_refreshCastersOfType))
  st__Level_getId = CreateTrigger()
  TriggerAddCondition(st__Level_getId, Condition(sa__Level_getId))
  st__Level_setNbLivesEarned = CreateTrigger()
  TriggerAddCondition(st__Level_setNbLivesEarned, Condition(sa__Level_setNbLivesEarned))
  st__Level_getNbLives = CreateTrigger()
  TriggerAddCondition(st__Level_getNbLives, Condition(sa__Level_getNbLives))
  st__Level_newVisibilityModifier = CreateTrigger()
  TriggerAddCondition(st__Level_newVisibilityModifier, Condition(sa__Level_newVisibilityModifier))
  st__Level_newVisibilityModifierFromExisting = CreateTrigger()
  TriggerAddCondition(st__Level_newVisibilityModifierFromExisting, Condition(sa__Level_newVisibilityModifierFromExisting))
  st__Level_removeVisibilities = CreateTrigger()
  TriggerAddCondition(st__Level_removeVisibilities, Condition(sa__Level_removeVisibilities))
  st__Level_activateVisibilities = CreateTrigger()
  TriggerAddCondition(st__Level_activateVisibilities, Condition(sa__Level_activateVisibilities))
  st__Level_setStartMessage = CreateTrigger()
  TriggerAddCondition(st__Level_setStartMessage, Condition(sa__Level_setStartMessage))
  st__Level_getStartMessage = CreateTrigger()
  TriggerAddCondition(st__Level_getStartMessage, Condition(sa__Level_getStartMessage))
  st__Lives_getLeaderboard = CreateTrigger()
  TriggerAddCondition(st__Lives_getLeaderboard, Condition(sa__Lives_getLeaderboard))
  st__Lives_onDestroy = CreateTrigger()
  TriggerAddCondition(st__Lives_onDestroy, Condition(sa__Lives_onDestroy))
  st__EscaperArray_get = CreateTrigger()
  TriggerAddCondition(st__EscaperArray_get, Condition(sa__EscaperArray_get))
  st__EscaperArray_nullify = CreateTrigger()
  TriggerAddCondition(st__EscaperArray_nullify, Condition(sa__EscaperArray_nullify))
  st__Escaper_onDestroy = CreateTrigger()
  TriggerAddCondition(st__Escaper_onDestroy, Condition(sa__Escaper_onDestroy))
  st__Escaper_enableSlide = CreateTrigger()
  TriggerAddCondition(st__Escaper_enableSlide, Condition(sa__Escaper_enableSlide))
  st__Escaper_enableCheckTerrain = CreateTrigger()
  TriggerAddCondition(st__Escaper_enableCheckTerrain, Condition(sa__Escaper_enableCheckTerrain))
  st__Escaper_isSliding = CreateTrigger()
  TriggerAddCondition(st__Escaper_isSliding, Condition(sa__Escaper_isSliding))
  st__Escaper_doesCheckTerrain = CreateTrigger()
  TriggerAddCondition(st__Escaper_doesCheckTerrain, Condition(sa__Escaper_doesCheckTerrain))
  st__Escaper_moveHero = CreateTrigger()
  TriggerAddCondition(st__Escaper_moveHero, Condition(sa__Escaper_moveHero))
  st__Escaper_moveInvisUnit = CreateTrigger()
  TriggerAddCondition(st__Escaper_moveInvisUnit, Condition(sa__Escaper_moveInvisUnit))
  st__Escaper_getHero = CreateTrigger()
  TriggerAddCondition(st__Escaper_getHero, Condition(sa__Escaper_getHero))
  st__Escaper_isAlive = CreateTrigger()
  TriggerAddCondition(st__Escaper_isAlive, Condition(sa__Escaper_isAlive))
  st__Escaper_kill = CreateTrigger()
  TriggerAddCondition(st__Escaper_kill, Condition(sa__Escaper_kill))
  st__Escaper_pause = CreateTrigger()
  TriggerAddCondition(st__Escaper_pause, Condition(sa__Escaper_pause))
  st__Escaper_reverse = CreateTrigger()
  TriggerAddCondition(st__Escaper_reverse, Condition(sa__Escaper_reverse))
  st__Escaper_setIsHeroSelectedForPlayer = CreateTrigger()
  TriggerAddCondition(st__Escaper_setIsHeroSelectedForPlayer, Condition(sa__Escaper_setIsHeroSelectedForPlayer))
  st__Escaper_destroyTerrainKillEffect = CreateTrigger()
  TriggerAddCondition(st__Escaper_destroyTerrainKillEffect, Condition(sa__Escaper_destroyTerrainKillEffect))
  st__Escaper_getLastTerrainType = CreateTrigger()
  TriggerAddCondition(st__Escaper_getLastTerrainType, Condition(sa__Escaper_getLastTerrainType))
  st__Escaper_setLastTerrainType = CreateTrigger()
  TriggerAddCondition(st__Escaper_setLastTerrainType, Condition(sa__Escaper_setLastTerrainType))
  st__Escaper_setSlideSpeed = CreateTrigger()
  TriggerAddCondition(st__Escaper_setSlideSpeed, Condition(sa__Escaper_setSlideSpeed))
  st__Escaper_setWalkSpeed = CreateTrigger()
  TriggerAddCondition(st__Escaper_setWalkSpeed, Condition(sa__Escaper_setWalkSpeed))
  st__Escaper_getSlideSpeed = CreateTrigger()
  TriggerAddCondition(st__Escaper_getSlideSpeed, Condition(sa__Escaper_getSlideSpeed))
  st__Escaper_getRealSlideSpeed = CreateTrigger()
  TriggerAddCondition(st__Escaper_getRealSlideSpeed, Condition(sa__Escaper_getRealSlideSpeed))
  st__Escaper_getWalkSpeed = CreateTrigger()
  TriggerAddCondition(st__Escaper_getWalkSpeed, Condition(sa__Escaper_getWalkSpeed))
  st__Escaper_isAbsoluteSlideSpeed = CreateTrigger()
  TriggerAddCondition(st__Escaper_isAbsoluteSlideSpeed, Condition(sa__Escaper_isAbsoluteSlideSpeed))
  st__Escaper_isAbsoluteWalkSpeed = CreateTrigger()
  TriggerAddCondition(st__Escaper_isAbsoluteWalkSpeed, Condition(sa__Escaper_isAbsoluteWalkSpeed))
  st__Escaper_isGodModeOn = CreateTrigger()
  TriggerAddCondition(st__Escaper_isGodModeOn, Condition(sa__Escaper_isGodModeOn))
  st__Escaper_setBaseColorDisco = CreateTrigger()
  TriggerAddCondition(st__Escaper_setBaseColorDisco, Condition(sa__Escaper_setBaseColorDisco))
  st__Escaper_getBaseColor = CreateTrigger()
  TriggerAddCondition(st__Escaper_getBaseColor, Condition(sa__Escaper_getBaseColor))
  st__Escaper_setVcRed = CreateTrigger()
  TriggerAddCondition(st__Escaper_setVcRed, Condition(sa__Escaper_setVcRed))
  st__Escaper_setVcGreen = CreateTrigger()
  TriggerAddCondition(st__Escaper_setVcGreen, Condition(sa__Escaper_setVcGreen))
  st__Escaper_setVcBlue = CreateTrigger()
  TriggerAddCondition(st__Escaper_setVcBlue, Condition(sa__Escaper_setVcBlue))
  st__Escaper_setVcTransparency = CreateTrigger()
  TriggerAddCondition(st__Escaper_setVcTransparency, Condition(sa__Escaper_setVcTransparency))
  st__Escaper_getVcRed = CreateTrigger()
  TriggerAddCondition(st__Escaper_getVcRed, Condition(sa__Escaper_getVcRed))
  st__Escaper_getVcGreen = CreateTrigger()
  TriggerAddCondition(st__Escaper_getVcGreen, Condition(sa__Escaper_getVcGreen))
  st__Escaper_getVcBlue = CreateTrigger()
  TriggerAddCondition(st__Escaper_getVcBlue, Condition(sa__Escaper_getVcBlue))
  st__Escaper_getVcTransparency = CreateTrigger()
  TriggerAddCondition(st__Escaper_getVcTransparency, Condition(sa__Escaper_getVcTransparency))
  st__Escaper_getPlayer = CreateTrigger()
  TriggerAddCondition(st__Escaper_getPlayer, Condition(sa__Escaper_getPlayer))
  st__Escaper_getMakingLevel = CreateTrigger()
  TriggerAddCondition(st__Escaper_getMakingLevel, Condition(sa__Escaper_getMakingLevel))
  st__Escaper_destroyMake = CreateTrigger()
  TriggerAddCondition(st__Escaper_destroyMake, Condition(sa__Escaper_destroyMake))
  st__Escaper_destroyAllSavedActions = CreateTrigger()
  TriggerAddCondition(st__Escaper_destroyAllSavedActions, Condition(sa__Escaper_destroyAllSavedActions))
  st__Escaper_getLastZ = CreateTrigger()
  TriggerAddCondition(st__Escaper_getLastZ, Condition(sa__Escaper_getLastZ))
  st__Escaper_setLastZ = CreateTrigger()
  TriggerAddCondition(st__Escaper_setLastZ, Condition(sa__Escaper_setLastZ))
  st__Escaper_getOldDiffZ = CreateTrigger()
  TriggerAddCondition(st__Escaper_getOldDiffZ, Condition(sa__Escaper_getOldDiffZ))
  st__Escaper_setOldDiffZ = CreateTrigger()
  TriggerAddCondition(st__Escaper_setOldDiffZ, Condition(sa__Escaper_setOldDiffZ))
  st__Escaper_getSpeedZ = CreateTrigger()
  TriggerAddCondition(st__Escaper_getSpeedZ, Condition(sa__Escaper_getSpeedZ))
  st__Escaper_setSpeedZ = CreateTrigger()
  TriggerAddCondition(st__Escaper_setSpeedZ, Condition(sa__Escaper_setSpeedZ))
  st__Escaper_setCoopInvul = CreateTrigger()
  TriggerAddCondition(st__Escaper_setCoopInvul, Condition(sa__Escaper_setCoopInvul))
  st__Escaper_refreshCerclePosition = CreateTrigger()
  TriggerAddCondition(st__Escaper_refreshCerclePosition, Condition(sa__Escaper_refreshCerclePosition))
  st__KillingTimers_onDestroy = CreateTrigger()
  TriggerAddCondition(st__KillingTimers_onDestroy, Condition(sa__KillingTimers_onDestroy))
  st__MonsterSpawnArray_get = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawnArray_get, Condition(sa__MonsterSpawnArray_get))
  st__MonsterSpawnArray_getLastInstanceId = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawnArray_getLastInstanceId, Condition(sa__MonsterSpawnArray_getLastInstanceId))
  st__MonsterSpawnArray_count = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawnArray_count, Condition(sa__MonsterSpawnArray_count))
  st__MonsterSpawnArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawnArray_onDestroy, Condition(sa__MonsterSpawnArray_onDestroy))
  st__MonsterSpawnArray_setMonsterSpawnNull = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawnArray_setMonsterSpawnNull, Condition(sa__MonsterSpawnArray_setMonsterSpawnNull))
  st__EscaperEffectArray_onDestroy = CreateTrigger()
  TriggerAddCondition(st__EscaperEffectArray_onDestroy, Condition(sa__EscaperEffectArray_onDestroy))
  st__TerrainType_getTerrainTypeId = CreateTrigger()
  TriggerAddCondition(st__TerrainType_getTerrainTypeId, Condition(sa__TerrainType_getTerrainTypeId))
  st__TerrainType_getKind = CreateTrigger()
  TriggerAddCondition(st__TerrainType_getKind, Condition(sa__TerrainType_getKind))
  st__TerrainType_onDestroy[35] = CreateTrigger()
  st__TerrainType_onDestroy[43] = st__TerrainType_onDestroy[35]
  st__TerrainType_onDestroy[44] = st__TerrainType_onDestroy[35]
  TriggerAddCondition(st__TerrainType_onDestroy[35], Condition(sa__TerrainType_onDestroy))
  st__MonsterSpawn_onDestroy = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawn_onDestroy, Condition(sa__MonsterSpawn_onDestroy))
  st__MonsterSpawn_startMobMovement = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawn_startMobMovement, Condition(sa__MonsterSpawn_startMobMovement))
  st__MonsterSpawn_createMob = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawn_createMob, Condition(sa__MonsterSpawn_createMob))
  st__MonsterSpawn_toString = CreateTrigger()
  TriggerAddCondition(st__MonsterSpawn_toString, Condition(sa__MonsterSpawn_toString))
  st__MakeTerrainVerticalSymmetryAction_applySymmetry = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainVerticalSymmetryAction_applySymmetry, Condition(sa__MakeTerrainVerticalSymmetryAction_applySymmetry))
  st__MakeAction_cancel[41] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[41], Condition(sa__MakeTerrainVerticalSymmetryAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[41], sa__MakeTerrainVerticalSymmetryAction_cancel)
  st__MakeAction_redo[41] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[41], Condition(sa__MakeTerrainVerticalSymmetryAction_redo))
  TriggerAddAction(st__MakeAction_redo[41], sa__MakeTerrainVerticalSymmetryAction_redo)
  st__MakeAction_onDestroy[41] = nil
  st__MakeTerrainHorizontalSymmetryAction_applySymmetry = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHorizontalSymmetryAction_applySymmetry, Condition(sa__MakeTerrainHorizontalSymmetryAction_applySymmetry))
  st__MakeAction_cancel[40] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[40], Condition(sa__MakeTerrainHorizontalSymmetryAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[40], sa__MakeTerrainHorizontalSymmetryAction_cancel)
  st__MakeAction_redo[40] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[40], Condition(sa__MakeTerrainHorizontalSymmetryAction_redo))
  TriggerAddAction(st__MakeAction_redo[40], sa__MakeTerrainHorizontalSymmetryAction_redo)
  st__MakeAction_onDestroy[40] = nil
  st__MakeAction_cancel[39] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[39], Condition(sa__MakeTerrainCreateAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[39], sa__MakeTerrainCreateAction_cancel)
  st__MakeAction_redo[39] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[39], Condition(sa__MakeTerrainCreateAction_redo))
  TriggerAddAction(st__MakeAction_redo[39], sa__MakeTerrainCreateAction_redo)
  st__MakeAction_onDestroy[39] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[39], Condition(sa__MakeTerrainCreateAction_onDestroy))
  st__MakeAction_cancel[38] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_cancel[38], Condition(sa__MakeTerrainCopyPasteAction_cancel))
  TriggerAddAction(st__MakeAction_cancel[38], sa__MakeTerrainCopyPasteAction_cancel)
  st__MakeAction_redo[38] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_redo[38], Condition(sa__MakeTerrainCopyPasteAction_redo))
  TriggerAddAction(st__MakeAction_redo[38], sa__MakeTerrainCopyPasteAction_redo)
  st__MakeAction_onDestroy[38] = CreateTrigger()
  TriggerAddCondition(st__MakeAction_onDestroy[38], Condition(sa__MakeTerrainCopyPasteAction_onDestroy))
  st__EscaperEffect_onDestroy = CreateTrigger()
  TriggerAddCondition(st__EscaperEffect_onDestroy, Condition(sa__EscaperEffect_onDestroy))
  st__CasterShot_create = CreateTrigger()
  TriggerAddCondition(st__CasterShot_create, Condition(sa__CasterShot_create))
  st__CasterShot_onDestroy = CreateTrigger()
  TriggerAddCondition(st__CasterShot_onDestroy, Condition(sa__CasterShot_onDestroy))
  st__MakeDeleteClearMob_create = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteClearMob_create, Condition(sa__MakeDeleteClearMob_create))
  st__MakeDeleteClearMob_clickMade = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteClearMob_clickMade, Condition(sa__MakeDeleteClearMob_clickMade))
  st__Make_cancelLastAction[106] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[106], Condition(sa__MakeDeleteClearMob_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[106], sa__MakeDeleteClearMob_cancelLastAction)
  st__Make_redoLastAction[106] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[106], Condition(sa__MakeDeleteClearMob_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[106], sa__MakeDeleteClearMob_redoLastAction)
  st__Make_onDestroy[106] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[106], Condition(sa__MakeDeleteClearMob_onDestroy))
  st__TerrainTypeSlide_getSlideSpeed = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeSlide_getSlideSpeed, Condition(sa__TerrainTypeSlide_getSlideSpeed))
  st__TerrainTypeSlide_getCanTurn = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeSlide_getCanTurn, Condition(sa__TerrainTypeSlide_getCanTurn))
  st__TerrainTypeWalk_getWalkSpeed = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeWalk_getWalkSpeed, Condition(sa__TerrainTypeWalk_getWalkSpeed))
  st__TerrainTypeDeath_getKillingEffectStr = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeDeath_getKillingEffectStr, Condition(sa__TerrainTypeDeath_getKillingEffectStr))
  st__TerrainTypeDeath_getTimeToKill = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeDeath_getTimeToKill, Condition(sa__TerrainTypeDeath_getTimeToKill))
  st__TerrainTypeDeath_killEscaper = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeDeath_killEscaper, Condition(sa__TerrainTypeDeath_killEscaper))
  st__TerrainTypeDeath_getTimer = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeDeath_getTimer, Condition(sa__TerrainTypeDeath_getTimer))
  st__TerrainTypeDeath_getToleranceDist = CreateTrigger()
  TriggerAddCondition(st__TerrainTypeDeath_getToleranceDist, Condition(sa__TerrainTypeDeath_getToleranceDist))
  st__TerrainType_onDestroy[52] = CreateTrigger()
  TriggerAddCondition(st__TerrainType_onDestroy[52], Condition(sa__TerrainTypeDeath_onDestroy))
  TriggerAddCondition(st__TerrainType_onDestroy[52], Condition(sa__TerrainType_onDestroy))
  st__Start_getRandomX = CreateTrigger()
  TriggerAddCondition(st__Start_getRandomX, Condition(sa__Start_getRandomX))
  st__Start_getRandomY = CreateTrigger()
  TriggerAddCondition(st__Start_getRandomY, Condition(sa__Start_getRandomY))
  st__RectInterface_toString[56] = CreateTrigger()
  TriggerAddCondition(st__RectInterface_toString[56], Condition(sa__Start_toString))
  TriggerAddAction(st__RectInterface_toString[56], sa__Start_toString)
  st__RectInterface_onDestroy[56] = CreateTrigger()
  TriggerAddCondition(st__RectInterface_onDestroy[56], Condition(sa__Start_onDestroy))
  st__RectInterface_toString[57] = CreateTrigger()
  TriggerAddCondition(st__RectInterface_toString[57], Condition(sa__End_toString))
  TriggerAddAction(st__RectInterface_toString[57], sa__End_toString)
  st__RectInterface_onDestroy[57] = CreateTrigger()
  TriggerAddCondition(st__RectInterface_onDestroy[57], Condition(sa__End_onDestroy))
  st__MakeCaster_getCasterType = CreateTrigger()
  TriggerAddCondition(st__MakeCaster_getCasterType, Condition(sa__MakeCaster_getCasterType))
  st__MakeCaster_getAngle = CreateTrigger()
  TriggerAddCondition(st__MakeCaster_getAngle, Condition(sa__MakeCaster_getAngle))
  st__MakeCaster_create = CreateTrigger()
  TriggerAddCondition(st__MakeCaster_create, Condition(sa__MakeCaster_create))
  st__Make_cancelLastAction[68] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[68], Condition(sa__MakeCaster_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[68], sa__MakeCaster_cancelLastAction)
  st__Make_redoLastAction[68] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[68], Condition(sa__MakeCaster_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[68], sa__MakeCaster_redoLastAction)
  st__Make_onDestroy[68] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[68], Condition(sa__MakeCaster_onDestroy))
  st__MakeDeleteCasters_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteCasters_isLastLocSavedUsed, Condition(sa__MakeDeleteCasters_isLastLocSavedUsed))
  st__MakeDeleteCasters_create = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteCasters_create, Condition(sa__MakeDeleteCasters_create))
  st__MakeDeleteCasters_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteCasters_saveLoc, Condition(sa__MakeDeleteCasters_saveLoc))
  st__MakeDeleteCasters_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteCasters_unsaveLocDefinitely, Condition(sa__MakeDeleteCasters_unsaveLocDefinitely))
  st__Make_cancelLastAction[69] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[69], Condition(sa__MakeDeleteCasters_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[69], sa__MakeDeleteCasters_cancelLastAction)
  st__Make_redoLastAction[69] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[69], Condition(sa__MakeDeleteCasters_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[69], sa__MakeDeleteCasters_redoLastAction)
  st__MakeDeleteCasters_getMode = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteCasters_getMode, Condition(sa__MakeDeleteCasters_getMode))
  st__Make_onDestroy[69] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[69], Condition(sa__MakeDeleteCasters_onDestroy))
  st__MakeDeleteMeteors_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMeteors_isLastLocSavedUsed, Condition(sa__MakeDeleteMeteors_isLastLocSavedUsed))
  st__MakeDeleteMeteors_create = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMeteors_create, Condition(sa__MakeDeleteMeteors_create))
  st__MakeDeleteMeteors_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMeteors_saveLoc, Condition(sa__MakeDeleteMeteors_saveLoc))
  st__MakeDeleteMeteors_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMeteors_unsaveLocDefinitely, Condition(sa__MakeDeleteMeteors_unsaveLocDefinitely))
  st__Make_cancelLastAction[70] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[70], Condition(sa__MakeDeleteMeteors_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[70], sa__MakeDeleteMeteors_cancelLastAction)
  st__Make_redoLastAction[70] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[70], Condition(sa__MakeDeleteMeteors_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[70], sa__MakeDeleteMeteors_redoLastAction)
  st__MakeDeleteMeteors_getMode = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMeteors_getMode, Condition(sa__MakeDeleteMeteors_getMode))
  st__Make_onDestroy[70] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[70], Condition(sa__MakeDeleteMeteors_onDestroy))
  st__MakeDeleteMonsters_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMonsters_isLastLocSavedUsed, Condition(sa__MakeDeleteMonsters_isLastLocSavedUsed))
  st__MakeDeleteMonsters_create = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMonsters_create, Condition(sa__MakeDeleteMonsters_create))
  st__MakeDeleteMonsters_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMonsters_saveLoc, Condition(sa__MakeDeleteMonsters_saveLoc))
  st__MakeDeleteMonsters_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMonsters_unsaveLocDefinitely, Condition(sa__MakeDeleteMonsters_unsaveLocDefinitely))
  st__Make_cancelLastAction[71] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[71], Condition(sa__MakeDeleteMonsters_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[71], sa__MakeDeleteMonsters_cancelLastAction)
  st__Make_redoLastAction[71] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[71], Condition(sa__MakeDeleteMonsters_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[71], sa__MakeDeleteMonsters_redoLastAction)
  st__MakeDeleteMonsters_getMode = CreateTrigger()
  TriggerAddCondition(st__MakeDeleteMonsters_getMode, Condition(sa__MakeDeleteMonsters_getMode))
  st__Make_onDestroy[71] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[71], Condition(sa__MakeDeleteMonsters_onDestroy))
  st__MakeEnd_create = CreateTrigger()
  TriggerAddCondition(st__MakeEnd_create, Condition(sa__MakeEnd_create))
  st__MakeEnd_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeEnd_saveLoc, Condition(sa__MakeEnd_saveLoc))
  st__MakeEnd_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeEnd_isLastLocSavedUsed, Condition(sa__MakeEnd_isLastLocSavedUsed))
  st__Make_cancelLastAction[72] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[72], Condition(sa__MakeEnd_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[72], sa__MakeEnd_cancelLastAction)
  st__Make_redoLastAction[72] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[72], Condition(sa__MakeEnd_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[72], sa__MakeEnd_redoLastAction)
  st__Make_onDestroy[72] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[72], Condition(sa__MakeEnd_onDestroy))
  st__MakeExchangeTerrains_create = CreateTrigger()
  TriggerAddCondition(st__MakeExchangeTerrains_create, Condition(sa__MakeExchangeTerrains_create))
  st__MakeExchangeTerrains_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeExchangeTerrains_saveLoc, Condition(sa__MakeExchangeTerrains_saveLoc))
  st__MakeExchangeTerrains_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeExchangeTerrains_unsaveLocDefinitely, Condition(sa__MakeExchangeTerrains_unsaveLocDefinitely))
  st__MakeExchangeTerrains_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeExchangeTerrains_isLastLocSavedUsed, Condition(sa__MakeExchangeTerrains_isLastLocSavedUsed))
  st__Make_cancelLastAction[73] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[73], Condition(sa__MakeExchangeTerrains_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[73], sa__MakeExchangeTerrains_cancelLastAction)
  st__Make_redoLastAction[73] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[73], Condition(sa__MakeExchangeTerrains_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[73], sa__MakeExchangeTerrains_redoLastAction)
  st__Make_onDestroy[73] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[73], Condition(sa__MakeExchangeTerrains_onDestroy))
  st__MakeGetTerrainType_create = CreateTrigger()
  TriggerAddCondition(st__MakeGetTerrainType_create, Condition(sa__MakeGetTerrainType_create))
  st__Make_cancelLastAction[74] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[74], Condition(sa__MakeGetTerrainType_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[74], sa__MakeGetTerrainType_cancelLastAction)
  st__Make_redoLastAction[74] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[74], Condition(sa__MakeGetTerrainType_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[74], sa__MakeGetTerrainType_redoLastAction)
  st__Make_onDestroy[74] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[74], Condition(sa__MakeGetTerrainType_onDestroy))
  st__MakeGetUnitTeleportPeriod_create = CreateTrigger()
  TriggerAddCondition(st__MakeGetUnitTeleportPeriod_create, Condition(sa__MakeGetUnitTeleportPeriod_create))
  st__Make_cancelLastAction[75] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[75], Condition(sa__MakeGetUnitTeleportPeriod_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[75], sa__MakeGetUnitTeleportPeriod_cancelLastAction)
  st__Make_redoLastAction[75] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[75], Condition(sa__MakeGetUnitTeleportPeriod_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[75], sa__MakeGetUnitTeleportPeriod_redoLastAction)
  st__Make_onDestroy[75] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[75], Condition(sa__MakeGetUnitTeleportPeriod_onDestroy))
  st__MakeMeteor_create = CreateTrigger()
  TriggerAddCondition(st__MakeMeteor_create, Condition(sa__MakeMeteor_create))
  st__Make_cancelLastAction[76] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[76], Condition(sa__MakeMeteor_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[76], sa__MakeMeteor_cancelLastAction)
  st__Make_redoLastAction[76] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[76], Condition(sa__MakeMeteor_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[76], sa__MakeMeteor_redoLastAction)
  st__Make_onDestroy[76] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[76], Condition(sa__MakeMeteor_onDestroy))
  st__MakeMonsterMultiplePatrols_getMonsterType = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterMultiplePatrols_getMonsterType, Condition(sa__MakeMonsterMultiplePatrols_getMonsterType))
  st__MakeMonsterMultiplePatrols_getMode = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterMultiplePatrols_getMode, Condition(sa__MakeMonsterMultiplePatrols_getMode))
  st__MakeMonsterMultiplePatrols_getMonster = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterMultiplePatrols_getMonster, Condition(sa__MakeMonsterMultiplePatrols_getMonster))
  st__MakeMonsterMultiplePatrols_create = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterMultiplePatrols_create, Condition(sa__MakeMonsterMultiplePatrols_create))
  st__MakeMonsterMultiplePatrols_nextMonster = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterMultiplePatrols_nextMonster, Condition(sa__MakeMonsterMultiplePatrols_nextMonster))
  st__MakeMonsterMultiplePatrols_getLocPointeur = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterMultiplePatrols_getLocPointeur, Condition(sa__MakeMonsterMultiplePatrols_getLocPointeur))
  st__MakeMonsterMultiplePatrols_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterMultiplePatrols_saveLoc, Condition(sa__MakeMonsterMultiplePatrols_saveLoc))
  st__MakeMonsterMultiplePatrols_setMonster = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterMultiplePatrols_setMonster, Condition(sa__MakeMonsterMultiplePatrols_setMonster))
  st__Make_cancelLastAction[77] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[77], Condition(sa__MakeMonsterMultiplePatrols_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[77], sa__MakeMonsterMultiplePatrols_cancelLastAction)
  st__Make_redoLastAction[77] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[77], Condition(sa__MakeMonsterMultiplePatrols_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[77], sa__MakeMonsterMultiplePatrols_redoLastAction)
  st__Make_onDestroy[77] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[77], Condition(sa__MakeMonsterMultiplePatrols_onDestroy))
  TriggerAddCondition(st__Make_onDestroy[77], Condition(sa__MakeMonsterMultiplePatrols__disposeArrays))
  st__MakeMonsterNoMove_getMonsterType = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterNoMove_getMonsterType, Condition(sa__MakeMonsterNoMove_getMonsterType))
  st__MakeMonsterNoMove_getFacingAngle = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterNoMove_getFacingAngle, Condition(sa__MakeMonsterNoMove_getFacingAngle))
  st__MakeMonsterNoMove_create = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterNoMove_create, Condition(sa__MakeMonsterNoMove_create))
  st__Make_cancelLastAction[80] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[80], Condition(sa__MakeMonsterNoMove_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[80], sa__MakeMonsterNoMove_cancelLastAction)
  st__Make_redoLastAction[80] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[80], Condition(sa__MakeMonsterNoMove_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[80], sa__MakeMonsterNoMove_redoLastAction)
  st__Make_onDestroy[80] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[80], Condition(sa__MakeMonsterNoMove_onDestroy))
  st__MakeMonsterSimplePatrol_getMonsterType = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSimplePatrol_getMonsterType, Condition(sa__MakeMonsterSimplePatrol_getMonsterType))
  st__MakeMonsterSimplePatrol_create = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSimplePatrol_create, Condition(sa__MakeMonsterSimplePatrol_create))
  st__MakeMonsterSimplePatrol_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSimplePatrol_saveLoc, Condition(sa__MakeMonsterSimplePatrol_saveLoc))
  st__MakeMonsterSimplePatrol_unsaveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSimplePatrol_unsaveLoc, Condition(sa__MakeMonsterSimplePatrol_unsaveLoc))
  st__MakeMonsterSimplePatrol_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSimplePatrol_unsaveLocDefinitely, Condition(sa__MakeMonsterSimplePatrol_unsaveLocDefinitely))
  st__MakeMonsterSimplePatrol_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSimplePatrol_isLastLocSavedUsed, Condition(sa__MakeMonsterSimplePatrol_isLastLocSavedUsed))
  st__Make_cancelLastAction[81] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[81], Condition(sa__MakeMonsterSimplePatrol_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[81], sa__MakeMonsterSimplePatrol_cancelLastAction)
  st__Make_redoLastAction[81] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[81], Condition(sa__MakeMonsterSimplePatrol_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[81], sa__MakeMonsterSimplePatrol_redoLastAction)
  st__MakeMonsterSimplePatrol_getMode = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSimplePatrol_getMode, Condition(sa__MakeMonsterSimplePatrol_getMode))
  st__Make_onDestroy[81] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[81], Condition(sa__MakeMonsterSimplePatrol_onDestroy))
  st__MakeMonsterSpawn_create = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSpawn_create, Condition(sa__MakeMonsterSpawn_create))
  st__MakeMonsterSpawn_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSpawn_saveLoc, Condition(sa__MakeMonsterSpawn_saveLoc))
  st__MakeMonsterSpawn_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterSpawn_isLastLocSavedUsed, Condition(sa__MakeMonsterSpawn_isLastLocSavedUsed))
  st__Make_cancelLastAction[82] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[82], Condition(sa__MakeMonsterSpawn_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[82], sa__MakeMonsterSpawn_cancelLastAction)
  st__Make_redoLastAction[82] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[82], Condition(sa__MakeMonsterSpawn_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[82], sa__MakeMonsterSpawn_redoLastAction)
  st__Make_onDestroy[82] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[82], Condition(sa__MakeMonsterSpawn_onDestroy))
  st__MakeMonsterTeleport_getMonsterType = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_getMonsterType, Condition(sa__MakeMonsterTeleport_getMonsterType))
  st__MakeMonsterTeleport_getPeriod = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_getPeriod, Condition(sa__MakeMonsterTeleport_getPeriod))
  st__MakeMonsterTeleport_getAngle = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_getAngle, Condition(sa__MakeMonsterTeleport_getAngle))
  st__MakeMonsterTeleport_getMode = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_getMode, Condition(sa__MakeMonsterTeleport_getMode))
  st__MakeMonsterTeleport_getMonster = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_getMonster, Condition(sa__MakeMonsterTeleport_getMonster))
  st__MakeMonsterTeleport_create = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_create, Condition(sa__MakeMonsterTeleport_create))
  st__MakeMonsterTeleport_nextMonster = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_nextMonster, Condition(sa__MakeMonsterTeleport_nextMonster))
  st__MakeMonsterTeleport_addWaitPeriod = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_addWaitPeriod, Condition(sa__MakeMonsterTeleport_addWaitPeriod))
  st__MakeMonsterTeleport_addHidePeriod = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_addHidePeriod, Condition(sa__MakeMonsterTeleport_addHidePeriod))
  st__MakeMonsterTeleport_getLocPointeur = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_getLocPointeur, Condition(sa__MakeMonsterTeleport_getLocPointeur))
  st__MakeMonsterTeleport_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_saveLoc, Condition(sa__MakeMonsterTeleport_saveLoc))
  st__MakeMonsterTeleport_setMonster = CreateTrigger()
  TriggerAddCondition(st__MakeMonsterTeleport_setMonster, Condition(sa__MakeMonsterTeleport_setMonster))
  st__Make_cancelLastAction[83] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[83], Condition(sa__MakeMonsterTeleport_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[83], sa__MakeMonsterTeleport_cancelLastAction)
  st__Make_redoLastAction[83] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[83], Condition(sa__MakeMonsterTeleport_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[83], sa__MakeMonsterTeleport_redoLastAction)
  st__Make_onDestroy[83] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[83], Condition(sa__MakeMonsterTeleport_onDestroy))
  TriggerAddCondition(st__Make_onDestroy[83], Condition(sa__MakeMonsterTeleport__disposeArrays))
  st__MakeSetUnitMonsterType_getMonsterType = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitMonsterType_getMonsterType, Condition(sa__MakeSetUnitMonsterType_getMonsterType))
  st__MakeSetUnitMonsterType_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitMonsterType_isLastLocSavedUsed, Condition(sa__MakeSetUnitMonsterType_isLastLocSavedUsed))
  st__MakeSetUnitMonsterType_create = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitMonsterType_create, Condition(sa__MakeSetUnitMonsterType_create))
  st__MakeSetUnitMonsterType_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitMonsterType_saveLoc, Condition(sa__MakeSetUnitMonsterType_saveLoc))
  st__MakeSetUnitMonsterType_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitMonsterType_unsaveLocDefinitely, Condition(sa__MakeSetUnitMonsterType_unsaveLocDefinitely))
  st__Make_cancelLastAction[86] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[86], Condition(sa__MakeSetUnitMonsterType_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[86], sa__MakeSetUnitMonsterType_cancelLastAction)
  st__Make_redoLastAction[86] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[86], Condition(sa__MakeSetUnitMonsterType_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[86], sa__MakeSetUnitMonsterType_redoLastAction)
  st__MakeSetUnitMonsterType_getMode = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitMonsterType_getMode, Condition(sa__MakeSetUnitMonsterType_getMode))
  st__Make_onDestroy[86] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[86], Condition(sa__MakeSetUnitMonsterType_onDestroy))
  st__MakeSetUnitTeleportPeriod_getPeriod = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitTeleportPeriod_getPeriod, Condition(sa__MakeSetUnitTeleportPeriod_getPeriod))
  st__MakeSetUnitTeleportPeriod_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitTeleportPeriod_isLastLocSavedUsed, Condition(sa__MakeSetUnitTeleportPeriod_isLastLocSavedUsed))
  st__MakeSetUnitTeleportPeriod_create = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitTeleportPeriod_create, Condition(sa__MakeSetUnitTeleportPeriod_create))
  st__MakeSetUnitTeleportPeriod_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitTeleportPeriod_saveLoc, Condition(sa__MakeSetUnitTeleportPeriod_saveLoc))
  st__MakeSetUnitTeleportPeriod_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitTeleportPeriod_unsaveLocDefinitely, Condition(sa__MakeSetUnitTeleportPeriod_unsaveLocDefinitely))
  st__Make_cancelLastAction[87] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[87], Condition(sa__MakeSetUnitTeleportPeriod_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[87], sa__MakeSetUnitTeleportPeriod_cancelLastAction)
  st__Make_redoLastAction[87] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[87], Condition(sa__MakeSetUnitTeleportPeriod_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[87], sa__MakeSetUnitTeleportPeriod_redoLastAction)
  st__MakeSetUnitTeleportPeriod_getMode = CreateTrigger()
  TriggerAddCondition(st__MakeSetUnitTeleportPeriod_getMode, Condition(sa__MakeSetUnitTeleportPeriod_getMode))
  st__Make_onDestroy[87] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[87], Condition(sa__MakeSetUnitTeleportPeriod_onDestroy))
  st__MakeStart_create = CreateTrigger()
  TriggerAddCondition(st__MakeStart_create, Condition(sa__MakeStart_create))
  st__MakeStart_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeStart_saveLoc, Condition(sa__MakeStart_saveLoc))
  st__MakeStart_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeStart_isLastLocSavedUsed, Condition(sa__MakeStart_isLastLocSavedUsed))
  st__Make_cancelLastAction[88] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[88], Condition(sa__MakeStart_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[88], sa__MakeStart_cancelLastAction)
  st__Make_redoLastAction[88] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[88], Condition(sa__MakeStart_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[88], sa__MakeStart_redoLastAction)
  st__MakeStart_forNext = CreateTrigger()
  TriggerAddCondition(st__MakeStart_forNext, Condition(sa__MakeStart_forNext))
  st__Make_onDestroy[88] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[88], Condition(sa__MakeStart_onDestroy))
  st__MakeTerrainCopyPaste_create = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainCopyPaste_create, Condition(sa__MakeTerrainCopyPaste_create))
  st__MakeTerrainCopyPaste_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainCopyPaste_saveLoc, Condition(sa__MakeTerrainCopyPaste_saveLoc))
  st__Make_cancelLastAction[89] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[89], Condition(sa__MakeTerrainCopyPaste_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[89], sa__MakeTerrainCopyPaste_cancelLastAction)
  st__Make_redoLastAction[89] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[89], Condition(sa__MakeTerrainCopyPaste_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[89], sa__MakeTerrainCopyPaste_redoLastAction)
  st__Make_onDestroy[89] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[89], Condition(sa__MakeTerrainCopyPaste_onDestroy))
  st__MakeTerrainCreate_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainCreate_isLastLocSavedUsed, Condition(sa__MakeTerrainCreate_isLastLocSavedUsed))
  st__MakeTerrainCreate_getTerrainType = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainCreate_getTerrainType, Condition(sa__MakeTerrainCreate_getTerrainType))
  st__MakeTerrainCreate_create = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainCreate_create, Condition(sa__MakeTerrainCreate_create))
  st__MakeTerrainCreate_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainCreate_saveLoc, Condition(sa__MakeTerrainCreate_saveLoc))
  st__MakeTerrainCreate_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainCreate_unsaveLocDefinitely, Condition(sa__MakeTerrainCreate_unsaveLocDefinitely))
  st__Make_cancelLastAction[90] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[90], Condition(sa__MakeTerrainCreate_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[90], sa__MakeTerrainCreate_cancelLastAction)
  st__Make_redoLastAction[90] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[90], Condition(sa__MakeTerrainCreate_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[90], sa__MakeTerrainCreate_redoLastAction)
  st__Make_onDestroy[90] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[90], Condition(sa__MakeTerrainCreate_onDestroy))
  st__MakeTerrainHeight_create = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHeight_create, Condition(sa__MakeTerrainHeight_create))
  st__MakeTerrainHeight_getRadius = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHeight_getRadius, Condition(sa__MakeTerrainHeight_getRadius))
  st__MakeTerrainHeight_getHeight = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHeight_getHeight, Condition(sa__MakeTerrainHeight_getHeight))
  st__Make_cancelLastAction[91] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[91], Condition(sa__MakeTerrainHeight_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[91], sa__MakeTerrainHeight_cancelLastAction)
  st__Make_redoLastAction[91] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[91], Condition(sa__MakeTerrainHeight_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[91], sa__MakeTerrainHeight_redoLastAction)
  st__Make_onDestroy[91] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[91], Condition(sa__MakeTerrainHeight_onDestroy))
  st__MakeTerrainHorizontalSymmetry_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHorizontalSymmetry_isLastLocSavedUsed, Condition(sa__MakeTerrainHorizontalSymmetry_isLastLocSavedUsed))
  st__MakeTerrainHorizontalSymmetry_create = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHorizontalSymmetry_create, Condition(sa__MakeTerrainHorizontalSymmetry_create))
  st__MakeTerrainHorizontalSymmetry_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHorizontalSymmetry_saveLoc, Condition(sa__MakeTerrainHorizontalSymmetry_saveLoc))
  st__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely, Condition(sa__MakeTerrainHorizontalSymmetry_unsaveLocDefinitely))
  st__Make_cancelLastAction[92] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[92], Condition(sa__MakeTerrainHorizontalSymmetry_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[92], sa__MakeTerrainHorizontalSymmetry_cancelLastAction)
  st__Make_redoLastAction[92] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[92], Condition(sa__MakeTerrainHorizontalSymmetry_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[92], sa__MakeTerrainHorizontalSymmetry_redoLastAction)
  st__Make_onDestroy[92] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[92], Condition(sa__MakeTerrainHorizontalSymmetry_onDestroy))
  st__MakeTerrainVerticalSymmetry_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainVerticalSymmetry_isLastLocSavedUsed, Condition(sa__MakeTerrainVerticalSymmetry_isLastLocSavedUsed))
  st__MakeTerrainVerticalSymmetry_create = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainVerticalSymmetry_create, Condition(sa__MakeTerrainVerticalSymmetry_create))
  st__MakeTerrainVerticalSymmetry_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainVerticalSymmetry_saveLoc, Condition(sa__MakeTerrainVerticalSymmetry_saveLoc))
  st__MakeTerrainVerticalSymmetry_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeTerrainVerticalSymmetry_unsaveLocDefinitely, Condition(sa__MakeTerrainVerticalSymmetry_unsaveLocDefinitely))
  st__Make_cancelLastAction[93] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[93], Condition(sa__MakeTerrainVerticalSymmetry_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[93], sa__MakeTerrainVerticalSymmetry_cancelLastAction)
  st__Make_redoLastAction[93] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[93], Condition(sa__MakeTerrainVerticalSymmetry_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[93], sa__MakeTerrainVerticalSymmetry_redoLastAction)
  st__Make_onDestroy[93] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[93], Condition(sa__MakeTerrainVerticalSymmetry_onDestroy))
  st__MakeVisibilityModifier_create = CreateTrigger()
  TriggerAddCondition(st__MakeVisibilityModifier_create, Condition(sa__MakeVisibilityModifier_create))
  st__MakeVisibilityModifier_saveLoc = CreateTrigger()
  TriggerAddCondition(st__MakeVisibilityModifier_saveLoc, Condition(sa__MakeVisibilityModifier_saveLoc))
  st__MakeVisibilityModifier_unsaveLocDefinitely = CreateTrigger()
  TriggerAddCondition(st__MakeVisibilityModifier_unsaveLocDefinitely, Condition(sa__MakeVisibilityModifier_unsaveLocDefinitely))
  st__MakeVisibilityModifier_isLastLocSavedUsed = CreateTrigger()
  TriggerAddCondition(st__MakeVisibilityModifier_isLastLocSavedUsed, Condition(sa__MakeVisibilityModifier_isLastLocSavedUsed))
  st__Make_cancelLastAction[94] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[94], Condition(sa__MakeVisibilityModifier_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[94], sa__MakeVisibilityModifier_cancelLastAction)
  st__Make_redoLastAction[94] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[94], Condition(sa__MakeVisibilityModifier_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[94], sa__MakeVisibilityModifier_redoLastAction)
  st__Make_onDestroy[94] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[94], Condition(sa__MakeVisibilityModifier_onDestroy))
  st__MonsterMultiplePatrols_storeNewLoc = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrols_storeNewLoc, Condition(sa__MonsterMultiplePatrols_storeNewLoc))
  st__MonsterMultiplePatrols_destroyLocs = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrols_destroyLocs, Condition(sa__MonsterMultiplePatrols_destroyLocs))
  st__Monster_getId[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_getId[95], Condition(sa__MonsterMultiplePatrols_getId))
  TriggerAddAction(st__Monster_getId[95], sa__MonsterMultiplePatrols_getId)
  st__MonsterMultiplePatrols_getCurrentTrigger = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrols_getCurrentTrigger, Condition(sa__MonsterMultiplePatrols_getCurrentTrigger))
  st__Monster_removeUnit[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_removeUnit[95], Condition(sa__MonsterMultiplePatrols_removeUnit))
  TriggerAddAction(st__Monster_removeUnit[95], sa__MonsterMultiplePatrols_removeUnit)
  st__Monster_killUnit[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_killUnit[95], Condition(sa__MonsterMultiplePatrols_killUnit))
  TriggerAddAction(st__Monster_killUnit[95], sa__MonsterMultiplePatrols_killUnit)
  st__MonsterMultiplePatrols_nextMove = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrols_nextMove, Condition(sa__MonsterMultiplePatrols_nextMove))
  st__Monster_createUnit[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_createUnit[95], Condition(sa__MonsterMultiplePatrols_createUnit))
  TriggerAddAction(st__Monster_createUnit[95], sa__MonsterMultiplePatrols_createUnit)
  st__Monster_getLife[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_getLife[95], Condition(sa__MonsterMultiplePatrols_getLife))
  TriggerAddAction(st__Monster_getLife[95], sa__MonsterMultiplePatrols_getLife)
  st__Monster_setLife[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_setLife[95], Condition(sa__MonsterMultiplePatrols_setLife))
  TriggerAddAction(st__Monster_setLife[95], sa__MonsterMultiplePatrols_setLife)
  st__MonsterMultiplePatrols_destroyLastLoc = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrols_destroyLastLoc, Condition(sa__MonsterMultiplePatrols_destroyLastLoc))
  st__MonsterMultiplePatrols_addNewLoc = CreateTrigger()
  TriggerAddCondition(st__MonsterMultiplePatrols_addNewLoc, Condition(sa__MonsterMultiplePatrols_addNewLoc))
  st__Monster_getMonsterType[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_getMonsterType[95], Condition(sa__MonsterMultiplePatrols_getMonsterType))
  TriggerAddAction(st__Monster_getMonsterType[95], sa__MonsterMultiplePatrols_getMonsterType)
  st__Monster_setMonsterType[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_setMonsterType[95], Condition(sa__MonsterMultiplePatrols_setMonsterType))
  TriggerAddAction(st__Monster_setMonsterType[95], sa__MonsterMultiplePatrols_setMonsterType)
  st__Monster_temporarilyDisable[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_temporarilyDisable[95], Condition(sa__MonsterMultiplePatrols_temporarilyDisable))
  TriggerAddAction(st__Monster_temporarilyDisable[95], sa__MonsterMultiplePatrols_temporarilyDisable)
  st__Monster_temporarilyEnable[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_temporarilyEnable[95], Condition(sa__MonsterMultiplePatrols_temporarilyEnable))
  TriggerAddAction(st__Monster_temporarilyEnable[95], sa__MonsterMultiplePatrols_temporarilyEnable)
  st__Monster_setBaseColor[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_setBaseColor[95], Condition(sa__MonsterMultiplePatrols_setBaseColor))
  TriggerAddAction(st__Monster_setBaseColor[95], sa__MonsterMultiplePatrols_setBaseColor)
  st__Monster_setVertexColor[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_setVertexColor[95], Condition(sa__MonsterMultiplePatrols_setVertexColor))
  TriggerAddAction(st__Monster_setVertexColor[95], sa__MonsterMultiplePatrols_setVertexColor)
  st__Monster_reinitColor[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_reinitColor[95], Condition(sa__MonsterMultiplePatrols_reinitColor))
  TriggerAddAction(st__Monster_reinitColor[95], sa__MonsterMultiplePatrols_reinitColor)
  st__Monster_toString[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_toString[95], Condition(sa__MonsterMultiplePatrols_toString))
  TriggerAddAction(st__Monster_toString[95], sa__MonsterMultiplePatrols_toString)
  st__Monster_onDestroy[95] = CreateTrigger()
  TriggerAddCondition(st__Monster_onDestroy[95], Condition(sa__MonsterMultiplePatrols_onDestroy))
  st__Monster_getId[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_getId[96], Condition(sa__MonsterNoMove_getId))
  TriggerAddAction(st__Monster_getId[96], sa__MonsterNoMove_getId)
  st__Monster_removeUnit[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_removeUnit[96], Condition(sa__MonsterNoMove_removeUnit))
  TriggerAddAction(st__Monster_removeUnit[96], sa__MonsterNoMove_removeUnit)
  st__Monster_killUnit[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_killUnit[96], Condition(sa__MonsterNoMove_killUnit))
  TriggerAddAction(st__Monster_killUnit[96], sa__MonsterNoMove_killUnit)
  st__Monster_createUnit[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_createUnit[96], Condition(sa__MonsterNoMove_createUnit))
  TriggerAddAction(st__Monster_createUnit[96], sa__MonsterNoMove_createUnit)
  st__Monster_getLife[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_getLife[96], Condition(sa__MonsterNoMove_getLife))
  TriggerAddAction(st__Monster_getLife[96], sa__MonsterNoMove_getLife)
  st__Monster_setLife[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_setLife[96], Condition(sa__MonsterNoMove_setLife))
  TriggerAddAction(st__Monster_setLife[96], sa__MonsterNoMove_setLife)
  st__Monster_getMonsterType[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_getMonsterType[96], Condition(sa__MonsterNoMove_getMonsterType))
  TriggerAddAction(st__Monster_getMonsterType[96], sa__MonsterNoMove_getMonsterType)
  st__Monster_setMonsterType[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_setMonsterType[96], Condition(sa__MonsterNoMove_setMonsterType))
  TriggerAddAction(st__Monster_setMonsterType[96], sa__MonsterNoMove_setMonsterType)
  st__Monster_toString[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_toString[96], Condition(sa__MonsterNoMove_toString))
  TriggerAddAction(st__Monster_toString[96], sa__MonsterNoMove_toString)
  st__Monster_temporarilyDisable[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_temporarilyDisable[96], Condition(sa__MonsterNoMove_temporarilyDisable))
  TriggerAddAction(st__Monster_temporarilyDisable[96], sa__MonsterNoMove_temporarilyDisable)
  st__Monster_temporarilyEnable[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_temporarilyEnable[96], Condition(sa__MonsterNoMove_temporarilyEnable))
  TriggerAddAction(st__Monster_temporarilyEnable[96], sa__MonsterNoMove_temporarilyEnable)
  st__Monster_setBaseColor[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_setBaseColor[96], Condition(sa__MonsterNoMove_setBaseColor))
  TriggerAddAction(st__Monster_setBaseColor[96], sa__MonsterNoMove_setBaseColor)
  st__Monster_setVertexColor[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_setVertexColor[96], Condition(sa__MonsterNoMove_setVertexColor))
  TriggerAddAction(st__Monster_setVertexColor[96], sa__MonsterNoMove_setVertexColor)
  st__Monster_reinitColor[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_reinitColor[96], Condition(sa__MonsterNoMove_reinitColor))
  TriggerAddAction(st__Monster_reinitColor[96], sa__MonsterNoMove_reinitColor)
  st__Monster_onDestroy[96] = CreateTrigger()
  TriggerAddCondition(st__Monster_onDestroy[96], Condition(sa__MonsterNoMove_onDestroy))
  st__Monster_getId[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_getId[98], Condition(sa__MonsterSimplePatrol_getId))
  TriggerAddAction(st__Monster_getId[98], sa__MonsterSimplePatrol_getId)
  st__Monster_removeUnit[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_removeUnit[98], Condition(sa__MonsterSimplePatrol_removeUnit))
  TriggerAddAction(st__Monster_removeUnit[98], sa__MonsterSimplePatrol_removeUnit)
  st__Monster_killUnit[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_killUnit[98], Condition(sa__MonsterSimplePatrol_killUnit))
  TriggerAddAction(st__Monster_killUnit[98], sa__MonsterSimplePatrol_killUnit)
  st__Monster_createUnit[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_createUnit[98], Condition(sa__MonsterSimplePatrol_createUnit))
  TriggerAddAction(st__Monster_createUnit[98], sa__MonsterSimplePatrol_createUnit)
  st__Monster_getLife[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_getLife[98], Condition(sa__MonsterSimplePatrol_getLife))
  TriggerAddAction(st__Monster_getLife[98], sa__MonsterSimplePatrol_getLife)
  st__Monster_setLife[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_setLife[98], Condition(sa__MonsterSimplePatrol_setLife))
  TriggerAddAction(st__Monster_setLife[98], sa__MonsterSimplePatrol_setLife)
  st__Monster_getMonsterType[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_getMonsterType[98], Condition(sa__MonsterSimplePatrol_getMonsterType))
  TriggerAddAction(st__Monster_getMonsterType[98], sa__MonsterSimplePatrol_getMonsterType)
  st__Monster_setMonsterType[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_setMonsterType[98], Condition(sa__MonsterSimplePatrol_setMonsterType))
  TriggerAddAction(st__Monster_setMonsterType[98], sa__MonsterSimplePatrol_setMonsterType)
  st__Monster_temporarilyDisable[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_temporarilyDisable[98], Condition(sa__MonsterSimplePatrol_temporarilyDisable))
  TriggerAddAction(st__Monster_temporarilyDisable[98], sa__MonsterSimplePatrol_temporarilyDisable)
  st__Monster_temporarilyEnable[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_temporarilyEnable[98], Condition(sa__MonsterSimplePatrol_temporarilyEnable))
  TriggerAddAction(st__Monster_temporarilyEnable[98], sa__MonsterSimplePatrol_temporarilyEnable)
  st__Monster_setBaseColor[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_setBaseColor[98], Condition(sa__MonsterSimplePatrol_setBaseColor))
  TriggerAddAction(st__Monster_setBaseColor[98], sa__MonsterSimplePatrol_setBaseColor)
  st__Monster_setVertexColor[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_setVertexColor[98], Condition(sa__MonsterSimplePatrol_setVertexColor))
  TriggerAddAction(st__Monster_setVertexColor[98], sa__MonsterSimplePatrol_setVertexColor)
  st__Monster_reinitColor[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_reinitColor[98], Condition(sa__MonsterSimplePatrol_reinitColor))
  TriggerAddAction(st__Monster_reinitColor[98], sa__MonsterSimplePatrol_reinitColor)
  st__Monster_toString[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_toString[98], Condition(sa__MonsterSimplePatrol_toString))
  TriggerAddAction(st__Monster_toString[98], sa__MonsterSimplePatrol_toString)
  st__Monster_onDestroy[98] = CreateTrigger()
  TriggerAddCondition(st__Monster_onDestroy[98], Condition(sa__MonsterSimplePatrol_onDestroy))
  st__MonsterTeleport_storeNewLoc = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_storeNewLoc, Condition(sa__MonsterTeleport_storeNewLoc))
  st__MonsterTeleport_destroyLocs = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_destroyLocs, Condition(sa__MonsterTeleport_destroyLocs))
  st__Monster_getId[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_getId[99], Condition(sa__MonsterTeleport_getId))
  TriggerAddAction(st__Monster_getId[99], sa__MonsterTeleport_getId)
  st__Monster_removeUnit[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_removeUnit[99], Condition(sa__MonsterTeleport_removeUnit))
  TriggerAddAction(st__Monster_removeUnit[99], sa__MonsterTeleport_removeUnit)
  st__Monster_killUnit[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_killUnit[99], Condition(sa__MonsterTeleport_killUnit))
  TriggerAddAction(st__Monster_killUnit[99], sa__MonsterTeleport_killUnit)
  st__MonsterTeleport_setPeriod = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_setPeriod, Condition(sa__MonsterTeleport_setPeriod))
  st__MonsterTeleport_getPeriod = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_getPeriod, Condition(sa__MonsterTeleport_getPeriod))
  st__Monster_createUnit[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_createUnit[99], Condition(sa__MonsterTeleport_createUnit))
  TriggerAddAction(st__Monster_createUnit[99], sa__MonsterTeleport_createUnit)
  st__MonsterTeleport_nextMove = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_nextMove, Condition(sa__MonsterTeleport_nextMove))
  st__Monster_getLife[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_getLife[99], Condition(sa__MonsterTeleport_getLife))
  TriggerAddAction(st__Monster_getLife[99], sa__MonsterTeleport_getLife)
  st__Monster_setLife[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_setLife[99], Condition(sa__MonsterTeleport_setLife))
  TriggerAddAction(st__Monster_setLife[99], sa__MonsterTeleport_setLife)
  st__MonsterTeleport_getX = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_getX, Condition(sa__MonsterTeleport_getX))
  st__MonsterTeleport_getY = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_getY, Condition(sa__MonsterTeleport_getY))
  st__MonsterTeleport_addNewLoc = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_addNewLoc, Condition(sa__MonsterTeleport_addNewLoc))
  st__MonsterTeleport_destroyLastLoc = CreateTrigger()
  TriggerAddCondition(st__MonsterTeleport_destroyLastLoc, Condition(sa__MonsterTeleport_destroyLastLoc))
  st__Monster_getMonsterType[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_getMonsterType[99], Condition(sa__MonsterTeleport_getMonsterType))
  TriggerAddAction(st__Monster_getMonsterType[99], sa__MonsterTeleport_getMonsterType)
  st__Monster_setMonsterType[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_setMonsterType[99], Condition(sa__MonsterTeleport_setMonsterType))
  TriggerAddAction(st__Monster_setMonsterType[99], sa__MonsterTeleport_setMonsterType)
  st__Monster_temporarilyDisable[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_temporarilyDisable[99], Condition(sa__MonsterTeleport_temporarilyDisable))
  TriggerAddAction(st__Monster_temporarilyDisable[99], sa__MonsterTeleport_temporarilyDisable)
  st__Monster_temporarilyEnable[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_temporarilyEnable[99], Condition(sa__MonsterTeleport_temporarilyEnable))
  TriggerAddAction(st__Monster_temporarilyEnable[99], sa__MonsterTeleport_temporarilyEnable)
  st__Monster_setBaseColor[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_setBaseColor[99], Condition(sa__MonsterTeleport_setBaseColor))
  TriggerAddAction(st__Monster_setBaseColor[99], sa__MonsterTeleport_setBaseColor)
  st__Monster_setVertexColor[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_setVertexColor[99], Condition(sa__MonsterTeleport_setVertexColor))
  TriggerAddAction(st__Monster_setVertexColor[99], sa__MonsterTeleport_setVertexColor)
  st__Monster_reinitColor[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_reinitColor[99], Condition(sa__MonsterTeleport_reinitColor))
  TriggerAddAction(st__Monster_reinitColor[99], sa__MonsterTeleport_reinitColor)
  st__Monster_toString[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_toString[99], Condition(sa__MonsterTeleport_toString))
  TriggerAddAction(st__Monster_toString[99], sa__MonsterTeleport_toString)
  st__Monster_onDestroy[99] = CreateTrigger()
  TriggerAddCondition(st__Monster_onDestroy[99], Condition(sa__MonsterTeleport_onDestroy))
  st__MakeClearMob_create = CreateTrigger()
  TriggerAddCondition(st__MakeClearMob_create, Condition(sa__MakeClearMob_create))
  st__MakeClearMob_clickMade = CreateTrigger()
  TriggerAddCondition(st__MakeClearMob_clickMade, Condition(sa__MakeClearMob_clickMade))
  st__Make_cancelLastAction[104] = CreateTrigger()
  TriggerAddCondition(st__Make_cancelLastAction[104], Condition(sa__MakeClearMob_cancelLastAction))
  TriggerAddAction(st__Make_cancelLastAction[104], sa__MakeClearMob_cancelLastAction)
  st__Make_redoLastAction[104] = CreateTrigger()
  TriggerAddCondition(st__Make_redoLastAction[104], Condition(sa__MakeClearMob_redoLastAction))
  TriggerAddAction(st__Make_redoLastAction[104], sa__MakeClearMob_redoLastAction)
  st__Make_onDestroy[104] = CreateTrigger()
  TriggerAddCondition(st__Make_onDestroy[104], Condition(sa__MakeClearMob_onDestroy))
  TriggerAddCondition(st__Make_onDestroy[104], Condition(sa__MakeClearMob__disposeArrays))
  st___prototype2[1] = CreateTrigger()
  TriggerAddAction(st___prototype2[1], sa___prototype2_TimerUtils___init)
  TriggerAddCondition(st___prototype2[1], Condition(sa___prototype2_TimerUtils___init))
  st___prototype51[1] = CreateTrigger()
  TriggerAddAction(st___prototype51[1], sa___prototype51_SoundUtils___HookStopSound)
  TriggerAddCondition(st___prototype51[1], Condition(sa___prototype51_SoundUtils___HookStopSound))























































































































  ExecuteFunc("s__Stack_onInit")
  ExecuteFunc("s__MakeDeleteCastersAction_onInit")
  ExecuteFunc("s__MakeDeleteMeteorsAction_onInit")
  ExecuteFunc("s__MakeDeleteMonstersAction_onInit")
  ExecuteFunc("s__MakeTerrainCopyPasteAction_onInit")
  ExecuteFunc("s__MakeTerrainCreateAction_onInit")
  ExecuteFunc("s__MonsterSpawn_onInit")
end


